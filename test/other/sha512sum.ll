; ModuleID = 'test/sha512sum.bc'
source_filename = "test/sha512sum.bc"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.option = type { i8*, i32, i32*, i32 }
%struct.infomap = type { i8*, i8* }
%struct.quoting_options = type { i32, i32, [8 x i32], i8*, i8* }
%struct.slotvec = type { i64, i8* }
%struct.sha512_ctx = type { [8 x i64], [2 x i64], i64, [32 x i64] }
%struct.__mbstate_t = type { i32, %union.anon }
%union.anon = type { i32 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

@stdout = external global %struct._IO_FILE*, align 8
@optind = external global i32, align 4
@stdin = external global %struct._IO_FILE*, align 8
@stderr = external global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [71 x i8] c"Usage: %s [OPTION]... [FILE]...\0APrint or check %s (%d-bit) checksums.\0A\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"SHA512\00", align 1
@.str.2 = private unnamed_addr constant [45 x i8] c"\0A  -b, --binary         read in binary mode\0A\00", align 1
@.str.3 = private unnamed_addr constant [67 x i8] c"  -c, --check          read %s sums from the FILEs and check them\0A\00", align 1
@.str.4 = private unnamed_addr constant [52 x i8] c"      --tag            create a BSD-style checksum\0A\00", align 1
@.str.5 = private unnamed_addr constant [52 x i8] c"  -t, --text           read in text mode (default)\0A\00", align 1
@.str.6 = private unnamed_addr constant [365 x i8] c"\0AThe following four options are useful only when verifying checksums:\0A      --quiet          don't print OK for each successfully verified file\0A      --status         don't output anything, status code shows success\0A      --strict         exit non-zero for improperly formatted checksum lines\0A  -w, --warn           warn about improperly formatted checksum lines\0A\0A\00", align 1
@.str.7 = private unnamed_addr constant [45 x i8] c"      --help     display this help and exit\0A\00", align 1
@.str.8 = private unnamed_addr constant [54 x i8] c"      --version  output version information and exit\0A\00", align 1
@.str.9 = private unnamed_addr constant [297 x i8] c"\0AThe sums are computed as described in %s.  When checking, the input\0Ashould be a former output of this program.  The default mode is to print a\0Aline with checksum, a space, a character indicating input mode ('*' for binary,\0A' ' for text or where binary is insignificant), and name for each FILE.\0A\00", align 1
@.str.10 = private unnamed_addr constant [11 x i8] c"FIPS-180-2\00", align 1
@.str.11 = private unnamed_addr constant [10 x i8] c"sha512sum\00", align 1
@.str.12 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.13 = private unnamed_addr constant [10 x i8] c"coreutils\00", align 1
@.str.14 = private unnamed_addr constant [24 x i8] c"/usr/local/share/locale\00", align 1
@.str.15 = private unnamed_addr constant [5 x i8] c"bctw\00", align 1
@long_options = internal constant [11 x %struct.option] [%struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.48, i32 0, i32 0), i32 0, i32* null, i32 98 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.49, i32 0, i32 0), i32 0, i32* null, i32 99 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.50, i32 0, i32 0), i32 0, i32* null, i32 129 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.51, i32 0, i32 0), i32 0, i32* null, i32 128 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.52, i32 0, i32 0), i32 0, i32* null, i32 116 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i32 0, i32 0), i32 0, i32* null, i32 119 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.54, i32 0, i32 0), i32 0, i32* null, i32 130 }, %struct.option { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.55, i32 0, i32 0), i32 0, i32* null, i32 131 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.56, i32 0, i32 0), i32 0, i32* null, i32 -130 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.57, i32 0, i32 0), i32 0, i32* null, i32 -131 }, %struct.option zeroinitializer], align 16, !dbg !0
@status_only = internal global i8 0, align 1, !dbg !104
@warn = internal global i8 0, align 1, !dbg !105
@quiet = internal global i8 0, align 1, !dbg !106
@strict = internal global i8 0, align 1, !dbg !107
@.str.16 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str.17 = private unnamed_addr constant [15 x i8] c"Ulrich Drepper\00", align 1
@.str.18 = private unnamed_addr constant [13 x i8] c"Scott Miller\00", align 1
@.str.19 = private unnamed_addr constant [13 x i8] c"David Madore\00", align 1
@min_digest_line_length = internal global i64 0, align 8, !dbg !108
@digest_hex_bytes = internal global i64 0, align 8, !dbg !109
@.str.20 = private unnamed_addr constant [35 x i8] c"--tag does not support --text mode\00", align 1
@.str.21 = private unnamed_addr constant [57 x i8] c"the --tag option is meaningless when verifying checksums\00", align 1
@.str.22 = private unnamed_addr constant [73 x i8] c"the --binary and --text options are meaningless when verifying checksums\00", align 1
@.str.23 = private unnamed_addr constant [64 x i8] c"the --status option is meaningful only when verifying checksums\00", align 1
@.str.24 = private unnamed_addr constant [62 x i8] c"the --warn option is meaningful only when verifying checksums\00", align 1
@.str.25 = private unnamed_addr constant [63 x i8] c"the --quiet option is meaningful only when verifying checksums\00", align 1
@.str.26 = private unnamed_addr constant [64 x i8] c"the --strict option is meaningful only when verifying checksums\00", align 1
@.str.27 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.28 = private unnamed_addr constant [3 x i8] c" (\00", align 1
@.str.29 = private unnamed_addr constant [5 x i8] c") = \00", align 1
@.str.30 = private unnamed_addr constant [5 x i8] c"%02x\00", align 1
@have_read_stdin = internal global i8 0, align 1, !dbg !110
@.str.31 = private unnamed_addr constant [15 x i8] c"standard input\00", align 1
@emit_ancillary_info.infomap = internal constant [7 x %struct.infomap] [%struct.infomap { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.35, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.36, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.38, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.38, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.38, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.38, i32 0, i32 0) }, %struct.infomap zeroinitializer], align 16, !dbg !111
@digest_check.bin2hex = internal constant [16 x i8] c"0123456789abcdef", align 16, !dbg !112
@bsd_reversed = internal global i32 -1, align 4, !dbg !113
@.str.34 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.35 = private unnamed_addr constant [16 x i8] c"test invocation\00", align 1
@.str.36 = private unnamed_addr constant [22 x i8] c"Multi-call invocation\00", align 1
@.str.37 = private unnamed_addr constant [10 x i8] c"sha224sum\00", align 1
@.str.38 = private unnamed_addr constant [15 x i8] c"sha2 utilities\00", align 1
@.str.39 = private unnamed_addr constant [10 x i8] c"sha256sum\00", align 1
@.str.40 = private unnamed_addr constant [10 x i8] c"sha384sum\00", align 1
@.str.74 = private unnamed_addr constant [3 x i8] c"\\n\00", align 1
@.str.75 = private unnamed_addr constant [3 x i8] c"\\\\\00", align 1
@.str.58 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.59 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.60 = private unnamed_addr constant [28 x i8] c"%s: too many checksum lines\00", align 1
@.str.61 = private unnamed_addr constant [47 x i8] c"%s: %lu: improperly formatted %s checksum line\00", align 1
@.str.62 = private unnamed_addr constant [25 x i8] c"%s: FAILED open or read\0A\00", align 1
@.str.64 = private unnamed_addr constant [7 x i8] c"FAILED\00", align 1
@.str.63 = private unnamed_addr constant [8 x i8] c"%s: %s\0A\00", align 1
@.str.65 = private unnamed_addr constant [3 x i8] c"OK\00", align 1
@.str.66 = private unnamed_addr constant [15 x i8] c"%s: read error\00", align 1
@.str.67 = private unnamed_addr constant [50 x i8] c"%s: no properly formatted %s checksum lines found\00", align 1
@.str.68 = private unnamed_addr constant [42 x i8] c"WARNING: %lu line is improperly formatted\00", align 1
@.str.69 = private unnamed_addr constant [44 x i8] c"WARNING: %lu lines are improperly formatted\00", align 1
@.str.70 = private unnamed_addr constant [43 x i8] c"WARNING: %lu listed file could not be read\00", align 1
@.str.71 = private unnamed_addr constant [44 x i8] c"WARNING: %lu listed files could not be read\00", align 1
@.str.72 = private unnamed_addr constant [45 x i8] c"WARNING: %lu computed checksum did NOT match\00", align 1
@.str.73 = private unnamed_addr constant [46 x i8] c"WARNING: %lu computed checksums did NOT match\00", align 1
@.str.48 = private unnamed_addr constant [7 x i8] c"binary\00", align 1
@.str.49 = private unnamed_addr constant [6 x i8] c"check\00", align 1
@.str.50 = private unnamed_addr constant [6 x i8] c"quiet\00", align 1
@.str.51 = private unnamed_addr constant [7 x i8] c"status\00", align 1
@.str.52 = private unnamed_addr constant [5 x i8] c"text\00", align 1
@.str.53 = private unnamed_addr constant [5 x i8] c"warn\00", align 1
@.str.54 = private unnamed_addr constant [7 x i8] c"strict\00", align 1
@.str.55 = private unnamed_addr constant [4 x i8] c"tag\00", align 1
@.str.56 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str.57 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.41 = private unnamed_addr constant [23 x i8] c"\0A%s online help: <%s>\0A\00", align 1
@.str.42 = private unnamed_addr constant [39 x i8] c"http://www.gnu.org/software/coreutils/\00", align 1
@.str.43 = private unnamed_addr constant [4 x i8] c"en_\00", align 1
@.str.44 = private unnamed_addr constant [69 x i8] c"Report %s translation bugs to <http://translationproject.org/team/>\0A\00", align 1
@.str.45 = private unnamed_addr constant [31 x i8] c"Full documentation at: <%s%s>\0A\00", align 1
@.str.46 = private unnamed_addr constant [51 x i8] c"or available locally via: info '(coreutils) %s%s'\0A\00", align 1
@.str.47 = private unnamed_addr constant [12 x i8] c" invocation\00", align 1
@.str.33 = private unnamed_addr constant [56 x i8] c"\0AWith no FILE, or when FILE is -, read standard input.\0A\00", align 1
@.str.32 = private unnamed_addr constant [39 x i8] c"Try '%s --help' for more information.\0A\00", align 1
@Version = internal global i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.76, i32 0, i32 0), align 8, !dbg !114
@.str.76 = private unnamed_addr constant [5 x i8] c"8.24\00", align 1
@file_name = internal global i8* null, align 8, !dbg !120
@ignore_EPIPE = internal global i8 0, align 1, !dbg !128
@.str.79 = private unnamed_addr constant [12 x i8] c"write error\00", align 1
@.str.1.80 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.2.81 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@sha512_round_constants = internal constant [80 x i64] [i64 4794697086780616226, i64 8158064640168781261, i64 -5349999486874862801, i64 -1606136188198331460, i64 4131703408338449720, i64 6480981068601479193, i64 -7908458776815382629, i64 -6116909921290321640, i64 -2880145864133508542, i64 1334009975649890238, i64 2608012711638119052, i64 6128411473006802146, i64 8268148722764581231, i64 -9160688886553864527, i64 -7215885187991268811, i64 -4495734319001033068, i64 -1973867731355612462, i64 -1171420211273849373, i64 1135362057144423861, i64 2597628984639134821, i64 3308224258029322869, i64 5365058923640841347, i64 6679025012923562964, i64 8573033837759648693, i64 -7476448914759557205, i64 -6327057829258317296, i64 -5763719355590565569, i64 -4658551843659510044, i64 -4116276920077217854, i64 -3051310485924567259, i64 489312712824947311, i64 1452737877330783856, i64 2861767655752347644, i64 3322285676063803686, i64 5560940570517711597, i64 5996557281743188959, i64 7280758554555802590, i64 8532644243296465576, i64 -9096487096722542874, i64 -7894198246740708037, i64 -6719396339535248540, i64 -6333637450476146687, i64 -4446306890439682159, i64 -4076793802049405392, i64 -3345356375505022440, i64 -2983346525034927856, i64 -860691631967231958, i64 1182934255886127544, i64 1847814050463011016, i64 2177327727835720531, i64 2830643537854262169, i64 3796741975233480872, i64 4115178125766777443, i64 5681478168544905931, i64 6601373596472566643, i64 7507060721942968483, i64 8399075790359081724, i64 8693463985226723168, i64 -8878714635349349518, i64 -8302665154208450068, i64 -8016688836872298968, i64 -6606660893046293015, i64 -4685533653050689259, i64 -4147400797238176981, i64 -3880063495543823972, i64 -3348786107499101689, i64 -1523767162380948706, i64 -757361751448694408, i64 500013540394364858, i64 748580250866718886, i64 1242879168328830382, i64 1977374033974150939, i64 2944078676154940804, i64 3659926193048069267, i64 4368137639120453308, i64 4836135668995329356, i64 5532061633213252278, i64 6448918945643986474, i64 6902733635092675308, i64 7801388544844847127], align 16, !dbg !129
@fillbuf = internal constant [128 x i8] c"\80\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", align 16, !dbg !150
@exit_failure = internal global i32 1, align 4, !dbg !151
@program_name = internal global i8* null, align 8, !dbg !158
@program_invocation_short_name = external global i8*, align 8
@program_invocation_name = external global i8*, align 8
@.str.94 = private unnamed_addr constant [56 x i8] c"A NULL argv[0] was passed through an exec system call.\0A\00", align 1
@.str.1.95 = private unnamed_addr constant [8 x i8] c"/.libs/\00", align 1
@.str.2.96 = private unnamed_addr constant [4 x i8] c"lt-\00", align 1
@quoting_style_args = internal constant [9 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.99, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.100, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2.101, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.102, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4.103, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5.104, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6.105, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7.106, i32 0, i32 0), i8* null], align 16, !dbg !165
@quoting_style_vals = internal constant [8 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7], align 16, !dbg !229
@quote_quoting_options = internal global %struct.quoting_options { i32 6, i32 0, [8 x i32] zeroinitializer, i8* null, i8* null }, align 8, !dbg !230
@default_quoting_options = internal global %struct.quoting_options zeroinitializer, align 8, !dbg !231
@slotvec = internal global %struct.slotvec* @slotvec0, align 8, !dbg !232
@nslots = internal global i32 1, align 4, !dbg !233
@slot0 = internal global [256 x i8] zeroinitializer, align 16, !dbg !234
@slotvec0 = internal global %struct.slotvec { i64 256, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i32 0, i32 0) }, align 8, !dbg !235
@.str.99 = private unnamed_addr constant [8 x i8] c"literal\00", align 1
@.str.1.100 = private unnamed_addr constant [6 x i8] c"shell\00", align 1
@.str.2.101 = private unnamed_addr constant [13 x i8] c"shell-always\00", align 1
@.str.3.102 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str.4.103 = private unnamed_addr constant [8 x i8] c"c-maybe\00", align 1
@.str.5.104 = private unnamed_addr constant [7 x i8] c"escape\00", align 1
@.str.6.105 = private unnamed_addr constant [7 x i8] c"locale\00", align 1
@.str.7.106 = private unnamed_addr constant [8 x i8] c"clocale\00", align 1
@.str.11.107 = private unnamed_addr constant [6 x i8] c"UTF-8\00", align 1
@.str.12.108 = private unnamed_addr constant [4 x i8] c"\E2\80\98\00", align 1
@.str.13.109 = private unnamed_addr constant [4 x i8] c"\E2\80\99\00", align 1
@.str.14.110 = private unnamed_addr constant [8 x i8] c"GB18030\00", align 1
@.str.15.111 = private unnamed_addr constant [4 x i8] c"\A1\07e\00", align 1
@.str.16.112 = private unnamed_addr constant [3 x i8] c"\A1\AF\00", align 1
@.str.8.113 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.10.114 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.9.115 = private unnamed_addr constant [2 x i8] c"`\00", align 1
@.str.120 = private unnamed_addr constant [12 x i8] c"%s (%s) %s\0A\00", align 1
@.str.1.121 = private unnamed_addr constant [7 x i8] c"%s %s\0A\00", align 1
@.str.2.122 = private unnamed_addr constant [4 x i8] c"(C)\00", align 1
@.str.3.123 = private unnamed_addr constant [203 x i8] c"\0ALicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\0AThis is free software: you are free to change and redistribute it.\0AThere is NO WARRANTY, to the extent permitted by law.\0A\0A\00", align 1
@.str.4.124 = private unnamed_addr constant [16 x i8] c"Written by %s.\0A\00", align 1
@.str.5.125 = private unnamed_addr constant [23 x i8] c"Written by %s and %s.\0A\00", align 1
@.str.6.126 = private unnamed_addr constant [28 x i8] c"Written by %s, %s, and %s.\0A\00", align 1
@.str.7.127 = private unnamed_addr constant [32 x i8] c"Written by %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.8.128 = private unnamed_addr constant [36 x i8] c"Written by %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.9.129 = private unnamed_addr constant [40 x i8] c"Written by %s, %s, %s,\0A%s, %s, and %s.\0A\00", align 1
@.str.10.130 = private unnamed_addr constant [44 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, and %s.\0A\00", align 1
@.str.11.131 = private unnamed_addr constant [48 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.12.132 = private unnamed_addr constant [52 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.13.133 = private unnamed_addr constant [60 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, %s, and others.\0A\00", align 1
@.str.14.134 = private unnamed_addr constant [21 x i8] c"\0AReport bugs to: %s\0A\00", align 1
@.str.15.135 = private unnamed_addr constant [22 x i8] c"bug-coreutils@gnu.org\00", align 1
@.str.16.136 = private unnamed_addr constant [20 x i8] c"%s home page: <%s>\0A\00", align 1
@.str.17.137 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str.18.138 = private unnamed_addr constant [39 x i8] c"http://www.gnu.org/software/coreutils/\00", align 1
@.str.19.139 = private unnamed_addr constant [64 x i8] c"General help using GNU software: <http://www.gnu.org/gethelp/>\0A\00", align 1
@version_etc_copyright = internal constant [47 x i8] c"Copyright %s %d Free Software Foundation, Inc.\00", align 16, !dbg !236
@.str.1.150 = private unnamed_addr constant [17 x i8] c"memory exhausted\00", align 1
@.str.151 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@rpl_fcntl.have_dupfd_cloexec = internal global i32 0, align 4, !dbg !245
@.str.164 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.171 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1.172 = private unnamed_addr constant [6 x i8] c"ASCII\00", align 1
@charset_aliases = internal global i8* null, align 8, !dbg !254
@.str.2.173 = private unnamed_addr constant [14 x i8] c"charset.alias\00", align 1
@.str.3.174 = private unnamed_addr constant [16 x i8] c"CHARSETALIASDIR\00", align 1
@.str.4.175 = private unnamed_addr constant [15 x i8] c"/usr/local/lib\00", align 1
@.str.5.176 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.6.177 = private unnamed_addr constant [10 x i8] c"%50s %50s\00", align 1

; Function Attrs: noreturn nounwind uwtable
define internal void @usage(i32 %status) #0 !dbg !650 {
entry:
  %status.addr = alloca i32, align 4
  store i32 %status, i32* %status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !653, metadata !DIExpression()), !dbg !654
  %0 = load i32, i32* %status.addr, align 4, !dbg !655
  %cmp = icmp ne i32 %0, 0, !dbg !657
  br i1 %cmp, label %if.then, label %if.else, !dbg !658

if.then:                                          ; preds = %entry
  call void @emit_try_help(), !dbg !659
  br label %if.end, !dbg !659

if.else:                                          ; preds = %entry
  %call = call i8* @gettext(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str, i32 0, i32 0)) #11, !dbg !660
  %1 = load i8*, i8** @program_name, align 8, !dbg !662
  %call1 = call i32 (i8*, ...) @printf(i8* %call, i8* %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0), i32 512), !dbg !663
  call void @emit_stdin_note(), !dbg !664
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.2, i32 0, i32 0)) #11, !dbg !665
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !665
  %call3 = call i32 @fputs_unlocked(i8* %call2, %struct._IO_FILE* %2), !dbg !665
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.3, i32 0, i32 0)) #11, !dbg !667
  %call5 = call i32 (i8*, ...) @printf(i8* %call4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0)), !dbg !668
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.4, i32 0, i32 0)) #11, !dbg !669
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !669
  %call7 = call i32 @fputs_unlocked(i8* %call6, %struct._IO_FILE* %3), !dbg !669
  %call8 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5, i32 0, i32 0)) #11, !dbg !670
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !670
  %call9 = call i32 @fputs_unlocked(i8* %call8, %struct._IO_FILE* %4), !dbg !670
  %call10 = call i8* @gettext(i8* getelementptr inbounds ([365 x i8], [365 x i8]* @.str.6, i32 0, i32 0)) #11, !dbg !672
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !672
  %call11 = call i32 @fputs_unlocked(i8* %call10, %struct._IO_FILE* %5), !dbg !672
  %call12 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.7, i32 0, i32 0)) #11, !dbg !673
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !673
  %call13 = call i32 @fputs_unlocked(i8* %call12, %struct._IO_FILE* %6), !dbg !673
  %call14 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.8, i32 0, i32 0)) #11, !dbg !674
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !674
  %call15 = call i32 @fputs_unlocked(i8* %call14, %struct._IO_FILE* %7), !dbg !674
  %call16 = call i8* @gettext(i8* getelementptr inbounds ([297 x i8], [297 x i8]* @.str.9, i32 0, i32 0)) #11, !dbg !675
  %call17 = call i32 (i8*, ...) @printf(i8* %call16, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i32 0, i32 0)), !dbg !676
  call void @emit_ancillary_info(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i32 0, i32 0)), !dbg !677
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load i32, i32* %status.addr, align 4, !dbg !678
  call void @exit(i32 %8) #14, !dbg !679
  unreachable, !dbg !679

return:                                           ; No predecessors!
  ret void, !dbg !680
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare i32 @printf(i8*, ...) #2

; Function Attrs: nounwind
declare i8* @gettext(i8*) #3

declare i32 @fputs_unlocked(i8*, %struct._IO_FILE*) #2

; Function Attrs: noreturn nounwind
declare void @exit(i32) #4

; Function Attrs: nounwind uwtable
define i32 @main(i32 %argc, i8** %argv) #5 !dbg !681 {
entry:
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %bin_buffer_unaligned = alloca [72 x i8], align 16
  %bin_buffer = alloca i8*, align 8
  %do_check = alloca i8, align 1
  %opt = alloca i32, align 4
  %ok = alloca i8, align 1
  %binary = alloca i32, align 4
  %prefix_tag = alloca i8, align 1
  %file = alloca i8*, align 8
  %file_is_binary = alloca i32, align 4
  %needs_escape = alloca i8, align 1
  %i = alloca i64, align 8
  store i32 0, i32* %retval
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !685, metadata !DIExpression()), !dbg !686
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !687, metadata !DIExpression()), !dbg !688
  call void @llvm.dbg.declare(metadata [72 x i8]* %bin_buffer_unaligned, metadata !689, metadata !DIExpression()), !dbg !693
  call void @llvm.dbg.declare(metadata i8** %bin_buffer, metadata !694, metadata !DIExpression()), !dbg !695
  %arraydecay = getelementptr inbounds [72 x i8], [72 x i8]* %bin_buffer_unaligned, i32 0, i32 0, !dbg !696
  %call = call i8* @ptr_align(i8* %arraydecay, i64 8), !dbg !697
  store i8* %call, i8** %bin_buffer, align 8, !dbg !695
  call void @llvm.dbg.declare(metadata i8* %do_check, metadata !698, metadata !DIExpression()), !dbg !699
  store i8 0, i8* %do_check, align 1, !dbg !699
  call void @llvm.dbg.declare(metadata i32* %opt, metadata !700, metadata !DIExpression()), !dbg !701
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !702, metadata !DIExpression()), !dbg !703
  store i8 1, i8* %ok, align 1, !dbg !703
  call void @llvm.dbg.declare(metadata i32* %binary, metadata !704, metadata !DIExpression()), !dbg !705
  store i32 -1, i32* %binary, align 4, !dbg !705
  call void @llvm.dbg.declare(metadata i8* %prefix_tag, metadata !706, metadata !DIExpression()), !dbg !707
  store i8 0, i8* %prefix_tag, align 1, !dbg !707
  %0 = load i8**, i8*** %argv.addr, align 8, !dbg !708
  %arrayidx = getelementptr inbounds i8*, i8** %0, i64 0, !dbg !708
  %1 = load i8*, i8** %arrayidx, align 8, !dbg !708
  call void @set_program_name(i8* %1), !dbg !709
  %call1 = call i8* @setlocale(i32 6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.12, i32 0, i32 0)) #11, !dbg !710
  %call2 = call i8* @bindtextdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.14, i32 0, i32 0)) #11, !dbg !711
  %call3 = call i8* @textdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13, i32 0, i32 0)) #11, !dbg !712
  %call4 = call i32 @atexit(void ()* @close_stdout) #11, !dbg !713
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !714
  %call5 = call i32 @setvbuf(%struct._IO_FILE* %2, i8* null, i32 1, i64 0) #11, !dbg !715
  br label %while.cond, !dbg !716

while.cond:                                       ; preds = %sw.epilog, %entry
  %3 = load i32, i32* %argc.addr, align 4, !dbg !717
  %4 = load i8**, i8*** %argv.addr, align 8, !dbg !720
  %call6 = call i32 @getopt_long(i32 %3, i8** %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i32 0, i32 0), %struct.option* getelementptr inbounds ([11 x %struct.option], [11 x %struct.option]* @long_options, i32 0, i32 0), i32* null) #11, !dbg !721
  store i32 %call6, i32* %opt, align 4, !dbg !722
  %cmp = icmp ne i32 %call6, -1, !dbg !723
  br i1 %cmp, label %while.body, label %while.end, !dbg !716

while.body:                                       ; preds = %while.cond
  %5 = load i32, i32* %opt, align 4, !dbg !724
  switch i32 %5, label %sw.default [
    i32 98, label %sw.bb
    i32 99, label %sw.bb.7
    i32 128, label %sw.bb.8
    i32 116, label %sw.bb.9
    i32 119, label %sw.bb.10
    i32 129, label %sw.bb.11
    i32 130, label %sw.bb.12
    i32 131, label %sw.bb.13
    i32 -130, label %sw.bb.14
    i32 -131, label %sw.bb.15
  ], !dbg !725

sw.bb:                                            ; preds = %while.body
  store i32 1, i32* %binary, align 4, !dbg !726
  br label %sw.epilog, !dbg !728

sw.bb.7:                                          ; preds = %while.body
  store i8 1, i8* %do_check, align 1, !dbg !729
  br label %sw.epilog, !dbg !730

sw.bb.8:                                          ; preds = %while.body
  store i8 1, i8* @status_only, align 1, !dbg !731
  store i8 0, i8* @warn, align 1, !dbg !732
  store i8 0, i8* @quiet, align 1, !dbg !733
  br label %sw.epilog, !dbg !734

sw.bb.9:                                          ; preds = %while.body
  store i32 0, i32* %binary, align 4, !dbg !735
  br label %sw.epilog, !dbg !736

sw.bb.10:                                         ; preds = %while.body
  store i8 0, i8* @status_only, align 1, !dbg !737
  store i8 1, i8* @warn, align 1, !dbg !738
  store i8 0, i8* @quiet, align 1, !dbg !739
  br label %sw.epilog, !dbg !740

sw.bb.11:                                         ; preds = %while.body
  store i8 0, i8* @status_only, align 1, !dbg !741
  store i8 0, i8* @warn, align 1, !dbg !742
  store i8 1, i8* @quiet, align 1, !dbg !743
  br label %sw.epilog, !dbg !744

sw.bb.12:                                         ; preds = %while.body
  store i8 1, i8* @strict, align 1, !dbg !745
  br label %sw.epilog, !dbg !746

sw.bb.13:                                         ; preds = %while.body
  store i8 1, i8* %prefix_tag, align 1, !dbg !747
  store i32 1, i32* %binary, align 4, !dbg !748
  br label %sw.epilog, !dbg !749

sw.bb.14:                                         ; preds = %while.body
  call void @usage(i32 0) #15, !dbg !750
  unreachable, !dbg !750

sw.bb.15:                                         ; preds = %while.body
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !751
  %7 = load i8*, i8** @Version, align 8, !dbg !751
  call void (%struct._IO_FILE*, i8*, i8*, i8*, ...) @version_etc(%struct._IO_FILE* %6, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.16, i32 0, i32 0), i8* %7, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19, i32 0, i32 0), i8* null), !dbg !751
  call void @exit(i32 0) #14, !dbg !751
  unreachable, !dbg !751

sw.default:                                       ; preds = %while.body
  call void @usage(i32 1) #15, !dbg !752
  unreachable, !dbg !752

sw.epilog:                                        ; preds = %sw.bb.13, %sw.bb.12, %sw.bb.11, %sw.bb.10, %sw.bb.9, %sw.bb.8, %sw.bb.7, %sw.bb
  br label %while.cond, !dbg !716

while.end:                                        ; preds = %while.cond
  store i64 130, i64* @min_digest_line_length, align 8, !dbg !753
  store i64 128, i64* @digest_hex_bytes, align 8, !dbg !754
  %8 = load i8, i8* %prefix_tag, align 1, !dbg !755
  %tobool = trunc i8 %8 to i1, !dbg !755
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !757

land.lhs.true:                                    ; preds = %while.end
  %9 = load i32, i32* %binary, align 4, !dbg !758
  %tobool16 = icmp ne i32 %9, 0, !dbg !758
  br i1 %tobool16, label %if.end, label %if.then, !dbg !760

if.then:                                          ; preds = %land.lhs.true
  %call17 = call i8* @gettext(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.20, i32 0, i32 0)) #11, !dbg !761
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call17), !dbg !763
  call void @usage(i32 1) #15, !dbg !764
  unreachable, !dbg !764

if.end:                                           ; preds = %land.lhs.true, %while.end
  %10 = load i8, i8* %prefix_tag, align 1, !dbg !765
  %tobool18 = trunc i8 %10 to i1, !dbg !765
  br i1 %tobool18, label %land.lhs.true.19, label %if.end.23, !dbg !767

land.lhs.true.19:                                 ; preds = %if.end
  %11 = load i8, i8* %do_check, align 1, !dbg !768
  %tobool20 = trunc i8 %11 to i1, !dbg !768
  br i1 %tobool20, label %if.then.21, label %if.end.23, !dbg !770

if.then.21:                                       ; preds = %land.lhs.true.19
  %call22 = call i8* @gettext(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.21, i32 0, i32 0)) #11, !dbg !771
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call22), !dbg !773
  call void @usage(i32 1) #15, !dbg !774
  unreachable, !dbg !774

if.end.23:                                        ; preds = %land.lhs.true.19, %if.end
  %12 = load i32, i32* %binary, align 4, !dbg !775
  %cmp24 = icmp sle i32 0, %12, !dbg !777
  br i1 %cmp24, label %land.lhs.true.25, label %if.end.29, !dbg !778

land.lhs.true.25:                                 ; preds = %if.end.23
  %13 = load i8, i8* %do_check, align 1, !dbg !779
  %tobool26 = trunc i8 %13 to i1, !dbg !779
  br i1 %tobool26, label %if.then.27, label %if.end.29, !dbg !781

if.then.27:                                       ; preds = %land.lhs.true.25
  %call28 = call i8* @gettext(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.22, i32 0, i32 0)) #11, !dbg !782
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call28), !dbg !784
  call void @usage(i32 1) #15, !dbg !785
  unreachable, !dbg !785

if.end.29:                                        ; preds = %land.lhs.true.25, %if.end.23
  %14 = load i8, i8* @status_only, align 1, !dbg !786
  %tobool30 = trunc i8 %14 to i1, !dbg !786
  br i1 %tobool30, label %land.lhs.true.31, label %if.end.35, !dbg !788

land.lhs.true.31:                                 ; preds = %if.end.29
  %15 = load i8, i8* %do_check, align 1, !dbg !789
  %tobool32 = trunc i8 %15 to i1, !dbg !789
  br i1 %tobool32, label %if.end.35, label %if.then.33, !dbg !791

if.then.33:                                       ; preds = %land.lhs.true.31
  %call34 = call i8* @gettext(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23, i32 0, i32 0)) #11, !dbg !792
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call34), !dbg !794
  call void @usage(i32 1) #15, !dbg !795
  unreachable, !dbg !795

if.end.35:                                        ; preds = %land.lhs.true.31, %if.end.29
  %16 = load i8, i8* @warn, align 1, !dbg !796
  %tobool36 = trunc i8 %16 to i1, !dbg !796
  br i1 %tobool36, label %land.lhs.true.37, label %if.end.41, !dbg !798

land.lhs.true.37:                                 ; preds = %if.end.35
  %17 = load i8, i8* %do_check, align 1, !dbg !799
  %tobool38 = trunc i8 %17 to i1, !dbg !799
  br i1 %tobool38, label %if.end.41, label %if.then.39, !dbg !801

if.then.39:                                       ; preds = %land.lhs.true.37
  %call40 = call i8* @gettext(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.24, i32 0, i32 0)) #11, !dbg !802
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call40), !dbg !804
  call void @usage(i32 1) #15, !dbg !805
  unreachable, !dbg !805

if.end.41:                                        ; preds = %land.lhs.true.37, %if.end.35
  %18 = load i8, i8* @quiet, align 1, !dbg !806
  %tobool42 = trunc i8 %18 to i1, !dbg !806
  br i1 %tobool42, label %land.lhs.true.43, label %if.end.47, !dbg !808

land.lhs.true.43:                                 ; preds = %if.end.41
  %19 = load i8, i8* %do_check, align 1, !dbg !809
  %tobool44 = trunc i8 %19 to i1, !dbg !809
  br i1 %tobool44, label %if.end.47, label %if.then.45, !dbg !811

if.then.45:                                       ; preds = %land.lhs.true.43
  %call46 = call i8* @gettext(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.25, i32 0, i32 0)) #11, !dbg !812
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call46), !dbg !814
  call void @usage(i32 1) #15, !dbg !815
  unreachable, !dbg !815

if.end.47:                                        ; preds = %land.lhs.true.43, %if.end.41
  %20 = load i8, i8* @strict, align 1, !dbg !816
  %tobool48 = trunc i8 %20 to i1, !dbg !816
  %conv = zext i1 %tobool48 to i32, !dbg !816
  %21 = load i8, i8* %do_check, align 1, !dbg !818
  %tobool49 = trunc i8 %21 to i1, !dbg !818
  %lnot = xor i1 %tobool49, true, !dbg !819
  %lnot.ext = zext i1 %lnot to i32, !dbg !819
  %and = and i32 %conv, %lnot.ext, !dbg !820
  %tobool50 = icmp ne i32 %and, 0, !dbg !820
  br i1 %tobool50, label %if.then.51, label %if.end.53, !dbg !821

if.then.51:                                       ; preds = %if.end.47
  %call52 = call i8* @gettext(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.26, i32 0, i32 0)) #11, !dbg !822
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call52), !dbg !824
  call void @usage(i32 1) #15, !dbg !825
  unreachable, !dbg !825

if.end.53:                                        ; preds = %if.end.47
  %22 = load i32, i32* %binary, align 4, !dbg !826
  %cmp54 = icmp slt i32 %22, 0, !dbg !828
  br i1 %cmp54, label %if.then.56, label %if.end.57, !dbg !829

if.then.56:                                       ; preds = %if.end.53
  store i32 0, i32* %binary, align 4, !dbg !830
  br label %if.end.57, !dbg !831

if.end.57:                                        ; preds = %if.then.56, %if.end.53
  %23 = load i32, i32* @optind, align 4, !dbg !832
  %24 = load i32, i32* %argc.addr, align 4, !dbg !834
  %cmp58 = icmp eq i32 %23, %24, !dbg !835
  br i1 %cmp58, label %if.then.60, label %if.end.63, !dbg !836

if.then.60:                                       ; preds = %if.end.57
  %call61 = call i8* @bad_cast(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27, i32 0, i32 0)), !dbg !837
  %25 = load i32, i32* %argc.addr, align 4, !dbg !838
  %inc = add nsw i32 %25, 1, !dbg !838
  store i32 %inc, i32* %argc.addr, align 4, !dbg !838
  %idxprom = sext i32 %25 to i64, !dbg !839
  %26 = load i8**, i8*** %argv.addr, align 8, !dbg !839
  %arrayidx62 = getelementptr inbounds i8*, i8** %26, i64 %idxprom, !dbg !839
  store i8* %call61, i8** %arrayidx62, align 8, !dbg !840
  br label %if.end.63, !dbg !839

if.end.63:                                        ; preds = %if.then.60, %if.end.57
  br label %for.cond, !dbg !841

for.cond:                                         ; preds = %for.inc.120, %if.end.63
  %27 = load i32, i32* @optind, align 4, !dbg !842
  %28 = load i32, i32* %argc.addr, align 4, !dbg !847
  %cmp64 = icmp slt i32 %27, %28, !dbg !848
  br i1 %cmp64, label %for.body, label %for.end.122, !dbg !849

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %file, metadata !850, metadata !DIExpression()), !dbg !852
  %29 = load i32, i32* @optind, align 4, !dbg !853
  %idxprom66 = sext i32 %29 to i64, !dbg !854
  %30 = load i8**, i8*** %argv.addr, align 8, !dbg !854
  %arrayidx67 = getelementptr inbounds i8*, i8** %30, i64 %idxprom66, !dbg !854
  %31 = load i8*, i8** %arrayidx67, align 8, !dbg !854
  store i8* %31, i8** %file, align 8, !dbg !852
  %32 = load i8, i8* %do_check, align 1, !dbg !855
  %tobool68 = trunc i8 %32 to i1, !dbg !855
  br i1 %tobool68, label %if.then.69, label %if.else, !dbg !857

if.then.69:                                       ; preds = %for.body
  %33 = load i8*, i8** %file, align 8, !dbg !858
  %call70 = call zeroext i1 @digest_check(i8* %33), !dbg !859
  %conv71 = zext i1 %call70 to i32, !dbg !859
  %34 = load i8, i8* %ok, align 1, !dbg !860
  %tobool72 = trunc i8 %34 to i1, !dbg !860
  %conv73 = zext i1 %tobool72 to i32, !dbg !860
  %and74 = and i32 %conv73, %conv71, !dbg !860
  %tobool75 = icmp ne i32 %and74, 0, !dbg !860
  %frombool = zext i1 %tobool75 to i8, !dbg !860
  store i8 %frombool, i8* %ok, align 1, !dbg !860
  br label %if.end.119, !dbg !861

if.else:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %file_is_binary, metadata !862, metadata !DIExpression()), !dbg !864
  %35 = load i32, i32* %binary, align 4, !dbg !865
  store i32 %35, i32* %file_is_binary, align 4, !dbg !864
  %36 = load i8*, i8** %file, align 8, !dbg !866
  %37 = load i8*, i8** %bin_buffer, align 8, !dbg !868
  %call76 = call zeroext i1 @digest_file(i8* %36, i32* %file_is_binary, i8* %37), !dbg !869
  br i1 %call76, label %if.else.78, label %if.then.77, !dbg !870

if.then.77:                                       ; preds = %if.else
  store i8 0, i8* %ok, align 1, !dbg !871
  br label %if.end.118, !dbg !872

if.else.78:                                       ; preds = %if.else
  call void @llvm.dbg.declare(metadata i8* %needs_escape, metadata !873, metadata !DIExpression()), !dbg !875
  %38 = load i8*, i8** %file, align 8, !dbg !876
  %call79 = call i8* @strchr(i8* %38, i32 92) #16, !dbg !877
  %tobool80 = icmp ne i8* %call79, null, !dbg !877
  br i1 %tobool80, label %lor.end, label %lor.rhs, !dbg !878

lor.rhs:                                          ; preds = %if.else.78
  %39 = load i8*, i8** %file, align 8, !dbg !879
  %call81 = call i8* @strchr(i8* %39, i32 10) #16, !dbg !881
  %tobool82 = icmp ne i8* %call81, null, !dbg !878
  br label %lor.end, !dbg !878

lor.end:                                          ; preds = %lor.rhs, %if.else.78
  %40 = phi i1 [ true, %if.else.78 ], [ %tobool82, %lor.rhs ]
  %frombool83 = zext i1 %40 to i8, !dbg !882
  store i8 %frombool83, i8* %needs_escape, align 1, !dbg !882
  %41 = load i8, i8* %prefix_tag, align 1, !dbg !885
  %tobool84 = trunc i8 %41 to i1, !dbg !885
  br i1 %tobool84, label %if.then.85, label %if.end.94, !dbg !887

if.then.85:                                       ; preds = %lor.end
  %42 = load i8, i8* %needs_escape, align 1, !dbg !888
  %tobool86 = trunc i8 %42 to i1, !dbg !888
  br i1 %tobool86, label %if.then.87, label %if.end.89, !dbg !891

if.then.87:                                       ; preds = %if.then.85
  %call88 = call i32 @putchar_unlocked(i32 92), !dbg !892
  br label %if.end.89, !dbg !892

if.end.89:                                        ; preds = %if.then.87, %if.then.85
  %43 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !893
  %call90 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0), %struct._IO_FILE* %43), !dbg !893
  %44 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !894
  %call91 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.28, i32 0, i32 0), %struct._IO_FILE* %44), !dbg !894
  %45 = load i8*, i8** %file, align 8, !dbg !895
  %46 = load i8, i8* %needs_escape, align 1, !dbg !896
  %tobool92 = trunc i8 %46 to i1, !dbg !896
  call void @print_filename(i8* %45, i1 zeroext %tobool92), !dbg !897
  %47 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !898
  %call93 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.29, i32 0, i32 0), %struct._IO_FILE* %47), !dbg !898
  br label %if.end.94, !dbg !899

if.end.94:                                        ; preds = %if.end.89, %lor.end
  call void @llvm.dbg.declare(metadata i64* %i, metadata !900, metadata !DIExpression()), !dbg !901
  %48 = load i8, i8* %prefix_tag, align 1, !dbg !902
  %tobool95 = trunc i8 %48 to i1, !dbg !902
  br i1 %tobool95, label %if.end.101, label %land.lhs.true.96, !dbg !904

land.lhs.true.96:                                 ; preds = %if.end.94
  %49 = load i8, i8* %needs_escape, align 1, !dbg !905
  %tobool97 = trunc i8 %49 to i1, !dbg !905
  br i1 %tobool97, label %if.then.99, label %if.end.101, !dbg !907

if.then.99:                                       ; preds = %land.lhs.true.96
  %call100 = call i32 @putchar_unlocked(i32 92), !dbg !908
  br label %if.end.101, !dbg !908

if.end.101:                                       ; preds = %if.then.99, %land.lhs.true.96, %if.end.94
  store i64 0, i64* %i, align 8, !dbg !909
  br label %for.cond.102, !dbg !911

for.cond.102:                                     ; preds = %for.inc, %if.end.101
  %50 = load i64, i64* %i, align 8, !dbg !912
  %51 = load i64, i64* @digest_hex_bytes, align 8, !dbg !916
  %div = udiv i64 %51, 2, !dbg !917
  %cmp103 = icmp ult i64 %50, %div, !dbg !918
  br i1 %cmp103, label %for.body.105, label %for.end, !dbg !919

for.body.105:                                     ; preds = %for.cond.102
  %52 = load i64, i64* %i, align 8, !dbg !920
  %53 = load i8*, i8** %bin_buffer, align 8, !dbg !921
  %arrayidx106 = getelementptr inbounds i8, i8* %53, i64 %52, !dbg !921
  %54 = load i8, i8* %arrayidx106, align 1, !dbg !921
  %conv107 = zext i8 %54 to i32, !dbg !921
  %call108 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.30, i32 0, i32 0), i32 %conv107), !dbg !922
  br label %for.inc, !dbg !922

for.inc:                                          ; preds = %for.body.105
  %55 = load i64, i64* %i, align 8, !dbg !923
  %inc109 = add i64 %55, 1, !dbg !923
  store i64 %inc109, i64* %i, align 8, !dbg !923
  br label %for.cond.102, !dbg !924

for.end:                                          ; preds = %for.cond.102
  %56 = load i8, i8* %prefix_tag, align 1, !dbg !925
  %tobool110 = trunc i8 %56 to i1, !dbg !925
  br i1 %tobool110, label %if.end.116, label %if.then.111, !dbg !927

if.then.111:                                      ; preds = %for.end
  %call112 = call i32 @putchar_unlocked(i32 32), !dbg !928
  %57 = load i32, i32* %file_is_binary, align 4, !dbg !930
  %tobool113 = icmp ne i32 %57, 0, !dbg !930
  %cond = select i1 %tobool113, i32 42, i32 32, !dbg !930
  %call114 = call i32 @putchar_unlocked(i32 %cond), !dbg !930
  %58 = load i8*, i8** %file, align 8, !dbg !931
  %59 = load i8, i8* %needs_escape, align 1, !dbg !932
  %tobool115 = trunc i8 %59 to i1, !dbg !932
  call void @print_filename(i8* %58, i1 zeroext %tobool115), !dbg !933
  br label %if.end.116, !dbg !934

if.end.116:                                       ; preds = %if.then.111, %for.end
  %call117 = call i32 @putchar_unlocked(i32 10), !dbg !935
  br label %if.end.118

if.end.118:                                       ; preds = %if.end.116, %if.then.77
  br label %if.end.119

if.end.119:                                       ; preds = %if.end.118, %if.then.69
  br label %for.inc.120, !dbg !936

for.inc.120:                                      ; preds = %if.end.119
  %60 = load i32, i32* @optind, align 4, !dbg !937
  %inc121 = add nsw i32 %60, 1, !dbg !937
  store i32 %inc121, i32* @optind, align 4, !dbg !937
  br label %for.cond, !dbg !938

for.end.122:                                      ; preds = %for.cond
  %61 = load i8, i8* @have_read_stdin, align 1, !dbg !939
  %tobool123 = trunc i8 %61 to i1, !dbg !939
  br i1 %tobool123, label %land.lhs.true.125, label %if.end.132, !dbg !941

land.lhs.true.125:                                ; preds = %for.end.122
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !942
  %call126 = call i32 @rpl_fclose(%struct._IO_FILE* %62), !dbg !944
  %cmp127 = icmp eq i32 %call126, -1, !dbg !945
  br i1 %cmp127, label %if.then.129, label %if.end.132, !dbg !946

if.then.129:                                      ; preds = %land.lhs.true.125
  %call130 = call i32* @__errno_location() #17, !dbg !947
  %63 = load i32, i32* %call130, align 4, !dbg !947
  %call131 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31, i32 0, i32 0)) #11, !dbg !948
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %63, i8* %call131), !dbg !949
  br label %if.end.132, !dbg !949

if.end.132:                                       ; preds = %if.then.129, %land.lhs.true.125, %for.end.122
  %64 = load i8, i8* %ok, align 1, !dbg !950
  %tobool133 = trunc i8 %64 to i1, !dbg !950
  %cond135 = select i1 %tobool133, i32 0, i32 1, !dbg !950
  ret i32 %cond135, !dbg !951
}

; Function Attrs: nounwind
declare i8* @setlocale(i32, i8*) #3

; Function Attrs: nounwind
declare i8* @bindtextdomain(i8*, i8*) #3

; Function Attrs: nounwind
declare i8* @textdomain(i8*) #3

; Function Attrs: nounwind
declare i32 @atexit(void ()*) #3

; Function Attrs: nounwind
declare i32 @setvbuf(%struct._IO_FILE*, i8*, i32, i64) #3

; Function Attrs: nounwind
declare i32 @getopt_long(i32, i8**, i8*, %struct.option*, i32*) #3

declare void @error(i32, i32, i8*, ...) #2

; Function Attrs: nounwind readonly
declare i8* @strchr(i8*, i32) #6

declare i32 @putchar_unlocked(i32) #2

; Function Attrs: nounwind readnone
declare i32* @__errno_location() #7

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #2

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #6

; Function Attrs: nounwind readonly
declare i32 @strncmp(i8*, i8*, i64) #6

declare i64 @getline(i8**, i64*, %struct._IO_FILE*) #2

; Function Attrs: nounwind
declare i32 @tolower(i32) #3

; Function Attrs: nounwind
declare i32 @feof_unlocked(%struct._IO_FILE*) #3

; Function Attrs: nounwind
declare i32 @ferror_unlocked(%struct._IO_FILE*) #3

; Function Attrs: nounwind
declare void @free(i8*) #3

; Function Attrs: nounwind
declare i8* @ngettext(i8*, i8*, i64) #3

; Function Attrs: nounwind readnone
declare i16** @__ctype_b_loc() #7

; Function Attrs: inlinehint nounwind uwtable
define internal void @emit_try_help() #8 !dbg !952 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !955
  %call = call i8* @gettext(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.32, i32 0, i32 0)) #11, !dbg !956
  %1 = load i8*, i8** @program_name, align 8, !dbg !957
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* %call, i8* %1), !dbg !958
  ret void, !dbg !959
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @emit_stdin_note() #8 !dbg !960 {
entry:
  %call = call i8* @gettext(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.33, i32 0, i32 0)) #11, !dbg !961
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !961
  %call1 = call i32 @fputs_unlocked(i8* %call, %struct._IO_FILE* %0), !dbg !961
  ret void, !dbg !962
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @emit_ancillary_info(i8* %program) #8 !dbg !60 {
entry:
  %program.addr = alloca i8*, align 8
  %node = alloca i8*, align 8
  %map_prog = alloca %struct.infomap*, align 8
  %lc_messages = alloca i8*, align 8
  store i8* %program, i8** %program.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %program.addr, metadata !963, metadata !DIExpression()), !dbg !964
  call void @llvm.dbg.declare(metadata i8** %node, metadata !965, metadata !DIExpression()), !dbg !966
  %0 = load i8*, i8** %program.addr, align 8, !dbg !967
  store i8* %0, i8** %node, align 8, !dbg !966
  call void @llvm.dbg.declare(metadata %struct.infomap** %map_prog, metadata !968, metadata !DIExpression()), !dbg !970
  store %struct.infomap* getelementptr inbounds ([7 x %struct.infomap], [7 x %struct.infomap]* @emit_ancillary_info.infomap, i32 0, i32 0), %struct.infomap** %map_prog, align 8, !dbg !970
  br label %while.cond, !dbg !971

while.cond:                                       ; preds = %while.body, %entry
  %1 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !972
  %program1 = getelementptr inbounds %struct.infomap, %struct.infomap* %1, i32 0, i32 0, !dbg !975
  %2 = load i8*, i8** %program1, align 8, !dbg !975
  %tobool = icmp ne i8* %2, null, !dbg !976
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !977

land.rhs:                                         ; preds = %while.cond
  %3 = load i8*, i8** %program.addr, align 8, !dbg !978
  %4 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !978
  %program2 = getelementptr inbounds %struct.infomap, %struct.infomap* %4, i32 0, i32 0, !dbg !978
  %5 = load i8*, i8** %program2, align 8, !dbg !978
  %call = call i32 @strcmp(i8* %3, i8* %5) #16, !dbg !978
  %cmp = icmp eq i32 %call, 0, !dbg !978
  %lnot = xor i1 %cmp, true, !dbg !980
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %6 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ]
  br i1 %6, label %while.body, label %while.end, !dbg !981

while.body:                                       ; preds = %land.end
  %7 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !983
  %incdec.ptr = getelementptr inbounds %struct.infomap, %struct.infomap* %7, i32 1, !dbg !983
  store %struct.infomap* %incdec.ptr, %struct.infomap** %map_prog, align 8, !dbg !983
  br label %while.cond, !dbg !971

while.end:                                        ; preds = %land.end
  %8 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !984
  %node3 = getelementptr inbounds %struct.infomap, %struct.infomap* %8, i32 0, i32 1, !dbg !986
  %9 = load i8*, i8** %node3, align 8, !dbg !986
  %tobool4 = icmp ne i8* %9, null, !dbg !984
  br i1 %tobool4, label %if.then, label %if.end, !dbg !987

if.then:                                          ; preds = %while.end
  %10 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !988
  %node5 = getelementptr inbounds %struct.infomap, %struct.infomap* %10, i32 0, i32 1, !dbg !989
  %11 = load i8*, i8** %node5, align 8, !dbg !989
  store i8* %11, i8** %node, align 8, !dbg !990
  br label %if.end, !dbg !991

if.end:                                           ; preds = %if.then, %while.end
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.41, i32 0, i32 0)) #11, !dbg !992
  %call7 = call i32 (i8*, ...) @printf(i8* %call6, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.42, i32 0, i32 0)), !dbg !993
  call void @llvm.dbg.declare(metadata i8** %lc_messages, metadata !994, metadata !DIExpression()), !dbg !995
  %call8 = call i8* @setlocale(i32 5, i8* null) #11, !dbg !996
  store i8* %call8, i8** %lc_messages, align 8, !dbg !995
  %12 = load i8*, i8** %lc_messages, align 8, !dbg !997
  %tobool9 = icmp ne i8* %12, null, !dbg !997
  br i1 %tobool9, label %land.lhs.true, label %if.end.15, !dbg !999

land.lhs.true:                                    ; preds = %if.end
  %13 = load i8*, i8** %lc_messages, align 8, !dbg !1000
  %call10 = call i32 @strncmp(i8* %13, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.43, i32 0, i32 0), i64 3) #16, !dbg !1000
  %tobool11 = icmp ne i32 %call10, 0, !dbg !1000
  br i1 %tobool11, label %if.then.12, label %if.end.15, !dbg !1002

if.then.12:                                       ; preds = %land.lhs.true
  %call13 = call i8* @gettext(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.44, i32 0, i32 0)) #11, !dbg !1003
  %14 = load i8*, i8** %program.addr, align 8, !dbg !1005
  %call14 = call i32 (i8*, ...) @printf(i8* %call13, i8* %14), !dbg !1006
  br label %if.end.15, !dbg !1007

if.end.15:                                        ; preds = %if.then.12, %land.lhs.true, %if.end
  %call16 = call i8* @gettext(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.45, i32 0, i32 0)) #11, !dbg !1008
  %15 = load i8*, i8** %program.addr, align 8, !dbg !1009
  %call17 = call i32 (i8*, ...) @printf(i8* %call16, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.42, i32 0, i32 0), i8* %15), !dbg !1010
  %call18 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.46, i32 0, i32 0)) #11, !dbg !1011
  %16 = load i8*, i8** %node, align 8, !dbg !1012
  %17 = load i8*, i8** %node, align 8, !dbg !1013
  %18 = load i8*, i8** %program.addr, align 8, !dbg !1014
  %cmp19 = icmp eq i8* %17, %18, !dbg !1015
  %cond = select i1 %cmp19, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.47, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.12, i32 0, i32 0), !dbg !1013
  %call20 = call i32 (i8*, ...) @printf(i8* %call18, i8* %16, i8* %cond), !dbg !1016
  ret void, !dbg !1017
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @ptr_align(i8* %ptr, i64 %alignment) #8 !dbg !1018 {
entry:
  %ptr.addr = alloca i8*, align 8
  %alignment.addr = alloca i64, align 8
  %p0 = alloca i8*, align 8
  %p1 = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !1023, metadata !DIExpression()), !dbg !1024
  store i64 %alignment, i64* %alignment.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %alignment.addr, metadata !1025, metadata !DIExpression()), !dbg !1026
  call void @llvm.dbg.declare(metadata i8** %p0, metadata !1027, metadata !DIExpression()), !dbg !1028
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !1029
  store i8* %0, i8** %p0, align 8, !dbg !1028
  call void @llvm.dbg.declare(metadata i8** %p1, metadata !1030, metadata !DIExpression()), !dbg !1031
  %1 = load i8*, i8** %p0, align 8, !dbg !1032
  %2 = load i64, i64* %alignment.addr, align 8, !dbg !1033
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %2, !dbg !1034
  %add.ptr1 = getelementptr inbounds i8, i8* %add.ptr, i64 -1, !dbg !1035
  store i8* %add.ptr1, i8** %p1, align 8, !dbg !1031
  %3 = load i8*, i8** %p1, align 8, !dbg !1036
  %4 = load i8*, i8** %p1, align 8, !dbg !1037
  %5 = ptrtoint i8* %4 to i64, !dbg !1038
  %6 = load i64, i64* %alignment.addr, align 8, !dbg !1039
  %rem = urem i64 %5, %6, !dbg !1040
  %idx.neg = sub i64 0, %rem, !dbg !1041
  %add.ptr2 = getelementptr inbounds i8, i8* %3, i64 %idx.neg, !dbg !1041
  ret i8* %add.ptr2, !dbg !1042
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @bad_cast(i8* %s) #8 !dbg !1043 {
entry:
  %s.addr = alloca i8*, align 8
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !1046, metadata !DIExpression()), !dbg !1047
  %0 = load i8*, i8** %s.addr, align 8, !dbg !1048
  ret i8* %0, !dbg !1049
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @digest_check(i8* %checkfile_name) #5 !dbg !84 {
entry:
  %retval = alloca i1, align 1
  %checkfile_name.addr = alloca i8*, align 8
  %checkfile_stream = alloca %struct._IO_FILE*, align 8
  %n_misformatted_lines = alloca i64, align 8
  %n_properly_formatted_lines = alloca i64, align 8
  %n_improperly_formatted_lines = alloca i64, align 8
  %n_mismatched_checksums = alloca i64, align 8
  %n_open_or_read_failures = alloca i64, align 8
  %bin_buffer_unaligned = alloca [72 x i8], align 16
  %bin_buffer = alloca i8*, align 8
  %line_number = alloca i64, align 8
  %line = alloca i8*, align 8
  %line_chars_allocated = alloca i64, align 8
  %is_stdin = alloca i8, align 1
  %filename = alloca i8*, align 8
  %binary = alloca i32, align 4
  %hex_digest = alloca i8*, align 8
  %line_length = alloca i64, align 8
  %ok = alloca i8, align 1
  %digest_bin_bytes = alloca i64, align 8
  %cnt = alloca i64, align 8
  store i8* %checkfile_name, i8** %checkfile_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %checkfile_name.addr, metadata !1050, metadata !DIExpression()), !dbg !1051
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %checkfile_stream, metadata !1052, metadata !DIExpression()), !dbg !1108
  call void @llvm.dbg.declare(metadata i64* %n_misformatted_lines, metadata !1109, metadata !DIExpression()), !dbg !1110
  store i64 0, i64* %n_misformatted_lines, align 8, !dbg !1110
  call void @llvm.dbg.declare(metadata i64* %n_properly_formatted_lines, metadata !1111, metadata !DIExpression()), !dbg !1112
  store i64 0, i64* %n_properly_formatted_lines, align 8, !dbg !1112
  call void @llvm.dbg.declare(metadata i64* %n_improperly_formatted_lines, metadata !1113, metadata !DIExpression()), !dbg !1114
  store i64 0, i64* %n_improperly_formatted_lines, align 8, !dbg !1114
  call void @llvm.dbg.declare(metadata i64* %n_mismatched_checksums, metadata !1115, metadata !DIExpression()), !dbg !1116
  store i64 0, i64* %n_mismatched_checksums, align 8, !dbg !1116
  call void @llvm.dbg.declare(metadata i64* %n_open_or_read_failures, metadata !1117, metadata !DIExpression()), !dbg !1118
  store i64 0, i64* %n_open_or_read_failures, align 8, !dbg !1118
  call void @llvm.dbg.declare(metadata [72 x i8]* %bin_buffer_unaligned, metadata !1119, metadata !DIExpression()), !dbg !1120
  call void @llvm.dbg.declare(metadata i8** %bin_buffer, metadata !1121, metadata !DIExpression()), !dbg !1122
  %arraydecay = getelementptr inbounds [72 x i8], [72 x i8]* %bin_buffer_unaligned, i32 0, i32 0, !dbg !1123
  %call = call i8* @ptr_align(i8* %arraydecay, i64 8), !dbg !1124
  store i8* %call, i8** %bin_buffer, align 8, !dbg !1122
  call void @llvm.dbg.declare(metadata i64* %line_number, metadata !1125, metadata !DIExpression()), !dbg !1126
  call void @llvm.dbg.declare(metadata i8** %line, metadata !1127, metadata !DIExpression()), !dbg !1128
  call void @llvm.dbg.declare(metadata i64* %line_chars_allocated, metadata !1129, metadata !DIExpression()), !dbg !1130
  call void @llvm.dbg.declare(metadata i8* %is_stdin, metadata !1131, metadata !DIExpression()), !dbg !1132
  %0 = load i8*, i8** %checkfile_name.addr, align 8, !dbg !1133
  %call1 = call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27, i32 0, i32 0)) #16, !dbg !1133
  %cmp = icmp eq i32 %call1, 0, !dbg !1133
  %frombool = zext i1 %cmp to i8, !dbg !1132
  store i8 %frombool, i8* %is_stdin, align 1, !dbg !1132
  %1 = load i8, i8* %is_stdin, align 1, !dbg !1134
  %tobool = trunc i8 %1 to i1, !dbg !1134
  br i1 %tobool, label %if.then, label %if.else, !dbg !1136

if.then:                                          ; preds = %entry
  store i8 1, i8* @have_read_stdin, align 1, !dbg !1137
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31, i32 0, i32 0)) #11, !dbg !1139
  store i8* %call2, i8** %checkfile_name.addr, align 8, !dbg !1140
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !1141
  store %struct._IO_FILE* %2, %struct._IO_FILE** %checkfile_stream, align 8, !dbg !1142
  br label %if.end.7, !dbg !1143

if.else:                                          ; preds = %entry
  %3 = load i8*, i8** %checkfile_name.addr, align 8, !dbg !1144
  %call3 = call %struct._IO_FILE* @fopen_safer(i8* %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.58, i32 0, i32 0)), !dbg !1146
  store %struct._IO_FILE* %call3, %struct._IO_FILE** %checkfile_stream, align 8, !dbg !1147
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %checkfile_stream, align 8, !dbg !1148
  %cmp4 = icmp eq %struct._IO_FILE* %4, null, !dbg !1150
  br i1 %cmp4, label %if.then.5, label %if.end, !dbg !1151

if.then.5:                                        ; preds = %if.else
  %call6 = call i32* @__errno_location() #17, !dbg !1152
  %5 = load i32, i32* %call6, align 4, !dbg !1152
  %6 = load i8*, i8** %checkfile_name.addr, align 8, !dbg !1154
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.59, i32 0, i32 0), i8* %6), !dbg !1155
  store i1 false, i1* %retval, !dbg !1156
  br label %return, !dbg !1156

if.end:                                           ; preds = %if.else
  br label %if.end.7

if.end.7:                                         ; preds = %if.end, %if.then
  store i64 0, i64* %line_number, align 8, !dbg !1157
  store i8* null, i8** %line, align 8, !dbg !1158
  store i64 0, i64* %line_chars_allocated, align 8, !dbg !1159
  br label %do.body, !dbg !1160

do.body:                                          ; preds = %land.end, %if.end.7
  call void @llvm.dbg.declare(metadata i8** %filename, metadata !1161, metadata !DIExpression()), !dbg !1163
  call void @llvm.dbg.declare(metadata i32* %binary, metadata !1164, metadata !DIExpression()), !dbg !1165
  call void @llvm.dbg.declare(metadata i8** %hex_digest, metadata !1166, metadata !DIExpression()), !dbg !1167
  call void @llvm.dbg.declare(metadata i64* %line_length, metadata !1168, metadata !DIExpression()), !dbg !1172
  %7 = load i64, i64* %line_number, align 8, !dbg !1173
  %inc = add i64 %7, 1, !dbg !1173
  store i64 %inc, i64* %line_number, align 8, !dbg !1173
  %8 = load i64, i64* %line_number, align 8, !dbg !1174
  %cmp8 = icmp eq i64 %8, 0, !dbg !1176
  br i1 %cmp8, label %if.then.9, label %if.end.11, !dbg !1177

if.then.9:                                        ; preds = %do.body
  %call10 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.60, i32 0, i32 0)) #11, !dbg !1178
  %9 = load i8*, i8** %checkfile_name.addr, align 8, !dbg !1179
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call10, i8* %9), !dbg !1180
  br label %if.end.11, !dbg !1180

if.end.11:                                        ; preds = %if.then.9, %do.body
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %checkfile_stream, align 8, !dbg !1181
  %call12 = call i64 @getline(i8** %line, i64* %line_chars_allocated, %struct._IO_FILE* %10), !dbg !1182
  store i64 %call12, i64* %line_length, align 8, !dbg !1183
  %11 = load i64, i64* %line_length, align 8, !dbg !1184
  %cmp13 = icmp sle i64 %11, 0, !dbg !1186
  br i1 %cmp13, label %if.then.14, label %if.end.15, !dbg !1187

if.then.14:                                       ; preds = %if.end.11
  br label %do.end, !dbg !1188

if.end.15:                                        ; preds = %if.end.11
  %12 = load i8*, i8** %line, align 8, !dbg !1189
  %arrayidx = getelementptr inbounds i8, i8* %12, i64 0, !dbg !1189
  %13 = load i8, i8* %arrayidx, align 1, !dbg !1189
  %conv = sext i8 %13 to i32, !dbg !1189
  %cmp16 = icmp eq i32 %conv, 35, !dbg !1191
  br i1 %cmp16, label %if.then.18, label %if.end.19, !dbg !1192

if.then.18:                                       ; preds = %if.end.15
  br label %do.cond, !dbg !1193

if.end.19:                                        ; preds = %if.end.15
  %14 = load i64, i64* %line_length, align 8, !dbg !1194
  %sub = sub nsw i64 %14, 1, !dbg !1196
  %15 = load i8*, i8** %line, align 8, !dbg !1197
  %arrayidx20 = getelementptr inbounds i8, i8* %15, i64 %sub, !dbg !1197
  %16 = load i8, i8* %arrayidx20, align 1, !dbg !1197
  %conv21 = sext i8 %16 to i32, !dbg !1197
  %cmp22 = icmp eq i32 %conv21, 10, !dbg !1198
  br i1 %cmp22, label %if.then.24, label %if.end.26, !dbg !1199

if.then.24:                                       ; preds = %if.end.19
  %17 = load i64, i64* %line_length, align 8, !dbg !1200
  %dec = add nsw i64 %17, -1, !dbg !1200
  store i64 %dec, i64* %line_length, align 8, !dbg !1200
  %18 = load i8*, i8** %line, align 8, !dbg !1201
  %arrayidx25 = getelementptr inbounds i8, i8* %18, i64 %dec, !dbg !1201
  store i8 0, i8* %arrayidx25, align 1, !dbg !1202
  br label %if.end.26, !dbg !1201

if.end.26:                                        ; preds = %if.then.24, %if.end.19
  %19 = load i8*, i8** %line, align 8, !dbg !1203
  %20 = load i64, i64* %line_length, align 8, !dbg !1205
  %call27 = call zeroext i1 @split_3(i8* %19, i64 %20, i8** %hex_digest, i32* %binary, i8** %filename), !dbg !1206
  br i1 %call27, label %land.lhs.true, label %if.then.38, !dbg !1207

land.lhs.true:                                    ; preds = %if.end.26
  %21 = load i8, i8* %is_stdin, align 1, !dbg !1208
  %tobool29 = trunc i8 %21 to i1, !dbg !1208
  br i1 %tobool29, label %land.lhs.true.31, label %land.lhs.true.35, !dbg !1210

land.lhs.true.31:                                 ; preds = %land.lhs.true
  %22 = load i8*, i8** %filename, align 8, !dbg !1211
  %call32 = call i32 @strcmp(i8* %22, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27, i32 0, i32 0)) #16, !dbg !1211
  %cmp33 = icmp eq i32 %call32, 0, !dbg !1211
  br i1 %cmp33, label %if.then.38, label %land.lhs.true.35, !dbg !1213

land.lhs.true.35:                                 ; preds = %land.lhs.true.31, %land.lhs.true
  %23 = load i8*, i8** %hex_digest, align 8, !dbg !1214
  %call36 = call zeroext i1 @hex_digits(i8* %23) #16, !dbg !1215
  br i1 %call36, label %if.else.45, label %if.then.38, !dbg !1216

if.then.38:                                       ; preds = %land.lhs.true.35, %land.lhs.true.31, %if.end.26
  %24 = load i64, i64* %n_misformatted_lines, align 8, !dbg !1217
  %inc39 = add i64 %24, 1, !dbg !1217
  store i64 %inc39, i64* %n_misformatted_lines, align 8, !dbg !1217
  %25 = load i8, i8* @warn, align 1, !dbg !1219
  %tobool40 = trunc i8 %25 to i1, !dbg !1219
  br i1 %tobool40, label %if.then.41, label %if.end.43, !dbg !1221

if.then.41:                                       ; preds = %if.then.38
  %call42 = call i8* @gettext(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.61, i32 0, i32 0)) #11, !dbg !1222
  %26 = load i8*, i8** %checkfile_name.addr, align 8, !dbg !1224
  %27 = load i64, i64* %line_number, align 8, !dbg !1225
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call42, i8* %26, i64 %27, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0)), !dbg !1226
  br label %if.end.43, !dbg !1227

if.end.43:                                        ; preds = %if.then.41, %if.then.38
  %28 = load i64, i64* %n_improperly_formatted_lines, align 8, !dbg !1228
  %inc44 = add i64 %28, 1, !dbg !1228
  store i64 %inc44, i64* %n_improperly_formatted_lines, align 8, !dbg !1228
  br label %if.end.104, !dbg !1229

if.else.45:                                       ; preds = %land.lhs.true.35
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !1230, metadata !DIExpression()), !dbg !1232
  %29 = load i64, i64* %n_properly_formatted_lines, align 8, !dbg !1233
  %inc46 = add i64 %29, 1, !dbg !1233
  store i64 %inc46, i64* %n_properly_formatted_lines, align 8, !dbg !1233
  %30 = load i8*, i8** %filename, align 8, !dbg !1234
  %31 = load i8*, i8** %bin_buffer, align 8, !dbg !1235
  %call47 = call zeroext i1 @digest_file(i8* %30, i32* %binary, i8* %31), !dbg !1236
  %frombool48 = zext i1 %call47 to i8, !dbg !1237
  store i8 %frombool48, i8* %ok, align 1, !dbg !1237
  %32 = load i8, i8* %ok, align 1, !dbg !1238
  %tobool49 = trunc i8 %32 to i1, !dbg !1238
  br i1 %tobool49, label %if.else.57, label %if.then.50, !dbg !1240

if.then.50:                                       ; preds = %if.else.45
  %33 = load i64, i64* %n_open_or_read_failures, align 8, !dbg !1241
  %inc51 = add i64 %33, 1, !dbg !1241
  store i64 %inc51, i64* %n_open_or_read_failures, align 8, !dbg !1241
  %34 = load i8, i8* @status_only, align 1, !dbg !1243
  %tobool52 = trunc i8 %34 to i1, !dbg !1243
  br i1 %tobool52, label %if.end.56, label %if.then.53, !dbg !1245

if.then.53:                                       ; preds = %if.then.50
  %call54 = call i8* @gettext(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.62, i32 0, i32 0)) #11, !dbg !1246
  %35 = load i8*, i8** %filename, align 8, !dbg !1248
  %call55 = call i32 (i8*, ...) @printf(i8* %call54, i8* %35), !dbg !1249
  br label %if.end.56, !dbg !1250

if.end.56:                                        ; preds = %if.then.53, %if.then.50
  br label %if.end.103, !dbg !1251

if.else.57:                                       ; preds = %if.else.45
  call void @llvm.dbg.declare(metadata i64* %digest_bin_bytes, metadata !1252, metadata !DIExpression()), !dbg !1254
  %36 = load i64, i64* @digest_hex_bytes, align 8, !dbg !1255
  %div = udiv i64 %36, 2, !dbg !1256
  store i64 %div, i64* %digest_bin_bytes, align 8, !dbg !1254
  call void @llvm.dbg.declare(metadata i64* %cnt, metadata !1257, metadata !DIExpression()), !dbg !1258
  store i64 0, i64* %cnt, align 8, !dbg !1259
  br label %for.cond, !dbg !1261

for.cond:                                         ; preds = %for.inc, %if.else.57
  %37 = load i64, i64* %cnt, align 8, !dbg !1262
  %38 = load i64, i64* %digest_bin_bytes, align 8, !dbg !1266
  %cmp58 = icmp ult i64 %37, %38, !dbg !1267
  br i1 %cmp58, label %for.body, label %for.end, !dbg !1268

for.body:                                         ; preds = %for.cond
  %39 = load i64, i64* %cnt, align 8, !dbg !1269
  %mul = mul i64 2, %39, !dbg !1272
  %40 = load i8*, i8** %hex_digest, align 8, !dbg !1273
  %arrayidx60 = getelementptr inbounds i8, i8* %40, i64 %mul, !dbg !1273
  %41 = load i8, i8* %arrayidx60, align 1, !dbg !1273
  %conv61 = zext i8 %41 to i32, !dbg !1273
  %call62 = call i32 @tolower(i32 %conv61) #11, !dbg !1274
  %42 = load i64, i64* %cnt, align 8, !dbg !1275
  %43 = load i8*, i8** %bin_buffer, align 8, !dbg !1276
  %arrayidx63 = getelementptr inbounds i8, i8* %43, i64 %42, !dbg !1276
  %44 = load i8, i8* %arrayidx63, align 1, !dbg !1276
  %conv64 = zext i8 %44 to i32, !dbg !1276
  %shr = ashr i32 %conv64, 4, !dbg !1277
  %idxprom = sext i32 %shr to i64, !dbg !1278
  %arrayidx65 = getelementptr inbounds [16 x i8], [16 x i8]* @digest_check.bin2hex, i32 0, i64 %idxprom, !dbg !1278
  %45 = load i8, i8* %arrayidx65, align 1, !dbg !1278
  %conv66 = sext i8 %45 to i32, !dbg !1278
  %cmp67 = icmp ne i32 %call62, %conv66, !dbg !1279
  br i1 %cmp67, label %if.then.80, label %lor.lhs.false, !dbg !1280

lor.lhs.false:                                    ; preds = %for.body
  %46 = load i64, i64* %cnt, align 8, !dbg !1281
  %mul69 = mul i64 2, %46, !dbg !1283
  %add = add i64 %mul69, 1, !dbg !1284
  %47 = load i8*, i8** %hex_digest, align 8, !dbg !1285
  %arrayidx70 = getelementptr inbounds i8, i8* %47, i64 %add, !dbg !1285
  %48 = load i8, i8* %arrayidx70, align 1, !dbg !1285
  %conv71 = zext i8 %48 to i32, !dbg !1285
  %call72 = call i32 @tolower(i32 %conv71) #11, !dbg !1286
  %49 = load i64, i64* %cnt, align 8, !dbg !1287
  %50 = load i8*, i8** %bin_buffer, align 8, !dbg !1288
  %arrayidx73 = getelementptr inbounds i8, i8* %50, i64 %49, !dbg !1288
  %51 = load i8, i8* %arrayidx73, align 1, !dbg !1288
  %conv74 = zext i8 %51 to i32, !dbg !1288
  %and = and i32 %conv74, 15, !dbg !1289
  %idxprom75 = sext i32 %and to i64, !dbg !1290
  %arrayidx76 = getelementptr inbounds [16 x i8], [16 x i8]* @digest_check.bin2hex, i32 0, i64 %idxprom75, !dbg !1290
  %52 = load i8, i8* %arrayidx76, align 1, !dbg !1290
  %conv77 = sext i8 %52 to i32, !dbg !1291
  %cmp78 = icmp ne i32 %call72, %conv77, !dbg !1292
  br i1 %cmp78, label %if.then.80, label %if.end.81, !dbg !1293

if.then.80:                                       ; preds = %lor.lhs.false, %for.body
  br label %for.end, !dbg !1294

if.end.81:                                        ; preds = %lor.lhs.false
  br label %for.inc, !dbg !1295

for.inc:                                          ; preds = %if.end.81
  %53 = load i64, i64* %cnt, align 8, !dbg !1296
  %inc82 = add i64 %53, 1, !dbg !1296
  store i64 %inc82, i64* %cnt, align 8, !dbg !1296
  br label %for.cond, !dbg !1297

for.end:                                          ; preds = %if.then.80, %for.cond
  %54 = load i64, i64* %cnt, align 8, !dbg !1298
  %55 = load i64, i64* %digest_bin_bytes, align 8, !dbg !1300
  %cmp83 = icmp ne i64 %54, %55, !dbg !1301
  br i1 %cmp83, label %if.then.85, label %if.end.87, !dbg !1302

if.then.85:                                       ; preds = %for.end
  %56 = load i64, i64* %n_mismatched_checksums, align 8, !dbg !1303
  %inc86 = add i64 %56, 1, !dbg !1303
  store i64 %inc86, i64* %n_mismatched_checksums, align 8, !dbg !1303
  br label %if.end.87, !dbg !1303

if.end.87:                                        ; preds = %if.then.85, %for.end
  %57 = load i8, i8* @status_only, align 1, !dbg !1304
  %tobool88 = trunc i8 %57 to i1, !dbg !1304
  br i1 %tobool88, label %if.end.102, label %if.then.89, !dbg !1306

if.then.89:                                       ; preds = %if.end.87
  %58 = load i64, i64* %cnt, align 8, !dbg !1307
  %59 = load i64, i64* %digest_bin_bytes, align 8, !dbg !1310
  %cmp90 = icmp ne i64 %58, %59, !dbg !1311
  br i1 %cmp90, label %if.then.92, label %if.else.95, !dbg !1312

if.then.92:                                       ; preds = %if.then.89
  %60 = load i8*, i8** %filename, align 8, !dbg !1313
  %call93 = call i8* @gettext(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.64, i32 0, i32 0)) #11, !dbg !1314
  %call94 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.63, i32 0, i32 0), i8* %60, i8* %call93), !dbg !1315
  br label %if.end.101, !dbg !1315

if.else.95:                                       ; preds = %if.then.89
  %61 = load i8, i8* @quiet, align 1, !dbg !1316
  %tobool96 = trunc i8 %61 to i1, !dbg !1316
  br i1 %tobool96, label %if.end.100, label %if.then.97, !dbg !1318

if.then.97:                                       ; preds = %if.else.95
  %62 = load i8*, i8** %filename, align 8, !dbg !1319
  %call98 = call i8* @gettext(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.65, i32 0, i32 0)) #11, !dbg !1320
  %call99 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.63, i32 0, i32 0), i8* %62, i8* %call98), !dbg !1321
  br label %if.end.100, !dbg !1321

if.end.100:                                       ; preds = %if.then.97, %if.else.95
  br label %if.end.101

if.end.101:                                       ; preds = %if.end.100, %if.then.92
  br label %if.end.102, !dbg !1322

if.end.102:                                       ; preds = %if.end.101, %if.end.87
  br label %if.end.103

if.end.103:                                       ; preds = %if.end.102, %if.end.56
  br label %if.end.104

if.end.104:                                       ; preds = %if.end.103, %if.end.43
  br label %do.cond, !dbg !1323

do.cond:                                          ; preds = %if.end.104, %if.then.18
  %63 = load %struct._IO_FILE*, %struct._IO_FILE** %checkfile_stream, align 8, !dbg !1324
  %call105 = call i32 @feof_unlocked(%struct._IO_FILE* %63) #11, !dbg !1324
  %tobool106 = icmp ne i32 %call105, 0, !dbg !1324
  br i1 %tobool106, label %land.end, label %land.rhs, !dbg !1325

land.rhs:                                         ; preds = %do.cond
  %64 = load %struct._IO_FILE*, %struct._IO_FILE** %checkfile_stream, align 8, !dbg !1326
  %call107 = call i32 @ferror_unlocked(%struct._IO_FILE* %64) #11, !dbg !1326
  %tobool108 = icmp ne i32 %call107, 0, !dbg !1328
  %lnot = xor i1 %tobool108, true, !dbg !1328
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %65 = phi i1 [ false, %do.cond ], [ %lnot, %land.rhs ]
  br i1 %65, label %do.body, label %do.end, !dbg !1323

do.end:                                           ; preds = %land.end, %if.then.14
  %66 = load i8*, i8** %line, align 8, !dbg !1329
  call void @free(i8* %66) #11, !dbg !1330
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** %checkfile_stream, align 8, !dbg !1331
  %call109 = call i32 @ferror_unlocked(%struct._IO_FILE* %67) #11, !dbg !1331
  %tobool110 = icmp ne i32 %call109, 0, !dbg !1331
  br i1 %tobool110, label %if.then.111, label %if.end.113, !dbg !1333

if.then.111:                                      ; preds = %do.end
  %call112 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.66, i32 0, i32 0)) #11, !dbg !1334
  %68 = load i8*, i8** %checkfile_name.addr, align 8, !dbg !1336
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call112, i8* %68), !dbg !1337
  store i1 false, i1* %retval, !dbg !1338
  br label %return, !dbg !1338

if.end.113:                                       ; preds = %do.end
  %69 = load i8, i8* %is_stdin, align 1, !dbg !1339
  %tobool114 = trunc i8 %69 to i1, !dbg !1339
  br i1 %tobool114, label %if.end.121, label %land.lhs.true.115, !dbg !1341

land.lhs.true.115:                                ; preds = %if.end.113
  %70 = load %struct._IO_FILE*, %struct._IO_FILE** %checkfile_stream, align 8, !dbg !1342
  %call116 = call i32 @rpl_fclose(%struct._IO_FILE* %70), !dbg !1344
  %cmp117 = icmp ne i32 %call116, 0, !dbg !1345
  br i1 %cmp117, label %if.then.119, label %if.end.121, !dbg !1346

if.then.119:                                      ; preds = %land.lhs.true.115
  %call120 = call i32* @__errno_location() #17, !dbg !1347
  %71 = load i32, i32* %call120, align 4, !dbg !1347
  %72 = load i8*, i8** %checkfile_name.addr, align 8, !dbg !1349
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %71, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.59, i32 0, i32 0), i8* %72), !dbg !1350
  store i1 false, i1* %retval, !dbg !1351
  br label %return, !dbg !1351

if.end.121:                                       ; preds = %land.lhs.true.115, %if.end.113
  %73 = load i64, i64* %n_properly_formatted_lines, align 8, !dbg !1352
  %cmp122 = icmp eq i64 %73, 0, !dbg !1354
  br i1 %cmp122, label %if.then.124, label %if.else.126, !dbg !1355

if.then.124:                                      ; preds = %if.end.121
  %call125 = call i8* @gettext(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.67, i32 0, i32 0)) #11, !dbg !1356
  %74 = load i8*, i8** %checkfile_name.addr, align 8, !dbg !1358
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call125, i8* %74, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0)), !dbg !1359
  br label %if.end.148, !dbg !1360

if.else.126:                                      ; preds = %if.end.121
  %75 = load i8, i8* @status_only, align 1, !dbg !1361
  %tobool127 = trunc i8 %75 to i1, !dbg !1361
  br i1 %tobool127, label %if.end.147, label %if.then.128, !dbg !1364

if.then.128:                                      ; preds = %if.else.126
  %76 = load i64, i64* %n_misformatted_lines, align 8, !dbg !1365
  %cmp129 = icmp ne i64 %76, 0, !dbg !1368
  br i1 %cmp129, label %if.then.131, label %if.end.134, !dbg !1369

if.then.131:                                      ; preds = %if.then.128
  %77 = load i64, i64* %n_misformatted_lines, align 8, !dbg !1370
  %call132 = call i64 @select_plural(i64 %77), !dbg !1371
  %call133 = call i8* @ngettext(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.68, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.69, i32 0, i32 0), i64 %call132) #11, !dbg !1372
  %78 = load i64, i64* %n_misformatted_lines, align 8, !dbg !1373
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call133, i64 %78), !dbg !1374
  br label %if.end.134, !dbg !1374

if.end.134:                                       ; preds = %if.then.131, %if.then.128
  %79 = load i64, i64* %n_open_or_read_failures, align 8, !dbg !1375
  %cmp135 = icmp ne i64 %79, 0, !dbg !1377
  br i1 %cmp135, label %if.then.137, label %if.end.140, !dbg !1378

if.then.137:                                      ; preds = %if.end.134
  %80 = load i64, i64* %n_open_or_read_failures, align 8, !dbg !1379
  %call138 = call i64 @select_plural(i64 %80), !dbg !1380
  %call139 = call i8* @ngettext(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.70, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.71, i32 0, i32 0), i64 %call138) #11, !dbg !1381
  %81 = load i64, i64* %n_open_or_read_failures, align 8, !dbg !1382
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call139, i64 %81), !dbg !1383
  br label %if.end.140, !dbg !1383

if.end.140:                                       ; preds = %if.then.137, %if.end.134
  %82 = load i64, i64* %n_mismatched_checksums, align 8, !dbg !1384
  %cmp141 = icmp ne i64 %82, 0, !dbg !1386
  br i1 %cmp141, label %if.then.143, label %if.end.146, !dbg !1387

if.then.143:                                      ; preds = %if.end.140
  %83 = load i64, i64* %n_mismatched_checksums, align 8, !dbg !1388
  %call144 = call i64 @select_plural(i64 %83), !dbg !1389
  %call145 = call i8* @ngettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.72, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.73, i32 0, i32 0), i64 %call144) #11, !dbg !1390
  %84 = load i64, i64* %n_mismatched_checksums, align 8, !dbg !1391
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call145, i64 %84), !dbg !1392
  br label %if.end.146, !dbg !1392

if.end.146:                                       ; preds = %if.then.143, %if.end.140
  br label %if.end.147, !dbg !1393

if.end.147:                                       ; preds = %if.end.146, %if.else.126
  br label %if.end.148

if.end.148:                                       ; preds = %if.end.147, %if.then.124
  %85 = load i64, i64* %n_properly_formatted_lines, align 8, !dbg !1394
  %cmp149 = icmp ne i64 %85, 0, !dbg !1395
  br i1 %cmp149, label %land.lhs.true.151, label %land.end.161, !dbg !1396

land.lhs.true.151:                                ; preds = %if.end.148
  %86 = load i64, i64* %n_mismatched_checksums, align 8, !dbg !1397
  %cmp152 = icmp eq i64 %86, 0, !dbg !1398
  br i1 %cmp152, label %land.lhs.true.154, label %land.end.161, !dbg !1399

land.lhs.true.154:                                ; preds = %land.lhs.true.151
  %87 = load i64, i64* %n_open_or_read_failures, align 8, !dbg !1400
  %cmp155 = icmp eq i64 %87, 0, !dbg !1401
  br i1 %cmp155, label %land.rhs.157, label %land.end.161, !dbg !1402

land.rhs.157:                                     ; preds = %land.lhs.true.154
  %88 = load i8, i8* @strict, align 1, !dbg !1403
  %tobool158 = trunc i8 %88 to i1, !dbg !1403
  br i1 %tobool158, label %lor.rhs, label %lor.end, !dbg !1404

lor.rhs:                                          ; preds = %land.rhs.157
  %89 = load i64, i64* %n_improperly_formatted_lines, align 8, !dbg !1405
  %cmp159 = icmp eq i64 %89, 0, !dbg !1407
  br label %lor.end, !dbg !1404

lor.end:                                          ; preds = %lor.rhs, %land.rhs.157
  %90 = phi i1 [ true, %land.rhs.157 ], [ %cmp159, %lor.rhs ]
  br label %land.end.161

land.end.161:                                     ; preds = %lor.end, %land.lhs.true.154, %land.lhs.true.151, %if.end.148
  %91 = phi i1 [ false, %land.lhs.true.154 ], [ false, %land.lhs.true.151 ], [ false, %if.end.148 ], [ %90, %lor.end ]
  store i1 %91, i1* %retval, !dbg !1408
  br label %return, !dbg !1408

return:                                           ; preds = %land.end.161, %if.then.119, %if.then.111, %if.then.5
  %92 = load i1, i1* %retval, !dbg !1409
  ret i1 %92, !dbg !1409
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @digest_file(i8* %filename, i32* %binary, i8* %bin_result) #5 !dbg !1410 {
entry:
  %retval = alloca i1, align 1
  %filename.addr = alloca i8*, align 8
  %binary.addr = alloca i32*, align 8
  %bin_result.addr = alloca i8*, align 8
  %fp = alloca %struct._IO_FILE*, align 8
  %err = alloca i32, align 4
  %is_stdin = alloca i8, align 1
  store i8* %filename, i8** %filename.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %filename.addr, metadata !1413, metadata !DIExpression()), !dbg !1414
  store i32* %binary, i32** %binary.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %binary.addr, metadata !1415, metadata !DIExpression()), !dbg !1416
  store i8* %bin_result, i8** %bin_result.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bin_result.addr, metadata !1417, metadata !DIExpression()), !dbg !1418
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp, metadata !1419, metadata !DIExpression()), !dbg !1420
  call void @llvm.dbg.declare(metadata i32* %err, metadata !1421, metadata !DIExpression()), !dbg !1422
  call void @llvm.dbg.declare(metadata i8* %is_stdin, metadata !1423, metadata !DIExpression()), !dbg !1424
  %0 = load i8*, i8** %filename.addr, align 8, !dbg !1425
  %call = call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27, i32 0, i32 0)) #16, !dbg !1425
  %cmp = icmp eq i32 %call, 0, !dbg !1425
  %frombool = zext i1 %cmp to i8, !dbg !1424
  store i8 %frombool, i8* %is_stdin, align 1, !dbg !1424
  %1 = load i8, i8* %is_stdin, align 1, !dbg !1426
  %tobool = trunc i8 %1 to i1, !dbg !1426
  br i1 %tobool, label %if.then, label %if.else, !dbg !1428

if.then:                                          ; preds = %entry
  store i8 1, i8* @have_read_stdin, align 1, !dbg !1429
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !1431
  store %struct._IO_FILE* %2, %struct._IO_FILE** %fp, align 8, !dbg !1432
  br label %if.end.5, !dbg !1433

if.else:                                          ; preds = %entry
  %3 = load i8*, i8** %filename.addr, align 8, !dbg !1434
  %call1 = call %struct._IO_FILE* @fopen_safer(i8* %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.58, i32 0, i32 0)), !dbg !1436
  store %struct._IO_FILE* %call1, %struct._IO_FILE** %fp, align 8, !dbg !1437
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !1438
  %cmp2 = icmp eq %struct._IO_FILE* %4, null, !dbg !1440
  br i1 %cmp2, label %if.then.3, label %if.end, !dbg !1441

if.then.3:                                        ; preds = %if.else
  %call4 = call i32* @__errno_location() #17, !dbg !1442
  %5 = load i32, i32* %call4, align 4, !dbg !1442
  %6 = load i8*, i8** %filename.addr, align 8, !dbg !1444
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.59, i32 0, i32 0), i8* %6), !dbg !1445
  store i1 false, i1* %retval, !dbg !1446
  br label %return, !dbg !1446

if.end:                                           ; preds = %if.else
  br label %if.end.5

if.end.5:                                         ; preds = %if.end, %if.then
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !1447
  call void @fadvise(%struct._IO_FILE* %7, i32 2), !dbg !1448
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !1449
  %9 = load i8*, i8** %bin_result.addr, align 8, !dbg !1450
  %call6 = call i32 @sha512_stream(%struct._IO_FILE* %8, i8* %9), !dbg !1451
  store i32 %call6, i32* %err, align 4, !dbg !1452
  %10 = load i32, i32* %err, align 4, !dbg !1453
  %tobool7 = icmp ne i32 %10, 0, !dbg !1453
  br i1 %tobool7, label %if.then.8, label %if.end.14, !dbg !1455

if.then.8:                                        ; preds = %if.end.5
  %call9 = call i32* @__errno_location() #17, !dbg !1456
  %11 = load i32, i32* %call9, align 4, !dbg !1456
  %12 = load i8*, i8** %filename.addr, align 8, !dbg !1458
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %11, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.59, i32 0, i32 0), i8* %12), !dbg !1459
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !1460
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !1462
  %cmp10 = icmp ne %struct._IO_FILE* %13, %14, !dbg !1463
  br i1 %cmp10, label %if.then.11, label %if.end.13, !dbg !1464

if.then.11:                                       ; preds = %if.then.8
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !1465
  %call12 = call i32 @rpl_fclose(%struct._IO_FILE* %15), !dbg !1466
  br label %if.end.13, !dbg !1466

if.end.13:                                        ; preds = %if.then.11, %if.then.8
  store i1 false, i1* %retval, !dbg !1467
  br label %return, !dbg !1467

if.end.14:                                        ; preds = %if.end.5
  %16 = load i8, i8* %is_stdin, align 1, !dbg !1468
  %tobool15 = trunc i8 %16 to i1, !dbg !1468
  br i1 %tobool15, label %if.end.20, label %land.lhs.true, !dbg !1470

land.lhs.true:                                    ; preds = %if.end.14
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !1471
  %call16 = call i32 @rpl_fclose(%struct._IO_FILE* %17), !dbg !1473
  %cmp17 = icmp ne i32 %call16, 0, !dbg !1474
  br i1 %cmp17, label %if.then.18, label %if.end.20, !dbg !1475

if.then.18:                                       ; preds = %land.lhs.true
  %call19 = call i32* @__errno_location() #17, !dbg !1476
  %18 = load i32, i32* %call19, align 4, !dbg !1476
  %19 = load i8*, i8** %filename.addr, align 8, !dbg !1478
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %18, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.59, i32 0, i32 0), i8* %19), !dbg !1479
  store i1 false, i1* %retval, !dbg !1480
  br label %return, !dbg !1480

if.end.20:                                        ; preds = %land.lhs.true, %if.end.14
  store i1 true, i1* %retval, !dbg !1481
  br label %return, !dbg !1481

return:                                           ; preds = %if.end.20, %if.then.18, %if.end.13, %if.then.3
  %20 = load i1, i1* %retval, !dbg !1482
  ret i1 %20, !dbg !1482
}

; Function Attrs: nounwind uwtable
define internal void @print_filename(i8* %file, i1 zeroext %escape) #5 !dbg !1483 {
entry:
  %file.addr = alloca i8*, align 8
  %escape.addr = alloca i8, align 1
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !1486, metadata !DIExpression()), !dbg !1487
  %frombool = zext i1 %escape to i8
  store i8 %frombool, i8* %escape.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %escape.addr, metadata !1488, metadata !DIExpression()), !dbg !1489
  %0 = load i8, i8* %escape.addr, align 1, !dbg !1490
  %tobool = trunc i8 %0 to i1, !dbg !1490
  br i1 %tobool, label %if.end, label %if.then, !dbg !1492

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %file.addr, align 8, !dbg !1493
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1493
  %call = call i32 @fputs_unlocked(i8* %1, %struct._IO_FILE* %2), !dbg !1493
  br label %while.end, !dbg !1495

if.end:                                           ; preds = %entry
  br label %while.cond, !dbg !1496

while.cond:                                       ; preds = %sw.epilog, %if.end
  %3 = load i8*, i8** %file.addr, align 8, !dbg !1497
  %4 = load i8, i8* %3, align 1, !dbg !1500
  %tobool1 = icmp ne i8 %4, 0, !dbg !1496
  br i1 %tobool1, label %while.body, label %while.end, !dbg !1496

while.body:                                       ; preds = %while.cond
  %5 = load i8*, i8** %file.addr, align 8, !dbg !1501
  %6 = load i8, i8* %5, align 1, !dbg !1503
  %conv = sext i8 %6 to i32, !dbg !1503
  switch i32 %conv, label %sw.default [
    i32 10, label %sw.bb
    i32 92, label %sw.bb.3
  ], !dbg !1504

sw.bb:                                            ; preds = %while.body
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1505
  %call2 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.74, i32 0, i32 0), %struct._IO_FILE* %7), !dbg !1505
  br label %sw.epilog, !dbg !1507

sw.bb.3:                                          ; preds = %while.body
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1508
  %call4 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.75, i32 0, i32 0), %struct._IO_FILE* %8), !dbg !1508
  br label %sw.epilog, !dbg !1509

sw.default:                                       ; preds = %while.body
  %9 = load i8*, i8** %file.addr, align 8, !dbg !1510
  %10 = load i8, i8* %9, align 1, !dbg !1510
  %conv5 = sext i8 %10 to i32, !dbg !1510
  %call6 = call i32 @putchar_unlocked(i32 %conv5), !dbg !1510
  br label %sw.epilog, !dbg !1511

sw.epilog:                                        ; preds = %sw.default, %sw.bb.3, %sw.bb
  %11 = load i8*, i8** %file.addr, align 8, !dbg !1512
  %incdec.ptr = getelementptr inbounds i8, i8* %11, i32 1, !dbg !1512
  store i8* %incdec.ptr, i8** %file.addr, align 8, !dbg !1512
  br label %while.cond, !dbg !1496

while.end:                                        ; preds = %while.cond, %if.then
  ret void, !dbg !1513
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @select_plural(i64 %n) #8 !dbg !22 {
entry:
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !1514, metadata !DIExpression()), !dbg !1515
  %0 = load i64, i64* %n.addr, align 8, !dbg !1516
  %cmp = icmp ule i64 %0, -1, !dbg !1517
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !1516

cond.true:                                        ; preds = %entry
  %1 = load i64, i64* %n.addr, align 8, !dbg !1518
  br label %cond.end, !dbg !1516

cond.false:                                       ; preds = %entry
  %2 = load i64, i64* %n.addr, align 8, !dbg !1520
  %rem = urem i64 %2, 1000000, !dbg !1522
  %add = add i64 %rem, 1000000, !dbg !1523
  br label %cond.end, !dbg !1516

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %1, %cond.true ], [ %add, %cond.false ], !dbg !1516
  ret i64 %cond, !dbg !1524
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @split_3(i8* %s, i64 %s_len, i8** %hex_digest, i32* %binary, i8** %file_name) #5 !dbg !1527 {
entry:
  %retval = alloca i1, align 1
  %s.addr = alloca i8*, align 8
  %s_len.addr = alloca i64, align 8
  %hex_digest.addr = alloca i8**, align 8
  %binary.addr = alloca i32*, align 8
  %file_name.addr = alloca i8**, align 8
  %escaped_filename = alloca i8, align 1
  %algo_name_len = alloca i64, align 8
  %i = alloca i64, align 8
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !1531, metadata !DIExpression()), !dbg !1532
  store i64 %s_len, i64* %s_len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s_len.addr, metadata !1533, metadata !DIExpression()), !dbg !1534
  store i8** %hex_digest, i8*** %hex_digest.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %hex_digest.addr, metadata !1535, metadata !DIExpression()), !dbg !1536
  store i32* %binary, i32** %binary.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %binary.addr, metadata !1537, metadata !DIExpression()), !dbg !1538
  store i8** %file_name, i8*** %file_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %file_name.addr, metadata !1539, metadata !DIExpression()), !dbg !1540
  call void @llvm.dbg.declare(metadata i8* %escaped_filename, metadata !1541, metadata !DIExpression()), !dbg !1542
  store i8 0, i8* %escaped_filename, align 1, !dbg !1542
  call void @llvm.dbg.declare(metadata i64* %algo_name_len, metadata !1543, metadata !DIExpression()), !dbg !1544
  call void @llvm.dbg.declare(metadata i64* %i, metadata !1545, metadata !DIExpression()), !dbg !1546
  store i64 0, i64* %i, align 8, !dbg !1546
  br label %while.cond, !dbg !1547

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i64, i64* %i, align 8, !dbg !1548
  %1 = load i8*, i8** %s.addr, align 8, !dbg !1548
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 %0, !dbg !1548
  %2 = load i8, i8* %arrayidx, align 1, !dbg !1548
  %conv = sext i8 %2 to i32, !dbg !1548
  %cmp = icmp eq i32 %conv, 32, !dbg !1548
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !1548

lor.rhs:                                          ; preds = %while.cond
  %3 = load i64, i64* %i, align 8, !dbg !1551
  %4 = load i8*, i8** %s.addr, align 8, !dbg !1551
  %arrayidx2 = getelementptr inbounds i8, i8* %4, i64 %3, !dbg !1551
  %5 = load i8, i8* %arrayidx2, align 1, !dbg !1551
  %conv3 = sext i8 %5 to i32, !dbg !1551
  %cmp4 = icmp eq i32 %conv3, 9, !dbg !1551
  br label %lor.end, !dbg !1551

lor.end:                                          ; preds = %lor.rhs, %while.cond
  %6 = phi i1 [ true, %while.cond ], [ %cmp4, %lor.rhs ]
  br i1 %6, label %while.body, label %while.end, !dbg !1553

while.body:                                       ; preds = %lor.end
  %7 = load i64, i64* %i, align 8, !dbg !1556
  %inc = add i64 %7, 1, !dbg !1556
  store i64 %inc, i64* %i, align 8, !dbg !1556
  br label %while.cond, !dbg !1547

while.end:                                        ; preds = %lor.end
  %8 = load i64, i64* %i, align 8, !dbg !1557
  %9 = load i8*, i8** %s.addr, align 8, !dbg !1559
  %arrayidx6 = getelementptr inbounds i8, i8* %9, i64 %8, !dbg !1559
  %10 = load i8, i8* %arrayidx6, align 1, !dbg !1559
  %conv7 = sext i8 %10 to i32, !dbg !1559
  %cmp8 = icmp eq i32 %conv7, 92, !dbg !1560
  br i1 %cmp8, label %if.then, label %if.end, !dbg !1561

if.then:                                          ; preds = %while.end
  %11 = load i64, i64* %i, align 8, !dbg !1562
  %inc10 = add i64 %11, 1, !dbg !1562
  store i64 %inc10, i64* %i, align 8, !dbg !1562
  store i8 1, i8* %escaped_filename, align 1, !dbg !1564
  br label %if.end, !dbg !1565

if.end:                                           ; preds = %if.then, %while.end
  store i64 6, i64* %algo_name_len, align 8, !dbg !1566
  %12 = load i8*, i8** %s.addr, align 8, !dbg !1567
  %13 = load i64, i64* %i, align 8, !dbg !1567
  %add.ptr = getelementptr inbounds i8, i8* %12, i64 %13, !dbg !1567
  %14 = load i64, i64* %algo_name_len, align 8, !dbg !1567
  %call = call i32 @strncmp(i8* %add.ptr, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0), i64 %14) #16, !dbg !1567
  %cmp11 = icmp eq i32 %call, 0, !dbg !1567
  br i1 %cmp11, label %if.then.13, label %if.end.34, !dbg !1569

if.then.13:                                       ; preds = %if.end
  %15 = load i64, i64* %i, align 8, !dbg !1570
  %16 = load i64, i64* %algo_name_len, align 8, !dbg !1573
  %add = add i64 %15, %16, !dbg !1574
  %17 = load i8*, i8** %s.addr, align 8, !dbg !1575
  %arrayidx14 = getelementptr inbounds i8, i8* %17, i64 %add, !dbg !1575
  %18 = load i8, i8* %arrayidx14, align 1, !dbg !1575
  %conv15 = sext i8 %18 to i32, !dbg !1575
  %cmp16 = icmp eq i32 %conv15, 32, !dbg !1576
  br i1 %cmp16, label %if.then.18, label %if.end.20, !dbg !1577

if.then.18:                                       ; preds = %if.then.13
  %19 = load i64, i64* %i, align 8, !dbg !1578
  %inc19 = add i64 %19, 1, !dbg !1578
  store i64 %inc19, i64* %i, align 8, !dbg !1578
  br label %if.end.20, !dbg !1578

if.end.20:                                        ; preds = %if.then.18, %if.then.13
  %20 = load i64, i64* %i, align 8, !dbg !1579
  %21 = load i64, i64* %algo_name_len, align 8, !dbg !1581
  %add21 = add i64 %20, %21, !dbg !1582
  %22 = load i8*, i8** %s.addr, align 8, !dbg !1583
  %arrayidx22 = getelementptr inbounds i8, i8* %22, i64 %add21, !dbg !1583
  %23 = load i8, i8* %arrayidx22, align 1, !dbg !1583
  %conv23 = sext i8 %23 to i32, !dbg !1583
  %cmp24 = icmp eq i32 %conv23, 40, !dbg !1584
  br i1 %cmp24, label %if.then.26, label %if.end.33, !dbg !1585

if.then.26:                                       ; preds = %if.end.20
  %24 = load i32*, i32** %binary.addr, align 8, !dbg !1586
  store i32 0, i32* %24, align 4, !dbg !1588
  %25 = load i8*, i8** %s.addr, align 8, !dbg !1589
  %26 = load i64, i64* %i, align 8, !dbg !1590
  %add.ptr27 = getelementptr inbounds i8, i8* %25, i64 %26, !dbg !1591
  %27 = load i64, i64* %algo_name_len, align 8, !dbg !1592
  %add.ptr28 = getelementptr inbounds i8, i8* %add.ptr27, i64 %27, !dbg !1593
  %add.ptr29 = getelementptr inbounds i8, i8* %add.ptr28, i64 1, !dbg !1594
  %28 = load i64, i64* %s_len.addr, align 8, !dbg !1595
  %29 = load i64, i64* %i, align 8, !dbg !1596
  %30 = load i64, i64* %algo_name_len, align 8, !dbg !1597
  %add30 = add i64 %29, %30, !dbg !1598
  %add31 = add i64 %add30, 1, !dbg !1599
  %sub = sub i64 %28, %add31, !dbg !1600
  %31 = load i8**, i8*** %hex_digest.addr, align 8, !dbg !1601
  %32 = load i8**, i8*** %file_name.addr, align 8, !dbg !1602
  %33 = load i8, i8* %escaped_filename, align 1, !dbg !1603
  %tobool = trunc i8 %33 to i1, !dbg !1603
  %call32 = call zeroext i1 @bsd_split_3(i8* %add.ptr29, i64 %sub, i8** %31, i8** %32, i1 zeroext %tobool), !dbg !1604
  store i1 %call32, i1* %retval, !dbg !1605
  br label %return, !dbg !1605

if.end.33:                                        ; preds = %if.end.20
  br label %if.end.34, !dbg !1606

if.end.34:                                        ; preds = %if.end.33, %if.end
  %34 = load i64, i64* %s_len.addr, align 8, !dbg !1607
  %35 = load i64, i64* %i, align 8, !dbg !1609
  %sub35 = sub i64 %34, %35, !dbg !1610
  %36 = load i64, i64* @min_digest_line_length, align 8, !dbg !1611
  %37 = load i64, i64* %i, align 8, !dbg !1612
  %38 = load i8*, i8** %s.addr, align 8, !dbg !1613
  %arrayidx36 = getelementptr inbounds i8, i8* %38, i64 %37, !dbg !1613
  %39 = load i8, i8* %arrayidx36, align 1, !dbg !1613
  %conv37 = sext i8 %39 to i32, !dbg !1613
  %cmp38 = icmp eq i32 %conv37, 92, !dbg !1614
  %conv39 = zext i1 %cmp38 to i32, !dbg !1614
  %conv40 = sext i32 %conv39 to i64, !dbg !1615
  %add41 = add i64 %36, %conv40, !dbg !1616
  %cmp42 = icmp ult i64 %sub35, %add41, !dbg !1617
  br i1 %cmp42, label %if.then.44, label %if.end.45, !dbg !1618

if.then.44:                                       ; preds = %if.end.34
  store i1 false, i1* %retval, !dbg !1619
  br label %return, !dbg !1619

if.end.45:                                        ; preds = %if.end.34
  %40 = load i64, i64* %i, align 8, !dbg !1620
  %41 = load i8*, i8** %s.addr, align 8, !dbg !1621
  %arrayidx46 = getelementptr inbounds i8, i8* %41, i64 %40, !dbg !1621
  %42 = load i8**, i8*** %hex_digest.addr, align 8, !dbg !1622
  store i8* %arrayidx46, i8** %42, align 8, !dbg !1623
  %43 = load i64, i64* @digest_hex_bytes, align 8, !dbg !1624
  %44 = load i64, i64* %i, align 8, !dbg !1625
  %add47 = add i64 %44, %43, !dbg !1625
  store i64 %add47, i64* %i, align 8, !dbg !1625
  %45 = load i64, i64* %i, align 8, !dbg !1626
  %46 = load i8*, i8** %s.addr, align 8, !dbg !1626
  %arrayidx48 = getelementptr inbounds i8, i8* %46, i64 %45, !dbg !1626
  %47 = load i8, i8* %arrayidx48, align 1, !dbg !1626
  %conv49 = sext i8 %47 to i32, !dbg !1626
  %cmp50 = icmp eq i32 %conv49, 32, !dbg !1626
  br i1 %cmp50, label %if.end.57, label %lor.lhs.false, !dbg !1626

lor.lhs.false:                                    ; preds = %if.end.45
  %48 = load i64, i64* %i, align 8, !dbg !1628
  %49 = load i8*, i8** %s.addr, align 8, !dbg !1628
  %arrayidx52 = getelementptr inbounds i8, i8* %49, i64 %48, !dbg !1628
  %50 = load i8, i8* %arrayidx52, align 1, !dbg !1628
  %conv53 = sext i8 %50 to i32, !dbg !1628
  %cmp54 = icmp eq i32 %conv53, 9, !dbg !1628
  br i1 %cmp54, label %if.end.57, label %if.then.56, !dbg !1630

if.then.56:                                       ; preds = %lor.lhs.false
  store i1 false, i1* %retval, !dbg !1631
  br label %return, !dbg !1631

if.end.57:                                        ; preds = %lor.lhs.false, %if.end.45
  %51 = load i64, i64* %i, align 8, !dbg !1632
  %inc58 = add i64 %51, 1, !dbg !1632
  store i64 %inc58, i64* %i, align 8, !dbg !1632
  %52 = load i8*, i8** %s.addr, align 8, !dbg !1633
  %arrayidx59 = getelementptr inbounds i8, i8* %52, i64 %51, !dbg !1633
  store i8 0, i8* %arrayidx59, align 1, !dbg !1634
  %53 = load i64, i64* %s_len.addr, align 8, !dbg !1635
  %54 = load i64, i64* %i, align 8, !dbg !1637
  %sub60 = sub i64 %53, %54, !dbg !1638
  %cmp61 = icmp eq i64 %sub60, 1, !dbg !1639
  br i1 %cmp61, label %if.then.72, label %lor.lhs.false.63, !dbg !1640

lor.lhs.false.63:                                 ; preds = %if.end.57
  %55 = load i64, i64* %i, align 8, !dbg !1641
  %56 = load i8*, i8** %s.addr, align 8, !dbg !1643
  %arrayidx64 = getelementptr inbounds i8, i8* %56, i64 %55, !dbg !1643
  %57 = load i8, i8* %arrayidx64, align 1, !dbg !1643
  %conv65 = sext i8 %57 to i32, !dbg !1643
  %cmp66 = icmp ne i32 %conv65, 32, !dbg !1644
  br i1 %cmp66, label %land.lhs.true, label %if.else, !dbg !1645

land.lhs.true:                                    ; preds = %lor.lhs.false.63
  %58 = load i64, i64* %i, align 8, !dbg !1646
  %59 = load i8*, i8** %s.addr, align 8, !dbg !1648
  %arrayidx68 = getelementptr inbounds i8, i8* %59, i64 %58, !dbg !1648
  %60 = load i8, i8* %arrayidx68, align 1, !dbg !1648
  %conv69 = sext i8 %60 to i32, !dbg !1648
  %cmp70 = icmp ne i32 %conv69, 42, !dbg !1649
  br i1 %cmp70, label %if.then.72, label %if.else, !dbg !1650

if.then.72:                                       ; preds = %land.lhs.true, %if.end.57
  %61 = load i32, i32* @bsd_reversed, align 4, !dbg !1651
  %cmp73 = icmp eq i32 %61, 0, !dbg !1654
  br i1 %cmp73, label %if.then.75, label %if.end.76, !dbg !1655

if.then.75:                                       ; preds = %if.then.72
  store i1 false, i1* %retval, !dbg !1656
  br label %return, !dbg !1656

if.end.76:                                        ; preds = %if.then.72
  store i32 1, i32* @bsd_reversed, align 4, !dbg !1657
  br label %if.end.86, !dbg !1658

if.else:                                          ; preds = %land.lhs.true, %lor.lhs.false.63
  %62 = load i32, i32* @bsd_reversed, align 4, !dbg !1659
  %cmp77 = icmp ne i32 %62, 1, !dbg !1661
  br i1 %cmp77, label %if.then.79, label %if.end.85, !dbg !1662

if.then.79:                                       ; preds = %if.else
  store i32 0, i32* @bsd_reversed, align 4, !dbg !1663
  %63 = load i64, i64* %i, align 8, !dbg !1665
  %inc80 = add i64 %63, 1, !dbg !1665
  store i64 %inc80, i64* %i, align 8, !dbg !1665
  %64 = load i8*, i8** %s.addr, align 8, !dbg !1666
  %arrayidx81 = getelementptr inbounds i8, i8* %64, i64 %63, !dbg !1666
  %65 = load i8, i8* %arrayidx81, align 1, !dbg !1666
  %conv82 = sext i8 %65 to i32, !dbg !1666
  %cmp83 = icmp eq i32 %conv82, 42, !dbg !1667
  %conv84 = zext i1 %cmp83 to i32, !dbg !1667
  %66 = load i32*, i32** %binary.addr, align 8, !dbg !1668
  store i32 %conv84, i32* %66, align 4, !dbg !1669
  br label %if.end.85, !dbg !1670

if.end.85:                                        ; preds = %if.then.79, %if.else
  br label %if.end.86

if.end.86:                                        ; preds = %if.end.85, %if.end.76
  %67 = load i64, i64* %i, align 8, !dbg !1671
  %68 = load i8*, i8** %s.addr, align 8, !dbg !1672
  %arrayidx87 = getelementptr inbounds i8, i8* %68, i64 %67, !dbg !1672
  %69 = load i8**, i8*** %file_name.addr, align 8, !dbg !1673
  store i8* %arrayidx87, i8** %69, align 8, !dbg !1674
  %70 = load i8, i8* %escaped_filename, align 1, !dbg !1675
  %tobool88 = trunc i8 %70 to i1, !dbg !1675
  br i1 %tobool88, label %if.then.89, label %if.end.95, !dbg !1677

if.then.89:                                       ; preds = %if.end.86
  %71 = load i64, i64* %i, align 8, !dbg !1678
  %72 = load i8*, i8** %s.addr, align 8, !dbg !1679
  %arrayidx90 = getelementptr inbounds i8, i8* %72, i64 %71, !dbg !1679
  %73 = load i64, i64* %s_len.addr, align 8, !dbg !1680
  %74 = load i64, i64* %i, align 8, !dbg !1681
  %sub91 = sub i64 %73, %74, !dbg !1682
  %call92 = call i8* @filename_unescape(i8* %arrayidx90, i64 %sub91), !dbg !1683
  %cmp93 = icmp ne i8* %call92, null, !dbg !1684
  store i1 %cmp93, i1* %retval, !dbg !1685
  br label %return, !dbg !1685

if.end.95:                                        ; preds = %if.end.86
  store i1 true, i1* %retval, !dbg !1686
  br label %return, !dbg !1686

return:                                           ; preds = %if.end.95, %if.then.89, %if.then.75, %if.then.56, %if.then.44, %if.then.26
  %75 = load i1, i1* %retval, !dbg !1687
  ret i1 %75, !dbg !1687
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @bsd_split_3(i8* %s, i64 %s_len, i8** %hex_digest, i8** %file_name, i1 zeroext %escaped_filename) #5 !dbg !1688 {
entry:
  %retval = alloca i1, align 1
  %s.addr = alloca i8*, align 8
  %s_len.addr = alloca i64, align 8
  %hex_digest.addr = alloca i8**, align 8
  %file_name.addr = alloca i8**, align 8
  %escaped_filename.addr = alloca i8, align 1
  %i = alloca i64, align 8
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !1691, metadata !DIExpression()), !dbg !1692
  store i64 %s_len, i64* %s_len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s_len.addr, metadata !1693, metadata !DIExpression()), !dbg !1694
  store i8** %hex_digest, i8*** %hex_digest.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %hex_digest.addr, metadata !1695, metadata !DIExpression()), !dbg !1696
  store i8** %file_name, i8*** %file_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %file_name.addr, metadata !1697, metadata !DIExpression()), !dbg !1698
  %frombool = zext i1 %escaped_filename to i8
  store i8 %frombool, i8* %escaped_filename.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %escaped_filename.addr, metadata !1699, metadata !DIExpression()), !dbg !1700
  call void @llvm.dbg.declare(metadata i64* %i, metadata !1701, metadata !DIExpression()), !dbg !1702
  %0 = load i64, i64* %s_len.addr, align 8, !dbg !1703
  %cmp = icmp eq i64 %0, 0, !dbg !1705
  br i1 %cmp, label %if.then, label %if.end, !dbg !1706

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, !dbg !1707
  br label %return, !dbg !1707

if.end:                                           ; preds = %entry
  %1 = load i64, i64* %s_len.addr, align 8, !dbg !1708
  %sub = sub i64 %1, 1, !dbg !1709
  store i64 %sub, i64* %i, align 8, !dbg !1710
  br label %while.cond, !dbg !1711

while.cond:                                       ; preds = %while.body, %if.end
  %2 = load i64, i64* %i, align 8, !dbg !1712
  %tobool = icmp ne i64 %2, 0, !dbg !1712
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !1715

land.rhs:                                         ; preds = %while.cond
  %3 = load i64, i64* %i, align 8, !dbg !1716
  %4 = load i8*, i8** %s.addr, align 8, !dbg !1718
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 %3, !dbg !1718
  %5 = load i8, i8* %arrayidx, align 1, !dbg !1718
  %conv = sext i8 %5 to i32, !dbg !1718
  %cmp1 = icmp ne i32 %conv, 41, !dbg !1719
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %6 = phi i1 [ false, %while.cond ], [ %cmp1, %land.rhs ]
  br i1 %6, label %while.body, label %while.end, !dbg !1720

while.body:                                       ; preds = %land.end
  %7 = load i64, i64* %i, align 8, !dbg !1722
  %dec = add i64 %7, -1, !dbg !1722
  store i64 %dec, i64* %i, align 8, !dbg !1722
  br label %while.cond, !dbg !1711

while.end:                                        ; preds = %land.end
  %8 = load i64, i64* %i, align 8, !dbg !1723
  %9 = load i8*, i8** %s.addr, align 8, !dbg !1725
  %arrayidx3 = getelementptr inbounds i8, i8* %9, i64 %8, !dbg !1725
  %10 = load i8, i8* %arrayidx3, align 1, !dbg !1725
  %conv4 = sext i8 %10 to i32, !dbg !1725
  %cmp5 = icmp ne i32 %conv4, 41, !dbg !1726
  br i1 %cmp5, label %if.then.7, label %if.end.8, !dbg !1727

if.then.7:                                        ; preds = %while.end
  store i1 false, i1* %retval, !dbg !1728
  br label %return, !dbg !1728

if.end.8:                                         ; preds = %while.end
  %11 = load i8*, i8** %s.addr, align 8, !dbg !1729
  %12 = load i8**, i8*** %file_name.addr, align 8, !dbg !1730
  store i8* %11, i8** %12, align 8, !dbg !1731
  %13 = load i8, i8* %escaped_filename.addr, align 1, !dbg !1732
  %tobool9 = trunc i8 %13 to i1, !dbg !1732
  br i1 %tobool9, label %land.lhs.true, label %if.end.14, !dbg !1734

land.lhs.true:                                    ; preds = %if.end.8
  %14 = load i8*, i8** %s.addr, align 8, !dbg !1735
  %15 = load i64, i64* %i, align 8, !dbg !1737
  %call = call i8* @filename_unescape(i8* %14, i64 %15), !dbg !1738
  %cmp11 = icmp eq i8* %call, null, !dbg !1739
  br i1 %cmp11, label %if.then.13, label %if.end.14, !dbg !1740

if.then.13:                                       ; preds = %land.lhs.true
  store i1 false, i1* %retval, !dbg !1741
  br label %return, !dbg !1741

if.end.14:                                        ; preds = %land.lhs.true, %if.end.8
  %16 = load i64, i64* %i, align 8, !dbg !1742
  %inc = add i64 %16, 1, !dbg !1742
  store i64 %inc, i64* %i, align 8, !dbg !1742
  %17 = load i8*, i8** %s.addr, align 8, !dbg !1743
  %arrayidx15 = getelementptr inbounds i8, i8* %17, i64 %16, !dbg !1743
  store i8 0, i8* %arrayidx15, align 1, !dbg !1744
  br label %while.cond.16, !dbg !1745

while.cond.16:                                    ; preds = %while.body.25, %if.end.14
  %18 = load i64, i64* %i, align 8, !dbg !1746
  %19 = load i8*, i8** %s.addr, align 8, !dbg !1746
  %arrayidx17 = getelementptr inbounds i8, i8* %19, i64 %18, !dbg !1746
  %20 = load i8, i8* %arrayidx17, align 1, !dbg !1746
  %conv18 = sext i8 %20 to i32, !dbg !1746
  %cmp19 = icmp eq i32 %conv18, 32, !dbg !1746
  br i1 %cmp19, label %lor.end, label %lor.rhs, !dbg !1746

lor.rhs:                                          ; preds = %while.cond.16
  %21 = load i64, i64* %i, align 8, !dbg !1748
  %22 = load i8*, i8** %s.addr, align 8, !dbg !1748
  %arrayidx21 = getelementptr inbounds i8, i8* %22, i64 %21, !dbg !1748
  %23 = load i8, i8* %arrayidx21, align 1, !dbg !1748
  %conv22 = sext i8 %23 to i32, !dbg !1748
  %cmp23 = icmp eq i32 %conv22, 9, !dbg !1748
  br label %lor.end, !dbg !1748

lor.end:                                          ; preds = %lor.rhs, %while.cond.16
  %24 = phi i1 [ true, %while.cond.16 ], [ %cmp23, %lor.rhs ]
  br i1 %24, label %while.body.25, label %while.end.27, !dbg !1749

while.body.25:                                    ; preds = %lor.end
  %25 = load i64, i64* %i, align 8, !dbg !1751
  %inc26 = add i64 %25, 1, !dbg !1751
  store i64 %inc26, i64* %i, align 8, !dbg !1751
  br label %while.cond.16, !dbg !1745

while.end.27:                                     ; preds = %lor.end
  %26 = load i64, i64* %i, align 8, !dbg !1752
  %27 = load i8*, i8** %s.addr, align 8, !dbg !1754
  %arrayidx28 = getelementptr inbounds i8, i8* %27, i64 %26, !dbg !1754
  %28 = load i8, i8* %arrayidx28, align 1, !dbg !1754
  %conv29 = sext i8 %28 to i32, !dbg !1754
  %cmp30 = icmp ne i32 %conv29, 61, !dbg !1755
  br i1 %cmp30, label %if.then.32, label %if.end.33, !dbg !1756

if.then.32:                                       ; preds = %while.end.27
  store i1 false, i1* %retval, !dbg !1757
  br label %return, !dbg !1757

if.end.33:                                        ; preds = %while.end.27
  %29 = load i64, i64* %i, align 8, !dbg !1758
  %inc34 = add i64 %29, 1, !dbg !1758
  store i64 %inc34, i64* %i, align 8, !dbg !1758
  br label %while.cond.35, !dbg !1759

while.cond.35:                                    ; preds = %while.body.46, %if.end.33
  %30 = load i64, i64* %i, align 8, !dbg !1760
  %31 = load i8*, i8** %s.addr, align 8, !dbg !1760
  %arrayidx36 = getelementptr inbounds i8, i8* %31, i64 %30, !dbg !1760
  %32 = load i8, i8* %arrayidx36, align 1, !dbg !1760
  %conv37 = sext i8 %32 to i32, !dbg !1760
  %cmp38 = icmp eq i32 %conv37, 32, !dbg !1760
  br i1 %cmp38, label %lor.end.45, label %lor.rhs.40, !dbg !1760

lor.rhs.40:                                       ; preds = %while.cond.35
  %33 = load i64, i64* %i, align 8, !dbg !1761
  %34 = load i8*, i8** %s.addr, align 8, !dbg !1761
  %arrayidx41 = getelementptr inbounds i8, i8* %34, i64 %33, !dbg !1761
  %35 = load i8, i8* %arrayidx41, align 1, !dbg !1761
  %conv42 = sext i8 %35 to i32, !dbg !1761
  %cmp43 = icmp eq i32 %conv42, 9, !dbg !1761
  br label %lor.end.45, !dbg !1761

lor.end.45:                                       ; preds = %lor.rhs.40, %while.cond.35
  %36 = phi i1 [ true, %while.cond.35 ], [ %cmp43, %lor.rhs.40 ]
  br i1 %36, label %while.body.46, label %while.end.48, !dbg !1762

while.body.46:                                    ; preds = %lor.end.45
  %37 = load i64, i64* %i, align 8, !dbg !1763
  %inc47 = add i64 %37, 1, !dbg !1763
  store i64 %inc47, i64* %i, align 8, !dbg !1763
  br label %while.cond.35, !dbg !1759

while.end.48:                                     ; preds = %lor.end.45
  %38 = load i64, i64* %i, align 8, !dbg !1764
  %39 = load i8*, i8** %s.addr, align 8, !dbg !1765
  %arrayidx49 = getelementptr inbounds i8, i8* %39, i64 %38, !dbg !1765
  %40 = load i8**, i8*** %hex_digest.addr, align 8, !dbg !1766
  store i8* %arrayidx49, i8** %40, align 8, !dbg !1767
  store i1 true, i1* %retval, !dbg !1768
  br label %return, !dbg !1768

return:                                           ; preds = %while.end.48, %if.then.32, %if.then.13, %if.then.7, %if.then
  %41 = load i1, i1* %retval, !dbg !1769
  ret i1 %41, !dbg !1769
}

; Function Attrs: nounwind uwtable
define internal i8* @filename_unescape(i8* %s, i64 %s_len) #5 !dbg !1770 {
entry:
  %retval = alloca i8*, align 8
  %s.addr = alloca i8*, align 8
  %s_len.addr = alloca i64, align 8
  %dst = alloca i8*, align 8
  %i = alloca i64, align 8
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !1773, metadata !DIExpression()), !dbg !1774
  store i64 %s_len, i64* %s_len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s_len.addr, metadata !1775, metadata !DIExpression()), !dbg !1776
  call void @llvm.dbg.declare(metadata i8** %dst, metadata !1777, metadata !DIExpression()), !dbg !1778
  %0 = load i8*, i8** %s.addr, align 8, !dbg !1779
  store i8* %0, i8** %dst, align 8, !dbg !1778
  call void @llvm.dbg.declare(metadata i64* %i, metadata !1780, metadata !DIExpression()), !dbg !1782
  store i64 0, i64* %i, align 8, !dbg !1782
  br label %for.cond, !dbg !1783

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i64, i64* %i, align 8, !dbg !1784
  %2 = load i64, i64* %s_len.addr, align 8, !dbg !1788
  %cmp = icmp ult i64 %1, %2, !dbg !1789
  br i1 %cmp, label %for.body, label %for.end, !dbg !1790

for.body:                                         ; preds = %for.cond
  %3 = load i64, i64* %i, align 8, !dbg !1791
  %4 = load i8*, i8** %s.addr, align 8, !dbg !1793
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 %3, !dbg !1793
  %5 = load i8, i8* %arrayidx, align 1, !dbg !1793
  %conv = sext i8 %5 to i32, !dbg !1793
  switch i32 %conv, label %sw.default.9 [
    i32 92, label %sw.bb
    i32 0, label %sw.bb.8
  ], !dbg !1794

sw.bb:                                            ; preds = %for.body
  %6 = load i64, i64* %i, align 8, !dbg !1795
  %7 = load i64, i64* %s_len.addr, align 8, !dbg !1798
  %sub = sub i64 %7, 1, !dbg !1799
  %cmp1 = icmp eq i64 %6, %sub, !dbg !1800
  br i1 %cmp1, label %if.then, label %if.end, !dbg !1801

if.then:                                          ; preds = %sw.bb
  store i8* null, i8** %retval, !dbg !1802
  br label %return, !dbg !1802

if.end:                                           ; preds = %sw.bb
  %8 = load i64, i64* %i, align 8, !dbg !1804
  %inc = add i64 %8, 1, !dbg !1804
  store i64 %inc, i64* %i, align 8, !dbg !1804
  %9 = load i64, i64* %i, align 8, !dbg !1805
  %10 = load i8*, i8** %s.addr, align 8, !dbg !1806
  %arrayidx3 = getelementptr inbounds i8, i8* %10, i64 %9, !dbg !1806
  %11 = load i8, i8* %arrayidx3, align 1, !dbg !1806
  %conv4 = sext i8 %11 to i32, !dbg !1806
  switch i32 %conv4, label %sw.default [
    i32 110, label %sw.bb.5
    i32 92, label %sw.bb.6
  ], !dbg !1807

sw.bb.5:                                          ; preds = %if.end
  %12 = load i8*, i8** %dst, align 8, !dbg !1808
  %incdec.ptr = getelementptr inbounds i8, i8* %12, i32 1, !dbg !1808
  store i8* %incdec.ptr, i8** %dst, align 8, !dbg !1808
  store i8 10, i8* %12, align 1, !dbg !1810
  br label %sw.epilog, !dbg !1811

sw.bb.6:                                          ; preds = %if.end
  %13 = load i8*, i8** %dst, align 8, !dbg !1812
  %incdec.ptr7 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !1812
  store i8* %incdec.ptr7, i8** %dst, align 8, !dbg !1812
  store i8 92, i8* %13, align 1, !dbg !1813
  br label %sw.epilog, !dbg !1814

sw.default:                                       ; preds = %if.end
  store i8* null, i8** %retval, !dbg !1815
  br label %return, !dbg !1815

sw.epilog:                                        ; preds = %sw.bb.6, %sw.bb.5
  br label %sw.epilog.12, !dbg !1816

sw.bb.8:                                          ; preds = %for.body
  store i8* null, i8** %retval, !dbg !1817
  br label %return, !dbg !1817

sw.default.9:                                     ; preds = %for.body
  %14 = load i64, i64* %i, align 8, !dbg !1818
  %15 = load i8*, i8** %s.addr, align 8, !dbg !1819
  %arrayidx10 = getelementptr inbounds i8, i8* %15, i64 %14, !dbg !1819
  %16 = load i8, i8* %arrayidx10, align 1, !dbg !1819
  %17 = load i8*, i8** %dst, align 8, !dbg !1820
  %incdec.ptr11 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !1820
  store i8* %incdec.ptr11, i8** %dst, align 8, !dbg !1820
  store i8 %16, i8* %17, align 1, !dbg !1821
  br label %sw.epilog.12, !dbg !1822

sw.epilog.12:                                     ; preds = %sw.default.9, %sw.epilog
  br label %for.inc, !dbg !1823

for.inc:                                          ; preds = %sw.epilog.12
  %18 = load i64, i64* %i, align 8, !dbg !1824
  %inc13 = add i64 %18, 1, !dbg !1824
  store i64 %inc13, i64* %i, align 8, !dbg !1824
  br label %for.cond, !dbg !1825

for.end:                                          ; preds = %for.cond
  %19 = load i8*, i8** %dst, align 8, !dbg !1826
  %20 = load i8*, i8** %s.addr, align 8, !dbg !1828
  %21 = load i64, i64* %s_len.addr, align 8, !dbg !1829
  %add.ptr = getelementptr inbounds i8, i8* %20, i64 %21, !dbg !1830
  %cmp14 = icmp ult i8* %19, %add.ptr, !dbg !1831
  br i1 %cmp14, label %if.then.16, label %if.end.17, !dbg !1832

if.then.16:                                       ; preds = %for.end
  %22 = load i8*, i8** %dst, align 8, !dbg !1833
  store i8 0, i8* %22, align 1, !dbg !1834
  br label %if.end.17, !dbg !1835

if.end.17:                                        ; preds = %if.then.16, %for.end
  %23 = load i8*, i8** %s.addr, align 8, !dbg !1836
  store i8* %23, i8** %retval, !dbg !1837
  br label %return, !dbg !1837

return:                                           ; preds = %if.end.17, %sw.bb.8, %sw.default, %if.then
  %24 = load i8*, i8** %retval, !dbg !1838
  ret i8* %24, !dbg !1838
}

; Function Attrs: nounwind readonly uwtable
define internal zeroext i1 @hex_digits(i8* %s) #9 !dbg !1839 {
entry:
  %retval = alloca i1, align 1
  %s.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !1842, metadata !DIExpression()), !dbg !1843
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1844, metadata !DIExpression()), !dbg !1845
  store i32 0, i32* %i, align 4, !dbg !1846
  br label %for.cond, !dbg !1848

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !1849
  %conv = zext i32 %0 to i64, !dbg !1849
  %1 = load i64, i64* @digest_hex_bytes, align 8, !dbg !1853
  %cmp = icmp ult i64 %conv, %1, !dbg !1854
  br i1 %cmp, label %for.body, label %for.end, !dbg !1855

for.body:                                         ; preds = %for.cond
  %2 = load i8*, i8** %s.addr, align 8, !dbg !1856
  %3 = load i8, i8* %2, align 1, !dbg !1856
  %conv2 = zext i8 %3 to i32, !dbg !1856
  %idxprom = sext i32 %conv2 to i64, !dbg !1856
  %call = call i16** @__ctype_b_loc() #17, !dbg !1856
  %4 = load i16*, i16** %call, align 8, !dbg !1856
  %arrayidx = getelementptr inbounds i16, i16* %4, i64 %idxprom, !dbg !1856
  %5 = load i16, i16* %arrayidx, align 2, !dbg !1856
  %conv3 = zext i16 %5 to i32, !dbg !1856
  %and = and i32 %conv3, 4096, !dbg !1856
  %tobool = icmp ne i32 %and, 0, !dbg !1856
  br i1 %tobool, label %if.end, label %if.then, !dbg !1859

if.then:                                          ; preds = %for.body
  store i1 false, i1* %retval, !dbg !1860
  br label %return, !dbg !1860

if.end:                                           ; preds = %for.body
  %6 = load i8*, i8** %s.addr, align 8, !dbg !1861
  %incdec.ptr = getelementptr inbounds i8, i8* %6, i32 1, !dbg !1861
  store i8* %incdec.ptr, i8** %s.addr, align 8, !dbg !1861
  br label %for.inc, !dbg !1862

for.inc:                                          ; preds = %if.end
  %7 = load i32, i32* %i, align 4, !dbg !1863
  %inc = add i32 %7, 1, !dbg !1863
  store i32 %inc, i32* %i, align 4, !dbg !1863
  br label %for.cond, !dbg !1864

for.end:                                          ; preds = %for.cond
  %8 = load i8*, i8** %s.addr, align 8, !dbg !1865
  %9 = load i8, i8* %8, align 1, !dbg !1866
  %conv4 = zext i8 %9 to i32, !dbg !1866
  %cmp5 = icmp eq i32 %conv4, 0, !dbg !1867
  store i1 %cmp5, i1* %retval, !dbg !1868
  br label %return, !dbg !1868

return:                                           ; preds = %for.end, %if.then
  %10 = load i1, i1* %retval, !dbg !1869
  ret i1 %10, !dbg !1869
}

; Function Attrs: nounwind uwtable
define internal void @close_stdout_set_file_name(i8* %file) #5 !dbg !1870 {
entry:
  %file.addr = alloca i8*, align 8
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !1871, metadata !DIExpression()), !dbg !1872
  %0 = load i8*, i8** %file.addr, align 8, !dbg !1873
  store i8* %0, i8** @file_name, align 8, !dbg !1874
  ret void, !dbg !1875
}

; Function Attrs: nounwind uwtable
define internal void @close_stdout_set_ignore_EPIPE(i1 zeroext %ignore) #5 !dbg !1876 {
entry:
  %ignore.addr = alloca i8, align 1
  %frombool = zext i1 %ignore to i8
  store i8 %frombool, i8* %ignore.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ignore.addr, metadata !1879, metadata !DIExpression()), !dbg !1880
  %0 = load i8, i8* %ignore.addr, align 1, !dbg !1881
  %tobool = trunc i8 %0 to i1, !dbg !1881
  %frombool1 = zext i1 %tobool to i8, !dbg !1882
  store i8 %frombool1, i8* @ignore_EPIPE, align 1, !dbg !1882
  ret void, !dbg !1883
}

; Function Attrs: nounwind uwtable
define internal void @close_stdout() #5 !dbg !1884 {
entry:
  %write_error = alloca i8*, align 8
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1885
  %call = call i32 @close_stream(%struct._IO_FILE* %0), !dbg !1887
  %cmp = icmp ne i32 %call, 0, !dbg !1888
  br i1 %cmp, label %land.lhs.true, label %if.end.10, !dbg !1889

land.lhs.true:                                    ; preds = %entry
  %1 = load i8, i8* @ignore_EPIPE, align 1, !dbg !1890
  %tobool = trunc i8 %1 to i1, !dbg !1890
  br i1 %tobool, label %land.lhs.true.1, label %if.then, !dbg !1892

land.lhs.true.1:                                  ; preds = %land.lhs.true
  %call2 = call i32* @__errno_location() #17, !dbg !1893
  %2 = load i32, i32* %call2, align 4, !dbg !1893
  %cmp3 = icmp eq i32 %2, 32, !dbg !1895
  br i1 %cmp3, label %if.end.10, label %if.then, !dbg !1896

if.then:                                          ; preds = %land.lhs.true.1, %land.lhs.true
  call void @llvm.dbg.declare(metadata i8** %write_error, metadata !1897, metadata !DIExpression()), !dbg !1899
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.79, i32 0, i32 0)) #11, !dbg !1900
  store i8* %call4, i8** %write_error, align 8, !dbg !1899
  %3 = load i8*, i8** @file_name, align 8, !dbg !1901
  %tobool5 = icmp ne i8* %3, null, !dbg !1901
  br i1 %tobool5, label %if.then.6, label %if.else, !dbg !1903

if.then.6:                                        ; preds = %if.then
  %call7 = call i32* @__errno_location() #17, !dbg !1904
  %4 = load i32, i32* %call7, align 4, !dbg !1904
  %5 = load i8*, i8** @file_name, align 8, !dbg !1905
  %call8 = call i8* @quotearg_colon(i8* %5), !dbg !1906
  %6 = load i8*, i8** %write_error, align 8, !dbg !1907
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.80, i32 0, i32 0), i8* %call8, i8* %6), !dbg !1908
  br label %if.end, !dbg !1908

if.else:                                          ; preds = %if.then
  %call9 = call i32* @__errno_location() #17, !dbg !1909
  %7 = load i32, i32* %call9, align 4, !dbg !1909
  %8 = load i8*, i8** %write_error, align 8, !dbg !1910
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.81, i32 0, i32 0), i8* %8), !dbg !1911
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.6
  %9 = load volatile i32, i32* @exit_failure, align 4, !dbg !1912
  call void @_exit(i32 %9) #15, !dbg !1913
  unreachable, !dbg !1913

if.end.10:                                        ; preds = %land.lhs.true.1, %entry
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1914
  %call11 = call i32 @close_stream(%struct._IO_FILE* %10), !dbg !1916
  %cmp12 = icmp ne i32 %call11, 0, !dbg !1917
  br i1 %cmp12, label %if.then.13, label %if.end.14, !dbg !1918

if.then.13:                                       ; preds = %if.end.10
  %11 = load volatile i32, i32* @exit_failure, align 4, !dbg !1919
  call void @_exit(i32 %11) #15, !dbg !1920
  unreachable, !dbg !1920

if.end.14:                                        ; preds = %if.end.10
  ret void, !dbg !1921
}

; Function Attrs: noreturn
declare void @_exit(i32) #10

; Function Attrs: nounwind uwtable
define internal void @sha512_init_ctx(%struct.sha512_ctx* %ctx) #5 !dbg !1922 {
entry:
  %ctx.addr = alloca %struct.sha512_ctx*, align 8
  store %struct.sha512_ctx* %ctx, %struct.sha512_ctx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sha512_ctx** %ctx.addr, metadata !1940, metadata !DIExpression()), !dbg !1941
  %0 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !1942
  %state = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %0, i32 0, i32 0, !dbg !1943
  %arrayidx = getelementptr inbounds [8 x i64], [8 x i64]* %state, i32 0, i64 0, !dbg !1942
  store i64 7640891576956012808, i64* %arrayidx, align 8, !dbg !1944
  %1 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !1945
  %state1 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %1, i32 0, i32 0, !dbg !1946
  %arrayidx2 = getelementptr inbounds [8 x i64], [8 x i64]* %state1, i32 0, i64 1, !dbg !1945
  store i64 -4942790177534073029, i64* %arrayidx2, align 8, !dbg !1947
  %2 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !1948
  %state3 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %2, i32 0, i32 0, !dbg !1949
  %arrayidx4 = getelementptr inbounds [8 x i64], [8 x i64]* %state3, i32 0, i64 2, !dbg !1948
  store i64 4354685564936845355, i64* %arrayidx4, align 8, !dbg !1950
  %3 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !1951
  %state5 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %3, i32 0, i32 0, !dbg !1952
  %arrayidx6 = getelementptr inbounds [8 x i64], [8 x i64]* %state5, i32 0, i64 3, !dbg !1951
  store i64 -6534734903238641935, i64* %arrayidx6, align 8, !dbg !1953
  %4 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !1954
  %state7 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %4, i32 0, i32 0, !dbg !1955
  %arrayidx8 = getelementptr inbounds [8 x i64], [8 x i64]* %state7, i32 0, i64 4, !dbg !1954
  store i64 5840696475078001361, i64* %arrayidx8, align 8, !dbg !1956
  %5 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !1957
  %state9 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %5, i32 0, i32 0, !dbg !1958
  %arrayidx10 = getelementptr inbounds [8 x i64], [8 x i64]* %state9, i32 0, i64 5, !dbg !1957
  store i64 -7276294671716946913, i64* %arrayidx10, align 8, !dbg !1959
  %6 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !1960
  %state11 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %6, i32 0, i32 0, !dbg !1961
  %arrayidx12 = getelementptr inbounds [8 x i64], [8 x i64]* %state11, i32 0, i64 6, !dbg !1960
  store i64 2270897969802886507, i64* %arrayidx12, align 8, !dbg !1962
  %7 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !1963
  %state13 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %7, i32 0, i32 0, !dbg !1964
  %arrayidx14 = getelementptr inbounds [8 x i64], [8 x i64]* %state13, i32 0, i64 7, !dbg !1963
  store i64 6620516959819538809, i64* %arrayidx14, align 8, !dbg !1965
  %8 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !1966
  %total = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %8, i32 0, i32 1, !dbg !1967
  %arrayidx15 = getelementptr inbounds [2 x i64], [2 x i64]* %total, i32 0, i64 1, !dbg !1966
  store i64 0, i64* %arrayidx15, align 8, !dbg !1968
  %9 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !1969
  %total16 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %9, i32 0, i32 1, !dbg !1970
  %arrayidx17 = getelementptr inbounds [2 x i64], [2 x i64]* %total16, i32 0, i64 0, !dbg !1969
  store i64 0, i64* %arrayidx17, align 8, !dbg !1971
  %10 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !1972
  %buflen = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %10, i32 0, i32 2, !dbg !1973
  store i64 0, i64* %buflen, align 8, !dbg !1974
  ret void, !dbg !1975
}

; Function Attrs: nounwind uwtable
define internal void @sha384_init_ctx(%struct.sha512_ctx* %ctx) #5 !dbg !1976 {
entry:
  %ctx.addr = alloca %struct.sha512_ctx*, align 8
  store %struct.sha512_ctx* %ctx, %struct.sha512_ctx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sha512_ctx** %ctx.addr, metadata !1977, metadata !DIExpression()), !dbg !1978
  %0 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !1979
  %state = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %0, i32 0, i32 0, !dbg !1980
  %arrayidx = getelementptr inbounds [8 x i64], [8 x i64]* %state, i32 0, i64 0, !dbg !1979
  store i64 -3766243637369397544, i64* %arrayidx, align 8, !dbg !1981
  %1 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !1982
  %state1 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %1, i32 0, i32 0, !dbg !1983
  %arrayidx2 = getelementptr inbounds [8 x i64], [8 x i64]* %state1, i32 0, i64 1, !dbg !1982
  store i64 7105036623409894663, i64* %arrayidx2, align 8, !dbg !1984
  %2 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !1985
  %state3 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %2, i32 0, i32 0, !dbg !1986
  %arrayidx4 = getelementptr inbounds [8 x i64], [8 x i64]* %state3, i32 0, i64 2, !dbg !1985
  store i64 -7973340178411365097, i64* %arrayidx4, align 8, !dbg !1987
  %3 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !1988
  %state5 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %3, i32 0, i32 0, !dbg !1989
  %arrayidx6 = getelementptr inbounds [8 x i64], [8 x i64]* %state5, i32 0, i64 3, !dbg !1988
  store i64 1526699215303891257, i64* %arrayidx6, align 8, !dbg !1990
  %4 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !1991
  %state7 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %4, i32 0, i32 0, !dbg !1992
  %arrayidx8 = getelementptr inbounds [8 x i64], [8 x i64]* %state7, i32 0, i64 4, !dbg !1991
  store i64 7436329637833083697, i64* %arrayidx8, align 8, !dbg !1993
  %5 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !1994
  %state9 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %5, i32 0, i32 0, !dbg !1995
  %arrayidx10 = getelementptr inbounds [8 x i64], [8 x i64]* %state9, i32 0, i64 5, !dbg !1994
  store i64 -8163818279084223215, i64* %arrayidx10, align 8, !dbg !1996
  %6 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !1997
  %state11 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %6, i32 0, i32 0, !dbg !1998
  %arrayidx12 = getelementptr inbounds [8 x i64], [8 x i64]* %state11, i32 0, i64 6, !dbg !1997
  store i64 -2662702644619276377, i64* %arrayidx12, align 8, !dbg !1999
  %7 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2000
  %state13 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %7, i32 0, i32 0, !dbg !2001
  %arrayidx14 = getelementptr inbounds [8 x i64], [8 x i64]* %state13, i32 0, i64 7, !dbg !2000
  store i64 5167115440072839076, i64* %arrayidx14, align 8, !dbg !2002
  %8 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2003
  %total = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %8, i32 0, i32 1, !dbg !2004
  %arrayidx15 = getelementptr inbounds [2 x i64], [2 x i64]* %total, i32 0, i64 1, !dbg !2003
  store i64 0, i64* %arrayidx15, align 8, !dbg !2005
  %9 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2006
  %total16 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %9, i32 0, i32 1, !dbg !2007
  %arrayidx17 = getelementptr inbounds [2 x i64], [2 x i64]* %total16, i32 0, i64 0, !dbg !2006
  store i64 0, i64* %arrayidx17, align 8, !dbg !2008
  %10 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2009
  %buflen = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %10, i32 0, i32 2, !dbg !2010
  store i64 0, i64* %buflen, align 8, !dbg !2011
  ret void, !dbg !2012
}

; Function Attrs: nounwind uwtable
define internal i8* @sha512_read_ctx(%struct.sha512_ctx* %ctx, i8* %resbuf) #5 !dbg !2013 {
entry:
  %ctx.addr = alloca %struct.sha512_ctx*, align 8
  %resbuf.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %r = alloca i8*, align 8
  store %struct.sha512_ctx* %ctx, %struct.sha512_ctx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sha512_ctx** %ctx.addr, metadata !2018, metadata !DIExpression()), !dbg !2019
  store i8* %resbuf, i8** %resbuf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %resbuf.addr, metadata !2020, metadata !DIExpression()), !dbg !2021
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2022, metadata !DIExpression()), !dbg !2023
  call void @llvm.dbg.declare(metadata i8** %r, metadata !2024, metadata !DIExpression()), !dbg !2025
  %0 = load i8*, i8** %resbuf.addr, align 8, !dbg !2026
  store i8* %0, i8** %r, align 8, !dbg !2025
  store i32 0, i32* %i, align 4, !dbg !2027
  br label %for.cond, !dbg !2029

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !2030
  %cmp = icmp slt i32 %1, 8, !dbg !2034
  br i1 %cmp, label %for.body, label %for.end, !dbg !2035

for.body:                                         ; preds = %for.cond
  %2 = load i8*, i8** %r, align 8, !dbg !2036
  %3 = load i32, i32* %i, align 4, !dbg !2037
  %conv = sext i32 %3 to i64, !dbg !2037
  %mul = mul i64 %conv, 8, !dbg !2038
  %add.ptr = getelementptr inbounds i8, i8* %2, i64 %mul, !dbg !2039
  %4 = load i32, i32* %i, align 4, !dbg !2040
  %idxprom = sext i32 %4 to i64, !dbg !2040
  %5 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2040
  %state = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %5, i32 0, i32 0, !dbg !2040
  %arrayidx = getelementptr inbounds [8 x i64], [8 x i64]* %state, i32 0, i64 %idxprom, !dbg !2040
  %6 = load i64, i64* %arrayidx, align 8, !dbg !2040
  %shl = shl i64 %6, 56, !dbg !2040
  %7 = load i32, i32* %i, align 4, !dbg !2040
  %idxprom1 = sext i32 %7 to i64, !dbg !2040
  %8 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2040
  %state2 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %8, i32 0, i32 0, !dbg !2040
  %arrayidx3 = getelementptr inbounds [8 x i64], [8 x i64]* %state2, i32 0, i64 %idxprom1, !dbg !2040
  %9 = load i64, i64* %arrayidx3, align 8, !dbg !2040
  %and = and i64 %9, 65280, !dbg !2040
  %shl4 = shl i64 %and, 40, !dbg !2040
  %or = or i64 %shl, %shl4, !dbg !2040
  %10 = load i32, i32* %i, align 4, !dbg !2040
  %idxprom5 = sext i32 %10 to i64, !dbg !2040
  %11 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2040
  %state6 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %11, i32 0, i32 0, !dbg !2040
  %arrayidx7 = getelementptr inbounds [8 x i64], [8 x i64]* %state6, i32 0, i64 %idxprom5, !dbg !2040
  %12 = load i64, i64* %arrayidx7, align 8, !dbg !2040
  %and8 = and i64 %12, 16711680, !dbg !2040
  %shl9 = shl i64 %and8, 24, !dbg !2040
  %13 = load i32, i32* %i, align 4, !dbg !2040
  %idxprom10 = sext i32 %13 to i64, !dbg !2040
  %14 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2040
  %state11 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %14, i32 0, i32 0, !dbg !2040
  %arrayidx12 = getelementptr inbounds [8 x i64], [8 x i64]* %state11, i32 0, i64 %idxprom10, !dbg !2040
  %15 = load i64, i64* %arrayidx12, align 8, !dbg !2040
  %and13 = and i64 %15, 4278190080, !dbg !2040
  %shl14 = shl i64 %and13, 8, !dbg !2040
  %or15 = or i64 %shl9, %shl14, !dbg !2040
  %or16 = or i64 %or, %or15, !dbg !2040
  %16 = load i32, i32* %i, align 4, !dbg !2040
  %idxprom17 = sext i32 %16 to i64, !dbg !2040
  %17 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2040
  %state18 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %17, i32 0, i32 0, !dbg !2040
  %arrayidx19 = getelementptr inbounds [8 x i64], [8 x i64]* %state18, i32 0, i64 %idxprom17, !dbg !2040
  %18 = load i64, i64* %arrayidx19, align 8, !dbg !2040
  %shr = lshr i64 %18, 8, !dbg !2040
  %and20 = and i64 %shr, 4278190080, !dbg !2040
  %19 = load i32, i32* %i, align 4, !dbg !2040
  %idxprom21 = sext i32 %19 to i64, !dbg !2040
  %20 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2040
  %state22 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %20, i32 0, i32 0, !dbg !2040
  %arrayidx23 = getelementptr inbounds [8 x i64], [8 x i64]* %state22, i32 0, i64 %idxprom21, !dbg !2040
  %21 = load i64, i64* %arrayidx23, align 8, !dbg !2040
  %shr24 = lshr i64 %21, 24, !dbg !2040
  %and25 = and i64 %shr24, 16711680, !dbg !2040
  %or26 = or i64 %and20, %and25, !dbg !2040
  %22 = load i32, i32* %i, align 4, !dbg !2040
  %idxprom27 = sext i32 %22 to i64, !dbg !2040
  %23 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2040
  %state28 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %23, i32 0, i32 0, !dbg !2040
  %arrayidx29 = getelementptr inbounds [8 x i64], [8 x i64]* %state28, i32 0, i64 %idxprom27, !dbg !2040
  %24 = load i64, i64* %arrayidx29, align 8, !dbg !2040
  %shr30 = lshr i64 %24, 40, !dbg !2040
  %and31 = and i64 %shr30, 65280, !dbg !2040
  %25 = load i32, i32* %i, align 4, !dbg !2040
  %idxprom32 = sext i32 %25 to i64, !dbg !2040
  %26 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2040
  %state33 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %26, i32 0, i32 0, !dbg !2040
  %arrayidx34 = getelementptr inbounds [8 x i64], [8 x i64]* %state33, i32 0, i64 %idxprom32, !dbg !2040
  %27 = load i64, i64* %arrayidx34, align 8, !dbg !2040
  %shr35 = lshr i64 %27, 56, !dbg !2040
  %or36 = or i64 %and31, %shr35, !dbg !2040
  %or37 = or i64 %or26, %or36, !dbg !2040
  %or38 = or i64 %or16, %or37, !dbg !2040
  call void @set_uint64(i8* %add.ptr, i64 %or38), !dbg !2041
  br label %for.inc, !dbg !2041

for.inc:                                          ; preds = %for.body
  %28 = load i32, i32* %i, align 4, !dbg !2042
  %inc = add nsw i32 %28, 1, !dbg !2042
  store i32 %inc, i32* %i, align 4, !dbg !2042
  br label %for.cond, !dbg !2043

for.end:                                          ; preds = %for.cond
  %29 = load i8*, i8** %resbuf.addr, align 8, !dbg !2044
  ret i8* %29, !dbg !2045
}

; Function Attrs: nounwind uwtable
define internal i8* @sha384_read_ctx(%struct.sha512_ctx* %ctx, i8* %resbuf) #5 !dbg !2046 {
entry:
  %ctx.addr = alloca %struct.sha512_ctx*, align 8
  %resbuf.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %r = alloca i8*, align 8
  store %struct.sha512_ctx* %ctx, %struct.sha512_ctx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sha512_ctx** %ctx.addr, metadata !2047, metadata !DIExpression()), !dbg !2048
  store i8* %resbuf, i8** %resbuf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %resbuf.addr, metadata !2049, metadata !DIExpression()), !dbg !2050
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2051, metadata !DIExpression()), !dbg !2052
  call void @llvm.dbg.declare(metadata i8** %r, metadata !2053, metadata !DIExpression()), !dbg !2054
  %0 = load i8*, i8** %resbuf.addr, align 8, !dbg !2055
  store i8* %0, i8** %r, align 8, !dbg !2054
  store i32 0, i32* %i, align 4, !dbg !2056
  br label %for.cond, !dbg !2058

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !2059
  %cmp = icmp slt i32 %1, 6, !dbg !2063
  br i1 %cmp, label %for.body, label %for.end, !dbg !2064

for.body:                                         ; preds = %for.cond
  %2 = load i8*, i8** %r, align 8, !dbg !2065
  %3 = load i32, i32* %i, align 4, !dbg !2066
  %conv = sext i32 %3 to i64, !dbg !2066
  %mul = mul i64 %conv, 8, !dbg !2067
  %add.ptr = getelementptr inbounds i8, i8* %2, i64 %mul, !dbg !2068
  %4 = load i32, i32* %i, align 4, !dbg !2069
  %idxprom = sext i32 %4 to i64, !dbg !2069
  %5 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2069
  %state = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %5, i32 0, i32 0, !dbg !2069
  %arrayidx = getelementptr inbounds [8 x i64], [8 x i64]* %state, i32 0, i64 %idxprom, !dbg !2069
  %6 = load i64, i64* %arrayidx, align 8, !dbg !2069
  %shl = shl i64 %6, 56, !dbg !2069
  %7 = load i32, i32* %i, align 4, !dbg !2069
  %idxprom1 = sext i32 %7 to i64, !dbg !2069
  %8 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2069
  %state2 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %8, i32 0, i32 0, !dbg !2069
  %arrayidx3 = getelementptr inbounds [8 x i64], [8 x i64]* %state2, i32 0, i64 %idxprom1, !dbg !2069
  %9 = load i64, i64* %arrayidx3, align 8, !dbg !2069
  %and = and i64 %9, 65280, !dbg !2069
  %shl4 = shl i64 %and, 40, !dbg !2069
  %or = or i64 %shl, %shl4, !dbg !2069
  %10 = load i32, i32* %i, align 4, !dbg !2069
  %idxprom5 = sext i32 %10 to i64, !dbg !2069
  %11 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2069
  %state6 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %11, i32 0, i32 0, !dbg !2069
  %arrayidx7 = getelementptr inbounds [8 x i64], [8 x i64]* %state6, i32 0, i64 %idxprom5, !dbg !2069
  %12 = load i64, i64* %arrayidx7, align 8, !dbg !2069
  %and8 = and i64 %12, 16711680, !dbg !2069
  %shl9 = shl i64 %and8, 24, !dbg !2069
  %13 = load i32, i32* %i, align 4, !dbg !2069
  %idxprom10 = sext i32 %13 to i64, !dbg !2069
  %14 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2069
  %state11 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %14, i32 0, i32 0, !dbg !2069
  %arrayidx12 = getelementptr inbounds [8 x i64], [8 x i64]* %state11, i32 0, i64 %idxprom10, !dbg !2069
  %15 = load i64, i64* %arrayidx12, align 8, !dbg !2069
  %and13 = and i64 %15, 4278190080, !dbg !2069
  %shl14 = shl i64 %and13, 8, !dbg !2069
  %or15 = or i64 %shl9, %shl14, !dbg !2069
  %or16 = or i64 %or, %or15, !dbg !2069
  %16 = load i32, i32* %i, align 4, !dbg !2069
  %idxprom17 = sext i32 %16 to i64, !dbg !2069
  %17 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2069
  %state18 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %17, i32 0, i32 0, !dbg !2069
  %arrayidx19 = getelementptr inbounds [8 x i64], [8 x i64]* %state18, i32 0, i64 %idxprom17, !dbg !2069
  %18 = load i64, i64* %arrayidx19, align 8, !dbg !2069
  %shr = lshr i64 %18, 8, !dbg !2069
  %and20 = and i64 %shr, 4278190080, !dbg !2069
  %19 = load i32, i32* %i, align 4, !dbg !2069
  %idxprom21 = sext i32 %19 to i64, !dbg !2069
  %20 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2069
  %state22 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %20, i32 0, i32 0, !dbg !2069
  %arrayidx23 = getelementptr inbounds [8 x i64], [8 x i64]* %state22, i32 0, i64 %idxprom21, !dbg !2069
  %21 = load i64, i64* %arrayidx23, align 8, !dbg !2069
  %shr24 = lshr i64 %21, 24, !dbg !2069
  %and25 = and i64 %shr24, 16711680, !dbg !2069
  %or26 = or i64 %and20, %and25, !dbg !2069
  %22 = load i32, i32* %i, align 4, !dbg !2069
  %idxprom27 = sext i32 %22 to i64, !dbg !2069
  %23 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2069
  %state28 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %23, i32 0, i32 0, !dbg !2069
  %arrayidx29 = getelementptr inbounds [8 x i64], [8 x i64]* %state28, i32 0, i64 %idxprom27, !dbg !2069
  %24 = load i64, i64* %arrayidx29, align 8, !dbg !2069
  %shr30 = lshr i64 %24, 40, !dbg !2069
  %and31 = and i64 %shr30, 65280, !dbg !2069
  %25 = load i32, i32* %i, align 4, !dbg !2069
  %idxprom32 = sext i32 %25 to i64, !dbg !2069
  %26 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2069
  %state33 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %26, i32 0, i32 0, !dbg !2069
  %arrayidx34 = getelementptr inbounds [8 x i64], [8 x i64]* %state33, i32 0, i64 %idxprom32, !dbg !2069
  %27 = load i64, i64* %arrayidx34, align 8, !dbg !2069
  %shr35 = lshr i64 %27, 56, !dbg !2069
  %or36 = or i64 %and31, %shr35, !dbg !2069
  %or37 = or i64 %or26, %or36, !dbg !2069
  %or38 = or i64 %or16, %or37, !dbg !2069
  call void @set_uint64(i8* %add.ptr, i64 %or38), !dbg !2070
  br label %for.inc, !dbg !2070

for.inc:                                          ; preds = %for.body
  %28 = load i32, i32* %i, align 4, !dbg !2071
  %inc = add nsw i32 %28, 1, !dbg !2071
  store i32 %inc, i32* %i, align 4, !dbg !2071
  br label %for.cond, !dbg !2072

for.end:                                          ; preds = %for.cond
  %29 = load i8*, i8** %resbuf.addr, align 8, !dbg !2073
  ret i8* %29, !dbg !2074
}

; Function Attrs: nounwind uwtable
define internal i8* @sha512_finish_ctx(%struct.sha512_ctx* %ctx, i8* %resbuf) #5 !dbg !2075 {
entry:
  %ctx.addr = alloca %struct.sha512_ctx*, align 8
  %resbuf.addr = alloca i8*, align 8
  store %struct.sha512_ctx* %ctx, %struct.sha512_ctx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sha512_ctx** %ctx.addr, metadata !2078, metadata !DIExpression()), !dbg !2079
  store i8* %resbuf, i8** %resbuf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %resbuf.addr, metadata !2080, metadata !DIExpression()), !dbg !2081
  %0 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2082
  call void @sha512_conclude_ctx(%struct.sha512_ctx* %0), !dbg !2083
  %1 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2084
  %2 = load i8*, i8** %resbuf.addr, align 8, !dbg !2085
  %call = call i8* @sha512_read_ctx(%struct.sha512_ctx* %1, i8* %2), !dbg !2086
  ret i8* %call, !dbg !2087
}

; Function Attrs: nounwind uwtable
define internal i8* @sha384_finish_ctx(%struct.sha512_ctx* %ctx, i8* %resbuf) #5 !dbg !2088 {
entry:
  %ctx.addr = alloca %struct.sha512_ctx*, align 8
  %resbuf.addr = alloca i8*, align 8
  store %struct.sha512_ctx* %ctx, %struct.sha512_ctx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sha512_ctx** %ctx.addr, metadata !2089, metadata !DIExpression()), !dbg !2090
  store i8* %resbuf, i8** %resbuf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %resbuf.addr, metadata !2091, metadata !DIExpression()), !dbg !2092
  %0 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2093
  call void @sha512_conclude_ctx(%struct.sha512_ctx* %0), !dbg !2094
  %1 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2095
  %2 = load i8*, i8** %resbuf.addr, align 8, !dbg !2096
  %call = call i8* @sha384_read_ctx(%struct.sha512_ctx* %1, i8* %2), !dbg !2097
  ret i8* %call, !dbg !2098
}

; Function Attrs: nounwind uwtable
define internal i32 @sha512_stream(%struct._IO_FILE* %stream, i8* %resblock) #5 !dbg !2099 {
entry:
  %retval = alloca i32, align 4
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %resblock.addr = alloca i8*, align 8
  %ctx = alloca %struct.sha512_ctx, align 8
  %sum = alloca i64, align 8
  %buffer = alloca i8*, align 8
  %n = alloca i64, align 8
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !2142, metadata !DIExpression()), !dbg !2143
  store i8* %resblock, i8** %resblock.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %resblock.addr, metadata !2144, metadata !DIExpression()), !dbg !2145
  call void @llvm.dbg.declare(metadata %struct.sha512_ctx* %ctx, metadata !2146, metadata !DIExpression()), !dbg !2147
  call void @llvm.dbg.declare(metadata i64* %sum, metadata !2148, metadata !DIExpression()), !dbg !2149
  call void @llvm.dbg.declare(metadata i8** %buffer, metadata !2150, metadata !DIExpression()), !dbg !2151
  %call = call noalias i8* @malloc(i64 32840) #11, !dbg !2152
  store i8* %call, i8** %buffer, align 8, !dbg !2151
  %0 = load i8*, i8** %buffer, align 8, !dbg !2153
  %tobool = icmp ne i8* %0, null, !dbg !2153
  br i1 %tobool, label %if.end, label %if.then, !dbg !2155

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, !dbg !2156
  br label %return, !dbg !2156

if.end:                                           ; preds = %entry
  call void @sha512_init_ctx(%struct.sha512_ctx* %ctx), !dbg !2157
  br label %while.body, !dbg !2158

while.body:                                       ; preds = %while.end, %if.end
  call void @llvm.dbg.declare(metadata i64* %n, metadata !2159, metadata !DIExpression()), !dbg !2161
  store i64 0, i64* %sum, align 8, !dbg !2162
  br label %while.body.2, !dbg !2163

while.body.2:                                     ; preds = %if.end.16, %while.body
  %1 = load i8*, i8** %buffer, align 8, !dbg !2164
  %2 = load i64, i64* %sum, align 8, !dbg !2164
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %2, !dbg !2164
  %3 = load i64, i64* %sum, align 8, !dbg !2164
  %sub = sub i64 32768, %3, !dbg !2164
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !2164
  %call3 = call i64 @fread_unlocked(i8* %add.ptr, i64 1, i64 %sub, %struct._IO_FILE* %4), !dbg !2164
  store i64 %call3, i64* %n, align 8, !dbg !2166
  %5 = load i64, i64* %n, align 8, !dbg !2167
  %6 = load i64, i64* %sum, align 8, !dbg !2168
  %add = add i64 %6, %5, !dbg !2168
  store i64 %add, i64* %sum, align 8, !dbg !2168
  %7 = load i64, i64* %sum, align 8, !dbg !2169
  %cmp = icmp eq i64 %7, 32768, !dbg !2171
  br i1 %cmp, label %if.then.4, label %if.end.5, !dbg !2172

if.then.4:                                        ; preds = %while.body.2
  br label %while.end, !dbg !2173

if.end.5:                                         ; preds = %while.body.2
  %8 = load i64, i64* %n, align 8, !dbg !2174
  %cmp6 = icmp eq i64 %8, 0, !dbg !2176
  br i1 %cmp6, label %if.then.7, label %if.end.12, !dbg !2177

if.then.7:                                        ; preds = %if.end.5
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !2178
  %call8 = call i32 @ferror_unlocked(%struct._IO_FILE* %9) #11, !dbg !2178
  %tobool9 = icmp ne i32 %call8, 0, !dbg !2178
  br i1 %tobool9, label %if.then.10, label %if.end.11, !dbg !2181

if.then.10:                                       ; preds = %if.then.7
  %10 = load i8*, i8** %buffer, align 8, !dbg !2182
  call void @free(i8* %10) #11, !dbg !2184
  store i32 1, i32* %retval, !dbg !2185
  br label %return, !dbg !2185

if.end.11:                                        ; preds = %if.then.7
  br label %process_partial_block, !dbg !2186

if.end.12:                                        ; preds = %if.end.5
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !2187
  %call13 = call i32 @feof_unlocked(%struct._IO_FILE* %11) #11, !dbg !2187
  %tobool14 = icmp ne i32 %call13, 0, !dbg !2187
  br i1 %tobool14, label %if.then.15, label %if.end.16, !dbg !2189

if.then.15:                                       ; preds = %if.end.12
  br label %process_partial_block, !dbg !2190

if.end.16:                                        ; preds = %if.end.12
  br label %while.body.2, !dbg !2163

while.end:                                        ; preds = %if.then.4
  %12 = load i8*, i8** %buffer, align 8, !dbg !2191
  call void @sha512_process_block(i8* %12, i64 32768, %struct.sha512_ctx* %ctx), !dbg !2192
  br label %while.body, !dbg !2158

process_partial_block:                            ; preds = %if.then.15, %if.end.11
  %13 = load i64, i64* %sum, align 8, !dbg !2193
  %cmp17 = icmp ugt i64 %13, 0, !dbg !2195
  br i1 %cmp17, label %if.then.18, label %if.end.19, !dbg !2196

if.then.18:                                       ; preds = %process_partial_block
  %14 = load i8*, i8** %buffer, align 8, !dbg !2197
  %15 = load i64, i64* %sum, align 8, !dbg !2198
  call void @sha512_process_bytes(i8* %14, i64 %15, %struct.sha512_ctx* %ctx), !dbg !2199
  br label %if.end.19, !dbg !2199

if.end.19:                                        ; preds = %if.then.18, %process_partial_block
  %16 = load i8*, i8** %resblock.addr, align 8, !dbg !2200
  %call20 = call i8* @sha512_finish_ctx(%struct.sha512_ctx* %ctx, i8* %16), !dbg !2201
  %17 = load i8*, i8** %buffer, align 8, !dbg !2202
  call void @free(i8* %17) #11, !dbg !2203
  store i32 0, i32* %retval, !dbg !2204
  br label %return, !dbg !2204

return:                                           ; preds = %if.end.19, %if.then.10, %if.then
  %18 = load i32, i32* %retval, !dbg !2205
  ret i32 %18, !dbg !2205
}

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #3

declare i64 @fread_unlocked(i8*, i64, i64, %struct._IO_FILE*) #2

; Function Attrs: nounwind uwtable
define internal void @sha512_process_block(i8* %buffer, i64 %len, %struct.sha512_ctx* %ctx) #5 !dbg !2206 {
entry:
  %buffer.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  %ctx.addr = alloca %struct.sha512_ctx*, align 8
  %words = alloca i64*, align 8
  %endp = alloca i64*, align 8
  %x = alloca [16 x i64], align 16
  %a = alloca i64, align 8
  %b = alloca i64, align 8
  %c = alloca i64, align 8
  %d = alloca i64, align 8
  %e = alloca i64, align 8
  %f = alloca i64, align 8
  %g = alloca i64, align 8
  %h = alloca i64, align 8
  %lolen = alloca i64, align 8
  %t = alloca i32, align 4
  %t0 = alloca i64, align 8
  %t1 = alloca i64, align 8
  %t089 = alloca i64, align 8
  %t1106 = alloca i64, align 8
  %t0130 = alloca i64, align 8
  %t1147 = alloca i64, align 8
  %t0171 = alloca i64, align 8
  %t1188 = alloca i64, align 8
  %t0212 = alloca i64, align 8
  %t1229 = alloca i64, align 8
  %t0253 = alloca i64, align 8
  %t1270 = alloca i64, align 8
  %t0294 = alloca i64, align 8
  %t1311 = alloca i64, align 8
  %t0335 = alloca i64, align 8
  %t1352 = alloca i64, align 8
  %t0376 = alloca i64, align 8
  %t1393 = alloca i64, align 8
  %t0417 = alloca i64, align 8
  %t1434 = alloca i64, align 8
  %t0458 = alloca i64, align 8
  %t1475 = alloca i64, align 8
  %t0499 = alloca i64, align 8
  %t1516 = alloca i64, align 8
  %t0540 = alloca i64, align 8
  %t1557 = alloca i64, align 8
  %t0581 = alloca i64, align 8
  %t1598 = alloca i64, align 8
  %t0622 = alloca i64, align 8
  %t1639 = alloca i64, align 8
  %t0663 = alloca i64, align 8
  %t1680 = alloca i64, align 8
  %t0704 = alloca i64, align 8
  %t1721 = alloca i64, align 8
  %t0778 = alloca i64, align 8
  %t1795 = alloca i64, align 8
  %t0852 = alloca i64, align 8
  %t1869 = alloca i64, align 8
  %t0926 = alloca i64, align 8
  %t1943 = alloca i64, align 8
  %t01000 = alloca i64, align 8
  %t11017 = alloca i64, align 8
  %t01074 = alloca i64, align 8
  %t11091 = alloca i64, align 8
  %t01148 = alloca i64, align 8
  %t11165 = alloca i64, align 8
  %t01222 = alloca i64, align 8
  %t11239 = alloca i64, align 8
  %t01296 = alloca i64, align 8
  %t11313 = alloca i64, align 8
  %t01370 = alloca i64, align 8
  %t11387 = alloca i64, align 8
  %t01444 = alloca i64, align 8
  %t11461 = alloca i64, align 8
  %t01518 = alloca i64, align 8
  %t11535 = alloca i64, align 8
  %t01592 = alloca i64, align 8
  %t11609 = alloca i64, align 8
  %t01666 = alloca i64, align 8
  %t11683 = alloca i64, align 8
  %t01740 = alloca i64, align 8
  %t11757 = alloca i64, align 8
  %t01814 = alloca i64, align 8
  %t11831 = alloca i64, align 8
  %t01888 = alloca i64, align 8
  %t11905 = alloca i64, align 8
  %t01962 = alloca i64, align 8
  %t11979 = alloca i64, align 8
  %t02036 = alloca i64, align 8
  %t12053 = alloca i64, align 8
  %t02110 = alloca i64, align 8
  %t12127 = alloca i64, align 8
  %t02184 = alloca i64, align 8
  %t12201 = alloca i64, align 8
  %t02258 = alloca i64, align 8
  %t12275 = alloca i64, align 8
  %t02332 = alloca i64, align 8
  %t12349 = alloca i64, align 8
  %t02406 = alloca i64, align 8
  %t12423 = alloca i64, align 8
  %t02480 = alloca i64, align 8
  %t12497 = alloca i64, align 8
  %t02554 = alloca i64, align 8
  %t12571 = alloca i64, align 8
  %t02628 = alloca i64, align 8
  %t12645 = alloca i64, align 8
  %t02702 = alloca i64, align 8
  %t12719 = alloca i64, align 8
  %t02776 = alloca i64, align 8
  %t12793 = alloca i64, align 8
  %t02850 = alloca i64, align 8
  %t12867 = alloca i64, align 8
  %t02924 = alloca i64, align 8
  %t12941 = alloca i64, align 8
  %t02998 = alloca i64, align 8
  %t13015 = alloca i64, align 8
  %t03072 = alloca i64, align 8
  %t13089 = alloca i64, align 8
  %t03146 = alloca i64, align 8
  %t13163 = alloca i64, align 8
  %t03220 = alloca i64, align 8
  %t13237 = alloca i64, align 8
  %t03294 = alloca i64, align 8
  %t13311 = alloca i64, align 8
  %t03368 = alloca i64, align 8
  %t13385 = alloca i64, align 8
  %t03442 = alloca i64, align 8
  %t13459 = alloca i64, align 8
  %t03516 = alloca i64, align 8
  %t13533 = alloca i64, align 8
  %t03590 = alloca i64, align 8
  %t13607 = alloca i64, align 8
  %t03664 = alloca i64, align 8
  %t13681 = alloca i64, align 8
  %t03738 = alloca i64, align 8
  %t13755 = alloca i64, align 8
  %t03812 = alloca i64, align 8
  %t13829 = alloca i64, align 8
  %t03886 = alloca i64, align 8
  %t13903 = alloca i64, align 8
  %t03960 = alloca i64, align 8
  %t13977 = alloca i64, align 8
  %t04034 = alloca i64, align 8
  %t14051 = alloca i64, align 8
  %t04108 = alloca i64, align 8
  %t14125 = alloca i64, align 8
  %t04182 = alloca i64, align 8
  %t14199 = alloca i64, align 8
  %t04256 = alloca i64, align 8
  %t14273 = alloca i64, align 8
  %t04330 = alloca i64, align 8
  %t14347 = alloca i64, align 8
  %t04404 = alloca i64, align 8
  %t14421 = alloca i64, align 8
  %t04478 = alloca i64, align 8
  %t14495 = alloca i64, align 8
  %t04552 = alloca i64, align 8
  %t14569 = alloca i64, align 8
  %t04626 = alloca i64, align 8
  %t14643 = alloca i64, align 8
  %t04700 = alloca i64, align 8
  %t14717 = alloca i64, align 8
  %t04774 = alloca i64, align 8
  %t14791 = alloca i64, align 8
  %t04848 = alloca i64, align 8
  %t14865 = alloca i64, align 8
  %t04922 = alloca i64, align 8
  %t14939 = alloca i64, align 8
  %t04996 = alloca i64, align 8
  %t15013 = alloca i64, align 8
  %t05070 = alloca i64, align 8
  %t15087 = alloca i64, align 8
  %t05144 = alloca i64, align 8
  %t15161 = alloca i64, align 8
  %t05218 = alloca i64, align 8
  %t15235 = alloca i64, align 8
  %t05292 = alloca i64, align 8
  %t15309 = alloca i64, align 8
  %t05366 = alloca i64, align 8
  %t15383 = alloca i64, align 8
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !2209, metadata !DIExpression()), !dbg !2210
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !2211, metadata !DIExpression()), !dbg !2212
  store %struct.sha512_ctx* %ctx, %struct.sha512_ctx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sha512_ctx** %ctx.addr, metadata !2213, metadata !DIExpression()), !dbg !2214
  call void @llvm.dbg.declare(metadata i64** %words, metadata !2215, metadata !DIExpression()), !dbg !2217
  %0 = load i8*, i8** %buffer.addr, align 8, !dbg !2218
  %1 = bitcast i8* %0 to i64*, !dbg !2218
  store i64* %1, i64** %words, align 8, !dbg !2217
  call void @llvm.dbg.declare(metadata i64** %endp, metadata !2219, metadata !DIExpression()), !dbg !2220
  %2 = load i64*, i64** %words, align 8, !dbg !2221
  %3 = load i64, i64* %len.addr, align 8, !dbg !2222
  %div = udiv i64 %3, 8, !dbg !2223
  %add.ptr = getelementptr inbounds i64, i64* %2, i64 %div, !dbg !2224
  store i64* %add.ptr, i64** %endp, align 8, !dbg !2220
  call void @llvm.dbg.declare(metadata [16 x i64]* %x, metadata !2225, metadata !DIExpression()), !dbg !2227
  call void @llvm.dbg.declare(metadata i64* %a, metadata !2228, metadata !DIExpression()), !dbg !2229
  %4 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2230
  %state = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %4, i32 0, i32 0, !dbg !2231
  %arrayidx = getelementptr inbounds [8 x i64], [8 x i64]* %state, i32 0, i64 0, !dbg !2230
  %5 = load i64, i64* %arrayidx, align 8, !dbg !2230
  store i64 %5, i64* %a, align 8, !dbg !2229
  call void @llvm.dbg.declare(metadata i64* %b, metadata !2232, metadata !DIExpression()), !dbg !2233
  %6 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2234
  %state1 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %6, i32 0, i32 0, !dbg !2235
  %arrayidx2 = getelementptr inbounds [8 x i64], [8 x i64]* %state1, i32 0, i64 1, !dbg !2234
  %7 = load i64, i64* %arrayidx2, align 8, !dbg !2234
  store i64 %7, i64* %b, align 8, !dbg !2233
  call void @llvm.dbg.declare(metadata i64* %c, metadata !2236, metadata !DIExpression()), !dbg !2237
  %8 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2238
  %state3 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %8, i32 0, i32 0, !dbg !2239
  %arrayidx4 = getelementptr inbounds [8 x i64], [8 x i64]* %state3, i32 0, i64 2, !dbg !2238
  %9 = load i64, i64* %arrayidx4, align 8, !dbg !2238
  store i64 %9, i64* %c, align 8, !dbg !2237
  call void @llvm.dbg.declare(metadata i64* %d, metadata !2240, metadata !DIExpression()), !dbg !2241
  %10 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2242
  %state5 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %10, i32 0, i32 0, !dbg !2243
  %arrayidx6 = getelementptr inbounds [8 x i64], [8 x i64]* %state5, i32 0, i64 3, !dbg !2242
  %11 = load i64, i64* %arrayidx6, align 8, !dbg !2242
  store i64 %11, i64* %d, align 8, !dbg !2241
  call void @llvm.dbg.declare(metadata i64* %e, metadata !2244, metadata !DIExpression()), !dbg !2245
  %12 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2246
  %state7 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %12, i32 0, i32 0, !dbg !2247
  %arrayidx8 = getelementptr inbounds [8 x i64], [8 x i64]* %state7, i32 0, i64 4, !dbg !2246
  %13 = load i64, i64* %arrayidx8, align 8, !dbg !2246
  store i64 %13, i64* %e, align 8, !dbg !2245
  call void @llvm.dbg.declare(metadata i64* %f, metadata !2248, metadata !DIExpression()), !dbg !2249
  %14 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2250
  %state9 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %14, i32 0, i32 0, !dbg !2251
  %arrayidx10 = getelementptr inbounds [8 x i64], [8 x i64]* %state9, i32 0, i64 5, !dbg !2250
  %15 = load i64, i64* %arrayidx10, align 8, !dbg !2250
  store i64 %15, i64* %f, align 8, !dbg !2249
  call void @llvm.dbg.declare(metadata i64* %g, metadata !2252, metadata !DIExpression()), !dbg !2253
  %16 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2254
  %state11 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %16, i32 0, i32 0, !dbg !2255
  %arrayidx12 = getelementptr inbounds [8 x i64], [8 x i64]* %state11, i32 0, i64 6, !dbg !2254
  %17 = load i64, i64* %arrayidx12, align 8, !dbg !2254
  store i64 %17, i64* %g, align 8, !dbg !2253
  call void @llvm.dbg.declare(metadata i64* %h, metadata !2256, metadata !DIExpression()), !dbg !2257
  %18 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2258
  %state13 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %18, i32 0, i32 0, !dbg !2259
  %arrayidx14 = getelementptr inbounds [8 x i64], [8 x i64]* %state13, i32 0, i64 7, !dbg !2258
  %19 = load i64, i64* %arrayidx14, align 8, !dbg !2258
  store i64 %19, i64* %h, align 8, !dbg !2257
  call void @llvm.dbg.declare(metadata i64* %lolen, metadata !2260, metadata !DIExpression()), !dbg !2261
  %20 = load i64, i64* %len.addr, align 8, !dbg !2262
  store i64 %20, i64* %lolen, align 8, !dbg !2261
  %21 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2263
  %total = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %21, i32 0, i32 1, !dbg !2263
  %arrayidx15 = getelementptr inbounds [2 x i64], [2 x i64]* %total, i32 0, i64 0, !dbg !2263
  %22 = load i64, i64* %arrayidx15, align 8, !dbg !2263
  %23 = load i64, i64* %lolen, align 8, !dbg !2263
  %add = add i64 %22, %23, !dbg !2263
  %24 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2264
  %total16 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %24, i32 0, i32 1, !dbg !2265
  %arrayidx17 = getelementptr inbounds [2 x i64], [2 x i64]* %total16, i32 0, i64 0, !dbg !2264
  store i64 %add, i64* %arrayidx17, align 8, !dbg !2266
  %25 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2267
  %total18 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %25, i32 0, i32 1, !dbg !2267
  %arrayidx19 = getelementptr inbounds [2 x i64], [2 x i64]* %total18, i32 0, i64 1, !dbg !2267
  %26 = load i64, i64* %arrayidx19, align 8, !dbg !2267
  %27 = load i64, i64* %len.addr, align 8, !dbg !2267
  %shr = lshr i64 %27, 31, !dbg !2267
  %shr20 = lshr i64 %shr, 31, !dbg !2267
  %shr21 = lshr i64 %shr20, 2, !dbg !2267
  %28 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2267
  %total22 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %28, i32 0, i32 1, !dbg !2267
  %arrayidx23 = getelementptr inbounds [2 x i64], [2 x i64]* %total22, i32 0, i64 0, !dbg !2267
  %29 = load i64, i64* %arrayidx23, align 8, !dbg !2267
  %30 = load i64, i64* %lolen, align 8, !dbg !2267
  %cmp = icmp ult i64 %29, %30, !dbg !2267
  %conv = zext i1 %cmp to i32, !dbg !2267
  %conv24 = sext i32 %conv to i64, !dbg !2267
  %add25 = add i64 %shr21, %conv24, !dbg !2267
  %add26 = add i64 %26, %add25, !dbg !2267
  %31 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2268
  %total27 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %31, i32 0, i32 1, !dbg !2269
  %arrayidx28 = getelementptr inbounds [2 x i64], [2 x i64]* %total27, i32 0, i64 1, !dbg !2268
  store i64 %add26, i64* %arrayidx28, align 8, !dbg !2270
  br label %while.cond, !dbg !2271

while.cond:                                       ; preds = %do.end.5438, %entry
  %32 = load i64*, i64** %words, align 8, !dbg !2272
  %33 = load i64*, i64** %endp, align 8, !dbg !2275
  %cmp29 = icmp ult i64* %32, %33, !dbg !2276
  br i1 %cmp29, label %while.body, label %while.end, !dbg !2271

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %t, metadata !2277, metadata !DIExpression()), !dbg !2279
  store i32 0, i32* %t, align 4, !dbg !2280
  br label %for.cond, !dbg !2282

for.cond:                                         ; preds = %for.inc, %while.body
  %34 = load i32, i32* %t, align 4, !dbg !2283
  %cmp31 = icmp slt i32 %34, 16, !dbg !2287
  br i1 %cmp31, label %for.body, label %for.end, !dbg !2288

for.body:                                         ; preds = %for.cond
  %35 = load i64*, i64** %words, align 8, !dbg !2289
  %36 = load i64, i64* %35, align 8, !dbg !2289
  %shl = shl i64 %36, 56, !dbg !2289
  %37 = load i64*, i64** %words, align 8, !dbg !2289
  %38 = load i64, i64* %37, align 8, !dbg !2289
  %and = and i64 %38, 65280, !dbg !2289
  %shl33 = shl i64 %and, 40, !dbg !2289
  %or = or i64 %shl, %shl33, !dbg !2289
  %39 = load i64*, i64** %words, align 8, !dbg !2289
  %40 = load i64, i64* %39, align 8, !dbg !2289
  %and34 = and i64 %40, 16711680, !dbg !2289
  %shl35 = shl i64 %and34, 24, !dbg !2289
  %41 = load i64*, i64** %words, align 8, !dbg !2289
  %42 = load i64, i64* %41, align 8, !dbg !2289
  %and36 = and i64 %42, 4278190080, !dbg !2289
  %shl37 = shl i64 %and36, 8, !dbg !2289
  %or38 = or i64 %shl35, %shl37, !dbg !2289
  %or39 = or i64 %or, %or38, !dbg !2289
  %43 = load i64*, i64** %words, align 8, !dbg !2289
  %44 = load i64, i64* %43, align 8, !dbg !2289
  %shr40 = lshr i64 %44, 8, !dbg !2289
  %and41 = and i64 %shr40, 4278190080, !dbg !2289
  %45 = load i64*, i64** %words, align 8, !dbg !2289
  %46 = load i64, i64* %45, align 8, !dbg !2289
  %shr42 = lshr i64 %46, 24, !dbg !2289
  %and43 = and i64 %shr42, 16711680, !dbg !2289
  %or44 = or i64 %and41, %and43, !dbg !2289
  %47 = load i64*, i64** %words, align 8, !dbg !2289
  %48 = load i64, i64* %47, align 8, !dbg !2289
  %shr45 = lshr i64 %48, 40, !dbg !2289
  %and46 = and i64 %shr45, 65280, !dbg !2289
  %49 = load i64*, i64** %words, align 8, !dbg !2289
  %50 = load i64, i64* %49, align 8, !dbg !2289
  %shr47 = lshr i64 %50, 56, !dbg !2289
  %or48 = or i64 %and46, %shr47, !dbg !2289
  %or49 = or i64 %or44, %or48, !dbg !2289
  %or50 = or i64 %or39, %or49, !dbg !2289
  %51 = load i32, i32* %t, align 4, !dbg !2291
  %idxprom = sext i32 %51 to i64, !dbg !2292
  %arrayidx51 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 %idxprom, !dbg !2292
  store i64 %or50, i64* %arrayidx51, align 8, !dbg !2293
  %52 = load i64*, i64** %words, align 8, !dbg !2294
  %incdec.ptr = getelementptr inbounds i64, i64* %52, i32 1, !dbg !2294
  store i64* %incdec.ptr, i64** %words, align 8, !dbg !2294
  br label %for.inc, !dbg !2295

for.inc:                                          ; preds = %for.body
  %53 = load i32, i32* %t, align 4, !dbg !2296
  %inc = add nsw i32 %53, 1, !dbg !2296
  store i32 %inc, i32* %t, align 4, !dbg !2296
  br label %for.cond, !dbg !2297

for.end:                                          ; preds = %for.cond
  br label %do.body, !dbg !2298

do.body:                                          ; preds = %for.end
  call void @llvm.dbg.declare(metadata i64* %t0, metadata !2299, metadata !DIExpression()), !dbg !2301
  %54 = load i64, i64* %a, align 8, !dbg !2302
  %shl52 = shl i64 %54, 36, !dbg !2302
  %55 = load i64, i64* %a, align 8, !dbg !2302
  %shr53 = lshr i64 %55, 28, !dbg !2302
  %or54 = or i64 %shl52, %shr53, !dbg !2302
  %56 = load i64, i64* %a, align 8, !dbg !2302
  %shl55 = shl i64 %56, 30, !dbg !2302
  %57 = load i64, i64* %a, align 8, !dbg !2302
  %shr56 = lshr i64 %57, 34, !dbg !2302
  %or57 = or i64 %shl55, %shr56, !dbg !2302
  %58 = load i64, i64* %a, align 8, !dbg !2302
  %shl58 = shl i64 %58, 25, !dbg !2302
  %59 = load i64, i64* %a, align 8, !dbg !2302
  %shr59 = lshr i64 %59, 39, !dbg !2302
  %or60 = or i64 %shl58, %shr59, !dbg !2302
  %xor = xor i64 %or57, %or60, !dbg !2302
  %xor61 = xor i64 %or54, %xor, !dbg !2302
  %60 = load i64, i64* %a, align 8, !dbg !2302
  %61 = load i64, i64* %b, align 8, !dbg !2302
  %and62 = and i64 %60, %61, !dbg !2302
  %62 = load i64, i64* %c, align 8, !dbg !2302
  %63 = load i64, i64* %a, align 8, !dbg !2302
  %64 = load i64, i64* %b, align 8, !dbg !2302
  %or63 = or i64 %63, %64, !dbg !2302
  %and64 = and i64 %62, %or63, !dbg !2302
  %or65 = or i64 %and62, %and64, !dbg !2302
  %add66 = add i64 %xor61, %or65, !dbg !2302
  store i64 %add66, i64* %t0, align 8, !dbg !2302
  call void @llvm.dbg.declare(metadata i64* %t1, metadata !2304, metadata !DIExpression()), !dbg !2302
  %65 = load i64, i64* %h, align 8, !dbg !2302
  %66 = load i64, i64* %e, align 8, !dbg !2302
  %shl67 = shl i64 %66, 50, !dbg !2302
  %67 = load i64, i64* %e, align 8, !dbg !2302
  %shr68 = lshr i64 %67, 14, !dbg !2302
  %or69 = or i64 %shl67, %shr68, !dbg !2302
  %68 = load i64, i64* %e, align 8, !dbg !2302
  %shl70 = shl i64 %68, 46, !dbg !2302
  %69 = load i64, i64* %e, align 8, !dbg !2302
  %shr71 = lshr i64 %69, 18, !dbg !2302
  %or72 = or i64 %shl70, %shr71, !dbg !2302
  %70 = load i64, i64* %e, align 8, !dbg !2302
  %shl73 = shl i64 %70, 23, !dbg !2302
  %71 = load i64, i64* %e, align 8, !dbg !2302
  %shr74 = lshr i64 %71, 41, !dbg !2302
  %or75 = or i64 %shl73, %shr74, !dbg !2302
  %xor76 = xor i64 %or72, %or75, !dbg !2302
  %xor77 = xor i64 %or69, %xor76, !dbg !2302
  %72 = load i64, i64* %g, align 8, !dbg !2302
  %73 = load i64, i64* %e, align 8, !dbg !2302
  %74 = load i64, i64* %f, align 8, !dbg !2302
  %75 = load i64, i64* %g, align 8, !dbg !2302
  %xor78 = xor i64 %74, %75, !dbg !2302
  %and79 = and i64 %73, %xor78, !dbg !2302
  %xor80 = xor i64 %72, %and79, !dbg !2302
  %76 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 0), align 8, !dbg !2302
  %arrayidx81 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 0, !dbg !2302
  %77 = load i64, i64* %arrayidx81, align 8, !dbg !2302
  %add82 = add i64 %76, %77, !dbg !2302
  %add83 = add i64 %xor80, %add82, !dbg !2302
  %add84 = add i64 %xor77, %add83, !dbg !2302
  %add85 = add i64 %65, %add84, !dbg !2302
  store i64 %add85, i64* %t1, align 8, !dbg !2302
  %78 = load i64, i64* %d, align 8, !dbg !2302
  %79 = load i64, i64* %t1, align 8, !dbg !2302
  %add86 = add i64 %78, %79, !dbg !2302
  store i64 %add86, i64* %d, align 8, !dbg !2302
  %80 = load i64, i64* %t0, align 8, !dbg !2302
  %81 = load i64, i64* %t1, align 8, !dbg !2302
  %add87 = add i64 %80, %81, !dbg !2302
  store i64 %add87, i64* %h, align 8, !dbg !2302
  br label %do.end, !dbg !2302

do.end:                                           ; preds = %do.body
  br label %do.body.88, !dbg !2305

do.body.88:                                       ; preds = %do.end
  call void @llvm.dbg.declare(metadata i64* %t089, metadata !2306, metadata !DIExpression()), !dbg !2308
  %82 = load i64, i64* %h, align 8, !dbg !2309
  %shl90 = shl i64 %82, 36, !dbg !2309
  %83 = load i64, i64* %h, align 8, !dbg !2309
  %shr91 = lshr i64 %83, 28, !dbg !2309
  %or92 = or i64 %shl90, %shr91, !dbg !2309
  %84 = load i64, i64* %h, align 8, !dbg !2309
  %shl93 = shl i64 %84, 30, !dbg !2309
  %85 = load i64, i64* %h, align 8, !dbg !2309
  %shr94 = lshr i64 %85, 34, !dbg !2309
  %or95 = or i64 %shl93, %shr94, !dbg !2309
  %86 = load i64, i64* %h, align 8, !dbg !2309
  %shl96 = shl i64 %86, 25, !dbg !2309
  %87 = load i64, i64* %h, align 8, !dbg !2309
  %shr97 = lshr i64 %87, 39, !dbg !2309
  %or98 = or i64 %shl96, %shr97, !dbg !2309
  %xor99 = xor i64 %or95, %or98, !dbg !2309
  %xor100 = xor i64 %or92, %xor99, !dbg !2309
  %88 = load i64, i64* %h, align 8, !dbg !2309
  %89 = load i64, i64* %a, align 8, !dbg !2309
  %and101 = and i64 %88, %89, !dbg !2309
  %90 = load i64, i64* %b, align 8, !dbg !2309
  %91 = load i64, i64* %h, align 8, !dbg !2309
  %92 = load i64, i64* %a, align 8, !dbg !2309
  %or102 = or i64 %91, %92, !dbg !2309
  %and103 = and i64 %90, %or102, !dbg !2309
  %or104 = or i64 %and101, %and103, !dbg !2309
  %add105 = add i64 %xor100, %or104, !dbg !2309
  store i64 %add105, i64* %t089, align 8, !dbg !2309
  call void @llvm.dbg.declare(metadata i64* %t1106, metadata !2311, metadata !DIExpression()), !dbg !2309
  %93 = load i64, i64* %g, align 8, !dbg !2309
  %94 = load i64, i64* %d, align 8, !dbg !2309
  %shl107 = shl i64 %94, 50, !dbg !2309
  %95 = load i64, i64* %d, align 8, !dbg !2309
  %shr108 = lshr i64 %95, 14, !dbg !2309
  %or109 = or i64 %shl107, %shr108, !dbg !2309
  %96 = load i64, i64* %d, align 8, !dbg !2309
  %shl110 = shl i64 %96, 46, !dbg !2309
  %97 = load i64, i64* %d, align 8, !dbg !2309
  %shr111 = lshr i64 %97, 18, !dbg !2309
  %or112 = or i64 %shl110, %shr111, !dbg !2309
  %98 = load i64, i64* %d, align 8, !dbg !2309
  %shl113 = shl i64 %98, 23, !dbg !2309
  %99 = load i64, i64* %d, align 8, !dbg !2309
  %shr114 = lshr i64 %99, 41, !dbg !2309
  %or115 = or i64 %shl113, %shr114, !dbg !2309
  %xor116 = xor i64 %or112, %or115, !dbg !2309
  %xor117 = xor i64 %or109, %xor116, !dbg !2309
  %100 = load i64, i64* %f, align 8, !dbg !2309
  %101 = load i64, i64* %d, align 8, !dbg !2309
  %102 = load i64, i64* %e, align 8, !dbg !2309
  %103 = load i64, i64* %f, align 8, !dbg !2309
  %xor118 = xor i64 %102, %103, !dbg !2309
  %and119 = and i64 %101, %xor118, !dbg !2309
  %xor120 = xor i64 %100, %and119, !dbg !2309
  %104 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 1), align 8, !dbg !2309
  %arrayidx121 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 1, !dbg !2309
  %105 = load i64, i64* %arrayidx121, align 8, !dbg !2309
  %add122 = add i64 %104, %105, !dbg !2309
  %add123 = add i64 %xor120, %add122, !dbg !2309
  %add124 = add i64 %xor117, %add123, !dbg !2309
  %add125 = add i64 %93, %add124, !dbg !2309
  store i64 %add125, i64* %t1106, align 8, !dbg !2309
  %106 = load i64, i64* %c, align 8, !dbg !2309
  %107 = load i64, i64* %t1106, align 8, !dbg !2309
  %add126 = add i64 %106, %107, !dbg !2309
  store i64 %add126, i64* %c, align 8, !dbg !2309
  %108 = load i64, i64* %t089, align 8, !dbg !2309
  %109 = load i64, i64* %t1106, align 8, !dbg !2309
  %add127 = add i64 %108, %109, !dbg !2309
  store i64 %add127, i64* %g, align 8, !dbg !2309
  br label %do.end.128, !dbg !2309

do.end.128:                                       ; preds = %do.body.88
  br label %do.body.129, !dbg !2312

do.body.129:                                      ; preds = %do.end.128
  call void @llvm.dbg.declare(metadata i64* %t0130, metadata !2313, metadata !DIExpression()), !dbg !2315
  %110 = load i64, i64* %g, align 8, !dbg !2316
  %shl131 = shl i64 %110, 36, !dbg !2316
  %111 = load i64, i64* %g, align 8, !dbg !2316
  %shr132 = lshr i64 %111, 28, !dbg !2316
  %or133 = or i64 %shl131, %shr132, !dbg !2316
  %112 = load i64, i64* %g, align 8, !dbg !2316
  %shl134 = shl i64 %112, 30, !dbg !2316
  %113 = load i64, i64* %g, align 8, !dbg !2316
  %shr135 = lshr i64 %113, 34, !dbg !2316
  %or136 = or i64 %shl134, %shr135, !dbg !2316
  %114 = load i64, i64* %g, align 8, !dbg !2316
  %shl137 = shl i64 %114, 25, !dbg !2316
  %115 = load i64, i64* %g, align 8, !dbg !2316
  %shr138 = lshr i64 %115, 39, !dbg !2316
  %or139 = or i64 %shl137, %shr138, !dbg !2316
  %xor140 = xor i64 %or136, %or139, !dbg !2316
  %xor141 = xor i64 %or133, %xor140, !dbg !2316
  %116 = load i64, i64* %g, align 8, !dbg !2316
  %117 = load i64, i64* %h, align 8, !dbg !2316
  %and142 = and i64 %116, %117, !dbg !2316
  %118 = load i64, i64* %a, align 8, !dbg !2316
  %119 = load i64, i64* %g, align 8, !dbg !2316
  %120 = load i64, i64* %h, align 8, !dbg !2316
  %or143 = or i64 %119, %120, !dbg !2316
  %and144 = and i64 %118, %or143, !dbg !2316
  %or145 = or i64 %and142, %and144, !dbg !2316
  %add146 = add i64 %xor141, %or145, !dbg !2316
  store i64 %add146, i64* %t0130, align 8, !dbg !2316
  call void @llvm.dbg.declare(metadata i64* %t1147, metadata !2318, metadata !DIExpression()), !dbg !2316
  %121 = load i64, i64* %f, align 8, !dbg !2316
  %122 = load i64, i64* %c, align 8, !dbg !2316
  %shl148 = shl i64 %122, 50, !dbg !2316
  %123 = load i64, i64* %c, align 8, !dbg !2316
  %shr149 = lshr i64 %123, 14, !dbg !2316
  %or150 = or i64 %shl148, %shr149, !dbg !2316
  %124 = load i64, i64* %c, align 8, !dbg !2316
  %shl151 = shl i64 %124, 46, !dbg !2316
  %125 = load i64, i64* %c, align 8, !dbg !2316
  %shr152 = lshr i64 %125, 18, !dbg !2316
  %or153 = or i64 %shl151, %shr152, !dbg !2316
  %126 = load i64, i64* %c, align 8, !dbg !2316
  %shl154 = shl i64 %126, 23, !dbg !2316
  %127 = load i64, i64* %c, align 8, !dbg !2316
  %shr155 = lshr i64 %127, 41, !dbg !2316
  %or156 = or i64 %shl154, %shr155, !dbg !2316
  %xor157 = xor i64 %or153, %or156, !dbg !2316
  %xor158 = xor i64 %or150, %xor157, !dbg !2316
  %128 = load i64, i64* %e, align 8, !dbg !2316
  %129 = load i64, i64* %c, align 8, !dbg !2316
  %130 = load i64, i64* %d, align 8, !dbg !2316
  %131 = load i64, i64* %e, align 8, !dbg !2316
  %xor159 = xor i64 %130, %131, !dbg !2316
  %and160 = and i64 %129, %xor159, !dbg !2316
  %xor161 = xor i64 %128, %and160, !dbg !2316
  %132 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 2), align 8, !dbg !2316
  %arrayidx162 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 2, !dbg !2316
  %133 = load i64, i64* %arrayidx162, align 8, !dbg !2316
  %add163 = add i64 %132, %133, !dbg !2316
  %add164 = add i64 %xor161, %add163, !dbg !2316
  %add165 = add i64 %xor158, %add164, !dbg !2316
  %add166 = add i64 %121, %add165, !dbg !2316
  store i64 %add166, i64* %t1147, align 8, !dbg !2316
  %134 = load i64, i64* %b, align 8, !dbg !2316
  %135 = load i64, i64* %t1147, align 8, !dbg !2316
  %add167 = add i64 %134, %135, !dbg !2316
  store i64 %add167, i64* %b, align 8, !dbg !2316
  %136 = load i64, i64* %t0130, align 8, !dbg !2316
  %137 = load i64, i64* %t1147, align 8, !dbg !2316
  %add168 = add i64 %136, %137, !dbg !2316
  store i64 %add168, i64* %f, align 8, !dbg !2316
  br label %do.end.169, !dbg !2316

do.end.169:                                       ; preds = %do.body.129
  br label %do.body.170, !dbg !2319

do.body.170:                                      ; preds = %do.end.169
  call void @llvm.dbg.declare(metadata i64* %t0171, metadata !2320, metadata !DIExpression()), !dbg !2322
  %138 = load i64, i64* %f, align 8, !dbg !2323
  %shl172 = shl i64 %138, 36, !dbg !2323
  %139 = load i64, i64* %f, align 8, !dbg !2323
  %shr173 = lshr i64 %139, 28, !dbg !2323
  %or174 = or i64 %shl172, %shr173, !dbg !2323
  %140 = load i64, i64* %f, align 8, !dbg !2323
  %shl175 = shl i64 %140, 30, !dbg !2323
  %141 = load i64, i64* %f, align 8, !dbg !2323
  %shr176 = lshr i64 %141, 34, !dbg !2323
  %or177 = or i64 %shl175, %shr176, !dbg !2323
  %142 = load i64, i64* %f, align 8, !dbg !2323
  %shl178 = shl i64 %142, 25, !dbg !2323
  %143 = load i64, i64* %f, align 8, !dbg !2323
  %shr179 = lshr i64 %143, 39, !dbg !2323
  %or180 = or i64 %shl178, %shr179, !dbg !2323
  %xor181 = xor i64 %or177, %or180, !dbg !2323
  %xor182 = xor i64 %or174, %xor181, !dbg !2323
  %144 = load i64, i64* %f, align 8, !dbg !2323
  %145 = load i64, i64* %g, align 8, !dbg !2323
  %and183 = and i64 %144, %145, !dbg !2323
  %146 = load i64, i64* %h, align 8, !dbg !2323
  %147 = load i64, i64* %f, align 8, !dbg !2323
  %148 = load i64, i64* %g, align 8, !dbg !2323
  %or184 = or i64 %147, %148, !dbg !2323
  %and185 = and i64 %146, %or184, !dbg !2323
  %or186 = or i64 %and183, %and185, !dbg !2323
  %add187 = add i64 %xor182, %or186, !dbg !2323
  store i64 %add187, i64* %t0171, align 8, !dbg !2323
  call void @llvm.dbg.declare(metadata i64* %t1188, metadata !2325, metadata !DIExpression()), !dbg !2323
  %149 = load i64, i64* %e, align 8, !dbg !2323
  %150 = load i64, i64* %b, align 8, !dbg !2323
  %shl189 = shl i64 %150, 50, !dbg !2323
  %151 = load i64, i64* %b, align 8, !dbg !2323
  %shr190 = lshr i64 %151, 14, !dbg !2323
  %or191 = or i64 %shl189, %shr190, !dbg !2323
  %152 = load i64, i64* %b, align 8, !dbg !2323
  %shl192 = shl i64 %152, 46, !dbg !2323
  %153 = load i64, i64* %b, align 8, !dbg !2323
  %shr193 = lshr i64 %153, 18, !dbg !2323
  %or194 = or i64 %shl192, %shr193, !dbg !2323
  %154 = load i64, i64* %b, align 8, !dbg !2323
  %shl195 = shl i64 %154, 23, !dbg !2323
  %155 = load i64, i64* %b, align 8, !dbg !2323
  %shr196 = lshr i64 %155, 41, !dbg !2323
  %or197 = or i64 %shl195, %shr196, !dbg !2323
  %xor198 = xor i64 %or194, %or197, !dbg !2323
  %xor199 = xor i64 %or191, %xor198, !dbg !2323
  %156 = load i64, i64* %d, align 8, !dbg !2323
  %157 = load i64, i64* %b, align 8, !dbg !2323
  %158 = load i64, i64* %c, align 8, !dbg !2323
  %159 = load i64, i64* %d, align 8, !dbg !2323
  %xor200 = xor i64 %158, %159, !dbg !2323
  %and201 = and i64 %157, %xor200, !dbg !2323
  %xor202 = xor i64 %156, %and201, !dbg !2323
  %160 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 3), align 8, !dbg !2323
  %arrayidx203 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 3, !dbg !2323
  %161 = load i64, i64* %arrayidx203, align 8, !dbg !2323
  %add204 = add i64 %160, %161, !dbg !2323
  %add205 = add i64 %xor202, %add204, !dbg !2323
  %add206 = add i64 %xor199, %add205, !dbg !2323
  %add207 = add i64 %149, %add206, !dbg !2323
  store i64 %add207, i64* %t1188, align 8, !dbg !2323
  %162 = load i64, i64* %a, align 8, !dbg !2323
  %163 = load i64, i64* %t1188, align 8, !dbg !2323
  %add208 = add i64 %162, %163, !dbg !2323
  store i64 %add208, i64* %a, align 8, !dbg !2323
  %164 = load i64, i64* %t0171, align 8, !dbg !2323
  %165 = load i64, i64* %t1188, align 8, !dbg !2323
  %add209 = add i64 %164, %165, !dbg !2323
  store i64 %add209, i64* %e, align 8, !dbg !2323
  br label %do.end.210, !dbg !2323

do.end.210:                                       ; preds = %do.body.170
  br label %do.body.211, !dbg !2326

do.body.211:                                      ; preds = %do.end.210
  call void @llvm.dbg.declare(metadata i64* %t0212, metadata !2327, metadata !DIExpression()), !dbg !2329
  %166 = load i64, i64* %e, align 8, !dbg !2330
  %shl213 = shl i64 %166, 36, !dbg !2330
  %167 = load i64, i64* %e, align 8, !dbg !2330
  %shr214 = lshr i64 %167, 28, !dbg !2330
  %or215 = or i64 %shl213, %shr214, !dbg !2330
  %168 = load i64, i64* %e, align 8, !dbg !2330
  %shl216 = shl i64 %168, 30, !dbg !2330
  %169 = load i64, i64* %e, align 8, !dbg !2330
  %shr217 = lshr i64 %169, 34, !dbg !2330
  %or218 = or i64 %shl216, %shr217, !dbg !2330
  %170 = load i64, i64* %e, align 8, !dbg !2330
  %shl219 = shl i64 %170, 25, !dbg !2330
  %171 = load i64, i64* %e, align 8, !dbg !2330
  %shr220 = lshr i64 %171, 39, !dbg !2330
  %or221 = or i64 %shl219, %shr220, !dbg !2330
  %xor222 = xor i64 %or218, %or221, !dbg !2330
  %xor223 = xor i64 %or215, %xor222, !dbg !2330
  %172 = load i64, i64* %e, align 8, !dbg !2330
  %173 = load i64, i64* %f, align 8, !dbg !2330
  %and224 = and i64 %172, %173, !dbg !2330
  %174 = load i64, i64* %g, align 8, !dbg !2330
  %175 = load i64, i64* %e, align 8, !dbg !2330
  %176 = load i64, i64* %f, align 8, !dbg !2330
  %or225 = or i64 %175, %176, !dbg !2330
  %and226 = and i64 %174, %or225, !dbg !2330
  %or227 = or i64 %and224, %and226, !dbg !2330
  %add228 = add i64 %xor223, %or227, !dbg !2330
  store i64 %add228, i64* %t0212, align 8, !dbg !2330
  call void @llvm.dbg.declare(metadata i64* %t1229, metadata !2332, metadata !DIExpression()), !dbg !2330
  %177 = load i64, i64* %d, align 8, !dbg !2330
  %178 = load i64, i64* %a, align 8, !dbg !2330
  %shl230 = shl i64 %178, 50, !dbg !2330
  %179 = load i64, i64* %a, align 8, !dbg !2330
  %shr231 = lshr i64 %179, 14, !dbg !2330
  %or232 = or i64 %shl230, %shr231, !dbg !2330
  %180 = load i64, i64* %a, align 8, !dbg !2330
  %shl233 = shl i64 %180, 46, !dbg !2330
  %181 = load i64, i64* %a, align 8, !dbg !2330
  %shr234 = lshr i64 %181, 18, !dbg !2330
  %or235 = or i64 %shl233, %shr234, !dbg !2330
  %182 = load i64, i64* %a, align 8, !dbg !2330
  %shl236 = shl i64 %182, 23, !dbg !2330
  %183 = load i64, i64* %a, align 8, !dbg !2330
  %shr237 = lshr i64 %183, 41, !dbg !2330
  %or238 = or i64 %shl236, %shr237, !dbg !2330
  %xor239 = xor i64 %or235, %or238, !dbg !2330
  %xor240 = xor i64 %or232, %xor239, !dbg !2330
  %184 = load i64, i64* %c, align 8, !dbg !2330
  %185 = load i64, i64* %a, align 8, !dbg !2330
  %186 = load i64, i64* %b, align 8, !dbg !2330
  %187 = load i64, i64* %c, align 8, !dbg !2330
  %xor241 = xor i64 %186, %187, !dbg !2330
  %and242 = and i64 %185, %xor241, !dbg !2330
  %xor243 = xor i64 %184, %and242, !dbg !2330
  %188 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 4), align 8, !dbg !2330
  %arrayidx244 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 4, !dbg !2330
  %189 = load i64, i64* %arrayidx244, align 8, !dbg !2330
  %add245 = add i64 %188, %189, !dbg !2330
  %add246 = add i64 %xor243, %add245, !dbg !2330
  %add247 = add i64 %xor240, %add246, !dbg !2330
  %add248 = add i64 %177, %add247, !dbg !2330
  store i64 %add248, i64* %t1229, align 8, !dbg !2330
  %190 = load i64, i64* %h, align 8, !dbg !2330
  %191 = load i64, i64* %t1229, align 8, !dbg !2330
  %add249 = add i64 %190, %191, !dbg !2330
  store i64 %add249, i64* %h, align 8, !dbg !2330
  %192 = load i64, i64* %t0212, align 8, !dbg !2330
  %193 = load i64, i64* %t1229, align 8, !dbg !2330
  %add250 = add i64 %192, %193, !dbg !2330
  store i64 %add250, i64* %d, align 8, !dbg !2330
  br label %do.end.251, !dbg !2330

do.end.251:                                       ; preds = %do.body.211
  br label %do.body.252, !dbg !2333

do.body.252:                                      ; preds = %do.end.251
  call void @llvm.dbg.declare(metadata i64* %t0253, metadata !2334, metadata !DIExpression()), !dbg !2336
  %194 = load i64, i64* %d, align 8, !dbg !2337
  %shl254 = shl i64 %194, 36, !dbg !2337
  %195 = load i64, i64* %d, align 8, !dbg !2337
  %shr255 = lshr i64 %195, 28, !dbg !2337
  %or256 = or i64 %shl254, %shr255, !dbg !2337
  %196 = load i64, i64* %d, align 8, !dbg !2337
  %shl257 = shl i64 %196, 30, !dbg !2337
  %197 = load i64, i64* %d, align 8, !dbg !2337
  %shr258 = lshr i64 %197, 34, !dbg !2337
  %or259 = or i64 %shl257, %shr258, !dbg !2337
  %198 = load i64, i64* %d, align 8, !dbg !2337
  %shl260 = shl i64 %198, 25, !dbg !2337
  %199 = load i64, i64* %d, align 8, !dbg !2337
  %shr261 = lshr i64 %199, 39, !dbg !2337
  %or262 = or i64 %shl260, %shr261, !dbg !2337
  %xor263 = xor i64 %or259, %or262, !dbg !2337
  %xor264 = xor i64 %or256, %xor263, !dbg !2337
  %200 = load i64, i64* %d, align 8, !dbg !2337
  %201 = load i64, i64* %e, align 8, !dbg !2337
  %and265 = and i64 %200, %201, !dbg !2337
  %202 = load i64, i64* %f, align 8, !dbg !2337
  %203 = load i64, i64* %d, align 8, !dbg !2337
  %204 = load i64, i64* %e, align 8, !dbg !2337
  %or266 = or i64 %203, %204, !dbg !2337
  %and267 = and i64 %202, %or266, !dbg !2337
  %or268 = or i64 %and265, %and267, !dbg !2337
  %add269 = add i64 %xor264, %or268, !dbg !2337
  store i64 %add269, i64* %t0253, align 8, !dbg !2337
  call void @llvm.dbg.declare(metadata i64* %t1270, metadata !2339, metadata !DIExpression()), !dbg !2337
  %205 = load i64, i64* %c, align 8, !dbg !2337
  %206 = load i64, i64* %h, align 8, !dbg !2337
  %shl271 = shl i64 %206, 50, !dbg !2337
  %207 = load i64, i64* %h, align 8, !dbg !2337
  %shr272 = lshr i64 %207, 14, !dbg !2337
  %or273 = or i64 %shl271, %shr272, !dbg !2337
  %208 = load i64, i64* %h, align 8, !dbg !2337
  %shl274 = shl i64 %208, 46, !dbg !2337
  %209 = load i64, i64* %h, align 8, !dbg !2337
  %shr275 = lshr i64 %209, 18, !dbg !2337
  %or276 = or i64 %shl274, %shr275, !dbg !2337
  %210 = load i64, i64* %h, align 8, !dbg !2337
  %shl277 = shl i64 %210, 23, !dbg !2337
  %211 = load i64, i64* %h, align 8, !dbg !2337
  %shr278 = lshr i64 %211, 41, !dbg !2337
  %or279 = or i64 %shl277, %shr278, !dbg !2337
  %xor280 = xor i64 %or276, %or279, !dbg !2337
  %xor281 = xor i64 %or273, %xor280, !dbg !2337
  %212 = load i64, i64* %b, align 8, !dbg !2337
  %213 = load i64, i64* %h, align 8, !dbg !2337
  %214 = load i64, i64* %a, align 8, !dbg !2337
  %215 = load i64, i64* %b, align 8, !dbg !2337
  %xor282 = xor i64 %214, %215, !dbg !2337
  %and283 = and i64 %213, %xor282, !dbg !2337
  %xor284 = xor i64 %212, %and283, !dbg !2337
  %216 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 5), align 8, !dbg !2337
  %arrayidx285 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 5, !dbg !2337
  %217 = load i64, i64* %arrayidx285, align 8, !dbg !2337
  %add286 = add i64 %216, %217, !dbg !2337
  %add287 = add i64 %xor284, %add286, !dbg !2337
  %add288 = add i64 %xor281, %add287, !dbg !2337
  %add289 = add i64 %205, %add288, !dbg !2337
  store i64 %add289, i64* %t1270, align 8, !dbg !2337
  %218 = load i64, i64* %g, align 8, !dbg !2337
  %219 = load i64, i64* %t1270, align 8, !dbg !2337
  %add290 = add i64 %218, %219, !dbg !2337
  store i64 %add290, i64* %g, align 8, !dbg !2337
  %220 = load i64, i64* %t0253, align 8, !dbg !2337
  %221 = load i64, i64* %t1270, align 8, !dbg !2337
  %add291 = add i64 %220, %221, !dbg !2337
  store i64 %add291, i64* %c, align 8, !dbg !2337
  br label %do.end.292, !dbg !2337

do.end.292:                                       ; preds = %do.body.252
  br label %do.body.293, !dbg !2340

do.body.293:                                      ; preds = %do.end.292
  call void @llvm.dbg.declare(metadata i64* %t0294, metadata !2341, metadata !DIExpression()), !dbg !2343
  %222 = load i64, i64* %c, align 8, !dbg !2344
  %shl295 = shl i64 %222, 36, !dbg !2344
  %223 = load i64, i64* %c, align 8, !dbg !2344
  %shr296 = lshr i64 %223, 28, !dbg !2344
  %or297 = or i64 %shl295, %shr296, !dbg !2344
  %224 = load i64, i64* %c, align 8, !dbg !2344
  %shl298 = shl i64 %224, 30, !dbg !2344
  %225 = load i64, i64* %c, align 8, !dbg !2344
  %shr299 = lshr i64 %225, 34, !dbg !2344
  %or300 = or i64 %shl298, %shr299, !dbg !2344
  %226 = load i64, i64* %c, align 8, !dbg !2344
  %shl301 = shl i64 %226, 25, !dbg !2344
  %227 = load i64, i64* %c, align 8, !dbg !2344
  %shr302 = lshr i64 %227, 39, !dbg !2344
  %or303 = or i64 %shl301, %shr302, !dbg !2344
  %xor304 = xor i64 %or300, %or303, !dbg !2344
  %xor305 = xor i64 %or297, %xor304, !dbg !2344
  %228 = load i64, i64* %c, align 8, !dbg !2344
  %229 = load i64, i64* %d, align 8, !dbg !2344
  %and306 = and i64 %228, %229, !dbg !2344
  %230 = load i64, i64* %e, align 8, !dbg !2344
  %231 = load i64, i64* %c, align 8, !dbg !2344
  %232 = load i64, i64* %d, align 8, !dbg !2344
  %or307 = or i64 %231, %232, !dbg !2344
  %and308 = and i64 %230, %or307, !dbg !2344
  %or309 = or i64 %and306, %and308, !dbg !2344
  %add310 = add i64 %xor305, %or309, !dbg !2344
  store i64 %add310, i64* %t0294, align 8, !dbg !2344
  call void @llvm.dbg.declare(metadata i64* %t1311, metadata !2346, metadata !DIExpression()), !dbg !2344
  %233 = load i64, i64* %b, align 8, !dbg !2344
  %234 = load i64, i64* %g, align 8, !dbg !2344
  %shl312 = shl i64 %234, 50, !dbg !2344
  %235 = load i64, i64* %g, align 8, !dbg !2344
  %shr313 = lshr i64 %235, 14, !dbg !2344
  %or314 = or i64 %shl312, %shr313, !dbg !2344
  %236 = load i64, i64* %g, align 8, !dbg !2344
  %shl315 = shl i64 %236, 46, !dbg !2344
  %237 = load i64, i64* %g, align 8, !dbg !2344
  %shr316 = lshr i64 %237, 18, !dbg !2344
  %or317 = or i64 %shl315, %shr316, !dbg !2344
  %238 = load i64, i64* %g, align 8, !dbg !2344
  %shl318 = shl i64 %238, 23, !dbg !2344
  %239 = load i64, i64* %g, align 8, !dbg !2344
  %shr319 = lshr i64 %239, 41, !dbg !2344
  %or320 = or i64 %shl318, %shr319, !dbg !2344
  %xor321 = xor i64 %or317, %or320, !dbg !2344
  %xor322 = xor i64 %or314, %xor321, !dbg !2344
  %240 = load i64, i64* %a, align 8, !dbg !2344
  %241 = load i64, i64* %g, align 8, !dbg !2344
  %242 = load i64, i64* %h, align 8, !dbg !2344
  %243 = load i64, i64* %a, align 8, !dbg !2344
  %xor323 = xor i64 %242, %243, !dbg !2344
  %and324 = and i64 %241, %xor323, !dbg !2344
  %xor325 = xor i64 %240, %and324, !dbg !2344
  %244 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 6), align 8, !dbg !2344
  %arrayidx326 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 6, !dbg !2344
  %245 = load i64, i64* %arrayidx326, align 8, !dbg !2344
  %add327 = add i64 %244, %245, !dbg !2344
  %add328 = add i64 %xor325, %add327, !dbg !2344
  %add329 = add i64 %xor322, %add328, !dbg !2344
  %add330 = add i64 %233, %add329, !dbg !2344
  store i64 %add330, i64* %t1311, align 8, !dbg !2344
  %246 = load i64, i64* %f, align 8, !dbg !2344
  %247 = load i64, i64* %t1311, align 8, !dbg !2344
  %add331 = add i64 %246, %247, !dbg !2344
  store i64 %add331, i64* %f, align 8, !dbg !2344
  %248 = load i64, i64* %t0294, align 8, !dbg !2344
  %249 = load i64, i64* %t1311, align 8, !dbg !2344
  %add332 = add i64 %248, %249, !dbg !2344
  store i64 %add332, i64* %b, align 8, !dbg !2344
  br label %do.end.333, !dbg !2344

do.end.333:                                       ; preds = %do.body.293
  br label %do.body.334, !dbg !2347

do.body.334:                                      ; preds = %do.end.333
  call void @llvm.dbg.declare(metadata i64* %t0335, metadata !2348, metadata !DIExpression()), !dbg !2350
  %250 = load i64, i64* %b, align 8, !dbg !2351
  %shl336 = shl i64 %250, 36, !dbg !2351
  %251 = load i64, i64* %b, align 8, !dbg !2351
  %shr337 = lshr i64 %251, 28, !dbg !2351
  %or338 = or i64 %shl336, %shr337, !dbg !2351
  %252 = load i64, i64* %b, align 8, !dbg !2351
  %shl339 = shl i64 %252, 30, !dbg !2351
  %253 = load i64, i64* %b, align 8, !dbg !2351
  %shr340 = lshr i64 %253, 34, !dbg !2351
  %or341 = or i64 %shl339, %shr340, !dbg !2351
  %254 = load i64, i64* %b, align 8, !dbg !2351
  %shl342 = shl i64 %254, 25, !dbg !2351
  %255 = load i64, i64* %b, align 8, !dbg !2351
  %shr343 = lshr i64 %255, 39, !dbg !2351
  %or344 = or i64 %shl342, %shr343, !dbg !2351
  %xor345 = xor i64 %or341, %or344, !dbg !2351
  %xor346 = xor i64 %or338, %xor345, !dbg !2351
  %256 = load i64, i64* %b, align 8, !dbg !2351
  %257 = load i64, i64* %c, align 8, !dbg !2351
  %and347 = and i64 %256, %257, !dbg !2351
  %258 = load i64, i64* %d, align 8, !dbg !2351
  %259 = load i64, i64* %b, align 8, !dbg !2351
  %260 = load i64, i64* %c, align 8, !dbg !2351
  %or348 = or i64 %259, %260, !dbg !2351
  %and349 = and i64 %258, %or348, !dbg !2351
  %or350 = or i64 %and347, %and349, !dbg !2351
  %add351 = add i64 %xor346, %or350, !dbg !2351
  store i64 %add351, i64* %t0335, align 8, !dbg !2351
  call void @llvm.dbg.declare(metadata i64* %t1352, metadata !2353, metadata !DIExpression()), !dbg !2351
  %261 = load i64, i64* %a, align 8, !dbg !2351
  %262 = load i64, i64* %f, align 8, !dbg !2351
  %shl353 = shl i64 %262, 50, !dbg !2351
  %263 = load i64, i64* %f, align 8, !dbg !2351
  %shr354 = lshr i64 %263, 14, !dbg !2351
  %or355 = or i64 %shl353, %shr354, !dbg !2351
  %264 = load i64, i64* %f, align 8, !dbg !2351
  %shl356 = shl i64 %264, 46, !dbg !2351
  %265 = load i64, i64* %f, align 8, !dbg !2351
  %shr357 = lshr i64 %265, 18, !dbg !2351
  %or358 = or i64 %shl356, %shr357, !dbg !2351
  %266 = load i64, i64* %f, align 8, !dbg !2351
  %shl359 = shl i64 %266, 23, !dbg !2351
  %267 = load i64, i64* %f, align 8, !dbg !2351
  %shr360 = lshr i64 %267, 41, !dbg !2351
  %or361 = or i64 %shl359, %shr360, !dbg !2351
  %xor362 = xor i64 %or358, %or361, !dbg !2351
  %xor363 = xor i64 %or355, %xor362, !dbg !2351
  %268 = load i64, i64* %h, align 8, !dbg !2351
  %269 = load i64, i64* %f, align 8, !dbg !2351
  %270 = load i64, i64* %g, align 8, !dbg !2351
  %271 = load i64, i64* %h, align 8, !dbg !2351
  %xor364 = xor i64 %270, %271, !dbg !2351
  %and365 = and i64 %269, %xor364, !dbg !2351
  %xor366 = xor i64 %268, %and365, !dbg !2351
  %272 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 7), align 8, !dbg !2351
  %arrayidx367 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 7, !dbg !2351
  %273 = load i64, i64* %arrayidx367, align 8, !dbg !2351
  %add368 = add i64 %272, %273, !dbg !2351
  %add369 = add i64 %xor366, %add368, !dbg !2351
  %add370 = add i64 %xor363, %add369, !dbg !2351
  %add371 = add i64 %261, %add370, !dbg !2351
  store i64 %add371, i64* %t1352, align 8, !dbg !2351
  %274 = load i64, i64* %e, align 8, !dbg !2351
  %275 = load i64, i64* %t1352, align 8, !dbg !2351
  %add372 = add i64 %274, %275, !dbg !2351
  store i64 %add372, i64* %e, align 8, !dbg !2351
  %276 = load i64, i64* %t0335, align 8, !dbg !2351
  %277 = load i64, i64* %t1352, align 8, !dbg !2351
  %add373 = add i64 %276, %277, !dbg !2351
  store i64 %add373, i64* %a, align 8, !dbg !2351
  br label %do.end.374, !dbg !2351

do.end.374:                                       ; preds = %do.body.334
  br label %do.body.375, !dbg !2354

do.body.375:                                      ; preds = %do.end.374
  call void @llvm.dbg.declare(metadata i64* %t0376, metadata !2355, metadata !DIExpression()), !dbg !2357
  %278 = load i64, i64* %a, align 8, !dbg !2358
  %shl377 = shl i64 %278, 36, !dbg !2358
  %279 = load i64, i64* %a, align 8, !dbg !2358
  %shr378 = lshr i64 %279, 28, !dbg !2358
  %or379 = or i64 %shl377, %shr378, !dbg !2358
  %280 = load i64, i64* %a, align 8, !dbg !2358
  %shl380 = shl i64 %280, 30, !dbg !2358
  %281 = load i64, i64* %a, align 8, !dbg !2358
  %shr381 = lshr i64 %281, 34, !dbg !2358
  %or382 = or i64 %shl380, %shr381, !dbg !2358
  %282 = load i64, i64* %a, align 8, !dbg !2358
  %shl383 = shl i64 %282, 25, !dbg !2358
  %283 = load i64, i64* %a, align 8, !dbg !2358
  %shr384 = lshr i64 %283, 39, !dbg !2358
  %or385 = or i64 %shl383, %shr384, !dbg !2358
  %xor386 = xor i64 %or382, %or385, !dbg !2358
  %xor387 = xor i64 %or379, %xor386, !dbg !2358
  %284 = load i64, i64* %a, align 8, !dbg !2358
  %285 = load i64, i64* %b, align 8, !dbg !2358
  %and388 = and i64 %284, %285, !dbg !2358
  %286 = load i64, i64* %c, align 8, !dbg !2358
  %287 = load i64, i64* %a, align 8, !dbg !2358
  %288 = load i64, i64* %b, align 8, !dbg !2358
  %or389 = or i64 %287, %288, !dbg !2358
  %and390 = and i64 %286, %or389, !dbg !2358
  %or391 = or i64 %and388, %and390, !dbg !2358
  %add392 = add i64 %xor387, %or391, !dbg !2358
  store i64 %add392, i64* %t0376, align 8, !dbg !2358
  call void @llvm.dbg.declare(metadata i64* %t1393, metadata !2360, metadata !DIExpression()), !dbg !2358
  %289 = load i64, i64* %h, align 8, !dbg !2358
  %290 = load i64, i64* %e, align 8, !dbg !2358
  %shl394 = shl i64 %290, 50, !dbg !2358
  %291 = load i64, i64* %e, align 8, !dbg !2358
  %shr395 = lshr i64 %291, 14, !dbg !2358
  %or396 = or i64 %shl394, %shr395, !dbg !2358
  %292 = load i64, i64* %e, align 8, !dbg !2358
  %shl397 = shl i64 %292, 46, !dbg !2358
  %293 = load i64, i64* %e, align 8, !dbg !2358
  %shr398 = lshr i64 %293, 18, !dbg !2358
  %or399 = or i64 %shl397, %shr398, !dbg !2358
  %294 = load i64, i64* %e, align 8, !dbg !2358
  %shl400 = shl i64 %294, 23, !dbg !2358
  %295 = load i64, i64* %e, align 8, !dbg !2358
  %shr401 = lshr i64 %295, 41, !dbg !2358
  %or402 = or i64 %shl400, %shr401, !dbg !2358
  %xor403 = xor i64 %or399, %or402, !dbg !2358
  %xor404 = xor i64 %or396, %xor403, !dbg !2358
  %296 = load i64, i64* %g, align 8, !dbg !2358
  %297 = load i64, i64* %e, align 8, !dbg !2358
  %298 = load i64, i64* %f, align 8, !dbg !2358
  %299 = load i64, i64* %g, align 8, !dbg !2358
  %xor405 = xor i64 %298, %299, !dbg !2358
  %and406 = and i64 %297, %xor405, !dbg !2358
  %xor407 = xor i64 %296, %and406, !dbg !2358
  %300 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 8), align 8, !dbg !2358
  %arrayidx408 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 8, !dbg !2358
  %301 = load i64, i64* %arrayidx408, align 8, !dbg !2358
  %add409 = add i64 %300, %301, !dbg !2358
  %add410 = add i64 %xor407, %add409, !dbg !2358
  %add411 = add i64 %xor404, %add410, !dbg !2358
  %add412 = add i64 %289, %add411, !dbg !2358
  store i64 %add412, i64* %t1393, align 8, !dbg !2358
  %302 = load i64, i64* %d, align 8, !dbg !2358
  %303 = load i64, i64* %t1393, align 8, !dbg !2358
  %add413 = add i64 %302, %303, !dbg !2358
  store i64 %add413, i64* %d, align 8, !dbg !2358
  %304 = load i64, i64* %t0376, align 8, !dbg !2358
  %305 = load i64, i64* %t1393, align 8, !dbg !2358
  %add414 = add i64 %304, %305, !dbg !2358
  store i64 %add414, i64* %h, align 8, !dbg !2358
  br label %do.end.415, !dbg !2358

do.end.415:                                       ; preds = %do.body.375
  br label %do.body.416, !dbg !2361

do.body.416:                                      ; preds = %do.end.415
  call void @llvm.dbg.declare(metadata i64* %t0417, metadata !2362, metadata !DIExpression()), !dbg !2364
  %306 = load i64, i64* %h, align 8, !dbg !2365
  %shl418 = shl i64 %306, 36, !dbg !2365
  %307 = load i64, i64* %h, align 8, !dbg !2365
  %shr419 = lshr i64 %307, 28, !dbg !2365
  %or420 = or i64 %shl418, %shr419, !dbg !2365
  %308 = load i64, i64* %h, align 8, !dbg !2365
  %shl421 = shl i64 %308, 30, !dbg !2365
  %309 = load i64, i64* %h, align 8, !dbg !2365
  %shr422 = lshr i64 %309, 34, !dbg !2365
  %or423 = or i64 %shl421, %shr422, !dbg !2365
  %310 = load i64, i64* %h, align 8, !dbg !2365
  %shl424 = shl i64 %310, 25, !dbg !2365
  %311 = load i64, i64* %h, align 8, !dbg !2365
  %shr425 = lshr i64 %311, 39, !dbg !2365
  %or426 = or i64 %shl424, %shr425, !dbg !2365
  %xor427 = xor i64 %or423, %or426, !dbg !2365
  %xor428 = xor i64 %or420, %xor427, !dbg !2365
  %312 = load i64, i64* %h, align 8, !dbg !2365
  %313 = load i64, i64* %a, align 8, !dbg !2365
  %and429 = and i64 %312, %313, !dbg !2365
  %314 = load i64, i64* %b, align 8, !dbg !2365
  %315 = load i64, i64* %h, align 8, !dbg !2365
  %316 = load i64, i64* %a, align 8, !dbg !2365
  %or430 = or i64 %315, %316, !dbg !2365
  %and431 = and i64 %314, %or430, !dbg !2365
  %or432 = or i64 %and429, %and431, !dbg !2365
  %add433 = add i64 %xor428, %or432, !dbg !2365
  store i64 %add433, i64* %t0417, align 8, !dbg !2365
  call void @llvm.dbg.declare(metadata i64* %t1434, metadata !2367, metadata !DIExpression()), !dbg !2365
  %317 = load i64, i64* %g, align 8, !dbg !2365
  %318 = load i64, i64* %d, align 8, !dbg !2365
  %shl435 = shl i64 %318, 50, !dbg !2365
  %319 = load i64, i64* %d, align 8, !dbg !2365
  %shr436 = lshr i64 %319, 14, !dbg !2365
  %or437 = or i64 %shl435, %shr436, !dbg !2365
  %320 = load i64, i64* %d, align 8, !dbg !2365
  %shl438 = shl i64 %320, 46, !dbg !2365
  %321 = load i64, i64* %d, align 8, !dbg !2365
  %shr439 = lshr i64 %321, 18, !dbg !2365
  %or440 = or i64 %shl438, %shr439, !dbg !2365
  %322 = load i64, i64* %d, align 8, !dbg !2365
  %shl441 = shl i64 %322, 23, !dbg !2365
  %323 = load i64, i64* %d, align 8, !dbg !2365
  %shr442 = lshr i64 %323, 41, !dbg !2365
  %or443 = or i64 %shl441, %shr442, !dbg !2365
  %xor444 = xor i64 %or440, %or443, !dbg !2365
  %xor445 = xor i64 %or437, %xor444, !dbg !2365
  %324 = load i64, i64* %f, align 8, !dbg !2365
  %325 = load i64, i64* %d, align 8, !dbg !2365
  %326 = load i64, i64* %e, align 8, !dbg !2365
  %327 = load i64, i64* %f, align 8, !dbg !2365
  %xor446 = xor i64 %326, %327, !dbg !2365
  %and447 = and i64 %325, %xor446, !dbg !2365
  %xor448 = xor i64 %324, %and447, !dbg !2365
  %328 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 9), align 8, !dbg !2365
  %arrayidx449 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 9, !dbg !2365
  %329 = load i64, i64* %arrayidx449, align 8, !dbg !2365
  %add450 = add i64 %328, %329, !dbg !2365
  %add451 = add i64 %xor448, %add450, !dbg !2365
  %add452 = add i64 %xor445, %add451, !dbg !2365
  %add453 = add i64 %317, %add452, !dbg !2365
  store i64 %add453, i64* %t1434, align 8, !dbg !2365
  %330 = load i64, i64* %c, align 8, !dbg !2365
  %331 = load i64, i64* %t1434, align 8, !dbg !2365
  %add454 = add i64 %330, %331, !dbg !2365
  store i64 %add454, i64* %c, align 8, !dbg !2365
  %332 = load i64, i64* %t0417, align 8, !dbg !2365
  %333 = load i64, i64* %t1434, align 8, !dbg !2365
  %add455 = add i64 %332, %333, !dbg !2365
  store i64 %add455, i64* %g, align 8, !dbg !2365
  br label %do.end.456, !dbg !2365

do.end.456:                                       ; preds = %do.body.416
  br label %do.body.457, !dbg !2368

do.body.457:                                      ; preds = %do.end.456
  call void @llvm.dbg.declare(metadata i64* %t0458, metadata !2369, metadata !DIExpression()), !dbg !2371
  %334 = load i64, i64* %g, align 8, !dbg !2372
  %shl459 = shl i64 %334, 36, !dbg !2372
  %335 = load i64, i64* %g, align 8, !dbg !2372
  %shr460 = lshr i64 %335, 28, !dbg !2372
  %or461 = or i64 %shl459, %shr460, !dbg !2372
  %336 = load i64, i64* %g, align 8, !dbg !2372
  %shl462 = shl i64 %336, 30, !dbg !2372
  %337 = load i64, i64* %g, align 8, !dbg !2372
  %shr463 = lshr i64 %337, 34, !dbg !2372
  %or464 = or i64 %shl462, %shr463, !dbg !2372
  %338 = load i64, i64* %g, align 8, !dbg !2372
  %shl465 = shl i64 %338, 25, !dbg !2372
  %339 = load i64, i64* %g, align 8, !dbg !2372
  %shr466 = lshr i64 %339, 39, !dbg !2372
  %or467 = or i64 %shl465, %shr466, !dbg !2372
  %xor468 = xor i64 %or464, %or467, !dbg !2372
  %xor469 = xor i64 %or461, %xor468, !dbg !2372
  %340 = load i64, i64* %g, align 8, !dbg !2372
  %341 = load i64, i64* %h, align 8, !dbg !2372
  %and470 = and i64 %340, %341, !dbg !2372
  %342 = load i64, i64* %a, align 8, !dbg !2372
  %343 = load i64, i64* %g, align 8, !dbg !2372
  %344 = load i64, i64* %h, align 8, !dbg !2372
  %or471 = or i64 %343, %344, !dbg !2372
  %and472 = and i64 %342, %or471, !dbg !2372
  %or473 = or i64 %and470, %and472, !dbg !2372
  %add474 = add i64 %xor469, %or473, !dbg !2372
  store i64 %add474, i64* %t0458, align 8, !dbg !2372
  call void @llvm.dbg.declare(metadata i64* %t1475, metadata !2374, metadata !DIExpression()), !dbg !2372
  %345 = load i64, i64* %f, align 8, !dbg !2372
  %346 = load i64, i64* %c, align 8, !dbg !2372
  %shl476 = shl i64 %346, 50, !dbg !2372
  %347 = load i64, i64* %c, align 8, !dbg !2372
  %shr477 = lshr i64 %347, 14, !dbg !2372
  %or478 = or i64 %shl476, %shr477, !dbg !2372
  %348 = load i64, i64* %c, align 8, !dbg !2372
  %shl479 = shl i64 %348, 46, !dbg !2372
  %349 = load i64, i64* %c, align 8, !dbg !2372
  %shr480 = lshr i64 %349, 18, !dbg !2372
  %or481 = or i64 %shl479, %shr480, !dbg !2372
  %350 = load i64, i64* %c, align 8, !dbg !2372
  %shl482 = shl i64 %350, 23, !dbg !2372
  %351 = load i64, i64* %c, align 8, !dbg !2372
  %shr483 = lshr i64 %351, 41, !dbg !2372
  %or484 = or i64 %shl482, %shr483, !dbg !2372
  %xor485 = xor i64 %or481, %or484, !dbg !2372
  %xor486 = xor i64 %or478, %xor485, !dbg !2372
  %352 = load i64, i64* %e, align 8, !dbg !2372
  %353 = load i64, i64* %c, align 8, !dbg !2372
  %354 = load i64, i64* %d, align 8, !dbg !2372
  %355 = load i64, i64* %e, align 8, !dbg !2372
  %xor487 = xor i64 %354, %355, !dbg !2372
  %and488 = and i64 %353, %xor487, !dbg !2372
  %xor489 = xor i64 %352, %and488, !dbg !2372
  %356 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 10), align 8, !dbg !2372
  %arrayidx490 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 10, !dbg !2372
  %357 = load i64, i64* %arrayidx490, align 8, !dbg !2372
  %add491 = add i64 %356, %357, !dbg !2372
  %add492 = add i64 %xor489, %add491, !dbg !2372
  %add493 = add i64 %xor486, %add492, !dbg !2372
  %add494 = add i64 %345, %add493, !dbg !2372
  store i64 %add494, i64* %t1475, align 8, !dbg !2372
  %358 = load i64, i64* %b, align 8, !dbg !2372
  %359 = load i64, i64* %t1475, align 8, !dbg !2372
  %add495 = add i64 %358, %359, !dbg !2372
  store i64 %add495, i64* %b, align 8, !dbg !2372
  %360 = load i64, i64* %t0458, align 8, !dbg !2372
  %361 = load i64, i64* %t1475, align 8, !dbg !2372
  %add496 = add i64 %360, %361, !dbg !2372
  store i64 %add496, i64* %f, align 8, !dbg !2372
  br label %do.end.497, !dbg !2372

do.end.497:                                       ; preds = %do.body.457
  br label %do.body.498, !dbg !2375

do.body.498:                                      ; preds = %do.end.497
  call void @llvm.dbg.declare(metadata i64* %t0499, metadata !2376, metadata !DIExpression()), !dbg !2378
  %362 = load i64, i64* %f, align 8, !dbg !2379
  %shl500 = shl i64 %362, 36, !dbg !2379
  %363 = load i64, i64* %f, align 8, !dbg !2379
  %shr501 = lshr i64 %363, 28, !dbg !2379
  %or502 = or i64 %shl500, %shr501, !dbg !2379
  %364 = load i64, i64* %f, align 8, !dbg !2379
  %shl503 = shl i64 %364, 30, !dbg !2379
  %365 = load i64, i64* %f, align 8, !dbg !2379
  %shr504 = lshr i64 %365, 34, !dbg !2379
  %or505 = or i64 %shl503, %shr504, !dbg !2379
  %366 = load i64, i64* %f, align 8, !dbg !2379
  %shl506 = shl i64 %366, 25, !dbg !2379
  %367 = load i64, i64* %f, align 8, !dbg !2379
  %shr507 = lshr i64 %367, 39, !dbg !2379
  %or508 = or i64 %shl506, %shr507, !dbg !2379
  %xor509 = xor i64 %or505, %or508, !dbg !2379
  %xor510 = xor i64 %or502, %xor509, !dbg !2379
  %368 = load i64, i64* %f, align 8, !dbg !2379
  %369 = load i64, i64* %g, align 8, !dbg !2379
  %and511 = and i64 %368, %369, !dbg !2379
  %370 = load i64, i64* %h, align 8, !dbg !2379
  %371 = load i64, i64* %f, align 8, !dbg !2379
  %372 = load i64, i64* %g, align 8, !dbg !2379
  %or512 = or i64 %371, %372, !dbg !2379
  %and513 = and i64 %370, %or512, !dbg !2379
  %or514 = or i64 %and511, %and513, !dbg !2379
  %add515 = add i64 %xor510, %or514, !dbg !2379
  store i64 %add515, i64* %t0499, align 8, !dbg !2379
  call void @llvm.dbg.declare(metadata i64* %t1516, metadata !2381, metadata !DIExpression()), !dbg !2379
  %373 = load i64, i64* %e, align 8, !dbg !2379
  %374 = load i64, i64* %b, align 8, !dbg !2379
  %shl517 = shl i64 %374, 50, !dbg !2379
  %375 = load i64, i64* %b, align 8, !dbg !2379
  %shr518 = lshr i64 %375, 14, !dbg !2379
  %or519 = or i64 %shl517, %shr518, !dbg !2379
  %376 = load i64, i64* %b, align 8, !dbg !2379
  %shl520 = shl i64 %376, 46, !dbg !2379
  %377 = load i64, i64* %b, align 8, !dbg !2379
  %shr521 = lshr i64 %377, 18, !dbg !2379
  %or522 = or i64 %shl520, %shr521, !dbg !2379
  %378 = load i64, i64* %b, align 8, !dbg !2379
  %shl523 = shl i64 %378, 23, !dbg !2379
  %379 = load i64, i64* %b, align 8, !dbg !2379
  %shr524 = lshr i64 %379, 41, !dbg !2379
  %or525 = or i64 %shl523, %shr524, !dbg !2379
  %xor526 = xor i64 %or522, %or525, !dbg !2379
  %xor527 = xor i64 %or519, %xor526, !dbg !2379
  %380 = load i64, i64* %d, align 8, !dbg !2379
  %381 = load i64, i64* %b, align 8, !dbg !2379
  %382 = load i64, i64* %c, align 8, !dbg !2379
  %383 = load i64, i64* %d, align 8, !dbg !2379
  %xor528 = xor i64 %382, %383, !dbg !2379
  %and529 = and i64 %381, %xor528, !dbg !2379
  %xor530 = xor i64 %380, %and529, !dbg !2379
  %384 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 11), align 8, !dbg !2379
  %arrayidx531 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 11, !dbg !2379
  %385 = load i64, i64* %arrayidx531, align 8, !dbg !2379
  %add532 = add i64 %384, %385, !dbg !2379
  %add533 = add i64 %xor530, %add532, !dbg !2379
  %add534 = add i64 %xor527, %add533, !dbg !2379
  %add535 = add i64 %373, %add534, !dbg !2379
  store i64 %add535, i64* %t1516, align 8, !dbg !2379
  %386 = load i64, i64* %a, align 8, !dbg !2379
  %387 = load i64, i64* %t1516, align 8, !dbg !2379
  %add536 = add i64 %386, %387, !dbg !2379
  store i64 %add536, i64* %a, align 8, !dbg !2379
  %388 = load i64, i64* %t0499, align 8, !dbg !2379
  %389 = load i64, i64* %t1516, align 8, !dbg !2379
  %add537 = add i64 %388, %389, !dbg !2379
  store i64 %add537, i64* %e, align 8, !dbg !2379
  br label %do.end.538, !dbg !2379

do.end.538:                                       ; preds = %do.body.498
  br label %do.body.539, !dbg !2382

do.body.539:                                      ; preds = %do.end.538
  call void @llvm.dbg.declare(metadata i64* %t0540, metadata !2383, metadata !DIExpression()), !dbg !2385
  %390 = load i64, i64* %e, align 8, !dbg !2386
  %shl541 = shl i64 %390, 36, !dbg !2386
  %391 = load i64, i64* %e, align 8, !dbg !2386
  %shr542 = lshr i64 %391, 28, !dbg !2386
  %or543 = or i64 %shl541, %shr542, !dbg !2386
  %392 = load i64, i64* %e, align 8, !dbg !2386
  %shl544 = shl i64 %392, 30, !dbg !2386
  %393 = load i64, i64* %e, align 8, !dbg !2386
  %shr545 = lshr i64 %393, 34, !dbg !2386
  %or546 = or i64 %shl544, %shr545, !dbg !2386
  %394 = load i64, i64* %e, align 8, !dbg !2386
  %shl547 = shl i64 %394, 25, !dbg !2386
  %395 = load i64, i64* %e, align 8, !dbg !2386
  %shr548 = lshr i64 %395, 39, !dbg !2386
  %or549 = or i64 %shl547, %shr548, !dbg !2386
  %xor550 = xor i64 %or546, %or549, !dbg !2386
  %xor551 = xor i64 %or543, %xor550, !dbg !2386
  %396 = load i64, i64* %e, align 8, !dbg !2386
  %397 = load i64, i64* %f, align 8, !dbg !2386
  %and552 = and i64 %396, %397, !dbg !2386
  %398 = load i64, i64* %g, align 8, !dbg !2386
  %399 = load i64, i64* %e, align 8, !dbg !2386
  %400 = load i64, i64* %f, align 8, !dbg !2386
  %or553 = or i64 %399, %400, !dbg !2386
  %and554 = and i64 %398, %or553, !dbg !2386
  %or555 = or i64 %and552, %and554, !dbg !2386
  %add556 = add i64 %xor551, %or555, !dbg !2386
  store i64 %add556, i64* %t0540, align 8, !dbg !2386
  call void @llvm.dbg.declare(metadata i64* %t1557, metadata !2388, metadata !DIExpression()), !dbg !2386
  %401 = load i64, i64* %d, align 8, !dbg !2386
  %402 = load i64, i64* %a, align 8, !dbg !2386
  %shl558 = shl i64 %402, 50, !dbg !2386
  %403 = load i64, i64* %a, align 8, !dbg !2386
  %shr559 = lshr i64 %403, 14, !dbg !2386
  %or560 = or i64 %shl558, %shr559, !dbg !2386
  %404 = load i64, i64* %a, align 8, !dbg !2386
  %shl561 = shl i64 %404, 46, !dbg !2386
  %405 = load i64, i64* %a, align 8, !dbg !2386
  %shr562 = lshr i64 %405, 18, !dbg !2386
  %or563 = or i64 %shl561, %shr562, !dbg !2386
  %406 = load i64, i64* %a, align 8, !dbg !2386
  %shl564 = shl i64 %406, 23, !dbg !2386
  %407 = load i64, i64* %a, align 8, !dbg !2386
  %shr565 = lshr i64 %407, 41, !dbg !2386
  %or566 = or i64 %shl564, %shr565, !dbg !2386
  %xor567 = xor i64 %or563, %or566, !dbg !2386
  %xor568 = xor i64 %or560, %xor567, !dbg !2386
  %408 = load i64, i64* %c, align 8, !dbg !2386
  %409 = load i64, i64* %a, align 8, !dbg !2386
  %410 = load i64, i64* %b, align 8, !dbg !2386
  %411 = load i64, i64* %c, align 8, !dbg !2386
  %xor569 = xor i64 %410, %411, !dbg !2386
  %and570 = and i64 %409, %xor569, !dbg !2386
  %xor571 = xor i64 %408, %and570, !dbg !2386
  %412 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 12), align 8, !dbg !2386
  %arrayidx572 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 12, !dbg !2386
  %413 = load i64, i64* %arrayidx572, align 8, !dbg !2386
  %add573 = add i64 %412, %413, !dbg !2386
  %add574 = add i64 %xor571, %add573, !dbg !2386
  %add575 = add i64 %xor568, %add574, !dbg !2386
  %add576 = add i64 %401, %add575, !dbg !2386
  store i64 %add576, i64* %t1557, align 8, !dbg !2386
  %414 = load i64, i64* %h, align 8, !dbg !2386
  %415 = load i64, i64* %t1557, align 8, !dbg !2386
  %add577 = add i64 %414, %415, !dbg !2386
  store i64 %add577, i64* %h, align 8, !dbg !2386
  %416 = load i64, i64* %t0540, align 8, !dbg !2386
  %417 = load i64, i64* %t1557, align 8, !dbg !2386
  %add578 = add i64 %416, %417, !dbg !2386
  store i64 %add578, i64* %d, align 8, !dbg !2386
  br label %do.end.579, !dbg !2386

do.end.579:                                       ; preds = %do.body.539
  br label %do.body.580, !dbg !2389

do.body.580:                                      ; preds = %do.end.579
  call void @llvm.dbg.declare(metadata i64* %t0581, metadata !2390, metadata !DIExpression()), !dbg !2392
  %418 = load i64, i64* %d, align 8, !dbg !2393
  %shl582 = shl i64 %418, 36, !dbg !2393
  %419 = load i64, i64* %d, align 8, !dbg !2393
  %shr583 = lshr i64 %419, 28, !dbg !2393
  %or584 = or i64 %shl582, %shr583, !dbg !2393
  %420 = load i64, i64* %d, align 8, !dbg !2393
  %shl585 = shl i64 %420, 30, !dbg !2393
  %421 = load i64, i64* %d, align 8, !dbg !2393
  %shr586 = lshr i64 %421, 34, !dbg !2393
  %or587 = or i64 %shl585, %shr586, !dbg !2393
  %422 = load i64, i64* %d, align 8, !dbg !2393
  %shl588 = shl i64 %422, 25, !dbg !2393
  %423 = load i64, i64* %d, align 8, !dbg !2393
  %shr589 = lshr i64 %423, 39, !dbg !2393
  %or590 = or i64 %shl588, %shr589, !dbg !2393
  %xor591 = xor i64 %or587, %or590, !dbg !2393
  %xor592 = xor i64 %or584, %xor591, !dbg !2393
  %424 = load i64, i64* %d, align 8, !dbg !2393
  %425 = load i64, i64* %e, align 8, !dbg !2393
  %and593 = and i64 %424, %425, !dbg !2393
  %426 = load i64, i64* %f, align 8, !dbg !2393
  %427 = load i64, i64* %d, align 8, !dbg !2393
  %428 = load i64, i64* %e, align 8, !dbg !2393
  %or594 = or i64 %427, %428, !dbg !2393
  %and595 = and i64 %426, %or594, !dbg !2393
  %or596 = or i64 %and593, %and595, !dbg !2393
  %add597 = add i64 %xor592, %or596, !dbg !2393
  store i64 %add597, i64* %t0581, align 8, !dbg !2393
  call void @llvm.dbg.declare(metadata i64* %t1598, metadata !2395, metadata !DIExpression()), !dbg !2393
  %429 = load i64, i64* %c, align 8, !dbg !2393
  %430 = load i64, i64* %h, align 8, !dbg !2393
  %shl599 = shl i64 %430, 50, !dbg !2393
  %431 = load i64, i64* %h, align 8, !dbg !2393
  %shr600 = lshr i64 %431, 14, !dbg !2393
  %or601 = or i64 %shl599, %shr600, !dbg !2393
  %432 = load i64, i64* %h, align 8, !dbg !2393
  %shl602 = shl i64 %432, 46, !dbg !2393
  %433 = load i64, i64* %h, align 8, !dbg !2393
  %shr603 = lshr i64 %433, 18, !dbg !2393
  %or604 = or i64 %shl602, %shr603, !dbg !2393
  %434 = load i64, i64* %h, align 8, !dbg !2393
  %shl605 = shl i64 %434, 23, !dbg !2393
  %435 = load i64, i64* %h, align 8, !dbg !2393
  %shr606 = lshr i64 %435, 41, !dbg !2393
  %or607 = or i64 %shl605, %shr606, !dbg !2393
  %xor608 = xor i64 %or604, %or607, !dbg !2393
  %xor609 = xor i64 %or601, %xor608, !dbg !2393
  %436 = load i64, i64* %b, align 8, !dbg !2393
  %437 = load i64, i64* %h, align 8, !dbg !2393
  %438 = load i64, i64* %a, align 8, !dbg !2393
  %439 = load i64, i64* %b, align 8, !dbg !2393
  %xor610 = xor i64 %438, %439, !dbg !2393
  %and611 = and i64 %437, %xor610, !dbg !2393
  %xor612 = xor i64 %436, %and611, !dbg !2393
  %440 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 13), align 8, !dbg !2393
  %arrayidx613 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 13, !dbg !2393
  %441 = load i64, i64* %arrayidx613, align 8, !dbg !2393
  %add614 = add i64 %440, %441, !dbg !2393
  %add615 = add i64 %xor612, %add614, !dbg !2393
  %add616 = add i64 %xor609, %add615, !dbg !2393
  %add617 = add i64 %429, %add616, !dbg !2393
  store i64 %add617, i64* %t1598, align 8, !dbg !2393
  %442 = load i64, i64* %g, align 8, !dbg !2393
  %443 = load i64, i64* %t1598, align 8, !dbg !2393
  %add618 = add i64 %442, %443, !dbg !2393
  store i64 %add618, i64* %g, align 8, !dbg !2393
  %444 = load i64, i64* %t0581, align 8, !dbg !2393
  %445 = load i64, i64* %t1598, align 8, !dbg !2393
  %add619 = add i64 %444, %445, !dbg !2393
  store i64 %add619, i64* %c, align 8, !dbg !2393
  br label %do.end.620, !dbg !2393

do.end.620:                                       ; preds = %do.body.580
  br label %do.body.621, !dbg !2396

do.body.621:                                      ; preds = %do.end.620
  call void @llvm.dbg.declare(metadata i64* %t0622, metadata !2397, metadata !DIExpression()), !dbg !2399
  %446 = load i64, i64* %c, align 8, !dbg !2400
  %shl623 = shl i64 %446, 36, !dbg !2400
  %447 = load i64, i64* %c, align 8, !dbg !2400
  %shr624 = lshr i64 %447, 28, !dbg !2400
  %or625 = or i64 %shl623, %shr624, !dbg !2400
  %448 = load i64, i64* %c, align 8, !dbg !2400
  %shl626 = shl i64 %448, 30, !dbg !2400
  %449 = load i64, i64* %c, align 8, !dbg !2400
  %shr627 = lshr i64 %449, 34, !dbg !2400
  %or628 = or i64 %shl626, %shr627, !dbg !2400
  %450 = load i64, i64* %c, align 8, !dbg !2400
  %shl629 = shl i64 %450, 25, !dbg !2400
  %451 = load i64, i64* %c, align 8, !dbg !2400
  %shr630 = lshr i64 %451, 39, !dbg !2400
  %or631 = or i64 %shl629, %shr630, !dbg !2400
  %xor632 = xor i64 %or628, %or631, !dbg !2400
  %xor633 = xor i64 %or625, %xor632, !dbg !2400
  %452 = load i64, i64* %c, align 8, !dbg !2400
  %453 = load i64, i64* %d, align 8, !dbg !2400
  %and634 = and i64 %452, %453, !dbg !2400
  %454 = load i64, i64* %e, align 8, !dbg !2400
  %455 = load i64, i64* %c, align 8, !dbg !2400
  %456 = load i64, i64* %d, align 8, !dbg !2400
  %or635 = or i64 %455, %456, !dbg !2400
  %and636 = and i64 %454, %or635, !dbg !2400
  %or637 = or i64 %and634, %and636, !dbg !2400
  %add638 = add i64 %xor633, %or637, !dbg !2400
  store i64 %add638, i64* %t0622, align 8, !dbg !2400
  call void @llvm.dbg.declare(metadata i64* %t1639, metadata !2402, metadata !DIExpression()), !dbg !2400
  %457 = load i64, i64* %b, align 8, !dbg !2400
  %458 = load i64, i64* %g, align 8, !dbg !2400
  %shl640 = shl i64 %458, 50, !dbg !2400
  %459 = load i64, i64* %g, align 8, !dbg !2400
  %shr641 = lshr i64 %459, 14, !dbg !2400
  %or642 = or i64 %shl640, %shr641, !dbg !2400
  %460 = load i64, i64* %g, align 8, !dbg !2400
  %shl643 = shl i64 %460, 46, !dbg !2400
  %461 = load i64, i64* %g, align 8, !dbg !2400
  %shr644 = lshr i64 %461, 18, !dbg !2400
  %or645 = or i64 %shl643, %shr644, !dbg !2400
  %462 = load i64, i64* %g, align 8, !dbg !2400
  %shl646 = shl i64 %462, 23, !dbg !2400
  %463 = load i64, i64* %g, align 8, !dbg !2400
  %shr647 = lshr i64 %463, 41, !dbg !2400
  %or648 = or i64 %shl646, %shr647, !dbg !2400
  %xor649 = xor i64 %or645, %or648, !dbg !2400
  %xor650 = xor i64 %or642, %xor649, !dbg !2400
  %464 = load i64, i64* %a, align 8, !dbg !2400
  %465 = load i64, i64* %g, align 8, !dbg !2400
  %466 = load i64, i64* %h, align 8, !dbg !2400
  %467 = load i64, i64* %a, align 8, !dbg !2400
  %xor651 = xor i64 %466, %467, !dbg !2400
  %and652 = and i64 %465, %xor651, !dbg !2400
  %xor653 = xor i64 %464, %and652, !dbg !2400
  %468 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 14), align 8, !dbg !2400
  %arrayidx654 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 14, !dbg !2400
  %469 = load i64, i64* %arrayidx654, align 8, !dbg !2400
  %add655 = add i64 %468, %469, !dbg !2400
  %add656 = add i64 %xor653, %add655, !dbg !2400
  %add657 = add i64 %xor650, %add656, !dbg !2400
  %add658 = add i64 %457, %add657, !dbg !2400
  store i64 %add658, i64* %t1639, align 8, !dbg !2400
  %470 = load i64, i64* %f, align 8, !dbg !2400
  %471 = load i64, i64* %t1639, align 8, !dbg !2400
  %add659 = add i64 %470, %471, !dbg !2400
  store i64 %add659, i64* %f, align 8, !dbg !2400
  %472 = load i64, i64* %t0622, align 8, !dbg !2400
  %473 = load i64, i64* %t1639, align 8, !dbg !2400
  %add660 = add i64 %472, %473, !dbg !2400
  store i64 %add660, i64* %b, align 8, !dbg !2400
  br label %do.end.661, !dbg !2400

do.end.661:                                       ; preds = %do.body.621
  br label %do.body.662, !dbg !2403

do.body.662:                                      ; preds = %do.end.661
  call void @llvm.dbg.declare(metadata i64* %t0663, metadata !2404, metadata !DIExpression()), !dbg !2406
  %474 = load i64, i64* %b, align 8, !dbg !2407
  %shl664 = shl i64 %474, 36, !dbg !2407
  %475 = load i64, i64* %b, align 8, !dbg !2407
  %shr665 = lshr i64 %475, 28, !dbg !2407
  %or666 = or i64 %shl664, %shr665, !dbg !2407
  %476 = load i64, i64* %b, align 8, !dbg !2407
  %shl667 = shl i64 %476, 30, !dbg !2407
  %477 = load i64, i64* %b, align 8, !dbg !2407
  %shr668 = lshr i64 %477, 34, !dbg !2407
  %or669 = or i64 %shl667, %shr668, !dbg !2407
  %478 = load i64, i64* %b, align 8, !dbg !2407
  %shl670 = shl i64 %478, 25, !dbg !2407
  %479 = load i64, i64* %b, align 8, !dbg !2407
  %shr671 = lshr i64 %479, 39, !dbg !2407
  %or672 = or i64 %shl670, %shr671, !dbg !2407
  %xor673 = xor i64 %or669, %or672, !dbg !2407
  %xor674 = xor i64 %or666, %xor673, !dbg !2407
  %480 = load i64, i64* %b, align 8, !dbg !2407
  %481 = load i64, i64* %c, align 8, !dbg !2407
  %and675 = and i64 %480, %481, !dbg !2407
  %482 = load i64, i64* %d, align 8, !dbg !2407
  %483 = load i64, i64* %b, align 8, !dbg !2407
  %484 = load i64, i64* %c, align 8, !dbg !2407
  %or676 = or i64 %483, %484, !dbg !2407
  %and677 = and i64 %482, %or676, !dbg !2407
  %or678 = or i64 %and675, %and677, !dbg !2407
  %add679 = add i64 %xor674, %or678, !dbg !2407
  store i64 %add679, i64* %t0663, align 8, !dbg !2407
  call void @llvm.dbg.declare(metadata i64* %t1680, metadata !2409, metadata !DIExpression()), !dbg !2407
  %485 = load i64, i64* %a, align 8, !dbg !2407
  %486 = load i64, i64* %f, align 8, !dbg !2407
  %shl681 = shl i64 %486, 50, !dbg !2407
  %487 = load i64, i64* %f, align 8, !dbg !2407
  %shr682 = lshr i64 %487, 14, !dbg !2407
  %or683 = or i64 %shl681, %shr682, !dbg !2407
  %488 = load i64, i64* %f, align 8, !dbg !2407
  %shl684 = shl i64 %488, 46, !dbg !2407
  %489 = load i64, i64* %f, align 8, !dbg !2407
  %shr685 = lshr i64 %489, 18, !dbg !2407
  %or686 = or i64 %shl684, %shr685, !dbg !2407
  %490 = load i64, i64* %f, align 8, !dbg !2407
  %shl687 = shl i64 %490, 23, !dbg !2407
  %491 = load i64, i64* %f, align 8, !dbg !2407
  %shr688 = lshr i64 %491, 41, !dbg !2407
  %or689 = or i64 %shl687, %shr688, !dbg !2407
  %xor690 = xor i64 %or686, %or689, !dbg !2407
  %xor691 = xor i64 %or683, %xor690, !dbg !2407
  %492 = load i64, i64* %h, align 8, !dbg !2407
  %493 = load i64, i64* %f, align 8, !dbg !2407
  %494 = load i64, i64* %g, align 8, !dbg !2407
  %495 = load i64, i64* %h, align 8, !dbg !2407
  %xor692 = xor i64 %494, %495, !dbg !2407
  %and693 = and i64 %493, %xor692, !dbg !2407
  %xor694 = xor i64 %492, %and693, !dbg !2407
  %496 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 15), align 8, !dbg !2407
  %arrayidx695 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 15, !dbg !2407
  %497 = load i64, i64* %arrayidx695, align 8, !dbg !2407
  %add696 = add i64 %496, %497, !dbg !2407
  %add697 = add i64 %xor694, %add696, !dbg !2407
  %add698 = add i64 %xor691, %add697, !dbg !2407
  %add699 = add i64 %485, %add698, !dbg !2407
  store i64 %add699, i64* %t1680, align 8, !dbg !2407
  %498 = load i64, i64* %e, align 8, !dbg !2407
  %499 = load i64, i64* %t1680, align 8, !dbg !2407
  %add700 = add i64 %498, %499, !dbg !2407
  store i64 %add700, i64* %e, align 8, !dbg !2407
  %500 = load i64, i64* %t0663, align 8, !dbg !2407
  %501 = load i64, i64* %t1680, align 8, !dbg !2407
  %add701 = add i64 %500, %501, !dbg !2407
  store i64 %add701, i64* %a, align 8, !dbg !2407
  br label %do.end.702, !dbg !2407

do.end.702:                                       ; preds = %do.body.662
  br label %do.body.703, !dbg !2410

do.body.703:                                      ; preds = %do.end.702
  call void @llvm.dbg.declare(metadata i64* %t0704, metadata !2411, metadata !DIExpression()), !dbg !2413
  %502 = load i64, i64* %a, align 8, !dbg !2414
  %shl705 = shl i64 %502, 36, !dbg !2414
  %503 = load i64, i64* %a, align 8, !dbg !2414
  %shr706 = lshr i64 %503, 28, !dbg !2414
  %or707 = or i64 %shl705, %shr706, !dbg !2414
  %504 = load i64, i64* %a, align 8, !dbg !2414
  %shl708 = shl i64 %504, 30, !dbg !2414
  %505 = load i64, i64* %a, align 8, !dbg !2414
  %shr709 = lshr i64 %505, 34, !dbg !2414
  %or710 = or i64 %shl708, %shr709, !dbg !2414
  %506 = load i64, i64* %a, align 8, !dbg !2414
  %shl711 = shl i64 %506, 25, !dbg !2414
  %507 = load i64, i64* %a, align 8, !dbg !2414
  %shr712 = lshr i64 %507, 39, !dbg !2414
  %or713 = or i64 %shl711, %shr712, !dbg !2414
  %xor714 = xor i64 %or710, %or713, !dbg !2414
  %xor715 = xor i64 %or707, %xor714, !dbg !2414
  %508 = load i64, i64* %a, align 8, !dbg !2414
  %509 = load i64, i64* %b, align 8, !dbg !2414
  %and716 = and i64 %508, %509, !dbg !2414
  %510 = load i64, i64* %c, align 8, !dbg !2414
  %511 = load i64, i64* %a, align 8, !dbg !2414
  %512 = load i64, i64* %b, align 8, !dbg !2414
  %or717 = or i64 %511, %512, !dbg !2414
  %and718 = and i64 %510, %or717, !dbg !2414
  %or719 = or i64 %and716, %and718, !dbg !2414
  %add720 = add i64 %xor715, %or719, !dbg !2414
  store i64 %add720, i64* %t0704, align 8, !dbg !2414
  call void @llvm.dbg.declare(metadata i64* %t1721, metadata !2416, metadata !DIExpression()), !dbg !2414
  %513 = load i64, i64* %h, align 8, !dbg !2414
  %514 = load i64, i64* %e, align 8, !dbg !2414
  %shl722 = shl i64 %514, 50, !dbg !2414
  %515 = load i64, i64* %e, align 8, !dbg !2414
  %shr723 = lshr i64 %515, 14, !dbg !2414
  %or724 = or i64 %shl722, %shr723, !dbg !2414
  %516 = load i64, i64* %e, align 8, !dbg !2414
  %shl725 = shl i64 %516, 46, !dbg !2414
  %517 = load i64, i64* %e, align 8, !dbg !2414
  %shr726 = lshr i64 %517, 18, !dbg !2414
  %or727 = or i64 %shl725, %shr726, !dbg !2414
  %518 = load i64, i64* %e, align 8, !dbg !2414
  %shl728 = shl i64 %518, 23, !dbg !2414
  %519 = load i64, i64* %e, align 8, !dbg !2414
  %shr729 = lshr i64 %519, 41, !dbg !2414
  %or730 = or i64 %shl728, %shr729, !dbg !2414
  %xor731 = xor i64 %or727, %or730, !dbg !2414
  %xor732 = xor i64 %or724, %xor731, !dbg !2414
  %520 = load i64, i64* %g, align 8, !dbg !2414
  %521 = load i64, i64* %e, align 8, !dbg !2414
  %522 = load i64, i64* %f, align 8, !dbg !2414
  %523 = load i64, i64* %g, align 8, !dbg !2414
  %xor733 = xor i64 %522, %523, !dbg !2414
  %and734 = and i64 %521, %xor733, !dbg !2414
  %xor735 = xor i64 %520, %and734, !dbg !2414
  %524 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 16), align 8, !dbg !2414
  %arrayidx736 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 0, !dbg !2414
  %525 = load i64, i64* %arrayidx736, align 8, !dbg !2414
  %arrayidx737 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 14, !dbg !2414
  %526 = load i64, i64* %arrayidx737, align 8, !dbg !2414
  %shl738 = shl i64 %526, 45, !dbg !2414
  %arrayidx739 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 14, !dbg !2414
  %527 = load i64, i64* %arrayidx739, align 8, !dbg !2414
  %shr740 = lshr i64 %527, 19, !dbg !2414
  %or741 = or i64 %shl738, %shr740, !dbg !2414
  %arrayidx742 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 14, !dbg !2414
  %528 = load i64, i64* %arrayidx742, align 8, !dbg !2414
  %shl743 = shl i64 %528, 3, !dbg !2414
  %arrayidx744 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 14, !dbg !2414
  %529 = load i64, i64* %arrayidx744, align 8, !dbg !2414
  %shr745 = lshr i64 %529, 61, !dbg !2414
  %or746 = or i64 %shl743, %shr745, !dbg !2414
  %arrayidx747 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 14, !dbg !2414
  %530 = load i64, i64* %arrayidx747, align 8, !dbg !2414
  %shr748 = lshr i64 %530, 6, !dbg !2414
  %xor749 = xor i64 %or746, %shr748, !dbg !2414
  %xor750 = xor i64 %or741, %xor749, !dbg !2414
  %arrayidx751 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 9, !dbg !2414
  %531 = load i64, i64* %arrayidx751, align 8, !dbg !2414
  %arrayidx752 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 1, !dbg !2414
  %532 = load i64, i64* %arrayidx752, align 8, !dbg !2414
  %shl753 = shl i64 %532, 63, !dbg !2414
  %arrayidx754 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 1, !dbg !2414
  %533 = load i64, i64* %arrayidx754, align 8, !dbg !2414
  %shr755 = lshr i64 %533, 1, !dbg !2414
  %or756 = or i64 %shl753, %shr755, !dbg !2414
  %arrayidx757 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 1, !dbg !2414
  %534 = load i64, i64* %arrayidx757, align 8, !dbg !2414
  %shl758 = shl i64 %534, 56, !dbg !2414
  %arrayidx759 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 1, !dbg !2414
  %535 = load i64, i64* %arrayidx759, align 8, !dbg !2414
  %shr760 = lshr i64 %535, 8, !dbg !2414
  %or761 = or i64 %shl758, %shr760, !dbg !2414
  %arrayidx762 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 1, !dbg !2414
  %536 = load i64, i64* %arrayidx762, align 8, !dbg !2414
  %shr763 = lshr i64 %536, 7, !dbg !2414
  %xor764 = xor i64 %or761, %shr763, !dbg !2414
  %xor765 = xor i64 %or756, %xor764, !dbg !2414
  %add766 = add i64 %531, %xor765, !dbg !2414
  %add767 = add i64 %xor750, %add766, !dbg !2414
  %add768 = add i64 %525, %add767, !dbg !2414
  %arrayidx769 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 0, !dbg !2414
  store i64 %add768, i64* %arrayidx769, align 8, !dbg !2414
  %add770 = add i64 %524, %add768, !dbg !2414
  %add771 = add i64 %xor735, %add770, !dbg !2414
  %add772 = add i64 %xor732, %add771, !dbg !2414
  %add773 = add i64 %513, %add772, !dbg !2414
  store i64 %add773, i64* %t1721, align 8, !dbg !2414
  %537 = load i64, i64* %d, align 8, !dbg !2414
  %538 = load i64, i64* %t1721, align 8, !dbg !2414
  %add774 = add i64 %537, %538, !dbg !2414
  store i64 %add774, i64* %d, align 8, !dbg !2414
  %539 = load i64, i64* %t0704, align 8, !dbg !2414
  %540 = load i64, i64* %t1721, align 8, !dbg !2414
  %add775 = add i64 %539, %540, !dbg !2414
  store i64 %add775, i64* %h, align 8, !dbg !2414
  br label %do.end.776, !dbg !2414

do.end.776:                                       ; preds = %do.body.703
  br label %do.body.777, !dbg !2417

do.body.777:                                      ; preds = %do.end.776
  call void @llvm.dbg.declare(metadata i64* %t0778, metadata !2418, metadata !DIExpression()), !dbg !2420
  %541 = load i64, i64* %h, align 8, !dbg !2421
  %shl779 = shl i64 %541, 36, !dbg !2421
  %542 = load i64, i64* %h, align 8, !dbg !2421
  %shr780 = lshr i64 %542, 28, !dbg !2421
  %or781 = or i64 %shl779, %shr780, !dbg !2421
  %543 = load i64, i64* %h, align 8, !dbg !2421
  %shl782 = shl i64 %543, 30, !dbg !2421
  %544 = load i64, i64* %h, align 8, !dbg !2421
  %shr783 = lshr i64 %544, 34, !dbg !2421
  %or784 = or i64 %shl782, %shr783, !dbg !2421
  %545 = load i64, i64* %h, align 8, !dbg !2421
  %shl785 = shl i64 %545, 25, !dbg !2421
  %546 = load i64, i64* %h, align 8, !dbg !2421
  %shr786 = lshr i64 %546, 39, !dbg !2421
  %or787 = or i64 %shl785, %shr786, !dbg !2421
  %xor788 = xor i64 %or784, %or787, !dbg !2421
  %xor789 = xor i64 %or781, %xor788, !dbg !2421
  %547 = load i64, i64* %h, align 8, !dbg !2421
  %548 = load i64, i64* %a, align 8, !dbg !2421
  %and790 = and i64 %547, %548, !dbg !2421
  %549 = load i64, i64* %b, align 8, !dbg !2421
  %550 = load i64, i64* %h, align 8, !dbg !2421
  %551 = load i64, i64* %a, align 8, !dbg !2421
  %or791 = or i64 %550, %551, !dbg !2421
  %and792 = and i64 %549, %or791, !dbg !2421
  %or793 = or i64 %and790, %and792, !dbg !2421
  %add794 = add i64 %xor789, %or793, !dbg !2421
  store i64 %add794, i64* %t0778, align 8, !dbg !2421
  call void @llvm.dbg.declare(metadata i64* %t1795, metadata !2423, metadata !DIExpression()), !dbg !2421
  %552 = load i64, i64* %g, align 8, !dbg !2421
  %553 = load i64, i64* %d, align 8, !dbg !2421
  %shl796 = shl i64 %553, 50, !dbg !2421
  %554 = load i64, i64* %d, align 8, !dbg !2421
  %shr797 = lshr i64 %554, 14, !dbg !2421
  %or798 = or i64 %shl796, %shr797, !dbg !2421
  %555 = load i64, i64* %d, align 8, !dbg !2421
  %shl799 = shl i64 %555, 46, !dbg !2421
  %556 = load i64, i64* %d, align 8, !dbg !2421
  %shr800 = lshr i64 %556, 18, !dbg !2421
  %or801 = or i64 %shl799, %shr800, !dbg !2421
  %557 = load i64, i64* %d, align 8, !dbg !2421
  %shl802 = shl i64 %557, 23, !dbg !2421
  %558 = load i64, i64* %d, align 8, !dbg !2421
  %shr803 = lshr i64 %558, 41, !dbg !2421
  %or804 = or i64 %shl802, %shr803, !dbg !2421
  %xor805 = xor i64 %or801, %or804, !dbg !2421
  %xor806 = xor i64 %or798, %xor805, !dbg !2421
  %559 = load i64, i64* %f, align 8, !dbg !2421
  %560 = load i64, i64* %d, align 8, !dbg !2421
  %561 = load i64, i64* %e, align 8, !dbg !2421
  %562 = load i64, i64* %f, align 8, !dbg !2421
  %xor807 = xor i64 %561, %562, !dbg !2421
  %and808 = and i64 %560, %xor807, !dbg !2421
  %xor809 = xor i64 %559, %and808, !dbg !2421
  %563 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 17), align 8, !dbg !2421
  %arrayidx810 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 1, !dbg !2421
  %564 = load i64, i64* %arrayidx810, align 8, !dbg !2421
  %arrayidx811 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 15, !dbg !2421
  %565 = load i64, i64* %arrayidx811, align 8, !dbg !2421
  %shl812 = shl i64 %565, 45, !dbg !2421
  %arrayidx813 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 15, !dbg !2421
  %566 = load i64, i64* %arrayidx813, align 8, !dbg !2421
  %shr814 = lshr i64 %566, 19, !dbg !2421
  %or815 = or i64 %shl812, %shr814, !dbg !2421
  %arrayidx816 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 15, !dbg !2421
  %567 = load i64, i64* %arrayidx816, align 8, !dbg !2421
  %shl817 = shl i64 %567, 3, !dbg !2421
  %arrayidx818 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 15, !dbg !2421
  %568 = load i64, i64* %arrayidx818, align 8, !dbg !2421
  %shr819 = lshr i64 %568, 61, !dbg !2421
  %or820 = or i64 %shl817, %shr819, !dbg !2421
  %arrayidx821 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 15, !dbg !2421
  %569 = load i64, i64* %arrayidx821, align 8, !dbg !2421
  %shr822 = lshr i64 %569, 6, !dbg !2421
  %xor823 = xor i64 %or820, %shr822, !dbg !2421
  %xor824 = xor i64 %or815, %xor823, !dbg !2421
  %arrayidx825 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 10, !dbg !2421
  %570 = load i64, i64* %arrayidx825, align 8, !dbg !2421
  %arrayidx826 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 2, !dbg !2421
  %571 = load i64, i64* %arrayidx826, align 8, !dbg !2421
  %shl827 = shl i64 %571, 63, !dbg !2421
  %arrayidx828 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 2, !dbg !2421
  %572 = load i64, i64* %arrayidx828, align 8, !dbg !2421
  %shr829 = lshr i64 %572, 1, !dbg !2421
  %or830 = or i64 %shl827, %shr829, !dbg !2421
  %arrayidx831 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 2, !dbg !2421
  %573 = load i64, i64* %arrayidx831, align 8, !dbg !2421
  %shl832 = shl i64 %573, 56, !dbg !2421
  %arrayidx833 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 2, !dbg !2421
  %574 = load i64, i64* %arrayidx833, align 8, !dbg !2421
  %shr834 = lshr i64 %574, 8, !dbg !2421
  %or835 = or i64 %shl832, %shr834, !dbg !2421
  %arrayidx836 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 2, !dbg !2421
  %575 = load i64, i64* %arrayidx836, align 8, !dbg !2421
  %shr837 = lshr i64 %575, 7, !dbg !2421
  %xor838 = xor i64 %or835, %shr837, !dbg !2421
  %xor839 = xor i64 %or830, %xor838, !dbg !2421
  %add840 = add i64 %570, %xor839, !dbg !2421
  %add841 = add i64 %xor824, %add840, !dbg !2421
  %add842 = add i64 %564, %add841, !dbg !2421
  %arrayidx843 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 1, !dbg !2421
  store i64 %add842, i64* %arrayidx843, align 8, !dbg !2421
  %add844 = add i64 %563, %add842, !dbg !2421
  %add845 = add i64 %xor809, %add844, !dbg !2421
  %add846 = add i64 %xor806, %add845, !dbg !2421
  %add847 = add i64 %552, %add846, !dbg !2421
  store i64 %add847, i64* %t1795, align 8, !dbg !2421
  %576 = load i64, i64* %c, align 8, !dbg !2421
  %577 = load i64, i64* %t1795, align 8, !dbg !2421
  %add848 = add i64 %576, %577, !dbg !2421
  store i64 %add848, i64* %c, align 8, !dbg !2421
  %578 = load i64, i64* %t0778, align 8, !dbg !2421
  %579 = load i64, i64* %t1795, align 8, !dbg !2421
  %add849 = add i64 %578, %579, !dbg !2421
  store i64 %add849, i64* %g, align 8, !dbg !2421
  br label %do.end.850, !dbg !2421

do.end.850:                                       ; preds = %do.body.777
  br label %do.body.851, !dbg !2424

do.body.851:                                      ; preds = %do.end.850
  call void @llvm.dbg.declare(metadata i64* %t0852, metadata !2425, metadata !DIExpression()), !dbg !2427
  %580 = load i64, i64* %g, align 8, !dbg !2428
  %shl853 = shl i64 %580, 36, !dbg !2428
  %581 = load i64, i64* %g, align 8, !dbg !2428
  %shr854 = lshr i64 %581, 28, !dbg !2428
  %or855 = or i64 %shl853, %shr854, !dbg !2428
  %582 = load i64, i64* %g, align 8, !dbg !2428
  %shl856 = shl i64 %582, 30, !dbg !2428
  %583 = load i64, i64* %g, align 8, !dbg !2428
  %shr857 = lshr i64 %583, 34, !dbg !2428
  %or858 = or i64 %shl856, %shr857, !dbg !2428
  %584 = load i64, i64* %g, align 8, !dbg !2428
  %shl859 = shl i64 %584, 25, !dbg !2428
  %585 = load i64, i64* %g, align 8, !dbg !2428
  %shr860 = lshr i64 %585, 39, !dbg !2428
  %or861 = or i64 %shl859, %shr860, !dbg !2428
  %xor862 = xor i64 %or858, %or861, !dbg !2428
  %xor863 = xor i64 %or855, %xor862, !dbg !2428
  %586 = load i64, i64* %g, align 8, !dbg !2428
  %587 = load i64, i64* %h, align 8, !dbg !2428
  %and864 = and i64 %586, %587, !dbg !2428
  %588 = load i64, i64* %a, align 8, !dbg !2428
  %589 = load i64, i64* %g, align 8, !dbg !2428
  %590 = load i64, i64* %h, align 8, !dbg !2428
  %or865 = or i64 %589, %590, !dbg !2428
  %and866 = and i64 %588, %or865, !dbg !2428
  %or867 = or i64 %and864, %and866, !dbg !2428
  %add868 = add i64 %xor863, %or867, !dbg !2428
  store i64 %add868, i64* %t0852, align 8, !dbg !2428
  call void @llvm.dbg.declare(metadata i64* %t1869, metadata !2430, metadata !DIExpression()), !dbg !2428
  %591 = load i64, i64* %f, align 8, !dbg !2428
  %592 = load i64, i64* %c, align 8, !dbg !2428
  %shl870 = shl i64 %592, 50, !dbg !2428
  %593 = load i64, i64* %c, align 8, !dbg !2428
  %shr871 = lshr i64 %593, 14, !dbg !2428
  %or872 = or i64 %shl870, %shr871, !dbg !2428
  %594 = load i64, i64* %c, align 8, !dbg !2428
  %shl873 = shl i64 %594, 46, !dbg !2428
  %595 = load i64, i64* %c, align 8, !dbg !2428
  %shr874 = lshr i64 %595, 18, !dbg !2428
  %or875 = or i64 %shl873, %shr874, !dbg !2428
  %596 = load i64, i64* %c, align 8, !dbg !2428
  %shl876 = shl i64 %596, 23, !dbg !2428
  %597 = load i64, i64* %c, align 8, !dbg !2428
  %shr877 = lshr i64 %597, 41, !dbg !2428
  %or878 = or i64 %shl876, %shr877, !dbg !2428
  %xor879 = xor i64 %or875, %or878, !dbg !2428
  %xor880 = xor i64 %or872, %xor879, !dbg !2428
  %598 = load i64, i64* %e, align 8, !dbg !2428
  %599 = load i64, i64* %c, align 8, !dbg !2428
  %600 = load i64, i64* %d, align 8, !dbg !2428
  %601 = load i64, i64* %e, align 8, !dbg !2428
  %xor881 = xor i64 %600, %601, !dbg !2428
  %and882 = and i64 %599, %xor881, !dbg !2428
  %xor883 = xor i64 %598, %and882, !dbg !2428
  %602 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 18), align 8, !dbg !2428
  %arrayidx884 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 2, !dbg !2428
  %603 = load i64, i64* %arrayidx884, align 8, !dbg !2428
  %arrayidx885 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 0, !dbg !2428
  %604 = load i64, i64* %arrayidx885, align 8, !dbg !2428
  %shl886 = shl i64 %604, 45, !dbg !2428
  %arrayidx887 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 0, !dbg !2428
  %605 = load i64, i64* %arrayidx887, align 8, !dbg !2428
  %shr888 = lshr i64 %605, 19, !dbg !2428
  %or889 = or i64 %shl886, %shr888, !dbg !2428
  %arrayidx890 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 0, !dbg !2428
  %606 = load i64, i64* %arrayidx890, align 8, !dbg !2428
  %shl891 = shl i64 %606, 3, !dbg !2428
  %arrayidx892 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 0, !dbg !2428
  %607 = load i64, i64* %arrayidx892, align 8, !dbg !2428
  %shr893 = lshr i64 %607, 61, !dbg !2428
  %or894 = or i64 %shl891, %shr893, !dbg !2428
  %arrayidx895 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 0, !dbg !2428
  %608 = load i64, i64* %arrayidx895, align 8, !dbg !2428
  %shr896 = lshr i64 %608, 6, !dbg !2428
  %xor897 = xor i64 %or894, %shr896, !dbg !2428
  %xor898 = xor i64 %or889, %xor897, !dbg !2428
  %arrayidx899 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 11, !dbg !2428
  %609 = load i64, i64* %arrayidx899, align 8, !dbg !2428
  %arrayidx900 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 3, !dbg !2428
  %610 = load i64, i64* %arrayidx900, align 8, !dbg !2428
  %shl901 = shl i64 %610, 63, !dbg !2428
  %arrayidx902 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 3, !dbg !2428
  %611 = load i64, i64* %arrayidx902, align 8, !dbg !2428
  %shr903 = lshr i64 %611, 1, !dbg !2428
  %or904 = or i64 %shl901, %shr903, !dbg !2428
  %arrayidx905 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 3, !dbg !2428
  %612 = load i64, i64* %arrayidx905, align 8, !dbg !2428
  %shl906 = shl i64 %612, 56, !dbg !2428
  %arrayidx907 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 3, !dbg !2428
  %613 = load i64, i64* %arrayidx907, align 8, !dbg !2428
  %shr908 = lshr i64 %613, 8, !dbg !2428
  %or909 = or i64 %shl906, %shr908, !dbg !2428
  %arrayidx910 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 3, !dbg !2428
  %614 = load i64, i64* %arrayidx910, align 8, !dbg !2428
  %shr911 = lshr i64 %614, 7, !dbg !2428
  %xor912 = xor i64 %or909, %shr911, !dbg !2428
  %xor913 = xor i64 %or904, %xor912, !dbg !2428
  %add914 = add i64 %609, %xor913, !dbg !2428
  %add915 = add i64 %xor898, %add914, !dbg !2428
  %add916 = add i64 %603, %add915, !dbg !2428
  %arrayidx917 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 2, !dbg !2428
  store i64 %add916, i64* %arrayidx917, align 8, !dbg !2428
  %add918 = add i64 %602, %add916, !dbg !2428
  %add919 = add i64 %xor883, %add918, !dbg !2428
  %add920 = add i64 %xor880, %add919, !dbg !2428
  %add921 = add i64 %591, %add920, !dbg !2428
  store i64 %add921, i64* %t1869, align 8, !dbg !2428
  %615 = load i64, i64* %b, align 8, !dbg !2428
  %616 = load i64, i64* %t1869, align 8, !dbg !2428
  %add922 = add i64 %615, %616, !dbg !2428
  store i64 %add922, i64* %b, align 8, !dbg !2428
  %617 = load i64, i64* %t0852, align 8, !dbg !2428
  %618 = load i64, i64* %t1869, align 8, !dbg !2428
  %add923 = add i64 %617, %618, !dbg !2428
  store i64 %add923, i64* %f, align 8, !dbg !2428
  br label %do.end.924, !dbg !2428

do.end.924:                                       ; preds = %do.body.851
  br label %do.body.925, !dbg !2431

do.body.925:                                      ; preds = %do.end.924
  call void @llvm.dbg.declare(metadata i64* %t0926, metadata !2432, metadata !DIExpression()), !dbg !2434
  %619 = load i64, i64* %f, align 8, !dbg !2435
  %shl927 = shl i64 %619, 36, !dbg !2435
  %620 = load i64, i64* %f, align 8, !dbg !2435
  %shr928 = lshr i64 %620, 28, !dbg !2435
  %or929 = or i64 %shl927, %shr928, !dbg !2435
  %621 = load i64, i64* %f, align 8, !dbg !2435
  %shl930 = shl i64 %621, 30, !dbg !2435
  %622 = load i64, i64* %f, align 8, !dbg !2435
  %shr931 = lshr i64 %622, 34, !dbg !2435
  %or932 = or i64 %shl930, %shr931, !dbg !2435
  %623 = load i64, i64* %f, align 8, !dbg !2435
  %shl933 = shl i64 %623, 25, !dbg !2435
  %624 = load i64, i64* %f, align 8, !dbg !2435
  %shr934 = lshr i64 %624, 39, !dbg !2435
  %or935 = or i64 %shl933, %shr934, !dbg !2435
  %xor936 = xor i64 %or932, %or935, !dbg !2435
  %xor937 = xor i64 %or929, %xor936, !dbg !2435
  %625 = load i64, i64* %f, align 8, !dbg !2435
  %626 = load i64, i64* %g, align 8, !dbg !2435
  %and938 = and i64 %625, %626, !dbg !2435
  %627 = load i64, i64* %h, align 8, !dbg !2435
  %628 = load i64, i64* %f, align 8, !dbg !2435
  %629 = load i64, i64* %g, align 8, !dbg !2435
  %or939 = or i64 %628, %629, !dbg !2435
  %and940 = and i64 %627, %or939, !dbg !2435
  %or941 = or i64 %and938, %and940, !dbg !2435
  %add942 = add i64 %xor937, %or941, !dbg !2435
  store i64 %add942, i64* %t0926, align 8, !dbg !2435
  call void @llvm.dbg.declare(metadata i64* %t1943, metadata !2437, metadata !DIExpression()), !dbg !2435
  %630 = load i64, i64* %e, align 8, !dbg !2435
  %631 = load i64, i64* %b, align 8, !dbg !2435
  %shl944 = shl i64 %631, 50, !dbg !2435
  %632 = load i64, i64* %b, align 8, !dbg !2435
  %shr945 = lshr i64 %632, 14, !dbg !2435
  %or946 = or i64 %shl944, %shr945, !dbg !2435
  %633 = load i64, i64* %b, align 8, !dbg !2435
  %shl947 = shl i64 %633, 46, !dbg !2435
  %634 = load i64, i64* %b, align 8, !dbg !2435
  %shr948 = lshr i64 %634, 18, !dbg !2435
  %or949 = or i64 %shl947, %shr948, !dbg !2435
  %635 = load i64, i64* %b, align 8, !dbg !2435
  %shl950 = shl i64 %635, 23, !dbg !2435
  %636 = load i64, i64* %b, align 8, !dbg !2435
  %shr951 = lshr i64 %636, 41, !dbg !2435
  %or952 = or i64 %shl950, %shr951, !dbg !2435
  %xor953 = xor i64 %or949, %or952, !dbg !2435
  %xor954 = xor i64 %or946, %xor953, !dbg !2435
  %637 = load i64, i64* %d, align 8, !dbg !2435
  %638 = load i64, i64* %b, align 8, !dbg !2435
  %639 = load i64, i64* %c, align 8, !dbg !2435
  %640 = load i64, i64* %d, align 8, !dbg !2435
  %xor955 = xor i64 %639, %640, !dbg !2435
  %and956 = and i64 %638, %xor955, !dbg !2435
  %xor957 = xor i64 %637, %and956, !dbg !2435
  %641 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 19), align 8, !dbg !2435
  %arrayidx958 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 3, !dbg !2435
  %642 = load i64, i64* %arrayidx958, align 8, !dbg !2435
  %arrayidx959 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 1, !dbg !2435
  %643 = load i64, i64* %arrayidx959, align 8, !dbg !2435
  %shl960 = shl i64 %643, 45, !dbg !2435
  %arrayidx961 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 1, !dbg !2435
  %644 = load i64, i64* %arrayidx961, align 8, !dbg !2435
  %shr962 = lshr i64 %644, 19, !dbg !2435
  %or963 = or i64 %shl960, %shr962, !dbg !2435
  %arrayidx964 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 1, !dbg !2435
  %645 = load i64, i64* %arrayidx964, align 8, !dbg !2435
  %shl965 = shl i64 %645, 3, !dbg !2435
  %arrayidx966 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 1, !dbg !2435
  %646 = load i64, i64* %arrayidx966, align 8, !dbg !2435
  %shr967 = lshr i64 %646, 61, !dbg !2435
  %or968 = or i64 %shl965, %shr967, !dbg !2435
  %arrayidx969 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 1, !dbg !2435
  %647 = load i64, i64* %arrayidx969, align 8, !dbg !2435
  %shr970 = lshr i64 %647, 6, !dbg !2435
  %xor971 = xor i64 %or968, %shr970, !dbg !2435
  %xor972 = xor i64 %or963, %xor971, !dbg !2435
  %arrayidx973 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 12, !dbg !2435
  %648 = load i64, i64* %arrayidx973, align 8, !dbg !2435
  %arrayidx974 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 4, !dbg !2435
  %649 = load i64, i64* %arrayidx974, align 8, !dbg !2435
  %shl975 = shl i64 %649, 63, !dbg !2435
  %arrayidx976 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 4, !dbg !2435
  %650 = load i64, i64* %arrayidx976, align 8, !dbg !2435
  %shr977 = lshr i64 %650, 1, !dbg !2435
  %or978 = or i64 %shl975, %shr977, !dbg !2435
  %arrayidx979 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 4, !dbg !2435
  %651 = load i64, i64* %arrayidx979, align 8, !dbg !2435
  %shl980 = shl i64 %651, 56, !dbg !2435
  %arrayidx981 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 4, !dbg !2435
  %652 = load i64, i64* %arrayidx981, align 8, !dbg !2435
  %shr982 = lshr i64 %652, 8, !dbg !2435
  %or983 = or i64 %shl980, %shr982, !dbg !2435
  %arrayidx984 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 4, !dbg !2435
  %653 = load i64, i64* %arrayidx984, align 8, !dbg !2435
  %shr985 = lshr i64 %653, 7, !dbg !2435
  %xor986 = xor i64 %or983, %shr985, !dbg !2435
  %xor987 = xor i64 %or978, %xor986, !dbg !2435
  %add988 = add i64 %648, %xor987, !dbg !2435
  %add989 = add i64 %xor972, %add988, !dbg !2435
  %add990 = add i64 %642, %add989, !dbg !2435
  %arrayidx991 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 3, !dbg !2435
  store i64 %add990, i64* %arrayidx991, align 8, !dbg !2435
  %add992 = add i64 %641, %add990, !dbg !2435
  %add993 = add i64 %xor957, %add992, !dbg !2435
  %add994 = add i64 %xor954, %add993, !dbg !2435
  %add995 = add i64 %630, %add994, !dbg !2435
  store i64 %add995, i64* %t1943, align 8, !dbg !2435
  %654 = load i64, i64* %a, align 8, !dbg !2435
  %655 = load i64, i64* %t1943, align 8, !dbg !2435
  %add996 = add i64 %654, %655, !dbg !2435
  store i64 %add996, i64* %a, align 8, !dbg !2435
  %656 = load i64, i64* %t0926, align 8, !dbg !2435
  %657 = load i64, i64* %t1943, align 8, !dbg !2435
  %add997 = add i64 %656, %657, !dbg !2435
  store i64 %add997, i64* %e, align 8, !dbg !2435
  br label %do.end.998, !dbg !2435

do.end.998:                                       ; preds = %do.body.925
  br label %do.body.999, !dbg !2438

do.body.999:                                      ; preds = %do.end.998
  call void @llvm.dbg.declare(metadata i64* %t01000, metadata !2439, metadata !DIExpression()), !dbg !2441
  %658 = load i64, i64* %e, align 8, !dbg !2442
  %shl1001 = shl i64 %658, 36, !dbg !2442
  %659 = load i64, i64* %e, align 8, !dbg !2442
  %shr1002 = lshr i64 %659, 28, !dbg !2442
  %or1003 = or i64 %shl1001, %shr1002, !dbg !2442
  %660 = load i64, i64* %e, align 8, !dbg !2442
  %shl1004 = shl i64 %660, 30, !dbg !2442
  %661 = load i64, i64* %e, align 8, !dbg !2442
  %shr1005 = lshr i64 %661, 34, !dbg !2442
  %or1006 = or i64 %shl1004, %shr1005, !dbg !2442
  %662 = load i64, i64* %e, align 8, !dbg !2442
  %shl1007 = shl i64 %662, 25, !dbg !2442
  %663 = load i64, i64* %e, align 8, !dbg !2442
  %shr1008 = lshr i64 %663, 39, !dbg !2442
  %or1009 = or i64 %shl1007, %shr1008, !dbg !2442
  %xor1010 = xor i64 %or1006, %or1009, !dbg !2442
  %xor1011 = xor i64 %or1003, %xor1010, !dbg !2442
  %664 = load i64, i64* %e, align 8, !dbg !2442
  %665 = load i64, i64* %f, align 8, !dbg !2442
  %and1012 = and i64 %664, %665, !dbg !2442
  %666 = load i64, i64* %g, align 8, !dbg !2442
  %667 = load i64, i64* %e, align 8, !dbg !2442
  %668 = load i64, i64* %f, align 8, !dbg !2442
  %or1013 = or i64 %667, %668, !dbg !2442
  %and1014 = and i64 %666, %or1013, !dbg !2442
  %or1015 = or i64 %and1012, %and1014, !dbg !2442
  %add1016 = add i64 %xor1011, %or1015, !dbg !2442
  store i64 %add1016, i64* %t01000, align 8, !dbg !2442
  call void @llvm.dbg.declare(metadata i64* %t11017, metadata !2444, metadata !DIExpression()), !dbg !2442
  %669 = load i64, i64* %d, align 8, !dbg !2442
  %670 = load i64, i64* %a, align 8, !dbg !2442
  %shl1018 = shl i64 %670, 50, !dbg !2442
  %671 = load i64, i64* %a, align 8, !dbg !2442
  %shr1019 = lshr i64 %671, 14, !dbg !2442
  %or1020 = or i64 %shl1018, %shr1019, !dbg !2442
  %672 = load i64, i64* %a, align 8, !dbg !2442
  %shl1021 = shl i64 %672, 46, !dbg !2442
  %673 = load i64, i64* %a, align 8, !dbg !2442
  %shr1022 = lshr i64 %673, 18, !dbg !2442
  %or1023 = or i64 %shl1021, %shr1022, !dbg !2442
  %674 = load i64, i64* %a, align 8, !dbg !2442
  %shl1024 = shl i64 %674, 23, !dbg !2442
  %675 = load i64, i64* %a, align 8, !dbg !2442
  %shr1025 = lshr i64 %675, 41, !dbg !2442
  %or1026 = or i64 %shl1024, %shr1025, !dbg !2442
  %xor1027 = xor i64 %or1023, %or1026, !dbg !2442
  %xor1028 = xor i64 %or1020, %xor1027, !dbg !2442
  %676 = load i64, i64* %c, align 8, !dbg !2442
  %677 = load i64, i64* %a, align 8, !dbg !2442
  %678 = load i64, i64* %b, align 8, !dbg !2442
  %679 = load i64, i64* %c, align 8, !dbg !2442
  %xor1029 = xor i64 %678, %679, !dbg !2442
  %and1030 = and i64 %677, %xor1029, !dbg !2442
  %xor1031 = xor i64 %676, %and1030, !dbg !2442
  %680 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 20), align 8, !dbg !2442
  %arrayidx1032 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 4, !dbg !2442
  %681 = load i64, i64* %arrayidx1032, align 8, !dbg !2442
  %arrayidx1033 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 2, !dbg !2442
  %682 = load i64, i64* %arrayidx1033, align 8, !dbg !2442
  %shl1034 = shl i64 %682, 45, !dbg !2442
  %arrayidx1035 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 2, !dbg !2442
  %683 = load i64, i64* %arrayidx1035, align 8, !dbg !2442
  %shr1036 = lshr i64 %683, 19, !dbg !2442
  %or1037 = or i64 %shl1034, %shr1036, !dbg !2442
  %arrayidx1038 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 2, !dbg !2442
  %684 = load i64, i64* %arrayidx1038, align 8, !dbg !2442
  %shl1039 = shl i64 %684, 3, !dbg !2442
  %arrayidx1040 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 2, !dbg !2442
  %685 = load i64, i64* %arrayidx1040, align 8, !dbg !2442
  %shr1041 = lshr i64 %685, 61, !dbg !2442
  %or1042 = or i64 %shl1039, %shr1041, !dbg !2442
  %arrayidx1043 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 2, !dbg !2442
  %686 = load i64, i64* %arrayidx1043, align 8, !dbg !2442
  %shr1044 = lshr i64 %686, 6, !dbg !2442
  %xor1045 = xor i64 %or1042, %shr1044, !dbg !2442
  %xor1046 = xor i64 %or1037, %xor1045, !dbg !2442
  %arrayidx1047 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 13, !dbg !2442
  %687 = load i64, i64* %arrayidx1047, align 8, !dbg !2442
  %arrayidx1048 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 5, !dbg !2442
  %688 = load i64, i64* %arrayidx1048, align 8, !dbg !2442
  %shl1049 = shl i64 %688, 63, !dbg !2442
  %arrayidx1050 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 5, !dbg !2442
  %689 = load i64, i64* %arrayidx1050, align 8, !dbg !2442
  %shr1051 = lshr i64 %689, 1, !dbg !2442
  %or1052 = or i64 %shl1049, %shr1051, !dbg !2442
  %arrayidx1053 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 5, !dbg !2442
  %690 = load i64, i64* %arrayidx1053, align 8, !dbg !2442
  %shl1054 = shl i64 %690, 56, !dbg !2442
  %arrayidx1055 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 5, !dbg !2442
  %691 = load i64, i64* %arrayidx1055, align 8, !dbg !2442
  %shr1056 = lshr i64 %691, 8, !dbg !2442
  %or1057 = or i64 %shl1054, %shr1056, !dbg !2442
  %arrayidx1058 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 5, !dbg !2442
  %692 = load i64, i64* %arrayidx1058, align 8, !dbg !2442
  %shr1059 = lshr i64 %692, 7, !dbg !2442
  %xor1060 = xor i64 %or1057, %shr1059, !dbg !2442
  %xor1061 = xor i64 %or1052, %xor1060, !dbg !2442
  %add1062 = add i64 %687, %xor1061, !dbg !2442
  %add1063 = add i64 %xor1046, %add1062, !dbg !2442
  %add1064 = add i64 %681, %add1063, !dbg !2442
  %arrayidx1065 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 4, !dbg !2442
  store i64 %add1064, i64* %arrayidx1065, align 8, !dbg !2442
  %add1066 = add i64 %680, %add1064, !dbg !2442
  %add1067 = add i64 %xor1031, %add1066, !dbg !2442
  %add1068 = add i64 %xor1028, %add1067, !dbg !2442
  %add1069 = add i64 %669, %add1068, !dbg !2442
  store i64 %add1069, i64* %t11017, align 8, !dbg !2442
  %693 = load i64, i64* %h, align 8, !dbg !2442
  %694 = load i64, i64* %t11017, align 8, !dbg !2442
  %add1070 = add i64 %693, %694, !dbg !2442
  store i64 %add1070, i64* %h, align 8, !dbg !2442
  %695 = load i64, i64* %t01000, align 8, !dbg !2442
  %696 = load i64, i64* %t11017, align 8, !dbg !2442
  %add1071 = add i64 %695, %696, !dbg !2442
  store i64 %add1071, i64* %d, align 8, !dbg !2442
  br label %do.end.1072, !dbg !2442

do.end.1072:                                      ; preds = %do.body.999
  br label %do.body.1073, !dbg !2445

do.body.1073:                                     ; preds = %do.end.1072
  call void @llvm.dbg.declare(metadata i64* %t01074, metadata !2446, metadata !DIExpression()), !dbg !2448
  %697 = load i64, i64* %d, align 8, !dbg !2449
  %shl1075 = shl i64 %697, 36, !dbg !2449
  %698 = load i64, i64* %d, align 8, !dbg !2449
  %shr1076 = lshr i64 %698, 28, !dbg !2449
  %or1077 = or i64 %shl1075, %shr1076, !dbg !2449
  %699 = load i64, i64* %d, align 8, !dbg !2449
  %shl1078 = shl i64 %699, 30, !dbg !2449
  %700 = load i64, i64* %d, align 8, !dbg !2449
  %shr1079 = lshr i64 %700, 34, !dbg !2449
  %or1080 = or i64 %shl1078, %shr1079, !dbg !2449
  %701 = load i64, i64* %d, align 8, !dbg !2449
  %shl1081 = shl i64 %701, 25, !dbg !2449
  %702 = load i64, i64* %d, align 8, !dbg !2449
  %shr1082 = lshr i64 %702, 39, !dbg !2449
  %or1083 = or i64 %shl1081, %shr1082, !dbg !2449
  %xor1084 = xor i64 %or1080, %or1083, !dbg !2449
  %xor1085 = xor i64 %or1077, %xor1084, !dbg !2449
  %703 = load i64, i64* %d, align 8, !dbg !2449
  %704 = load i64, i64* %e, align 8, !dbg !2449
  %and1086 = and i64 %703, %704, !dbg !2449
  %705 = load i64, i64* %f, align 8, !dbg !2449
  %706 = load i64, i64* %d, align 8, !dbg !2449
  %707 = load i64, i64* %e, align 8, !dbg !2449
  %or1087 = or i64 %706, %707, !dbg !2449
  %and1088 = and i64 %705, %or1087, !dbg !2449
  %or1089 = or i64 %and1086, %and1088, !dbg !2449
  %add1090 = add i64 %xor1085, %or1089, !dbg !2449
  store i64 %add1090, i64* %t01074, align 8, !dbg !2449
  call void @llvm.dbg.declare(metadata i64* %t11091, metadata !2451, metadata !DIExpression()), !dbg !2449
  %708 = load i64, i64* %c, align 8, !dbg !2449
  %709 = load i64, i64* %h, align 8, !dbg !2449
  %shl1092 = shl i64 %709, 50, !dbg !2449
  %710 = load i64, i64* %h, align 8, !dbg !2449
  %shr1093 = lshr i64 %710, 14, !dbg !2449
  %or1094 = or i64 %shl1092, %shr1093, !dbg !2449
  %711 = load i64, i64* %h, align 8, !dbg !2449
  %shl1095 = shl i64 %711, 46, !dbg !2449
  %712 = load i64, i64* %h, align 8, !dbg !2449
  %shr1096 = lshr i64 %712, 18, !dbg !2449
  %or1097 = or i64 %shl1095, %shr1096, !dbg !2449
  %713 = load i64, i64* %h, align 8, !dbg !2449
  %shl1098 = shl i64 %713, 23, !dbg !2449
  %714 = load i64, i64* %h, align 8, !dbg !2449
  %shr1099 = lshr i64 %714, 41, !dbg !2449
  %or1100 = or i64 %shl1098, %shr1099, !dbg !2449
  %xor1101 = xor i64 %or1097, %or1100, !dbg !2449
  %xor1102 = xor i64 %or1094, %xor1101, !dbg !2449
  %715 = load i64, i64* %b, align 8, !dbg !2449
  %716 = load i64, i64* %h, align 8, !dbg !2449
  %717 = load i64, i64* %a, align 8, !dbg !2449
  %718 = load i64, i64* %b, align 8, !dbg !2449
  %xor1103 = xor i64 %717, %718, !dbg !2449
  %and1104 = and i64 %716, %xor1103, !dbg !2449
  %xor1105 = xor i64 %715, %and1104, !dbg !2449
  %719 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 21), align 8, !dbg !2449
  %arrayidx1106 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 5, !dbg !2449
  %720 = load i64, i64* %arrayidx1106, align 8, !dbg !2449
  %arrayidx1107 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 3, !dbg !2449
  %721 = load i64, i64* %arrayidx1107, align 8, !dbg !2449
  %shl1108 = shl i64 %721, 45, !dbg !2449
  %arrayidx1109 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 3, !dbg !2449
  %722 = load i64, i64* %arrayidx1109, align 8, !dbg !2449
  %shr1110 = lshr i64 %722, 19, !dbg !2449
  %or1111 = or i64 %shl1108, %shr1110, !dbg !2449
  %arrayidx1112 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 3, !dbg !2449
  %723 = load i64, i64* %arrayidx1112, align 8, !dbg !2449
  %shl1113 = shl i64 %723, 3, !dbg !2449
  %arrayidx1114 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 3, !dbg !2449
  %724 = load i64, i64* %arrayidx1114, align 8, !dbg !2449
  %shr1115 = lshr i64 %724, 61, !dbg !2449
  %or1116 = or i64 %shl1113, %shr1115, !dbg !2449
  %arrayidx1117 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 3, !dbg !2449
  %725 = load i64, i64* %arrayidx1117, align 8, !dbg !2449
  %shr1118 = lshr i64 %725, 6, !dbg !2449
  %xor1119 = xor i64 %or1116, %shr1118, !dbg !2449
  %xor1120 = xor i64 %or1111, %xor1119, !dbg !2449
  %arrayidx1121 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 14, !dbg !2449
  %726 = load i64, i64* %arrayidx1121, align 8, !dbg !2449
  %arrayidx1122 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 6, !dbg !2449
  %727 = load i64, i64* %arrayidx1122, align 8, !dbg !2449
  %shl1123 = shl i64 %727, 63, !dbg !2449
  %arrayidx1124 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 6, !dbg !2449
  %728 = load i64, i64* %arrayidx1124, align 8, !dbg !2449
  %shr1125 = lshr i64 %728, 1, !dbg !2449
  %or1126 = or i64 %shl1123, %shr1125, !dbg !2449
  %arrayidx1127 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 6, !dbg !2449
  %729 = load i64, i64* %arrayidx1127, align 8, !dbg !2449
  %shl1128 = shl i64 %729, 56, !dbg !2449
  %arrayidx1129 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 6, !dbg !2449
  %730 = load i64, i64* %arrayidx1129, align 8, !dbg !2449
  %shr1130 = lshr i64 %730, 8, !dbg !2449
  %or1131 = or i64 %shl1128, %shr1130, !dbg !2449
  %arrayidx1132 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 6, !dbg !2449
  %731 = load i64, i64* %arrayidx1132, align 8, !dbg !2449
  %shr1133 = lshr i64 %731, 7, !dbg !2449
  %xor1134 = xor i64 %or1131, %shr1133, !dbg !2449
  %xor1135 = xor i64 %or1126, %xor1134, !dbg !2449
  %add1136 = add i64 %726, %xor1135, !dbg !2449
  %add1137 = add i64 %xor1120, %add1136, !dbg !2449
  %add1138 = add i64 %720, %add1137, !dbg !2449
  %arrayidx1139 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 5, !dbg !2449
  store i64 %add1138, i64* %arrayidx1139, align 8, !dbg !2449
  %add1140 = add i64 %719, %add1138, !dbg !2449
  %add1141 = add i64 %xor1105, %add1140, !dbg !2449
  %add1142 = add i64 %xor1102, %add1141, !dbg !2449
  %add1143 = add i64 %708, %add1142, !dbg !2449
  store i64 %add1143, i64* %t11091, align 8, !dbg !2449
  %732 = load i64, i64* %g, align 8, !dbg !2449
  %733 = load i64, i64* %t11091, align 8, !dbg !2449
  %add1144 = add i64 %732, %733, !dbg !2449
  store i64 %add1144, i64* %g, align 8, !dbg !2449
  %734 = load i64, i64* %t01074, align 8, !dbg !2449
  %735 = load i64, i64* %t11091, align 8, !dbg !2449
  %add1145 = add i64 %734, %735, !dbg !2449
  store i64 %add1145, i64* %c, align 8, !dbg !2449
  br label %do.end.1146, !dbg !2449

do.end.1146:                                      ; preds = %do.body.1073
  br label %do.body.1147, !dbg !2452

do.body.1147:                                     ; preds = %do.end.1146
  call void @llvm.dbg.declare(metadata i64* %t01148, metadata !2453, metadata !DIExpression()), !dbg !2455
  %736 = load i64, i64* %c, align 8, !dbg !2456
  %shl1149 = shl i64 %736, 36, !dbg !2456
  %737 = load i64, i64* %c, align 8, !dbg !2456
  %shr1150 = lshr i64 %737, 28, !dbg !2456
  %or1151 = or i64 %shl1149, %shr1150, !dbg !2456
  %738 = load i64, i64* %c, align 8, !dbg !2456
  %shl1152 = shl i64 %738, 30, !dbg !2456
  %739 = load i64, i64* %c, align 8, !dbg !2456
  %shr1153 = lshr i64 %739, 34, !dbg !2456
  %or1154 = or i64 %shl1152, %shr1153, !dbg !2456
  %740 = load i64, i64* %c, align 8, !dbg !2456
  %shl1155 = shl i64 %740, 25, !dbg !2456
  %741 = load i64, i64* %c, align 8, !dbg !2456
  %shr1156 = lshr i64 %741, 39, !dbg !2456
  %or1157 = or i64 %shl1155, %shr1156, !dbg !2456
  %xor1158 = xor i64 %or1154, %or1157, !dbg !2456
  %xor1159 = xor i64 %or1151, %xor1158, !dbg !2456
  %742 = load i64, i64* %c, align 8, !dbg !2456
  %743 = load i64, i64* %d, align 8, !dbg !2456
  %and1160 = and i64 %742, %743, !dbg !2456
  %744 = load i64, i64* %e, align 8, !dbg !2456
  %745 = load i64, i64* %c, align 8, !dbg !2456
  %746 = load i64, i64* %d, align 8, !dbg !2456
  %or1161 = or i64 %745, %746, !dbg !2456
  %and1162 = and i64 %744, %or1161, !dbg !2456
  %or1163 = or i64 %and1160, %and1162, !dbg !2456
  %add1164 = add i64 %xor1159, %or1163, !dbg !2456
  store i64 %add1164, i64* %t01148, align 8, !dbg !2456
  call void @llvm.dbg.declare(metadata i64* %t11165, metadata !2458, metadata !DIExpression()), !dbg !2456
  %747 = load i64, i64* %b, align 8, !dbg !2456
  %748 = load i64, i64* %g, align 8, !dbg !2456
  %shl1166 = shl i64 %748, 50, !dbg !2456
  %749 = load i64, i64* %g, align 8, !dbg !2456
  %shr1167 = lshr i64 %749, 14, !dbg !2456
  %or1168 = or i64 %shl1166, %shr1167, !dbg !2456
  %750 = load i64, i64* %g, align 8, !dbg !2456
  %shl1169 = shl i64 %750, 46, !dbg !2456
  %751 = load i64, i64* %g, align 8, !dbg !2456
  %shr1170 = lshr i64 %751, 18, !dbg !2456
  %or1171 = or i64 %shl1169, %shr1170, !dbg !2456
  %752 = load i64, i64* %g, align 8, !dbg !2456
  %shl1172 = shl i64 %752, 23, !dbg !2456
  %753 = load i64, i64* %g, align 8, !dbg !2456
  %shr1173 = lshr i64 %753, 41, !dbg !2456
  %or1174 = or i64 %shl1172, %shr1173, !dbg !2456
  %xor1175 = xor i64 %or1171, %or1174, !dbg !2456
  %xor1176 = xor i64 %or1168, %xor1175, !dbg !2456
  %754 = load i64, i64* %a, align 8, !dbg !2456
  %755 = load i64, i64* %g, align 8, !dbg !2456
  %756 = load i64, i64* %h, align 8, !dbg !2456
  %757 = load i64, i64* %a, align 8, !dbg !2456
  %xor1177 = xor i64 %756, %757, !dbg !2456
  %and1178 = and i64 %755, %xor1177, !dbg !2456
  %xor1179 = xor i64 %754, %and1178, !dbg !2456
  %758 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 22), align 8, !dbg !2456
  %arrayidx1180 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 6, !dbg !2456
  %759 = load i64, i64* %arrayidx1180, align 8, !dbg !2456
  %arrayidx1181 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 4, !dbg !2456
  %760 = load i64, i64* %arrayidx1181, align 8, !dbg !2456
  %shl1182 = shl i64 %760, 45, !dbg !2456
  %arrayidx1183 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 4, !dbg !2456
  %761 = load i64, i64* %arrayidx1183, align 8, !dbg !2456
  %shr1184 = lshr i64 %761, 19, !dbg !2456
  %or1185 = or i64 %shl1182, %shr1184, !dbg !2456
  %arrayidx1186 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 4, !dbg !2456
  %762 = load i64, i64* %arrayidx1186, align 8, !dbg !2456
  %shl1187 = shl i64 %762, 3, !dbg !2456
  %arrayidx1188 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 4, !dbg !2456
  %763 = load i64, i64* %arrayidx1188, align 8, !dbg !2456
  %shr1189 = lshr i64 %763, 61, !dbg !2456
  %or1190 = or i64 %shl1187, %shr1189, !dbg !2456
  %arrayidx1191 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 4, !dbg !2456
  %764 = load i64, i64* %arrayidx1191, align 8, !dbg !2456
  %shr1192 = lshr i64 %764, 6, !dbg !2456
  %xor1193 = xor i64 %or1190, %shr1192, !dbg !2456
  %xor1194 = xor i64 %or1185, %xor1193, !dbg !2456
  %arrayidx1195 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 15, !dbg !2456
  %765 = load i64, i64* %arrayidx1195, align 8, !dbg !2456
  %arrayidx1196 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 7, !dbg !2456
  %766 = load i64, i64* %arrayidx1196, align 8, !dbg !2456
  %shl1197 = shl i64 %766, 63, !dbg !2456
  %arrayidx1198 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 7, !dbg !2456
  %767 = load i64, i64* %arrayidx1198, align 8, !dbg !2456
  %shr1199 = lshr i64 %767, 1, !dbg !2456
  %or1200 = or i64 %shl1197, %shr1199, !dbg !2456
  %arrayidx1201 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 7, !dbg !2456
  %768 = load i64, i64* %arrayidx1201, align 8, !dbg !2456
  %shl1202 = shl i64 %768, 56, !dbg !2456
  %arrayidx1203 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 7, !dbg !2456
  %769 = load i64, i64* %arrayidx1203, align 8, !dbg !2456
  %shr1204 = lshr i64 %769, 8, !dbg !2456
  %or1205 = or i64 %shl1202, %shr1204, !dbg !2456
  %arrayidx1206 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 7, !dbg !2456
  %770 = load i64, i64* %arrayidx1206, align 8, !dbg !2456
  %shr1207 = lshr i64 %770, 7, !dbg !2456
  %xor1208 = xor i64 %or1205, %shr1207, !dbg !2456
  %xor1209 = xor i64 %or1200, %xor1208, !dbg !2456
  %add1210 = add i64 %765, %xor1209, !dbg !2456
  %add1211 = add i64 %xor1194, %add1210, !dbg !2456
  %add1212 = add i64 %759, %add1211, !dbg !2456
  %arrayidx1213 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 6, !dbg !2456
  store i64 %add1212, i64* %arrayidx1213, align 8, !dbg !2456
  %add1214 = add i64 %758, %add1212, !dbg !2456
  %add1215 = add i64 %xor1179, %add1214, !dbg !2456
  %add1216 = add i64 %xor1176, %add1215, !dbg !2456
  %add1217 = add i64 %747, %add1216, !dbg !2456
  store i64 %add1217, i64* %t11165, align 8, !dbg !2456
  %771 = load i64, i64* %f, align 8, !dbg !2456
  %772 = load i64, i64* %t11165, align 8, !dbg !2456
  %add1218 = add i64 %771, %772, !dbg !2456
  store i64 %add1218, i64* %f, align 8, !dbg !2456
  %773 = load i64, i64* %t01148, align 8, !dbg !2456
  %774 = load i64, i64* %t11165, align 8, !dbg !2456
  %add1219 = add i64 %773, %774, !dbg !2456
  store i64 %add1219, i64* %b, align 8, !dbg !2456
  br label %do.end.1220, !dbg !2456

do.end.1220:                                      ; preds = %do.body.1147
  br label %do.body.1221, !dbg !2459

do.body.1221:                                     ; preds = %do.end.1220
  call void @llvm.dbg.declare(metadata i64* %t01222, metadata !2460, metadata !DIExpression()), !dbg !2462
  %775 = load i64, i64* %b, align 8, !dbg !2463
  %shl1223 = shl i64 %775, 36, !dbg !2463
  %776 = load i64, i64* %b, align 8, !dbg !2463
  %shr1224 = lshr i64 %776, 28, !dbg !2463
  %or1225 = or i64 %shl1223, %shr1224, !dbg !2463
  %777 = load i64, i64* %b, align 8, !dbg !2463
  %shl1226 = shl i64 %777, 30, !dbg !2463
  %778 = load i64, i64* %b, align 8, !dbg !2463
  %shr1227 = lshr i64 %778, 34, !dbg !2463
  %or1228 = or i64 %shl1226, %shr1227, !dbg !2463
  %779 = load i64, i64* %b, align 8, !dbg !2463
  %shl1229 = shl i64 %779, 25, !dbg !2463
  %780 = load i64, i64* %b, align 8, !dbg !2463
  %shr1230 = lshr i64 %780, 39, !dbg !2463
  %or1231 = or i64 %shl1229, %shr1230, !dbg !2463
  %xor1232 = xor i64 %or1228, %or1231, !dbg !2463
  %xor1233 = xor i64 %or1225, %xor1232, !dbg !2463
  %781 = load i64, i64* %b, align 8, !dbg !2463
  %782 = load i64, i64* %c, align 8, !dbg !2463
  %and1234 = and i64 %781, %782, !dbg !2463
  %783 = load i64, i64* %d, align 8, !dbg !2463
  %784 = load i64, i64* %b, align 8, !dbg !2463
  %785 = load i64, i64* %c, align 8, !dbg !2463
  %or1235 = or i64 %784, %785, !dbg !2463
  %and1236 = and i64 %783, %or1235, !dbg !2463
  %or1237 = or i64 %and1234, %and1236, !dbg !2463
  %add1238 = add i64 %xor1233, %or1237, !dbg !2463
  store i64 %add1238, i64* %t01222, align 8, !dbg !2463
  call void @llvm.dbg.declare(metadata i64* %t11239, metadata !2465, metadata !DIExpression()), !dbg !2463
  %786 = load i64, i64* %a, align 8, !dbg !2463
  %787 = load i64, i64* %f, align 8, !dbg !2463
  %shl1240 = shl i64 %787, 50, !dbg !2463
  %788 = load i64, i64* %f, align 8, !dbg !2463
  %shr1241 = lshr i64 %788, 14, !dbg !2463
  %or1242 = or i64 %shl1240, %shr1241, !dbg !2463
  %789 = load i64, i64* %f, align 8, !dbg !2463
  %shl1243 = shl i64 %789, 46, !dbg !2463
  %790 = load i64, i64* %f, align 8, !dbg !2463
  %shr1244 = lshr i64 %790, 18, !dbg !2463
  %or1245 = or i64 %shl1243, %shr1244, !dbg !2463
  %791 = load i64, i64* %f, align 8, !dbg !2463
  %shl1246 = shl i64 %791, 23, !dbg !2463
  %792 = load i64, i64* %f, align 8, !dbg !2463
  %shr1247 = lshr i64 %792, 41, !dbg !2463
  %or1248 = or i64 %shl1246, %shr1247, !dbg !2463
  %xor1249 = xor i64 %or1245, %or1248, !dbg !2463
  %xor1250 = xor i64 %or1242, %xor1249, !dbg !2463
  %793 = load i64, i64* %h, align 8, !dbg !2463
  %794 = load i64, i64* %f, align 8, !dbg !2463
  %795 = load i64, i64* %g, align 8, !dbg !2463
  %796 = load i64, i64* %h, align 8, !dbg !2463
  %xor1251 = xor i64 %795, %796, !dbg !2463
  %and1252 = and i64 %794, %xor1251, !dbg !2463
  %xor1253 = xor i64 %793, %and1252, !dbg !2463
  %797 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 23), align 8, !dbg !2463
  %arrayidx1254 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 7, !dbg !2463
  %798 = load i64, i64* %arrayidx1254, align 8, !dbg !2463
  %arrayidx1255 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 5, !dbg !2463
  %799 = load i64, i64* %arrayidx1255, align 8, !dbg !2463
  %shl1256 = shl i64 %799, 45, !dbg !2463
  %arrayidx1257 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 5, !dbg !2463
  %800 = load i64, i64* %arrayidx1257, align 8, !dbg !2463
  %shr1258 = lshr i64 %800, 19, !dbg !2463
  %or1259 = or i64 %shl1256, %shr1258, !dbg !2463
  %arrayidx1260 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 5, !dbg !2463
  %801 = load i64, i64* %arrayidx1260, align 8, !dbg !2463
  %shl1261 = shl i64 %801, 3, !dbg !2463
  %arrayidx1262 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 5, !dbg !2463
  %802 = load i64, i64* %arrayidx1262, align 8, !dbg !2463
  %shr1263 = lshr i64 %802, 61, !dbg !2463
  %or1264 = or i64 %shl1261, %shr1263, !dbg !2463
  %arrayidx1265 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 5, !dbg !2463
  %803 = load i64, i64* %arrayidx1265, align 8, !dbg !2463
  %shr1266 = lshr i64 %803, 6, !dbg !2463
  %xor1267 = xor i64 %or1264, %shr1266, !dbg !2463
  %xor1268 = xor i64 %or1259, %xor1267, !dbg !2463
  %arrayidx1269 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 0, !dbg !2463
  %804 = load i64, i64* %arrayidx1269, align 8, !dbg !2463
  %arrayidx1270 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 8, !dbg !2463
  %805 = load i64, i64* %arrayidx1270, align 8, !dbg !2463
  %shl1271 = shl i64 %805, 63, !dbg !2463
  %arrayidx1272 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 8, !dbg !2463
  %806 = load i64, i64* %arrayidx1272, align 8, !dbg !2463
  %shr1273 = lshr i64 %806, 1, !dbg !2463
  %or1274 = or i64 %shl1271, %shr1273, !dbg !2463
  %arrayidx1275 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 8, !dbg !2463
  %807 = load i64, i64* %arrayidx1275, align 8, !dbg !2463
  %shl1276 = shl i64 %807, 56, !dbg !2463
  %arrayidx1277 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 8, !dbg !2463
  %808 = load i64, i64* %arrayidx1277, align 8, !dbg !2463
  %shr1278 = lshr i64 %808, 8, !dbg !2463
  %or1279 = or i64 %shl1276, %shr1278, !dbg !2463
  %arrayidx1280 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 8, !dbg !2463
  %809 = load i64, i64* %arrayidx1280, align 8, !dbg !2463
  %shr1281 = lshr i64 %809, 7, !dbg !2463
  %xor1282 = xor i64 %or1279, %shr1281, !dbg !2463
  %xor1283 = xor i64 %or1274, %xor1282, !dbg !2463
  %add1284 = add i64 %804, %xor1283, !dbg !2463
  %add1285 = add i64 %xor1268, %add1284, !dbg !2463
  %add1286 = add i64 %798, %add1285, !dbg !2463
  %arrayidx1287 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 7, !dbg !2463
  store i64 %add1286, i64* %arrayidx1287, align 8, !dbg !2463
  %add1288 = add i64 %797, %add1286, !dbg !2463
  %add1289 = add i64 %xor1253, %add1288, !dbg !2463
  %add1290 = add i64 %xor1250, %add1289, !dbg !2463
  %add1291 = add i64 %786, %add1290, !dbg !2463
  store i64 %add1291, i64* %t11239, align 8, !dbg !2463
  %810 = load i64, i64* %e, align 8, !dbg !2463
  %811 = load i64, i64* %t11239, align 8, !dbg !2463
  %add1292 = add i64 %810, %811, !dbg !2463
  store i64 %add1292, i64* %e, align 8, !dbg !2463
  %812 = load i64, i64* %t01222, align 8, !dbg !2463
  %813 = load i64, i64* %t11239, align 8, !dbg !2463
  %add1293 = add i64 %812, %813, !dbg !2463
  store i64 %add1293, i64* %a, align 8, !dbg !2463
  br label %do.end.1294, !dbg !2463

do.end.1294:                                      ; preds = %do.body.1221
  br label %do.body.1295, !dbg !2466

do.body.1295:                                     ; preds = %do.end.1294
  call void @llvm.dbg.declare(metadata i64* %t01296, metadata !2467, metadata !DIExpression()), !dbg !2469
  %814 = load i64, i64* %a, align 8, !dbg !2470
  %shl1297 = shl i64 %814, 36, !dbg !2470
  %815 = load i64, i64* %a, align 8, !dbg !2470
  %shr1298 = lshr i64 %815, 28, !dbg !2470
  %or1299 = or i64 %shl1297, %shr1298, !dbg !2470
  %816 = load i64, i64* %a, align 8, !dbg !2470
  %shl1300 = shl i64 %816, 30, !dbg !2470
  %817 = load i64, i64* %a, align 8, !dbg !2470
  %shr1301 = lshr i64 %817, 34, !dbg !2470
  %or1302 = or i64 %shl1300, %shr1301, !dbg !2470
  %818 = load i64, i64* %a, align 8, !dbg !2470
  %shl1303 = shl i64 %818, 25, !dbg !2470
  %819 = load i64, i64* %a, align 8, !dbg !2470
  %shr1304 = lshr i64 %819, 39, !dbg !2470
  %or1305 = or i64 %shl1303, %shr1304, !dbg !2470
  %xor1306 = xor i64 %or1302, %or1305, !dbg !2470
  %xor1307 = xor i64 %or1299, %xor1306, !dbg !2470
  %820 = load i64, i64* %a, align 8, !dbg !2470
  %821 = load i64, i64* %b, align 8, !dbg !2470
  %and1308 = and i64 %820, %821, !dbg !2470
  %822 = load i64, i64* %c, align 8, !dbg !2470
  %823 = load i64, i64* %a, align 8, !dbg !2470
  %824 = load i64, i64* %b, align 8, !dbg !2470
  %or1309 = or i64 %823, %824, !dbg !2470
  %and1310 = and i64 %822, %or1309, !dbg !2470
  %or1311 = or i64 %and1308, %and1310, !dbg !2470
  %add1312 = add i64 %xor1307, %or1311, !dbg !2470
  store i64 %add1312, i64* %t01296, align 8, !dbg !2470
  call void @llvm.dbg.declare(metadata i64* %t11313, metadata !2472, metadata !DIExpression()), !dbg !2470
  %825 = load i64, i64* %h, align 8, !dbg !2470
  %826 = load i64, i64* %e, align 8, !dbg !2470
  %shl1314 = shl i64 %826, 50, !dbg !2470
  %827 = load i64, i64* %e, align 8, !dbg !2470
  %shr1315 = lshr i64 %827, 14, !dbg !2470
  %or1316 = or i64 %shl1314, %shr1315, !dbg !2470
  %828 = load i64, i64* %e, align 8, !dbg !2470
  %shl1317 = shl i64 %828, 46, !dbg !2470
  %829 = load i64, i64* %e, align 8, !dbg !2470
  %shr1318 = lshr i64 %829, 18, !dbg !2470
  %or1319 = or i64 %shl1317, %shr1318, !dbg !2470
  %830 = load i64, i64* %e, align 8, !dbg !2470
  %shl1320 = shl i64 %830, 23, !dbg !2470
  %831 = load i64, i64* %e, align 8, !dbg !2470
  %shr1321 = lshr i64 %831, 41, !dbg !2470
  %or1322 = or i64 %shl1320, %shr1321, !dbg !2470
  %xor1323 = xor i64 %or1319, %or1322, !dbg !2470
  %xor1324 = xor i64 %or1316, %xor1323, !dbg !2470
  %832 = load i64, i64* %g, align 8, !dbg !2470
  %833 = load i64, i64* %e, align 8, !dbg !2470
  %834 = load i64, i64* %f, align 8, !dbg !2470
  %835 = load i64, i64* %g, align 8, !dbg !2470
  %xor1325 = xor i64 %834, %835, !dbg !2470
  %and1326 = and i64 %833, %xor1325, !dbg !2470
  %xor1327 = xor i64 %832, %and1326, !dbg !2470
  %836 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 24), align 8, !dbg !2470
  %arrayidx1328 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 8, !dbg !2470
  %837 = load i64, i64* %arrayidx1328, align 8, !dbg !2470
  %arrayidx1329 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 6, !dbg !2470
  %838 = load i64, i64* %arrayidx1329, align 8, !dbg !2470
  %shl1330 = shl i64 %838, 45, !dbg !2470
  %arrayidx1331 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 6, !dbg !2470
  %839 = load i64, i64* %arrayidx1331, align 8, !dbg !2470
  %shr1332 = lshr i64 %839, 19, !dbg !2470
  %or1333 = or i64 %shl1330, %shr1332, !dbg !2470
  %arrayidx1334 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 6, !dbg !2470
  %840 = load i64, i64* %arrayidx1334, align 8, !dbg !2470
  %shl1335 = shl i64 %840, 3, !dbg !2470
  %arrayidx1336 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 6, !dbg !2470
  %841 = load i64, i64* %arrayidx1336, align 8, !dbg !2470
  %shr1337 = lshr i64 %841, 61, !dbg !2470
  %or1338 = or i64 %shl1335, %shr1337, !dbg !2470
  %arrayidx1339 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 6, !dbg !2470
  %842 = load i64, i64* %arrayidx1339, align 8, !dbg !2470
  %shr1340 = lshr i64 %842, 6, !dbg !2470
  %xor1341 = xor i64 %or1338, %shr1340, !dbg !2470
  %xor1342 = xor i64 %or1333, %xor1341, !dbg !2470
  %arrayidx1343 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 1, !dbg !2470
  %843 = load i64, i64* %arrayidx1343, align 8, !dbg !2470
  %arrayidx1344 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 9, !dbg !2470
  %844 = load i64, i64* %arrayidx1344, align 8, !dbg !2470
  %shl1345 = shl i64 %844, 63, !dbg !2470
  %arrayidx1346 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 9, !dbg !2470
  %845 = load i64, i64* %arrayidx1346, align 8, !dbg !2470
  %shr1347 = lshr i64 %845, 1, !dbg !2470
  %or1348 = or i64 %shl1345, %shr1347, !dbg !2470
  %arrayidx1349 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 9, !dbg !2470
  %846 = load i64, i64* %arrayidx1349, align 8, !dbg !2470
  %shl1350 = shl i64 %846, 56, !dbg !2470
  %arrayidx1351 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 9, !dbg !2470
  %847 = load i64, i64* %arrayidx1351, align 8, !dbg !2470
  %shr1352 = lshr i64 %847, 8, !dbg !2470
  %or1353 = or i64 %shl1350, %shr1352, !dbg !2470
  %arrayidx1354 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 9, !dbg !2470
  %848 = load i64, i64* %arrayidx1354, align 8, !dbg !2470
  %shr1355 = lshr i64 %848, 7, !dbg !2470
  %xor1356 = xor i64 %or1353, %shr1355, !dbg !2470
  %xor1357 = xor i64 %or1348, %xor1356, !dbg !2470
  %add1358 = add i64 %843, %xor1357, !dbg !2470
  %add1359 = add i64 %xor1342, %add1358, !dbg !2470
  %add1360 = add i64 %837, %add1359, !dbg !2470
  %arrayidx1361 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 8, !dbg !2470
  store i64 %add1360, i64* %arrayidx1361, align 8, !dbg !2470
  %add1362 = add i64 %836, %add1360, !dbg !2470
  %add1363 = add i64 %xor1327, %add1362, !dbg !2470
  %add1364 = add i64 %xor1324, %add1363, !dbg !2470
  %add1365 = add i64 %825, %add1364, !dbg !2470
  store i64 %add1365, i64* %t11313, align 8, !dbg !2470
  %849 = load i64, i64* %d, align 8, !dbg !2470
  %850 = load i64, i64* %t11313, align 8, !dbg !2470
  %add1366 = add i64 %849, %850, !dbg !2470
  store i64 %add1366, i64* %d, align 8, !dbg !2470
  %851 = load i64, i64* %t01296, align 8, !dbg !2470
  %852 = load i64, i64* %t11313, align 8, !dbg !2470
  %add1367 = add i64 %851, %852, !dbg !2470
  store i64 %add1367, i64* %h, align 8, !dbg !2470
  br label %do.end.1368, !dbg !2470

do.end.1368:                                      ; preds = %do.body.1295
  br label %do.body.1369, !dbg !2473

do.body.1369:                                     ; preds = %do.end.1368
  call void @llvm.dbg.declare(metadata i64* %t01370, metadata !2474, metadata !DIExpression()), !dbg !2476
  %853 = load i64, i64* %h, align 8, !dbg !2477
  %shl1371 = shl i64 %853, 36, !dbg !2477
  %854 = load i64, i64* %h, align 8, !dbg !2477
  %shr1372 = lshr i64 %854, 28, !dbg !2477
  %or1373 = or i64 %shl1371, %shr1372, !dbg !2477
  %855 = load i64, i64* %h, align 8, !dbg !2477
  %shl1374 = shl i64 %855, 30, !dbg !2477
  %856 = load i64, i64* %h, align 8, !dbg !2477
  %shr1375 = lshr i64 %856, 34, !dbg !2477
  %or1376 = or i64 %shl1374, %shr1375, !dbg !2477
  %857 = load i64, i64* %h, align 8, !dbg !2477
  %shl1377 = shl i64 %857, 25, !dbg !2477
  %858 = load i64, i64* %h, align 8, !dbg !2477
  %shr1378 = lshr i64 %858, 39, !dbg !2477
  %or1379 = or i64 %shl1377, %shr1378, !dbg !2477
  %xor1380 = xor i64 %or1376, %or1379, !dbg !2477
  %xor1381 = xor i64 %or1373, %xor1380, !dbg !2477
  %859 = load i64, i64* %h, align 8, !dbg !2477
  %860 = load i64, i64* %a, align 8, !dbg !2477
  %and1382 = and i64 %859, %860, !dbg !2477
  %861 = load i64, i64* %b, align 8, !dbg !2477
  %862 = load i64, i64* %h, align 8, !dbg !2477
  %863 = load i64, i64* %a, align 8, !dbg !2477
  %or1383 = or i64 %862, %863, !dbg !2477
  %and1384 = and i64 %861, %or1383, !dbg !2477
  %or1385 = or i64 %and1382, %and1384, !dbg !2477
  %add1386 = add i64 %xor1381, %or1385, !dbg !2477
  store i64 %add1386, i64* %t01370, align 8, !dbg !2477
  call void @llvm.dbg.declare(metadata i64* %t11387, metadata !2479, metadata !DIExpression()), !dbg !2477
  %864 = load i64, i64* %g, align 8, !dbg !2477
  %865 = load i64, i64* %d, align 8, !dbg !2477
  %shl1388 = shl i64 %865, 50, !dbg !2477
  %866 = load i64, i64* %d, align 8, !dbg !2477
  %shr1389 = lshr i64 %866, 14, !dbg !2477
  %or1390 = or i64 %shl1388, %shr1389, !dbg !2477
  %867 = load i64, i64* %d, align 8, !dbg !2477
  %shl1391 = shl i64 %867, 46, !dbg !2477
  %868 = load i64, i64* %d, align 8, !dbg !2477
  %shr1392 = lshr i64 %868, 18, !dbg !2477
  %or1393 = or i64 %shl1391, %shr1392, !dbg !2477
  %869 = load i64, i64* %d, align 8, !dbg !2477
  %shl1394 = shl i64 %869, 23, !dbg !2477
  %870 = load i64, i64* %d, align 8, !dbg !2477
  %shr1395 = lshr i64 %870, 41, !dbg !2477
  %or1396 = or i64 %shl1394, %shr1395, !dbg !2477
  %xor1397 = xor i64 %or1393, %or1396, !dbg !2477
  %xor1398 = xor i64 %or1390, %xor1397, !dbg !2477
  %871 = load i64, i64* %f, align 8, !dbg !2477
  %872 = load i64, i64* %d, align 8, !dbg !2477
  %873 = load i64, i64* %e, align 8, !dbg !2477
  %874 = load i64, i64* %f, align 8, !dbg !2477
  %xor1399 = xor i64 %873, %874, !dbg !2477
  %and1400 = and i64 %872, %xor1399, !dbg !2477
  %xor1401 = xor i64 %871, %and1400, !dbg !2477
  %875 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 25), align 8, !dbg !2477
  %arrayidx1402 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 9, !dbg !2477
  %876 = load i64, i64* %arrayidx1402, align 8, !dbg !2477
  %arrayidx1403 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 7, !dbg !2477
  %877 = load i64, i64* %arrayidx1403, align 8, !dbg !2477
  %shl1404 = shl i64 %877, 45, !dbg !2477
  %arrayidx1405 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 7, !dbg !2477
  %878 = load i64, i64* %arrayidx1405, align 8, !dbg !2477
  %shr1406 = lshr i64 %878, 19, !dbg !2477
  %or1407 = or i64 %shl1404, %shr1406, !dbg !2477
  %arrayidx1408 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 7, !dbg !2477
  %879 = load i64, i64* %arrayidx1408, align 8, !dbg !2477
  %shl1409 = shl i64 %879, 3, !dbg !2477
  %arrayidx1410 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 7, !dbg !2477
  %880 = load i64, i64* %arrayidx1410, align 8, !dbg !2477
  %shr1411 = lshr i64 %880, 61, !dbg !2477
  %or1412 = or i64 %shl1409, %shr1411, !dbg !2477
  %arrayidx1413 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 7, !dbg !2477
  %881 = load i64, i64* %arrayidx1413, align 8, !dbg !2477
  %shr1414 = lshr i64 %881, 6, !dbg !2477
  %xor1415 = xor i64 %or1412, %shr1414, !dbg !2477
  %xor1416 = xor i64 %or1407, %xor1415, !dbg !2477
  %arrayidx1417 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 2, !dbg !2477
  %882 = load i64, i64* %arrayidx1417, align 8, !dbg !2477
  %arrayidx1418 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 10, !dbg !2477
  %883 = load i64, i64* %arrayidx1418, align 8, !dbg !2477
  %shl1419 = shl i64 %883, 63, !dbg !2477
  %arrayidx1420 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 10, !dbg !2477
  %884 = load i64, i64* %arrayidx1420, align 8, !dbg !2477
  %shr1421 = lshr i64 %884, 1, !dbg !2477
  %or1422 = or i64 %shl1419, %shr1421, !dbg !2477
  %arrayidx1423 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 10, !dbg !2477
  %885 = load i64, i64* %arrayidx1423, align 8, !dbg !2477
  %shl1424 = shl i64 %885, 56, !dbg !2477
  %arrayidx1425 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 10, !dbg !2477
  %886 = load i64, i64* %arrayidx1425, align 8, !dbg !2477
  %shr1426 = lshr i64 %886, 8, !dbg !2477
  %or1427 = or i64 %shl1424, %shr1426, !dbg !2477
  %arrayidx1428 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 10, !dbg !2477
  %887 = load i64, i64* %arrayidx1428, align 8, !dbg !2477
  %shr1429 = lshr i64 %887, 7, !dbg !2477
  %xor1430 = xor i64 %or1427, %shr1429, !dbg !2477
  %xor1431 = xor i64 %or1422, %xor1430, !dbg !2477
  %add1432 = add i64 %882, %xor1431, !dbg !2477
  %add1433 = add i64 %xor1416, %add1432, !dbg !2477
  %add1434 = add i64 %876, %add1433, !dbg !2477
  %arrayidx1435 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 9, !dbg !2477
  store i64 %add1434, i64* %arrayidx1435, align 8, !dbg !2477
  %add1436 = add i64 %875, %add1434, !dbg !2477
  %add1437 = add i64 %xor1401, %add1436, !dbg !2477
  %add1438 = add i64 %xor1398, %add1437, !dbg !2477
  %add1439 = add i64 %864, %add1438, !dbg !2477
  store i64 %add1439, i64* %t11387, align 8, !dbg !2477
  %888 = load i64, i64* %c, align 8, !dbg !2477
  %889 = load i64, i64* %t11387, align 8, !dbg !2477
  %add1440 = add i64 %888, %889, !dbg !2477
  store i64 %add1440, i64* %c, align 8, !dbg !2477
  %890 = load i64, i64* %t01370, align 8, !dbg !2477
  %891 = load i64, i64* %t11387, align 8, !dbg !2477
  %add1441 = add i64 %890, %891, !dbg !2477
  store i64 %add1441, i64* %g, align 8, !dbg !2477
  br label %do.end.1442, !dbg !2477

do.end.1442:                                      ; preds = %do.body.1369
  br label %do.body.1443, !dbg !2480

do.body.1443:                                     ; preds = %do.end.1442
  call void @llvm.dbg.declare(metadata i64* %t01444, metadata !2481, metadata !DIExpression()), !dbg !2483
  %892 = load i64, i64* %g, align 8, !dbg !2484
  %shl1445 = shl i64 %892, 36, !dbg !2484
  %893 = load i64, i64* %g, align 8, !dbg !2484
  %shr1446 = lshr i64 %893, 28, !dbg !2484
  %or1447 = or i64 %shl1445, %shr1446, !dbg !2484
  %894 = load i64, i64* %g, align 8, !dbg !2484
  %shl1448 = shl i64 %894, 30, !dbg !2484
  %895 = load i64, i64* %g, align 8, !dbg !2484
  %shr1449 = lshr i64 %895, 34, !dbg !2484
  %or1450 = or i64 %shl1448, %shr1449, !dbg !2484
  %896 = load i64, i64* %g, align 8, !dbg !2484
  %shl1451 = shl i64 %896, 25, !dbg !2484
  %897 = load i64, i64* %g, align 8, !dbg !2484
  %shr1452 = lshr i64 %897, 39, !dbg !2484
  %or1453 = or i64 %shl1451, %shr1452, !dbg !2484
  %xor1454 = xor i64 %or1450, %or1453, !dbg !2484
  %xor1455 = xor i64 %or1447, %xor1454, !dbg !2484
  %898 = load i64, i64* %g, align 8, !dbg !2484
  %899 = load i64, i64* %h, align 8, !dbg !2484
  %and1456 = and i64 %898, %899, !dbg !2484
  %900 = load i64, i64* %a, align 8, !dbg !2484
  %901 = load i64, i64* %g, align 8, !dbg !2484
  %902 = load i64, i64* %h, align 8, !dbg !2484
  %or1457 = or i64 %901, %902, !dbg !2484
  %and1458 = and i64 %900, %or1457, !dbg !2484
  %or1459 = or i64 %and1456, %and1458, !dbg !2484
  %add1460 = add i64 %xor1455, %or1459, !dbg !2484
  store i64 %add1460, i64* %t01444, align 8, !dbg !2484
  call void @llvm.dbg.declare(metadata i64* %t11461, metadata !2486, metadata !DIExpression()), !dbg !2484
  %903 = load i64, i64* %f, align 8, !dbg !2484
  %904 = load i64, i64* %c, align 8, !dbg !2484
  %shl1462 = shl i64 %904, 50, !dbg !2484
  %905 = load i64, i64* %c, align 8, !dbg !2484
  %shr1463 = lshr i64 %905, 14, !dbg !2484
  %or1464 = or i64 %shl1462, %shr1463, !dbg !2484
  %906 = load i64, i64* %c, align 8, !dbg !2484
  %shl1465 = shl i64 %906, 46, !dbg !2484
  %907 = load i64, i64* %c, align 8, !dbg !2484
  %shr1466 = lshr i64 %907, 18, !dbg !2484
  %or1467 = or i64 %shl1465, %shr1466, !dbg !2484
  %908 = load i64, i64* %c, align 8, !dbg !2484
  %shl1468 = shl i64 %908, 23, !dbg !2484
  %909 = load i64, i64* %c, align 8, !dbg !2484
  %shr1469 = lshr i64 %909, 41, !dbg !2484
  %or1470 = or i64 %shl1468, %shr1469, !dbg !2484
  %xor1471 = xor i64 %or1467, %or1470, !dbg !2484
  %xor1472 = xor i64 %or1464, %xor1471, !dbg !2484
  %910 = load i64, i64* %e, align 8, !dbg !2484
  %911 = load i64, i64* %c, align 8, !dbg !2484
  %912 = load i64, i64* %d, align 8, !dbg !2484
  %913 = load i64, i64* %e, align 8, !dbg !2484
  %xor1473 = xor i64 %912, %913, !dbg !2484
  %and1474 = and i64 %911, %xor1473, !dbg !2484
  %xor1475 = xor i64 %910, %and1474, !dbg !2484
  %914 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 26), align 8, !dbg !2484
  %arrayidx1476 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 10, !dbg !2484
  %915 = load i64, i64* %arrayidx1476, align 8, !dbg !2484
  %arrayidx1477 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 8, !dbg !2484
  %916 = load i64, i64* %arrayidx1477, align 8, !dbg !2484
  %shl1478 = shl i64 %916, 45, !dbg !2484
  %arrayidx1479 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 8, !dbg !2484
  %917 = load i64, i64* %arrayidx1479, align 8, !dbg !2484
  %shr1480 = lshr i64 %917, 19, !dbg !2484
  %or1481 = or i64 %shl1478, %shr1480, !dbg !2484
  %arrayidx1482 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 8, !dbg !2484
  %918 = load i64, i64* %arrayidx1482, align 8, !dbg !2484
  %shl1483 = shl i64 %918, 3, !dbg !2484
  %arrayidx1484 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 8, !dbg !2484
  %919 = load i64, i64* %arrayidx1484, align 8, !dbg !2484
  %shr1485 = lshr i64 %919, 61, !dbg !2484
  %or1486 = or i64 %shl1483, %shr1485, !dbg !2484
  %arrayidx1487 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 8, !dbg !2484
  %920 = load i64, i64* %arrayidx1487, align 8, !dbg !2484
  %shr1488 = lshr i64 %920, 6, !dbg !2484
  %xor1489 = xor i64 %or1486, %shr1488, !dbg !2484
  %xor1490 = xor i64 %or1481, %xor1489, !dbg !2484
  %arrayidx1491 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 3, !dbg !2484
  %921 = load i64, i64* %arrayidx1491, align 8, !dbg !2484
  %arrayidx1492 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 11, !dbg !2484
  %922 = load i64, i64* %arrayidx1492, align 8, !dbg !2484
  %shl1493 = shl i64 %922, 63, !dbg !2484
  %arrayidx1494 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 11, !dbg !2484
  %923 = load i64, i64* %arrayidx1494, align 8, !dbg !2484
  %shr1495 = lshr i64 %923, 1, !dbg !2484
  %or1496 = or i64 %shl1493, %shr1495, !dbg !2484
  %arrayidx1497 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 11, !dbg !2484
  %924 = load i64, i64* %arrayidx1497, align 8, !dbg !2484
  %shl1498 = shl i64 %924, 56, !dbg !2484
  %arrayidx1499 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 11, !dbg !2484
  %925 = load i64, i64* %arrayidx1499, align 8, !dbg !2484
  %shr1500 = lshr i64 %925, 8, !dbg !2484
  %or1501 = or i64 %shl1498, %shr1500, !dbg !2484
  %arrayidx1502 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 11, !dbg !2484
  %926 = load i64, i64* %arrayidx1502, align 8, !dbg !2484
  %shr1503 = lshr i64 %926, 7, !dbg !2484
  %xor1504 = xor i64 %or1501, %shr1503, !dbg !2484
  %xor1505 = xor i64 %or1496, %xor1504, !dbg !2484
  %add1506 = add i64 %921, %xor1505, !dbg !2484
  %add1507 = add i64 %xor1490, %add1506, !dbg !2484
  %add1508 = add i64 %915, %add1507, !dbg !2484
  %arrayidx1509 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 10, !dbg !2484
  store i64 %add1508, i64* %arrayidx1509, align 8, !dbg !2484
  %add1510 = add i64 %914, %add1508, !dbg !2484
  %add1511 = add i64 %xor1475, %add1510, !dbg !2484
  %add1512 = add i64 %xor1472, %add1511, !dbg !2484
  %add1513 = add i64 %903, %add1512, !dbg !2484
  store i64 %add1513, i64* %t11461, align 8, !dbg !2484
  %927 = load i64, i64* %b, align 8, !dbg !2484
  %928 = load i64, i64* %t11461, align 8, !dbg !2484
  %add1514 = add i64 %927, %928, !dbg !2484
  store i64 %add1514, i64* %b, align 8, !dbg !2484
  %929 = load i64, i64* %t01444, align 8, !dbg !2484
  %930 = load i64, i64* %t11461, align 8, !dbg !2484
  %add1515 = add i64 %929, %930, !dbg !2484
  store i64 %add1515, i64* %f, align 8, !dbg !2484
  br label %do.end.1516, !dbg !2484

do.end.1516:                                      ; preds = %do.body.1443
  br label %do.body.1517, !dbg !2487

do.body.1517:                                     ; preds = %do.end.1516
  call void @llvm.dbg.declare(metadata i64* %t01518, metadata !2488, metadata !DIExpression()), !dbg !2490
  %931 = load i64, i64* %f, align 8, !dbg !2491
  %shl1519 = shl i64 %931, 36, !dbg !2491
  %932 = load i64, i64* %f, align 8, !dbg !2491
  %shr1520 = lshr i64 %932, 28, !dbg !2491
  %or1521 = or i64 %shl1519, %shr1520, !dbg !2491
  %933 = load i64, i64* %f, align 8, !dbg !2491
  %shl1522 = shl i64 %933, 30, !dbg !2491
  %934 = load i64, i64* %f, align 8, !dbg !2491
  %shr1523 = lshr i64 %934, 34, !dbg !2491
  %or1524 = or i64 %shl1522, %shr1523, !dbg !2491
  %935 = load i64, i64* %f, align 8, !dbg !2491
  %shl1525 = shl i64 %935, 25, !dbg !2491
  %936 = load i64, i64* %f, align 8, !dbg !2491
  %shr1526 = lshr i64 %936, 39, !dbg !2491
  %or1527 = or i64 %shl1525, %shr1526, !dbg !2491
  %xor1528 = xor i64 %or1524, %or1527, !dbg !2491
  %xor1529 = xor i64 %or1521, %xor1528, !dbg !2491
  %937 = load i64, i64* %f, align 8, !dbg !2491
  %938 = load i64, i64* %g, align 8, !dbg !2491
  %and1530 = and i64 %937, %938, !dbg !2491
  %939 = load i64, i64* %h, align 8, !dbg !2491
  %940 = load i64, i64* %f, align 8, !dbg !2491
  %941 = load i64, i64* %g, align 8, !dbg !2491
  %or1531 = or i64 %940, %941, !dbg !2491
  %and1532 = and i64 %939, %or1531, !dbg !2491
  %or1533 = or i64 %and1530, %and1532, !dbg !2491
  %add1534 = add i64 %xor1529, %or1533, !dbg !2491
  store i64 %add1534, i64* %t01518, align 8, !dbg !2491
  call void @llvm.dbg.declare(metadata i64* %t11535, metadata !2493, metadata !DIExpression()), !dbg !2491
  %942 = load i64, i64* %e, align 8, !dbg !2491
  %943 = load i64, i64* %b, align 8, !dbg !2491
  %shl1536 = shl i64 %943, 50, !dbg !2491
  %944 = load i64, i64* %b, align 8, !dbg !2491
  %shr1537 = lshr i64 %944, 14, !dbg !2491
  %or1538 = or i64 %shl1536, %shr1537, !dbg !2491
  %945 = load i64, i64* %b, align 8, !dbg !2491
  %shl1539 = shl i64 %945, 46, !dbg !2491
  %946 = load i64, i64* %b, align 8, !dbg !2491
  %shr1540 = lshr i64 %946, 18, !dbg !2491
  %or1541 = or i64 %shl1539, %shr1540, !dbg !2491
  %947 = load i64, i64* %b, align 8, !dbg !2491
  %shl1542 = shl i64 %947, 23, !dbg !2491
  %948 = load i64, i64* %b, align 8, !dbg !2491
  %shr1543 = lshr i64 %948, 41, !dbg !2491
  %or1544 = or i64 %shl1542, %shr1543, !dbg !2491
  %xor1545 = xor i64 %or1541, %or1544, !dbg !2491
  %xor1546 = xor i64 %or1538, %xor1545, !dbg !2491
  %949 = load i64, i64* %d, align 8, !dbg !2491
  %950 = load i64, i64* %b, align 8, !dbg !2491
  %951 = load i64, i64* %c, align 8, !dbg !2491
  %952 = load i64, i64* %d, align 8, !dbg !2491
  %xor1547 = xor i64 %951, %952, !dbg !2491
  %and1548 = and i64 %950, %xor1547, !dbg !2491
  %xor1549 = xor i64 %949, %and1548, !dbg !2491
  %953 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 27), align 8, !dbg !2491
  %arrayidx1550 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 11, !dbg !2491
  %954 = load i64, i64* %arrayidx1550, align 8, !dbg !2491
  %arrayidx1551 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 9, !dbg !2491
  %955 = load i64, i64* %arrayidx1551, align 8, !dbg !2491
  %shl1552 = shl i64 %955, 45, !dbg !2491
  %arrayidx1553 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 9, !dbg !2491
  %956 = load i64, i64* %arrayidx1553, align 8, !dbg !2491
  %shr1554 = lshr i64 %956, 19, !dbg !2491
  %or1555 = or i64 %shl1552, %shr1554, !dbg !2491
  %arrayidx1556 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 9, !dbg !2491
  %957 = load i64, i64* %arrayidx1556, align 8, !dbg !2491
  %shl1557 = shl i64 %957, 3, !dbg !2491
  %arrayidx1558 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 9, !dbg !2491
  %958 = load i64, i64* %arrayidx1558, align 8, !dbg !2491
  %shr1559 = lshr i64 %958, 61, !dbg !2491
  %or1560 = or i64 %shl1557, %shr1559, !dbg !2491
  %arrayidx1561 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 9, !dbg !2491
  %959 = load i64, i64* %arrayidx1561, align 8, !dbg !2491
  %shr1562 = lshr i64 %959, 6, !dbg !2491
  %xor1563 = xor i64 %or1560, %shr1562, !dbg !2491
  %xor1564 = xor i64 %or1555, %xor1563, !dbg !2491
  %arrayidx1565 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 4, !dbg !2491
  %960 = load i64, i64* %arrayidx1565, align 8, !dbg !2491
  %arrayidx1566 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 12, !dbg !2491
  %961 = load i64, i64* %arrayidx1566, align 8, !dbg !2491
  %shl1567 = shl i64 %961, 63, !dbg !2491
  %arrayidx1568 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 12, !dbg !2491
  %962 = load i64, i64* %arrayidx1568, align 8, !dbg !2491
  %shr1569 = lshr i64 %962, 1, !dbg !2491
  %or1570 = or i64 %shl1567, %shr1569, !dbg !2491
  %arrayidx1571 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 12, !dbg !2491
  %963 = load i64, i64* %arrayidx1571, align 8, !dbg !2491
  %shl1572 = shl i64 %963, 56, !dbg !2491
  %arrayidx1573 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 12, !dbg !2491
  %964 = load i64, i64* %arrayidx1573, align 8, !dbg !2491
  %shr1574 = lshr i64 %964, 8, !dbg !2491
  %or1575 = or i64 %shl1572, %shr1574, !dbg !2491
  %arrayidx1576 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 12, !dbg !2491
  %965 = load i64, i64* %arrayidx1576, align 8, !dbg !2491
  %shr1577 = lshr i64 %965, 7, !dbg !2491
  %xor1578 = xor i64 %or1575, %shr1577, !dbg !2491
  %xor1579 = xor i64 %or1570, %xor1578, !dbg !2491
  %add1580 = add i64 %960, %xor1579, !dbg !2491
  %add1581 = add i64 %xor1564, %add1580, !dbg !2491
  %add1582 = add i64 %954, %add1581, !dbg !2491
  %arrayidx1583 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 11, !dbg !2491
  store i64 %add1582, i64* %arrayidx1583, align 8, !dbg !2491
  %add1584 = add i64 %953, %add1582, !dbg !2491
  %add1585 = add i64 %xor1549, %add1584, !dbg !2491
  %add1586 = add i64 %xor1546, %add1585, !dbg !2491
  %add1587 = add i64 %942, %add1586, !dbg !2491
  store i64 %add1587, i64* %t11535, align 8, !dbg !2491
  %966 = load i64, i64* %a, align 8, !dbg !2491
  %967 = load i64, i64* %t11535, align 8, !dbg !2491
  %add1588 = add i64 %966, %967, !dbg !2491
  store i64 %add1588, i64* %a, align 8, !dbg !2491
  %968 = load i64, i64* %t01518, align 8, !dbg !2491
  %969 = load i64, i64* %t11535, align 8, !dbg !2491
  %add1589 = add i64 %968, %969, !dbg !2491
  store i64 %add1589, i64* %e, align 8, !dbg !2491
  br label %do.end.1590, !dbg !2491

do.end.1590:                                      ; preds = %do.body.1517
  br label %do.body.1591, !dbg !2494

do.body.1591:                                     ; preds = %do.end.1590
  call void @llvm.dbg.declare(metadata i64* %t01592, metadata !2495, metadata !DIExpression()), !dbg !2497
  %970 = load i64, i64* %e, align 8, !dbg !2498
  %shl1593 = shl i64 %970, 36, !dbg !2498
  %971 = load i64, i64* %e, align 8, !dbg !2498
  %shr1594 = lshr i64 %971, 28, !dbg !2498
  %or1595 = or i64 %shl1593, %shr1594, !dbg !2498
  %972 = load i64, i64* %e, align 8, !dbg !2498
  %shl1596 = shl i64 %972, 30, !dbg !2498
  %973 = load i64, i64* %e, align 8, !dbg !2498
  %shr1597 = lshr i64 %973, 34, !dbg !2498
  %or1598 = or i64 %shl1596, %shr1597, !dbg !2498
  %974 = load i64, i64* %e, align 8, !dbg !2498
  %shl1599 = shl i64 %974, 25, !dbg !2498
  %975 = load i64, i64* %e, align 8, !dbg !2498
  %shr1600 = lshr i64 %975, 39, !dbg !2498
  %or1601 = or i64 %shl1599, %shr1600, !dbg !2498
  %xor1602 = xor i64 %or1598, %or1601, !dbg !2498
  %xor1603 = xor i64 %or1595, %xor1602, !dbg !2498
  %976 = load i64, i64* %e, align 8, !dbg !2498
  %977 = load i64, i64* %f, align 8, !dbg !2498
  %and1604 = and i64 %976, %977, !dbg !2498
  %978 = load i64, i64* %g, align 8, !dbg !2498
  %979 = load i64, i64* %e, align 8, !dbg !2498
  %980 = load i64, i64* %f, align 8, !dbg !2498
  %or1605 = or i64 %979, %980, !dbg !2498
  %and1606 = and i64 %978, %or1605, !dbg !2498
  %or1607 = or i64 %and1604, %and1606, !dbg !2498
  %add1608 = add i64 %xor1603, %or1607, !dbg !2498
  store i64 %add1608, i64* %t01592, align 8, !dbg !2498
  call void @llvm.dbg.declare(metadata i64* %t11609, metadata !2500, metadata !DIExpression()), !dbg !2498
  %981 = load i64, i64* %d, align 8, !dbg !2498
  %982 = load i64, i64* %a, align 8, !dbg !2498
  %shl1610 = shl i64 %982, 50, !dbg !2498
  %983 = load i64, i64* %a, align 8, !dbg !2498
  %shr1611 = lshr i64 %983, 14, !dbg !2498
  %or1612 = or i64 %shl1610, %shr1611, !dbg !2498
  %984 = load i64, i64* %a, align 8, !dbg !2498
  %shl1613 = shl i64 %984, 46, !dbg !2498
  %985 = load i64, i64* %a, align 8, !dbg !2498
  %shr1614 = lshr i64 %985, 18, !dbg !2498
  %or1615 = or i64 %shl1613, %shr1614, !dbg !2498
  %986 = load i64, i64* %a, align 8, !dbg !2498
  %shl1616 = shl i64 %986, 23, !dbg !2498
  %987 = load i64, i64* %a, align 8, !dbg !2498
  %shr1617 = lshr i64 %987, 41, !dbg !2498
  %or1618 = or i64 %shl1616, %shr1617, !dbg !2498
  %xor1619 = xor i64 %or1615, %or1618, !dbg !2498
  %xor1620 = xor i64 %or1612, %xor1619, !dbg !2498
  %988 = load i64, i64* %c, align 8, !dbg !2498
  %989 = load i64, i64* %a, align 8, !dbg !2498
  %990 = load i64, i64* %b, align 8, !dbg !2498
  %991 = load i64, i64* %c, align 8, !dbg !2498
  %xor1621 = xor i64 %990, %991, !dbg !2498
  %and1622 = and i64 %989, %xor1621, !dbg !2498
  %xor1623 = xor i64 %988, %and1622, !dbg !2498
  %992 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 28), align 8, !dbg !2498
  %arrayidx1624 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 12, !dbg !2498
  %993 = load i64, i64* %arrayidx1624, align 8, !dbg !2498
  %arrayidx1625 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 10, !dbg !2498
  %994 = load i64, i64* %arrayidx1625, align 8, !dbg !2498
  %shl1626 = shl i64 %994, 45, !dbg !2498
  %arrayidx1627 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 10, !dbg !2498
  %995 = load i64, i64* %arrayidx1627, align 8, !dbg !2498
  %shr1628 = lshr i64 %995, 19, !dbg !2498
  %or1629 = or i64 %shl1626, %shr1628, !dbg !2498
  %arrayidx1630 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 10, !dbg !2498
  %996 = load i64, i64* %arrayidx1630, align 8, !dbg !2498
  %shl1631 = shl i64 %996, 3, !dbg !2498
  %arrayidx1632 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 10, !dbg !2498
  %997 = load i64, i64* %arrayidx1632, align 8, !dbg !2498
  %shr1633 = lshr i64 %997, 61, !dbg !2498
  %or1634 = or i64 %shl1631, %shr1633, !dbg !2498
  %arrayidx1635 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 10, !dbg !2498
  %998 = load i64, i64* %arrayidx1635, align 8, !dbg !2498
  %shr1636 = lshr i64 %998, 6, !dbg !2498
  %xor1637 = xor i64 %or1634, %shr1636, !dbg !2498
  %xor1638 = xor i64 %or1629, %xor1637, !dbg !2498
  %arrayidx1639 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 5, !dbg !2498
  %999 = load i64, i64* %arrayidx1639, align 8, !dbg !2498
  %arrayidx1640 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 13, !dbg !2498
  %1000 = load i64, i64* %arrayidx1640, align 8, !dbg !2498
  %shl1641 = shl i64 %1000, 63, !dbg !2498
  %arrayidx1642 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 13, !dbg !2498
  %1001 = load i64, i64* %arrayidx1642, align 8, !dbg !2498
  %shr1643 = lshr i64 %1001, 1, !dbg !2498
  %or1644 = or i64 %shl1641, %shr1643, !dbg !2498
  %arrayidx1645 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 13, !dbg !2498
  %1002 = load i64, i64* %arrayidx1645, align 8, !dbg !2498
  %shl1646 = shl i64 %1002, 56, !dbg !2498
  %arrayidx1647 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 13, !dbg !2498
  %1003 = load i64, i64* %arrayidx1647, align 8, !dbg !2498
  %shr1648 = lshr i64 %1003, 8, !dbg !2498
  %or1649 = or i64 %shl1646, %shr1648, !dbg !2498
  %arrayidx1650 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 13, !dbg !2498
  %1004 = load i64, i64* %arrayidx1650, align 8, !dbg !2498
  %shr1651 = lshr i64 %1004, 7, !dbg !2498
  %xor1652 = xor i64 %or1649, %shr1651, !dbg !2498
  %xor1653 = xor i64 %or1644, %xor1652, !dbg !2498
  %add1654 = add i64 %999, %xor1653, !dbg !2498
  %add1655 = add i64 %xor1638, %add1654, !dbg !2498
  %add1656 = add i64 %993, %add1655, !dbg !2498
  %arrayidx1657 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 12, !dbg !2498
  store i64 %add1656, i64* %arrayidx1657, align 8, !dbg !2498
  %add1658 = add i64 %992, %add1656, !dbg !2498
  %add1659 = add i64 %xor1623, %add1658, !dbg !2498
  %add1660 = add i64 %xor1620, %add1659, !dbg !2498
  %add1661 = add i64 %981, %add1660, !dbg !2498
  store i64 %add1661, i64* %t11609, align 8, !dbg !2498
  %1005 = load i64, i64* %h, align 8, !dbg !2498
  %1006 = load i64, i64* %t11609, align 8, !dbg !2498
  %add1662 = add i64 %1005, %1006, !dbg !2498
  store i64 %add1662, i64* %h, align 8, !dbg !2498
  %1007 = load i64, i64* %t01592, align 8, !dbg !2498
  %1008 = load i64, i64* %t11609, align 8, !dbg !2498
  %add1663 = add i64 %1007, %1008, !dbg !2498
  store i64 %add1663, i64* %d, align 8, !dbg !2498
  br label %do.end.1664, !dbg !2498

do.end.1664:                                      ; preds = %do.body.1591
  br label %do.body.1665, !dbg !2501

do.body.1665:                                     ; preds = %do.end.1664
  call void @llvm.dbg.declare(metadata i64* %t01666, metadata !2502, metadata !DIExpression()), !dbg !2504
  %1009 = load i64, i64* %d, align 8, !dbg !2505
  %shl1667 = shl i64 %1009, 36, !dbg !2505
  %1010 = load i64, i64* %d, align 8, !dbg !2505
  %shr1668 = lshr i64 %1010, 28, !dbg !2505
  %or1669 = or i64 %shl1667, %shr1668, !dbg !2505
  %1011 = load i64, i64* %d, align 8, !dbg !2505
  %shl1670 = shl i64 %1011, 30, !dbg !2505
  %1012 = load i64, i64* %d, align 8, !dbg !2505
  %shr1671 = lshr i64 %1012, 34, !dbg !2505
  %or1672 = or i64 %shl1670, %shr1671, !dbg !2505
  %1013 = load i64, i64* %d, align 8, !dbg !2505
  %shl1673 = shl i64 %1013, 25, !dbg !2505
  %1014 = load i64, i64* %d, align 8, !dbg !2505
  %shr1674 = lshr i64 %1014, 39, !dbg !2505
  %or1675 = or i64 %shl1673, %shr1674, !dbg !2505
  %xor1676 = xor i64 %or1672, %or1675, !dbg !2505
  %xor1677 = xor i64 %or1669, %xor1676, !dbg !2505
  %1015 = load i64, i64* %d, align 8, !dbg !2505
  %1016 = load i64, i64* %e, align 8, !dbg !2505
  %and1678 = and i64 %1015, %1016, !dbg !2505
  %1017 = load i64, i64* %f, align 8, !dbg !2505
  %1018 = load i64, i64* %d, align 8, !dbg !2505
  %1019 = load i64, i64* %e, align 8, !dbg !2505
  %or1679 = or i64 %1018, %1019, !dbg !2505
  %and1680 = and i64 %1017, %or1679, !dbg !2505
  %or1681 = or i64 %and1678, %and1680, !dbg !2505
  %add1682 = add i64 %xor1677, %or1681, !dbg !2505
  store i64 %add1682, i64* %t01666, align 8, !dbg !2505
  call void @llvm.dbg.declare(metadata i64* %t11683, metadata !2507, metadata !DIExpression()), !dbg !2505
  %1020 = load i64, i64* %c, align 8, !dbg !2505
  %1021 = load i64, i64* %h, align 8, !dbg !2505
  %shl1684 = shl i64 %1021, 50, !dbg !2505
  %1022 = load i64, i64* %h, align 8, !dbg !2505
  %shr1685 = lshr i64 %1022, 14, !dbg !2505
  %or1686 = or i64 %shl1684, %shr1685, !dbg !2505
  %1023 = load i64, i64* %h, align 8, !dbg !2505
  %shl1687 = shl i64 %1023, 46, !dbg !2505
  %1024 = load i64, i64* %h, align 8, !dbg !2505
  %shr1688 = lshr i64 %1024, 18, !dbg !2505
  %or1689 = or i64 %shl1687, %shr1688, !dbg !2505
  %1025 = load i64, i64* %h, align 8, !dbg !2505
  %shl1690 = shl i64 %1025, 23, !dbg !2505
  %1026 = load i64, i64* %h, align 8, !dbg !2505
  %shr1691 = lshr i64 %1026, 41, !dbg !2505
  %or1692 = or i64 %shl1690, %shr1691, !dbg !2505
  %xor1693 = xor i64 %or1689, %or1692, !dbg !2505
  %xor1694 = xor i64 %or1686, %xor1693, !dbg !2505
  %1027 = load i64, i64* %b, align 8, !dbg !2505
  %1028 = load i64, i64* %h, align 8, !dbg !2505
  %1029 = load i64, i64* %a, align 8, !dbg !2505
  %1030 = load i64, i64* %b, align 8, !dbg !2505
  %xor1695 = xor i64 %1029, %1030, !dbg !2505
  %and1696 = and i64 %1028, %xor1695, !dbg !2505
  %xor1697 = xor i64 %1027, %and1696, !dbg !2505
  %1031 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 29), align 8, !dbg !2505
  %arrayidx1698 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 13, !dbg !2505
  %1032 = load i64, i64* %arrayidx1698, align 8, !dbg !2505
  %arrayidx1699 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 11, !dbg !2505
  %1033 = load i64, i64* %arrayidx1699, align 8, !dbg !2505
  %shl1700 = shl i64 %1033, 45, !dbg !2505
  %arrayidx1701 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 11, !dbg !2505
  %1034 = load i64, i64* %arrayidx1701, align 8, !dbg !2505
  %shr1702 = lshr i64 %1034, 19, !dbg !2505
  %or1703 = or i64 %shl1700, %shr1702, !dbg !2505
  %arrayidx1704 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 11, !dbg !2505
  %1035 = load i64, i64* %arrayidx1704, align 8, !dbg !2505
  %shl1705 = shl i64 %1035, 3, !dbg !2505
  %arrayidx1706 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 11, !dbg !2505
  %1036 = load i64, i64* %arrayidx1706, align 8, !dbg !2505
  %shr1707 = lshr i64 %1036, 61, !dbg !2505
  %or1708 = or i64 %shl1705, %shr1707, !dbg !2505
  %arrayidx1709 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 11, !dbg !2505
  %1037 = load i64, i64* %arrayidx1709, align 8, !dbg !2505
  %shr1710 = lshr i64 %1037, 6, !dbg !2505
  %xor1711 = xor i64 %or1708, %shr1710, !dbg !2505
  %xor1712 = xor i64 %or1703, %xor1711, !dbg !2505
  %arrayidx1713 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 6, !dbg !2505
  %1038 = load i64, i64* %arrayidx1713, align 8, !dbg !2505
  %arrayidx1714 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 14, !dbg !2505
  %1039 = load i64, i64* %arrayidx1714, align 8, !dbg !2505
  %shl1715 = shl i64 %1039, 63, !dbg !2505
  %arrayidx1716 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 14, !dbg !2505
  %1040 = load i64, i64* %arrayidx1716, align 8, !dbg !2505
  %shr1717 = lshr i64 %1040, 1, !dbg !2505
  %or1718 = or i64 %shl1715, %shr1717, !dbg !2505
  %arrayidx1719 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 14, !dbg !2505
  %1041 = load i64, i64* %arrayidx1719, align 8, !dbg !2505
  %shl1720 = shl i64 %1041, 56, !dbg !2505
  %arrayidx1721 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 14, !dbg !2505
  %1042 = load i64, i64* %arrayidx1721, align 8, !dbg !2505
  %shr1722 = lshr i64 %1042, 8, !dbg !2505
  %or1723 = or i64 %shl1720, %shr1722, !dbg !2505
  %arrayidx1724 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 14, !dbg !2505
  %1043 = load i64, i64* %arrayidx1724, align 8, !dbg !2505
  %shr1725 = lshr i64 %1043, 7, !dbg !2505
  %xor1726 = xor i64 %or1723, %shr1725, !dbg !2505
  %xor1727 = xor i64 %or1718, %xor1726, !dbg !2505
  %add1728 = add i64 %1038, %xor1727, !dbg !2505
  %add1729 = add i64 %xor1712, %add1728, !dbg !2505
  %add1730 = add i64 %1032, %add1729, !dbg !2505
  %arrayidx1731 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 13, !dbg !2505
  store i64 %add1730, i64* %arrayidx1731, align 8, !dbg !2505
  %add1732 = add i64 %1031, %add1730, !dbg !2505
  %add1733 = add i64 %xor1697, %add1732, !dbg !2505
  %add1734 = add i64 %xor1694, %add1733, !dbg !2505
  %add1735 = add i64 %1020, %add1734, !dbg !2505
  store i64 %add1735, i64* %t11683, align 8, !dbg !2505
  %1044 = load i64, i64* %g, align 8, !dbg !2505
  %1045 = load i64, i64* %t11683, align 8, !dbg !2505
  %add1736 = add i64 %1044, %1045, !dbg !2505
  store i64 %add1736, i64* %g, align 8, !dbg !2505
  %1046 = load i64, i64* %t01666, align 8, !dbg !2505
  %1047 = load i64, i64* %t11683, align 8, !dbg !2505
  %add1737 = add i64 %1046, %1047, !dbg !2505
  store i64 %add1737, i64* %c, align 8, !dbg !2505
  br label %do.end.1738, !dbg !2505

do.end.1738:                                      ; preds = %do.body.1665
  br label %do.body.1739, !dbg !2508

do.body.1739:                                     ; preds = %do.end.1738
  call void @llvm.dbg.declare(metadata i64* %t01740, metadata !2509, metadata !DIExpression()), !dbg !2511
  %1048 = load i64, i64* %c, align 8, !dbg !2512
  %shl1741 = shl i64 %1048, 36, !dbg !2512
  %1049 = load i64, i64* %c, align 8, !dbg !2512
  %shr1742 = lshr i64 %1049, 28, !dbg !2512
  %or1743 = or i64 %shl1741, %shr1742, !dbg !2512
  %1050 = load i64, i64* %c, align 8, !dbg !2512
  %shl1744 = shl i64 %1050, 30, !dbg !2512
  %1051 = load i64, i64* %c, align 8, !dbg !2512
  %shr1745 = lshr i64 %1051, 34, !dbg !2512
  %or1746 = or i64 %shl1744, %shr1745, !dbg !2512
  %1052 = load i64, i64* %c, align 8, !dbg !2512
  %shl1747 = shl i64 %1052, 25, !dbg !2512
  %1053 = load i64, i64* %c, align 8, !dbg !2512
  %shr1748 = lshr i64 %1053, 39, !dbg !2512
  %or1749 = or i64 %shl1747, %shr1748, !dbg !2512
  %xor1750 = xor i64 %or1746, %or1749, !dbg !2512
  %xor1751 = xor i64 %or1743, %xor1750, !dbg !2512
  %1054 = load i64, i64* %c, align 8, !dbg !2512
  %1055 = load i64, i64* %d, align 8, !dbg !2512
  %and1752 = and i64 %1054, %1055, !dbg !2512
  %1056 = load i64, i64* %e, align 8, !dbg !2512
  %1057 = load i64, i64* %c, align 8, !dbg !2512
  %1058 = load i64, i64* %d, align 8, !dbg !2512
  %or1753 = or i64 %1057, %1058, !dbg !2512
  %and1754 = and i64 %1056, %or1753, !dbg !2512
  %or1755 = or i64 %and1752, %and1754, !dbg !2512
  %add1756 = add i64 %xor1751, %or1755, !dbg !2512
  store i64 %add1756, i64* %t01740, align 8, !dbg !2512
  call void @llvm.dbg.declare(metadata i64* %t11757, metadata !2514, metadata !DIExpression()), !dbg !2512
  %1059 = load i64, i64* %b, align 8, !dbg !2512
  %1060 = load i64, i64* %g, align 8, !dbg !2512
  %shl1758 = shl i64 %1060, 50, !dbg !2512
  %1061 = load i64, i64* %g, align 8, !dbg !2512
  %shr1759 = lshr i64 %1061, 14, !dbg !2512
  %or1760 = or i64 %shl1758, %shr1759, !dbg !2512
  %1062 = load i64, i64* %g, align 8, !dbg !2512
  %shl1761 = shl i64 %1062, 46, !dbg !2512
  %1063 = load i64, i64* %g, align 8, !dbg !2512
  %shr1762 = lshr i64 %1063, 18, !dbg !2512
  %or1763 = or i64 %shl1761, %shr1762, !dbg !2512
  %1064 = load i64, i64* %g, align 8, !dbg !2512
  %shl1764 = shl i64 %1064, 23, !dbg !2512
  %1065 = load i64, i64* %g, align 8, !dbg !2512
  %shr1765 = lshr i64 %1065, 41, !dbg !2512
  %or1766 = or i64 %shl1764, %shr1765, !dbg !2512
  %xor1767 = xor i64 %or1763, %or1766, !dbg !2512
  %xor1768 = xor i64 %or1760, %xor1767, !dbg !2512
  %1066 = load i64, i64* %a, align 8, !dbg !2512
  %1067 = load i64, i64* %g, align 8, !dbg !2512
  %1068 = load i64, i64* %h, align 8, !dbg !2512
  %1069 = load i64, i64* %a, align 8, !dbg !2512
  %xor1769 = xor i64 %1068, %1069, !dbg !2512
  %and1770 = and i64 %1067, %xor1769, !dbg !2512
  %xor1771 = xor i64 %1066, %and1770, !dbg !2512
  %1070 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 30), align 8, !dbg !2512
  %arrayidx1772 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 14, !dbg !2512
  %1071 = load i64, i64* %arrayidx1772, align 8, !dbg !2512
  %arrayidx1773 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 12, !dbg !2512
  %1072 = load i64, i64* %arrayidx1773, align 8, !dbg !2512
  %shl1774 = shl i64 %1072, 45, !dbg !2512
  %arrayidx1775 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 12, !dbg !2512
  %1073 = load i64, i64* %arrayidx1775, align 8, !dbg !2512
  %shr1776 = lshr i64 %1073, 19, !dbg !2512
  %or1777 = or i64 %shl1774, %shr1776, !dbg !2512
  %arrayidx1778 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 12, !dbg !2512
  %1074 = load i64, i64* %arrayidx1778, align 8, !dbg !2512
  %shl1779 = shl i64 %1074, 3, !dbg !2512
  %arrayidx1780 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 12, !dbg !2512
  %1075 = load i64, i64* %arrayidx1780, align 8, !dbg !2512
  %shr1781 = lshr i64 %1075, 61, !dbg !2512
  %or1782 = or i64 %shl1779, %shr1781, !dbg !2512
  %arrayidx1783 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 12, !dbg !2512
  %1076 = load i64, i64* %arrayidx1783, align 8, !dbg !2512
  %shr1784 = lshr i64 %1076, 6, !dbg !2512
  %xor1785 = xor i64 %or1782, %shr1784, !dbg !2512
  %xor1786 = xor i64 %or1777, %xor1785, !dbg !2512
  %arrayidx1787 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 7, !dbg !2512
  %1077 = load i64, i64* %arrayidx1787, align 8, !dbg !2512
  %arrayidx1788 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 15, !dbg !2512
  %1078 = load i64, i64* %arrayidx1788, align 8, !dbg !2512
  %shl1789 = shl i64 %1078, 63, !dbg !2512
  %arrayidx1790 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 15, !dbg !2512
  %1079 = load i64, i64* %arrayidx1790, align 8, !dbg !2512
  %shr1791 = lshr i64 %1079, 1, !dbg !2512
  %or1792 = or i64 %shl1789, %shr1791, !dbg !2512
  %arrayidx1793 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 15, !dbg !2512
  %1080 = load i64, i64* %arrayidx1793, align 8, !dbg !2512
  %shl1794 = shl i64 %1080, 56, !dbg !2512
  %arrayidx1795 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 15, !dbg !2512
  %1081 = load i64, i64* %arrayidx1795, align 8, !dbg !2512
  %shr1796 = lshr i64 %1081, 8, !dbg !2512
  %or1797 = or i64 %shl1794, %shr1796, !dbg !2512
  %arrayidx1798 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 15, !dbg !2512
  %1082 = load i64, i64* %arrayidx1798, align 8, !dbg !2512
  %shr1799 = lshr i64 %1082, 7, !dbg !2512
  %xor1800 = xor i64 %or1797, %shr1799, !dbg !2512
  %xor1801 = xor i64 %or1792, %xor1800, !dbg !2512
  %add1802 = add i64 %1077, %xor1801, !dbg !2512
  %add1803 = add i64 %xor1786, %add1802, !dbg !2512
  %add1804 = add i64 %1071, %add1803, !dbg !2512
  %arrayidx1805 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 14, !dbg !2512
  store i64 %add1804, i64* %arrayidx1805, align 8, !dbg !2512
  %add1806 = add i64 %1070, %add1804, !dbg !2512
  %add1807 = add i64 %xor1771, %add1806, !dbg !2512
  %add1808 = add i64 %xor1768, %add1807, !dbg !2512
  %add1809 = add i64 %1059, %add1808, !dbg !2512
  store i64 %add1809, i64* %t11757, align 8, !dbg !2512
  %1083 = load i64, i64* %f, align 8, !dbg !2512
  %1084 = load i64, i64* %t11757, align 8, !dbg !2512
  %add1810 = add i64 %1083, %1084, !dbg !2512
  store i64 %add1810, i64* %f, align 8, !dbg !2512
  %1085 = load i64, i64* %t01740, align 8, !dbg !2512
  %1086 = load i64, i64* %t11757, align 8, !dbg !2512
  %add1811 = add i64 %1085, %1086, !dbg !2512
  store i64 %add1811, i64* %b, align 8, !dbg !2512
  br label %do.end.1812, !dbg !2512

do.end.1812:                                      ; preds = %do.body.1739
  br label %do.body.1813, !dbg !2515

do.body.1813:                                     ; preds = %do.end.1812
  call void @llvm.dbg.declare(metadata i64* %t01814, metadata !2516, metadata !DIExpression()), !dbg !2518
  %1087 = load i64, i64* %b, align 8, !dbg !2519
  %shl1815 = shl i64 %1087, 36, !dbg !2519
  %1088 = load i64, i64* %b, align 8, !dbg !2519
  %shr1816 = lshr i64 %1088, 28, !dbg !2519
  %or1817 = or i64 %shl1815, %shr1816, !dbg !2519
  %1089 = load i64, i64* %b, align 8, !dbg !2519
  %shl1818 = shl i64 %1089, 30, !dbg !2519
  %1090 = load i64, i64* %b, align 8, !dbg !2519
  %shr1819 = lshr i64 %1090, 34, !dbg !2519
  %or1820 = or i64 %shl1818, %shr1819, !dbg !2519
  %1091 = load i64, i64* %b, align 8, !dbg !2519
  %shl1821 = shl i64 %1091, 25, !dbg !2519
  %1092 = load i64, i64* %b, align 8, !dbg !2519
  %shr1822 = lshr i64 %1092, 39, !dbg !2519
  %or1823 = or i64 %shl1821, %shr1822, !dbg !2519
  %xor1824 = xor i64 %or1820, %or1823, !dbg !2519
  %xor1825 = xor i64 %or1817, %xor1824, !dbg !2519
  %1093 = load i64, i64* %b, align 8, !dbg !2519
  %1094 = load i64, i64* %c, align 8, !dbg !2519
  %and1826 = and i64 %1093, %1094, !dbg !2519
  %1095 = load i64, i64* %d, align 8, !dbg !2519
  %1096 = load i64, i64* %b, align 8, !dbg !2519
  %1097 = load i64, i64* %c, align 8, !dbg !2519
  %or1827 = or i64 %1096, %1097, !dbg !2519
  %and1828 = and i64 %1095, %or1827, !dbg !2519
  %or1829 = or i64 %and1826, %and1828, !dbg !2519
  %add1830 = add i64 %xor1825, %or1829, !dbg !2519
  store i64 %add1830, i64* %t01814, align 8, !dbg !2519
  call void @llvm.dbg.declare(metadata i64* %t11831, metadata !2521, metadata !DIExpression()), !dbg !2519
  %1098 = load i64, i64* %a, align 8, !dbg !2519
  %1099 = load i64, i64* %f, align 8, !dbg !2519
  %shl1832 = shl i64 %1099, 50, !dbg !2519
  %1100 = load i64, i64* %f, align 8, !dbg !2519
  %shr1833 = lshr i64 %1100, 14, !dbg !2519
  %or1834 = or i64 %shl1832, %shr1833, !dbg !2519
  %1101 = load i64, i64* %f, align 8, !dbg !2519
  %shl1835 = shl i64 %1101, 46, !dbg !2519
  %1102 = load i64, i64* %f, align 8, !dbg !2519
  %shr1836 = lshr i64 %1102, 18, !dbg !2519
  %or1837 = or i64 %shl1835, %shr1836, !dbg !2519
  %1103 = load i64, i64* %f, align 8, !dbg !2519
  %shl1838 = shl i64 %1103, 23, !dbg !2519
  %1104 = load i64, i64* %f, align 8, !dbg !2519
  %shr1839 = lshr i64 %1104, 41, !dbg !2519
  %or1840 = or i64 %shl1838, %shr1839, !dbg !2519
  %xor1841 = xor i64 %or1837, %or1840, !dbg !2519
  %xor1842 = xor i64 %or1834, %xor1841, !dbg !2519
  %1105 = load i64, i64* %h, align 8, !dbg !2519
  %1106 = load i64, i64* %f, align 8, !dbg !2519
  %1107 = load i64, i64* %g, align 8, !dbg !2519
  %1108 = load i64, i64* %h, align 8, !dbg !2519
  %xor1843 = xor i64 %1107, %1108, !dbg !2519
  %and1844 = and i64 %1106, %xor1843, !dbg !2519
  %xor1845 = xor i64 %1105, %and1844, !dbg !2519
  %1109 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 31), align 8, !dbg !2519
  %arrayidx1846 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 15, !dbg !2519
  %1110 = load i64, i64* %arrayidx1846, align 8, !dbg !2519
  %arrayidx1847 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 13, !dbg !2519
  %1111 = load i64, i64* %arrayidx1847, align 8, !dbg !2519
  %shl1848 = shl i64 %1111, 45, !dbg !2519
  %arrayidx1849 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 13, !dbg !2519
  %1112 = load i64, i64* %arrayidx1849, align 8, !dbg !2519
  %shr1850 = lshr i64 %1112, 19, !dbg !2519
  %or1851 = or i64 %shl1848, %shr1850, !dbg !2519
  %arrayidx1852 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 13, !dbg !2519
  %1113 = load i64, i64* %arrayidx1852, align 8, !dbg !2519
  %shl1853 = shl i64 %1113, 3, !dbg !2519
  %arrayidx1854 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 13, !dbg !2519
  %1114 = load i64, i64* %arrayidx1854, align 8, !dbg !2519
  %shr1855 = lshr i64 %1114, 61, !dbg !2519
  %or1856 = or i64 %shl1853, %shr1855, !dbg !2519
  %arrayidx1857 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 13, !dbg !2519
  %1115 = load i64, i64* %arrayidx1857, align 8, !dbg !2519
  %shr1858 = lshr i64 %1115, 6, !dbg !2519
  %xor1859 = xor i64 %or1856, %shr1858, !dbg !2519
  %xor1860 = xor i64 %or1851, %xor1859, !dbg !2519
  %arrayidx1861 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 8, !dbg !2519
  %1116 = load i64, i64* %arrayidx1861, align 8, !dbg !2519
  %arrayidx1862 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 0, !dbg !2519
  %1117 = load i64, i64* %arrayidx1862, align 8, !dbg !2519
  %shl1863 = shl i64 %1117, 63, !dbg !2519
  %arrayidx1864 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 0, !dbg !2519
  %1118 = load i64, i64* %arrayidx1864, align 8, !dbg !2519
  %shr1865 = lshr i64 %1118, 1, !dbg !2519
  %or1866 = or i64 %shl1863, %shr1865, !dbg !2519
  %arrayidx1867 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 0, !dbg !2519
  %1119 = load i64, i64* %arrayidx1867, align 8, !dbg !2519
  %shl1868 = shl i64 %1119, 56, !dbg !2519
  %arrayidx1869 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 0, !dbg !2519
  %1120 = load i64, i64* %arrayidx1869, align 8, !dbg !2519
  %shr1870 = lshr i64 %1120, 8, !dbg !2519
  %or1871 = or i64 %shl1868, %shr1870, !dbg !2519
  %arrayidx1872 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 0, !dbg !2519
  %1121 = load i64, i64* %arrayidx1872, align 8, !dbg !2519
  %shr1873 = lshr i64 %1121, 7, !dbg !2519
  %xor1874 = xor i64 %or1871, %shr1873, !dbg !2519
  %xor1875 = xor i64 %or1866, %xor1874, !dbg !2519
  %add1876 = add i64 %1116, %xor1875, !dbg !2519
  %add1877 = add i64 %xor1860, %add1876, !dbg !2519
  %add1878 = add i64 %1110, %add1877, !dbg !2519
  %arrayidx1879 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 15, !dbg !2519
  store i64 %add1878, i64* %arrayidx1879, align 8, !dbg !2519
  %add1880 = add i64 %1109, %add1878, !dbg !2519
  %add1881 = add i64 %xor1845, %add1880, !dbg !2519
  %add1882 = add i64 %xor1842, %add1881, !dbg !2519
  %add1883 = add i64 %1098, %add1882, !dbg !2519
  store i64 %add1883, i64* %t11831, align 8, !dbg !2519
  %1122 = load i64, i64* %e, align 8, !dbg !2519
  %1123 = load i64, i64* %t11831, align 8, !dbg !2519
  %add1884 = add i64 %1122, %1123, !dbg !2519
  store i64 %add1884, i64* %e, align 8, !dbg !2519
  %1124 = load i64, i64* %t01814, align 8, !dbg !2519
  %1125 = load i64, i64* %t11831, align 8, !dbg !2519
  %add1885 = add i64 %1124, %1125, !dbg !2519
  store i64 %add1885, i64* %a, align 8, !dbg !2519
  br label %do.end.1886, !dbg !2519

do.end.1886:                                      ; preds = %do.body.1813
  br label %do.body.1887, !dbg !2522

do.body.1887:                                     ; preds = %do.end.1886
  call void @llvm.dbg.declare(metadata i64* %t01888, metadata !2523, metadata !DIExpression()), !dbg !2525
  %1126 = load i64, i64* %a, align 8, !dbg !2526
  %shl1889 = shl i64 %1126, 36, !dbg !2526
  %1127 = load i64, i64* %a, align 8, !dbg !2526
  %shr1890 = lshr i64 %1127, 28, !dbg !2526
  %or1891 = or i64 %shl1889, %shr1890, !dbg !2526
  %1128 = load i64, i64* %a, align 8, !dbg !2526
  %shl1892 = shl i64 %1128, 30, !dbg !2526
  %1129 = load i64, i64* %a, align 8, !dbg !2526
  %shr1893 = lshr i64 %1129, 34, !dbg !2526
  %or1894 = or i64 %shl1892, %shr1893, !dbg !2526
  %1130 = load i64, i64* %a, align 8, !dbg !2526
  %shl1895 = shl i64 %1130, 25, !dbg !2526
  %1131 = load i64, i64* %a, align 8, !dbg !2526
  %shr1896 = lshr i64 %1131, 39, !dbg !2526
  %or1897 = or i64 %shl1895, %shr1896, !dbg !2526
  %xor1898 = xor i64 %or1894, %or1897, !dbg !2526
  %xor1899 = xor i64 %or1891, %xor1898, !dbg !2526
  %1132 = load i64, i64* %a, align 8, !dbg !2526
  %1133 = load i64, i64* %b, align 8, !dbg !2526
  %and1900 = and i64 %1132, %1133, !dbg !2526
  %1134 = load i64, i64* %c, align 8, !dbg !2526
  %1135 = load i64, i64* %a, align 8, !dbg !2526
  %1136 = load i64, i64* %b, align 8, !dbg !2526
  %or1901 = or i64 %1135, %1136, !dbg !2526
  %and1902 = and i64 %1134, %or1901, !dbg !2526
  %or1903 = or i64 %and1900, %and1902, !dbg !2526
  %add1904 = add i64 %xor1899, %or1903, !dbg !2526
  store i64 %add1904, i64* %t01888, align 8, !dbg !2526
  call void @llvm.dbg.declare(metadata i64* %t11905, metadata !2528, metadata !DIExpression()), !dbg !2526
  %1137 = load i64, i64* %h, align 8, !dbg !2526
  %1138 = load i64, i64* %e, align 8, !dbg !2526
  %shl1906 = shl i64 %1138, 50, !dbg !2526
  %1139 = load i64, i64* %e, align 8, !dbg !2526
  %shr1907 = lshr i64 %1139, 14, !dbg !2526
  %or1908 = or i64 %shl1906, %shr1907, !dbg !2526
  %1140 = load i64, i64* %e, align 8, !dbg !2526
  %shl1909 = shl i64 %1140, 46, !dbg !2526
  %1141 = load i64, i64* %e, align 8, !dbg !2526
  %shr1910 = lshr i64 %1141, 18, !dbg !2526
  %or1911 = or i64 %shl1909, %shr1910, !dbg !2526
  %1142 = load i64, i64* %e, align 8, !dbg !2526
  %shl1912 = shl i64 %1142, 23, !dbg !2526
  %1143 = load i64, i64* %e, align 8, !dbg !2526
  %shr1913 = lshr i64 %1143, 41, !dbg !2526
  %or1914 = or i64 %shl1912, %shr1913, !dbg !2526
  %xor1915 = xor i64 %or1911, %or1914, !dbg !2526
  %xor1916 = xor i64 %or1908, %xor1915, !dbg !2526
  %1144 = load i64, i64* %g, align 8, !dbg !2526
  %1145 = load i64, i64* %e, align 8, !dbg !2526
  %1146 = load i64, i64* %f, align 8, !dbg !2526
  %1147 = load i64, i64* %g, align 8, !dbg !2526
  %xor1917 = xor i64 %1146, %1147, !dbg !2526
  %and1918 = and i64 %1145, %xor1917, !dbg !2526
  %xor1919 = xor i64 %1144, %and1918, !dbg !2526
  %1148 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 32), align 8, !dbg !2526
  %arrayidx1920 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 0, !dbg !2526
  %1149 = load i64, i64* %arrayidx1920, align 8, !dbg !2526
  %arrayidx1921 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 14, !dbg !2526
  %1150 = load i64, i64* %arrayidx1921, align 8, !dbg !2526
  %shl1922 = shl i64 %1150, 45, !dbg !2526
  %arrayidx1923 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 14, !dbg !2526
  %1151 = load i64, i64* %arrayidx1923, align 8, !dbg !2526
  %shr1924 = lshr i64 %1151, 19, !dbg !2526
  %or1925 = or i64 %shl1922, %shr1924, !dbg !2526
  %arrayidx1926 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 14, !dbg !2526
  %1152 = load i64, i64* %arrayidx1926, align 8, !dbg !2526
  %shl1927 = shl i64 %1152, 3, !dbg !2526
  %arrayidx1928 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 14, !dbg !2526
  %1153 = load i64, i64* %arrayidx1928, align 8, !dbg !2526
  %shr1929 = lshr i64 %1153, 61, !dbg !2526
  %or1930 = or i64 %shl1927, %shr1929, !dbg !2526
  %arrayidx1931 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 14, !dbg !2526
  %1154 = load i64, i64* %arrayidx1931, align 8, !dbg !2526
  %shr1932 = lshr i64 %1154, 6, !dbg !2526
  %xor1933 = xor i64 %or1930, %shr1932, !dbg !2526
  %xor1934 = xor i64 %or1925, %xor1933, !dbg !2526
  %arrayidx1935 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 9, !dbg !2526
  %1155 = load i64, i64* %arrayidx1935, align 8, !dbg !2526
  %arrayidx1936 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 1, !dbg !2526
  %1156 = load i64, i64* %arrayidx1936, align 8, !dbg !2526
  %shl1937 = shl i64 %1156, 63, !dbg !2526
  %arrayidx1938 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 1, !dbg !2526
  %1157 = load i64, i64* %arrayidx1938, align 8, !dbg !2526
  %shr1939 = lshr i64 %1157, 1, !dbg !2526
  %or1940 = or i64 %shl1937, %shr1939, !dbg !2526
  %arrayidx1941 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 1, !dbg !2526
  %1158 = load i64, i64* %arrayidx1941, align 8, !dbg !2526
  %shl1942 = shl i64 %1158, 56, !dbg !2526
  %arrayidx1943 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 1, !dbg !2526
  %1159 = load i64, i64* %arrayidx1943, align 8, !dbg !2526
  %shr1944 = lshr i64 %1159, 8, !dbg !2526
  %or1945 = or i64 %shl1942, %shr1944, !dbg !2526
  %arrayidx1946 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 1, !dbg !2526
  %1160 = load i64, i64* %arrayidx1946, align 8, !dbg !2526
  %shr1947 = lshr i64 %1160, 7, !dbg !2526
  %xor1948 = xor i64 %or1945, %shr1947, !dbg !2526
  %xor1949 = xor i64 %or1940, %xor1948, !dbg !2526
  %add1950 = add i64 %1155, %xor1949, !dbg !2526
  %add1951 = add i64 %xor1934, %add1950, !dbg !2526
  %add1952 = add i64 %1149, %add1951, !dbg !2526
  %arrayidx1953 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 0, !dbg !2526
  store i64 %add1952, i64* %arrayidx1953, align 8, !dbg !2526
  %add1954 = add i64 %1148, %add1952, !dbg !2526
  %add1955 = add i64 %xor1919, %add1954, !dbg !2526
  %add1956 = add i64 %xor1916, %add1955, !dbg !2526
  %add1957 = add i64 %1137, %add1956, !dbg !2526
  store i64 %add1957, i64* %t11905, align 8, !dbg !2526
  %1161 = load i64, i64* %d, align 8, !dbg !2526
  %1162 = load i64, i64* %t11905, align 8, !dbg !2526
  %add1958 = add i64 %1161, %1162, !dbg !2526
  store i64 %add1958, i64* %d, align 8, !dbg !2526
  %1163 = load i64, i64* %t01888, align 8, !dbg !2526
  %1164 = load i64, i64* %t11905, align 8, !dbg !2526
  %add1959 = add i64 %1163, %1164, !dbg !2526
  store i64 %add1959, i64* %h, align 8, !dbg !2526
  br label %do.end.1960, !dbg !2526

do.end.1960:                                      ; preds = %do.body.1887
  br label %do.body.1961, !dbg !2529

do.body.1961:                                     ; preds = %do.end.1960
  call void @llvm.dbg.declare(metadata i64* %t01962, metadata !2530, metadata !DIExpression()), !dbg !2532
  %1165 = load i64, i64* %h, align 8, !dbg !2533
  %shl1963 = shl i64 %1165, 36, !dbg !2533
  %1166 = load i64, i64* %h, align 8, !dbg !2533
  %shr1964 = lshr i64 %1166, 28, !dbg !2533
  %or1965 = or i64 %shl1963, %shr1964, !dbg !2533
  %1167 = load i64, i64* %h, align 8, !dbg !2533
  %shl1966 = shl i64 %1167, 30, !dbg !2533
  %1168 = load i64, i64* %h, align 8, !dbg !2533
  %shr1967 = lshr i64 %1168, 34, !dbg !2533
  %or1968 = or i64 %shl1966, %shr1967, !dbg !2533
  %1169 = load i64, i64* %h, align 8, !dbg !2533
  %shl1969 = shl i64 %1169, 25, !dbg !2533
  %1170 = load i64, i64* %h, align 8, !dbg !2533
  %shr1970 = lshr i64 %1170, 39, !dbg !2533
  %or1971 = or i64 %shl1969, %shr1970, !dbg !2533
  %xor1972 = xor i64 %or1968, %or1971, !dbg !2533
  %xor1973 = xor i64 %or1965, %xor1972, !dbg !2533
  %1171 = load i64, i64* %h, align 8, !dbg !2533
  %1172 = load i64, i64* %a, align 8, !dbg !2533
  %and1974 = and i64 %1171, %1172, !dbg !2533
  %1173 = load i64, i64* %b, align 8, !dbg !2533
  %1174 = load i64, i64* %h, align 8, !dbg !2533
  %1175 = load i64, i64* %a, align 8, !dbg !2533
  %or1975 = or i64 %1174, %1175, !dbg !2533
  %and1976 = and i64 %1173, %or1975, !dbg !2533
  %or1977 = or i64 %and1974, %and1976, !dbg !2533
  %add1978 = add i64 %xor1973, %or1977, !dbg !2533
  store i64 %add1978, i64* %t01962, align 8, !dbg !2533
  call void @llvm.dbg.declare(metadata i64* %t11979, metadata !2535, metadata !DIExpression()), !dbg !2533
  %1176 = load i64, i64* %g, align 8, !dbg !2533
  %1177 = load i64, i64* %d, align 8, !dbg !2533
  %shl1980 = shl i64 %1177, 50, !dbg !2533
  %1178 = load i64, i64* %d, align 8, !dbg !2533
  %shr1981 = lshr i64 %1178, 14, !dbg !2533
  %or1982 = or i64 %shl1980, %shr1981, !dbg !2533
  %1179 = load i64, i64* %d, align 8, !dbg !2533
  %shl1983 = shl i64 %1179, 46, !dbg !2533
  %1180 = load i64, i64* %d, align 8, !dbg !2533
  %shr1984 = lshr i64 %1180, 18, !dbg !2533
  %or1985 = or i64 %shl1983, %shr1984, !dbg !2533
  %1181 = load i64, i64* %d, align 8, !dbg !2533
  %shl1986 = shl i64 %1181, 23, !dbg !2533
  %1182 = load i64, i64* %d, align 8, !dbg !2533
  %shr1987 = lshr i64 %1182, 41, !dbg !2533
  %or1988 = or i64 %shl1986, %shr1987, !dbg !2533
  %xor1989 = xor i64 %or1985, %or1988, !dbg !2533
  %xor1990 = xor i64 %or1982, %xor1989, !dbg !2533
  %1183 = load i64, i64* %f, align 8, !dbg !2533
  %1184 = load i64, i64* %d, align 8, !dbg !2533
  %1185 = load i64, i64* %e, align 8, !dbg !2533
  %1186 = load i64, i64* %f, align 8, !dbg !2533
  %xor1991 = xor i64 %1185, %1186, !dbg !2533
  %and1992 = and i64 %1184, %xor1991, !dbg !2533
  %xor1993 = xor i64 %1183, %and1992, !dbg !2533
  %1187 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 33), align 8, !dbg !2533
  %arrayidx1994 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 1, !dbg !2533
  %1188 = load i64, i64* %arrayidx1994, align 8, !dbg !2533
  %arrayidx1995 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 15, !dbg !2533
  %1189 = load i64, i64* %arrayidx1995, align 8, !dbg !2533
  %shl1996 = shl i64 %1189, 45, !dbg !2533
  %arrayidx1997 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 15, !dbg !2533
  %1190 = load i64, i64* %arrayidx1997, align 8, !dbg !2533
  %shr1998 = lshr i64 %1190, 19, !dbg !2533
  %or1999 = or i64 %shl1996, %shr1998, !dbg !2533
  %arrayidx2000 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 15, !dbg !2533
  %1191 = load i64, i64* %arrayidx2000, align 8, !dbg !2533
  %shl2001 = shl i64 %1191, 3, !dbg !2533
  %arrayidx2002 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 15, !dbg !2533
  %1192 = load i64, i64* %arrayidx2002, align 8, !dbg !2533
  %shr2003 = lshr i64 %1192, 61, !dbg !2533
  %or2004 = or i64 %shl2001, %shr2003, !dbg !2533
  %arrayidx2005 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 15, !dbg !2533
  %1193 = load i64, i64* %arrayidx2005, align 8, !dbg !2533
  %shr2006 = lshr i64 %1193, 6, !dbg !2533
  %xor2007 = xor i64 %or2004, %shr2006, !dbg !2533
  %xor2008 = xor i64 %or1999, %xor2007, !dbg !2533
  %arrayidx2009 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 10, !dbg !2533
  %1194 = load i64, i64* %arrayidx2009, align 8, !dbg !2533
  %arrayidx2010 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 2, !dbg !2533
  %1195 = load i64, i64* %arrayidx2010, align 8, !dbg !2533
  %shl2011 = shl i64 %1195, 63, !dbg !2533
  %arrayidx2012 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 2, !dbg !2533
  %1196 = load i64, i64* %arrayidx2012, align 8, !dbg !2533
  %shr2013 = lshr i64 %1196, 1, !dbg !2533
  %or2014 = or i64 %shl2011, %shr2013, !dbg !2533
  %arrayidx2015 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 2, !dbg !2533
  %1197 = load i64, i64* %arrayidx2015, align 8, !dbg !2533
  %shl2016 = shl i64 %1197, 56, !dbg !2533
  %arrayidx2017 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 2, !dbg !2533
  %1198 = load i64, i64* %arrayidx2017, align 8, !dbg !2533
  %shr2018 = lshr i64 %1198, 8, !dbg !2533
  %or2019 = or i64 %shl2016, %shr2018, !dbg !2533
  %arrayidx2020 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 2, !dbg !2533
  %1199 = load i64, i64* %arrayidx2020, align 8, !dbg !2533
  %shr2021 = lshr i64 %1199, 7, !dbg !2533
  %xor2022 = xor i64 %or2019, %shr2021, !dbg !2533
  %xor2023 = xor i64 %or2014, %xor2022, !dbg !2533
  %add2024 = add i64 %1194, %xor2023, !dbg !2533
  %add2025 = add i64 %xor2008, %add2024, !dbg !2533
  %add2026 = add i64 %1188, %add2025, !dbg !2533
  %arrayidx2027 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 1, !dbg !2533
  store i64 %add2026, i64* %arrayidx2027, align 8, !dbg !2533
  %add2028 = add i64 %1187, %add2026, !dbg !2533
  %add2029 = add i64 %xor1993, %add2028, !dbg !2533
  %add2030 = add i64 %xor1990, %add2029, !dbg !2533
  %add2031 = add i64 %1176, %add2030, !dbg !2533
  store i64 %add2031, i64* %t11979, align 8, !dbg !2533
  %1200 = load i64, i64* %c, align 8, !dbg !2533
  %1201 = load i64, i64* %t11979, align 8, !dbg !2533
  %add2032 = add i64 %1200, %1201, !dbg !2533
  store i64 %add2032, i64* %c, align 8, !dbg !2533
  %1202 = load i64, i64* %t01962, align 8, !dbg !2533
  %1203 = load i64, i64* %t11979, align 8, !dbg !2533
  %add2033 = add i64 %1202, %1203, !dbg !2533
  store i64 %add2033, i64* %g, align 8, !dbg !2533
  br label %do.end.2034, !dbg !2533

do.end.2034:                                      ; preds = %do.body.1961
  br label %do.body.2035, !dbg !2536

do.body.2035:                                     ; preds = %do.end.2034
  call void @llvm.dbg.declare(metadata i64* %t02036, metadata !2537, metadata !DIExpression()), !dbg !2539
  %1204 = load i64, i64* %g, align 8, !dbg !2540
  %shl2037 = shl i64 %1204, 36, !dbg !2540
  %1205 = load i64, i64* %g, align 8, !dbg !2540
  %shr2038 = lshr i64 %1205, 28, !dbg !2540
  %or2039 = or i64 %shl2037, %shr2038, !dbg !2540
  %1206 = load i64, i64* %g, align 8, !dbg !2540
  %shl2040 = shl i64 %1206, 30, !dbg !2540
  %1207 = load i64, i64* %g, align 8, !dbg !2540
  %shr2041 = lshr i64 %1207, 34, !dbg !2540
  %or2042 = or i64 %shl2040, %shr2041, !dbg !2540
  %1208 = load i64, i64* %g, align 8, !dbg !2540
  %shl2043 = shl i64 %1208, 25, !dbg !2540
  %1209 = load i64, i64* %g, align 8, !dbg !2540
  %shr2044 = lshr i64 %1209, 39, !dbg !2540
  %or2045 = or i64 %shl2043, %shr2044, !dbg !2540
  %xor2046 = xor i64 %or2042, %or2045, !dbg !2540
  %xor2047 = xor i64 %or2039, %xor2046, !dbg !2540
  %1210 = load i64, i64* %g, align 8, !dbg !2540
  %1211 = load i64, i64* %h, align 8, !dbg !2540
  %and2048 = and i64 %1210, %1211, !dbg !2540
  %1212 = load i64, i64* %a, align 8, !dbg !2540
  %1213 = load i64, i64* %g, align 8, !dbg !2540
  %1214 = load i64, i64* %h, align 8, !dbg !2540
  %or2049 = or i64 %1213, %1214, !dbg !2540
  %and2050 = and i64 %1212, %or2049, !dbg !2540
  %or2051 = or i64 %and2048, %and2050, !dbg !2540
  %add2052 = add i64 %xor2047, %or2051, !dbg !2540
  store i64 %add2052, i64* %t02036, align 8, !dbg !2540
  call void @llvm.dbg.declare(metadata i64* %t12053, metadata !2542, metadata !DIExpression()), !dbg !2540
  %1215 = load i64, i64* %f, align 8, !dbg !2540
  %1216 = load i64, i64* %c, align 8, !dbg !2540
  %shl2054 = shl i64 %1216, 50, !dbg !2540
  %1217 = load i64, i64* %c, align 8, !dbg !2540
  %shr2055 = lshr i64 %1217, 14, !dbg !2540
  %or2056 = or i64 %shl2054, %shr2055, !dbg !2540
  %1218 = load i64, i64* %c, align 8, !dbg !2540
  %shl2057 = shl i64 %1218, 46, !dbg !2540
  %1219 = load i64, i64* %c, align 8, !dbg !2540
  %shr2058 = lshr i64 %1219, 18, !dbg !2540
  %or2059 = or i64 %shl2057, %shr2058, !dbg !2540
  %1220 = load i64, i64* %c, align 8, !dbg !2540
  %shl2060 = shl i64 %1220, 23, !dbg !2540
  %1221 = load i64, i64* %c, align 8, !dbg !2540
  %shr2061 = lshr i64 %1221, 41, !dbg !2540
  %or2062 = or i64 %shl2060, %shr2061, !dbg !2540
  %xor2063 = xor i64 %or2059, %or2062, !dbg !2540
  %xor2064 = xor i64 %or2056, %xor2063, !dbg !2540
  %1222 = load i64, i64* %e, align 8, !dbg !2540
  %1223 = load i64, i64* %c, align 8, !dbg !2540
  %1224 = load i64, i64* %d, align 8, !dbg !2540
  %1225 = load i64, i64* %e, align 8, !dbg !2540
  %xor2065 = xor i64 %1224, %1225, !dbg !2540
  %and2066 = and i64 %1223, %xor2065, !dbg !2540
  %xor2067 = xor i64 %1222, %and2066, !dbg !2540
  %1226 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 34), align 8, !dbg !2540
  %arrayidx2068 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 2, !dbg !2540
  %1227 = load i64, i64* %arrayidx2068, align 8, !dbg !2540
  %arrayidx2069 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 0, !dbg !2540
  %1228 = load i64, i64* %arrayidx2069, align 8, !dbg !2540
  %shl2070 = shl i64 %1228, 45, !dbg !2540
  %arrayidx2071 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 0, !dbg !2540
  %1229 = load i64, i64* %arrayidx2071, align 8, !dbg !2540
  %shr2072 = lshr i64 %1229, 19, !dbg !2540
  %or2073 = or i64 %shl2070, %shr2072, !dbg !2540
  %arrayidx2074 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 0, !dbg !2540
  %1230 = load i64, i64* %arrayidx2074, align 8, !dbg !2540
  %shl2075 = shl i64 %1230, 3, !dbg !2540
  %arrayidx2076 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 0, !dbg !2540
  %1231 = load i64, i64* %arrayidx2076, align 8, !dbg !2540
  %shr2077 = lshr i64 %1231, 61, !dbg !2540
  %or2078 = or i64 %shl2075, %shr2077, !dbg !2540
  %arrayidx2079 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 0, !dbg !2540
  %1232 = load i64, i64* %arrayidx2079, align 8, !dbg !2540
  %shr2080 = lshr i64 %1232, 6, !dbg !2540
  %xor2081 = xor i64 %or2078, %shr2080, !dbg !2540
  %xor2082 = xor i64 %or2073, %xor2081, !dbg !2540
  %arrayidx2083 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 11, !dbg !2540
  %1233 = load i64, i64* %arrayidx2083, align 8, !dbg !2540
  %arrayidx2084 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 3, !dbg !2540
  %1234 = load i64, i64* %arrayidx2084, align 8, !dbg !2540
  %shl2085 = shl i64 %1234, 63, !dbg !2540
  %arrayidx2086 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 3, !dbg !2540
  %1235 = load i64, i64* %arrayidx2086, align 8, !dbg !2540
  %shr2087 = lshr i64 %1235, 1, !dbg !2540
  %or2088 = or i64 %shl2085, %shr2087, !dbg !2540
  %arrayidx2089 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 3, !dbg !2540
  %1236 = load i64, i64* %arrayidx2089, align 8, !dbg !2540
  %shl2090 = shl i64 %1236, 56, !dbg !2540
  %arrayidx2091 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 3, !dbg !2540
  %1237 = load i64, i64* %arrayidx2091, align 8, !dbg !2540
  %shr2092 = lshr i64 %1237, 8, !dbg !2540
  %or2093 = or i64 %shl2090, %shr2092, !dbg !2540
  %arrayidx2094 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 3, !dbg !2540
  %1238 = load i64, i64* %arrayidx2094, align 8, !dbg !2540
  %shr2095 = lshr i64 %1238, 7, !dbg !2540
  %xor2096 = xor i64 %or2093, %shr2095, !dbg !2540
  %xor2097 = xor i64 %or2088, %xor2096, !dbg !2540
  %add2098 = add i64 %1233, %xor2097, !dbg !2540
  %add2099 = add i64 %xor2082, %add2098, !dbg !2540
  %add2100 = add i64 %1227, %add2099, !dbg !2540
  %arrayidx2101 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 2, !dbg !2540
  store i64 %add2100, i64* %arrayidx2101, align 8, !dbg !2540
  %add2102 = add i64 %1226, %add2100, !dbg !2540
  %add2103 = add i64 %xor2067, %add2102, !dbg !2540
  %add2104 = add i64 %xor2064, %add2103, !dbg !2540
  %add2105 = add i64 %1215, %add2104, !dbg !2540
  store i64 %add2105, i64* %t12053, align 8, !dbg !2540
  %1239 = load i64, i64* %b, align 8, !dbg !2540
  %1240 = load i64, i64* %t12053, align 8, !dbg !2540
  %add2106 = add i64 %1239, %1240, !dbg !2540
  store i64 %add2106, i64* %b, align 8, !dbg !2540
  %1241 = load i64, i64* %t02036, align 8, !dbg !2540
  %1242 = load i64, i64* %t12053, align 8, !dbg !2540
  %add2107 = add i64 %1241, %1242, !dbg !2540
  store i64 %add2107, i64* %f, align 8, !dbg !2540
  br label %do.end.2108, !dbg !2540

do.end.2108:                                      ; preds = %do.body.2035
  br label %do.body.2109, !dbg !2543

do.body.2109:                                     ; preds = %do.end.2108
  call void @llvm.dbg.declare(metadata i64* %t02110, metadata !2544, metadata !DIExpression()), !dbg !2546
  %1243 = load i64, i64* %f, align 8, !dbg !2547
  %shl2111 = shl i64 %1243, 36, !dbg !2547
  %1244 = load i64, i64* %f, align 8, !dbg !2547
  %shr2112 = lshr i64 %1244, 28, !dbg !2547
  %or2113 = or i64 %shl2111, %shr2112, !dbg !2547
  %1245 = load i64, i64* %f, align 8, !dbg !2547
  %shl2114 = shl i64 %1245, 30, !dbg !2547
  %1246 = load i64, i64* %f, align 8, !dbg !2547
  %shr2115 = lshr i64 %1246, 34, !dbg !2547
  %or2116 = or i64 %shl2114, %shr2115, !dbg !2547
  %1247 = load i64, i64* %f, align 8, !dbg !2547
  %shl2117 = shl i64 %1247, 25, !dbg !2547
  %1248 = load i64, i64* %f, align 8, !dbg !2547
  %shr2118 = lshr i64 %1248, 39, !dbg !2547
  %or2119 = or i64 %shl2117, %shr2118, !dbg !2547
  %xor2120 = xor i64 %or2116, %or2119, !dbg !2547
  %xor2121 = xor i64 %or2113, %xor2120, !dbg !2547
  %1249 = load i64, i64* %f, align 8, !dbg !2547
  %1250 = load i64, i64* %g, align 8, !dbg !2547
  %and2122 = and i64 %1249, %1250, !dbg !2547
  %1251 = load i64, i64* %h, align 8, !dbg !2547
  %1252 = load i64, i64* %f, align 8, !dbg !2547
  %1253 = load i64, i64* %g, align 8, !dbg !2547
  %or2123 = or i64 %1252, %1253, !dbg !2547
  %and2124 = and i64 %1251, %or2123, !dbg !2547
  %or2125 = or i64 %and2122, %and2124, !dbg !2547
  %add2126 = add i64 %xor2121, %or2125, !dbg !2547
  store i64 %add2126, i64* %t02110, align 8, !dbg !2547
  call void @llvm.dbg.declare(metadata i64* %t12127, metadata !2549, metadata !DIExpression()), !dbg !2547
  %1254 = load i64, i64* %e, align 8, !dbg !2547
  %1255 = load i64, i64* %b, align 8, !dbg !2547
  %shl2128 = shl i64 %1255, 50, !dbg !2547
  %1256 = load i64, i64* %b, align 8, !dbg !2547
  %shr2129 = lshr i64 %1256, 14, !dbg !2547
  %or2130 = or i64 %shl2128, %shr2129, !dbg !2547
  %1257 = load i64, i64* %b, align 8, !dbg !2547
  %shl2131 = shl i64 %1257, 46, !dbg !2547
  %1258 = load i64, i64* %b, align 8, !dbg !2547
  %shr2132 = lshr i64 %1258, 18, !dbg !2547
  %or2133 = or i64 %shl2131, %shr2132, !dbg !2547
  %1259 = load i64, i64* %b, align 8, !dbg !2547
  %shl2134 = shl i64 %1259, 23, !dbg !2547
  %1260 = load i64, i64* %b, align 8, !dbg !2547
  %shr2135 = lshr i64 %1260, 41, !dbg !2547
  %or2136 = or i64 %shl2134, %shr2135, !dbg !2547
  %xor2137 = xor i64 %or2133, %or2136, !dbg !2547
  %xor2138 = xor i64 %or2130, %xor2137, !dbg !2547
  %1261 = load i64, i64* %d, align 8, !dbg !2547
  %1262 = load i64, i64* %b, align 8, !dbg !2547
  %1263 = load i64, i64* %c, align 8, !dbg !2547
  %1264 = load i64, i64* %d, align 8, !dbg !2547
  %xor2139 = xor i64 %1263, %1264, !dbg !2547
  %and2140 = and i64 %1262, %xor2139, !dbg !2547
  %xor2141 = xor i64 %1261, %and2140, !dbg !2547
  %1265 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 35), align 8, !dbg !2547
  %arrayidx2142 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 3, !dbg !2547
  %1266 = load i64, i64* %arrayidx2142, align 8, !dbg !2547
  %arrayidx2143 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 1, !dbg !2547
  %1267 = load i64, i64* %arrayidx2143, align 8, !dbg !2547
  %shl2144 = shl i64 %1267, 45, !dbg !2547
  %arrayidx2145 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 1, !dbg !2547
  %1268 = load i64, i64* %arrayidx2145, align 8, !dbg !2547
  %shr2146 = lshr i64 %1268, 19, !dbg !2547
  %or2147 = or i64 %shl2144, %shr2146, !dbg !2547
  %arrayidx2148 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 1, !dbg !2547
  %1269 = load i64, i64* %arrayidx2148, align 8, !dbg !2547
  %shl2149 = shl i64 %1269, 3, !dbg !2547
  %arrayidx2150 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 1, !dbg !2547
  %1270 = load i64, i64* %arrayidx2150, align 8, !dbg !2547
  %shr2151 = lshr i64 %1270, 61, !dbg !2547
  %or2152 = or i64 %shl2149, %shr2151, !dbg !2547
  %arrayidx2153 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 1, !dbg !2547
  %1271 = load i64, i64* %arrayidx2153, align 8, !dbg !2547
  %shr2154 = lshr i64 %1271, 6, !dbg !2547
  %xor2155 = xor i64 %or2152, %shr2154, !dbg !2547
  %xor2156 = xor i64 %or2147, %xor2155, !dbg !2547
  %arrayidx2157 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 12, !dbg !2547
  %1272 = load i64, i64* %arrayidx2157, align 8, !dbg !2547
  %arrayidx2158 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 4, !dbg !2547
  %1273 = load i64, i64* %arrayidx2158, align 8, !dbg !2547
  %shl2159 = shl i64 %1273, 63, !dbg !2547
  %arrayidx2160 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 4, !dbg !2547
  %1274 = load i64, i64* %arrayidx2160, align 8, !dbg !2547
  %shr2161 = lshr i64 %1274, 1, !dbg !2547
  %or2162 = or i64 %shl2159, %shr2161, !dbg !2547
  %arrayidx2163 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 4, !dbg !2547
  %1275 = load i64, i64* %arrayidx2163, align 8, !dbg !2547
  %shl2164 = shl i64 %1275, 56, !dbg !2547
  %arrayidx2165 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 4, !dbg !2547
  %1276 = load i64, i64* %arrayidx2165, align 8, !dbg !2547
  %shr2166 = lshr i64 %1276, 8, !dbg !2547
  %or2167 = or i64 %shl2164, %shr2166, !dbg !2547
  %arrayidx2168 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 4, !dbg !2547
  %1277 = load i64, i64* %arrayidx2168, align 8, !dbg !2547
  %shr2169 = lshr i64 %1277, 7, !dbg !2547
  %xor2170 = xor i64 %or2167, %shr2169, !dbg !2547
  %xor2171 = xor i64 %or2162, %xor2170, !dbg !2547
  %add2172 = add i64 %1272, %xor2171, !dbg !2547
  %add2173 = add i64 %xor2156, %add2172, !dbg !2547
  %add2174 = add i64 %1266, %add2173, !dbg !2547
  %arrayidx2175 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 3, !dbg !2547
  store i64 %add2174, i64* %arrayidx2175, align 8, !dbg !2547
  %add2176 = add i64 %1265, %add2174, !dbg !2547
  %add2177 = add i64 %xor2141, %add2176, !dbg !2547
  %add2178 = add i64 %xor2138, %add2177, !dbg !2547
  %add2179 = add i64 %1254, %add2178, !dbg !2547
  store i64 %add2179, i64* %t12127, align 8, !dbg !2547
  %1278 = load i64, i64* %a, align 8, !dbg !2547
  %1279 = load i64, i64* %t12127, align 8, !dbg !2547
  %add2180 = add i64 %1278, %1279, !dbg !2547
  store i64 %add2180, i64* %a, align 8, !dbg !2547
  %1280 = load i64, i64* %t02110, align 8, !dbg !2547
  %1281 = load i64, i64* %t12127, align 8, !dbg !2547
  %add2181 = add i64 %1280, %1281, !dbg !2547
  store i64 %add2181, i64* %e, align 8, !dbg !2547
  br label %do.end.2182, !dbg !2547

do.end.2182:                                      ; preds = %do.body.2109
  br label %do.body.2183, !dbg !2550

do.body.2183:                                     ; preds = %do.end.2182
  call void @llvm.dbg.declare(metadata i64* %t02184, metadata !2551, metadata !DIExpression()), !dbg !2553
  %1282 = load i64, i64* %e, align 8, !dbg !2554
  %shl2185 = shl i64 %1282, 36, !dbg !2554
  %1283 = load i64, i64* %e, align 8, !dbg !2554
  %shr2186 = lshr i64 %1283, 28, !dbg !2554
  %or2187 = or i64 %shl2185, %shr2186, !dbg !2554
  %1284 = load i64, i64* %e, align 8, !dbg !2554
  %shl2188 = shl i64 %1284, 30, !dbg !2554
  %1285 = load i64, i64* %e, align 8, !dbg !2554
  %shr2189 = lshr i64 %1285, 34, !dbg !2554
  %or2190 = or i64 %shl2188, %shr2189, !dbg !2554
  %1286 = load i64, i64* %e, align 8, !dbg !2554
  %shl2191 = shl i64 %1286, 25, !dbg !2554
  %1287 = load i64, i64* %e, align 8, !dbg !2554
  %shr2192 = lshr i64 %1287, 39, !dbg !2554
  %or2193 = or i64 %shl2191, %shr2192, !dbg !2554
  %xor2194 = xor i64 %or2190, %or2193, !dbg !2554
  %xor2195 = xor i64 %or2187, %xor2194, !dbg !2554
  %1288 = load i64, i64* %e, align 8, !dbg !2554
  %1289 = load i64, i64* %f, align 8, !dbg !2554
  %and2196 = and i64 %1288, %1289, !dbg !2554
  %1290 = load i64, i64* %g, align 8, !dbg !2554
  %1291 = load i64, i64* %e, align 8, !dbg !2554
  %1292 = load i64, i64* %f, align 8, !dbg !2554
  %or2197 = or i64 %1291, %1292, !dbg !2554
  %and2198 = and i64 %1290, %or2197, !dbg !2554
  %or2199 = or i64 %and2196, %and2198, !dbg !2554
  %add2200 = add i64 %xor2195, %or2199, !dbg !2554
  store i64 %add2200, i64* %t02184, align 8, !dbg !2554
  call void @llvm.dbg.declare(metadata i64* %t12201, metadata !2556, metadata !DIExpression()), !dbg !2554
  %1293 = load i64, i64* %d, align 8, !dbg !2554
  %1294 = load i64, i64* %a, align 8, !dbg !2554
  %shl2202 = shl i64 %1294, 50, !dbg !2554
  %1295 = load i64, i64* %a, align 8, !dbg !2554
  %shr2203 = lshr i64 %1295, 14, !dbg !2554
  %or2204 = or i64 %shl2202, %shr2203, !dbg !2554
  %1296 = load i64, i64* %a, align 8, !dbg !2554
  %shl2205 = shl i64 %1296, 46, !dbg !2554
  %1297 = load i64, i64* %a, align 8, !dbg !2554
  %shr2206 = lshr i64 %1297, 18, !dbg !2554
  %or2207 = or i64 %shl2205, %shr2206, !dbg !2554
  %1298 = load i64, i64* %a, align 8, !dbg !2554
  %shl2208 = shl i64 %1298, 23, !dbg !2554
  %1299 = load i64, i64* %a, align 8, !dbg !2554
  %shr2209 = lshr i64 %1299, 41, !dbg !2554
  %or2210 = or i64 %shl2208, %shr2209, !dbg !2554
  %xor2211 = xor i64 %or2207, %or2210, !dbg !2554
  %xor2212 = xor i64 %or2204, %xor2211, !dbg !2554
  %1300 = load i64, i64* %c, align 8, !dbg !2554
  %1301 = load i64, i64* %a, align 8, !dbg !2554
  %1302 = load i64, i64* %b, align 8, !dbg !2554
  %1303 = load i64, i64* %c, align 8, !dbg !2554
  %xor2213 = xor i64 %1302, %1303, !dbg !2554
  %and2214 = and i64 %1301, %xor2213, !dbg !2554
  %xor2215 = xor i64 %1300, %and2214, !dbg !2554
  %1304 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 36), align 8, !dbg !2554
  %arrayidx2216 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 4, !dbg !2554
  %1305 = load i64, i64* %arrayidx2216, align 8, !dbg !2554
  %arrayidx2217 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 2, !dbg !2554
  %1306 = load i64, i64* %arrayidx2217, align 8, !dbg !2554
  %shl2218 = shl i64 %1306, 45, !dbg !2554
  %arrayidx2219 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 2, !dbg !2554
  %1307 = load i64, i64* %arrayidx2219, align 8, !dbg !2554
  %shr2220 = lshr i64 %1307, 19, !dbg !2554
  %or2221 = or i64 %shl2218, %shr2220, !dbg !2554
  %arrayidx2222 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 2, !dbg !2554
  %1308 = load i64, i64* %arrayidx2222, align 8, !dbg !2554
  %shl2223 = shl i64 %1308, 3, !dbg !2554
  %arrayidx2224 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 2, !dbg !2554
  %1309 = load i64, i64* %arrayidx2224, align 8, !dbg !2554
  %shr2225 = lshr i64 %1309, 61, !dbg !2554
  %or2226 = or i64 %shl2223, %shr2225, !dbg !2554
  %arrayidx2227 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 2, !dbg !2554
  %1310 = load i64, i64* %arrayidx2227, align 8, !dbg !2554
  %shr2228 = lshr i64 %1310, 6, !dbg !2554
  %xor2229 = xor i64 %or2226, %shr2228, !dbg !2554
  %xor2230 = xor i64 %or2221, %xor2229, !dbg !2554
  %arrayidx2231 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 13, !dbg !2554
  %1311 = load i64, i64* %arrayidx2231, align 8, !dbg !2554
  %arrayidx2232 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 5, !dbg !2554
  %1312 = load i64, i64* %arrayidx2232, align 8, !dbg !2554
  %shl2233 = shl i64 %1312, 63, !dbg !2554
  %arrayidx2234 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 5, !dbg !2554
  %1313 = load i64, i64* %arrayidx2234, align 8, !dbg !2554
  %shr2235 = lshr i64 %1313, 1, !dbg !2554
  %or2236 = or i64 %shl2233, %shr2235, !dbg !2554
  %arrayidx2237 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 5, !dbg !2554
  %1314 = load i64, i64* %arrayidx2237, align 8, !dbg !2554
  %shl2238 = shl i64 %1314, 56, !dbg !2554
  %arrayidx2239 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 5, !dbg !2554
  %1315 = load i64, i64* %arrayidx2239, align 8, !dbg !2554
  %shr2240 = lshr i64 %1315, 8, !dbg !2554
  %or2241 = or i64 %shl2238, %shr2240, !dbg !2554
  %arrayidx2242 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 5, !dbg !2554
  %1316 = load i64, i64* %arrayidx2242, align 8, !dbg !2554
  %shr2243 = lshr i64 %1316, 7, !dbg !2554
  %xor2244 = xor i64 %or2241, %shr2243, !dbg !2554
  %xor2245 = xor i64 %or2236, %xor2244, !dbg !2554
  %add2246 = add i64 %1311, %xor2245, !dbg !2554
  %add2247 = add i64 %xor2230, %add2246, !dbg !2554
  %add2248 = add i64 %1305, %add2247, !dbg !2554
  %arrayidx2249 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 4, !dbg !2554
  store i64 %add2248, i64* %arrayidx2249, align 8, !dbg !2554
  %add2250 = add i64 %1304, %add2248, !dbg !2554
  %add2251 = add i64 %xor2215, %add2250, !dbg !2554
  %add2252 = add i64 %xor2212, %add2251, !dbg !2554
  %add2253 = add i64 %1293, %add2252, !dbg !2554
  store i64 %add2253, i64* %t12201, align 8, !dbg !2554
  %1317 = load i64, i64* %h, align 8, !dbg !2554
  %1318 = load i64, i64* %t12201, align 8, !dbg !2554
  %add2254 = add i64 %1317, %1318, !dbg !2554
  store i64 %add2254, i64* %h, align 8, !dbg !2554
  %1319 = load i64, i64* %t02184, align 8, !dbg !2554
  %1320 = load i64, i64* %t12201, align 8, !dbg !2554
  %add2255 = add i64 %1319, %1320, !dbg !2554
  store i64 %add2255, i64* %d, align 8, !dbg !2554
  br label %do.end.2256, !dbg !2554

do.end.2256:                                      ; preds = %do.body.2183
  br label %do.body.2257, !dbg !2557

do.body.2257:                                     ; preds = %do.end.2256
  call void @llvm.dbg.declare(metadata i64* %t02258, metadata !2558, metadata !DIExpression()), !dbg !2560
  %1321 = load i64, i64* %d, align 8, !dbg !2561
  %shl2259 = shl i64 %1321, 36, !dbg !2561
  %1322 = load i64, i64* %d, align 8, !dbg !2561
  %shr2260 = lshr i64 %1322, 28, !dbg !2561
  %or2261 = or i64 %shl2259, %shr2260, !dbg !2561
  %1323 = load i64, i64* %d, align 8, !dbg !2561
  %shl2262 = shl i64 %1323, 30, !dbg !2561
  %1324 = load i64, i64* %d, align 8, !dbg !2561
  %shr2263 = lshr i64 %1324, 34, !dbg !2561
  %or2264 = or i64 %shl2262, %shr2263, !dbg !2561
  %1325 = load i64, i64* %d, align 8, !dbg !2561
  %shl2265 = shl i64 %1325, 25, !dbg !2561
  %1326 = load i64, i64* %d, align 8, !dbg !2561
  %shr2266 = lshr i64 %1326, 39, !dbg !2561
  %or2267 = or i64 %shl2265, %shr2266, !dbg !2561
  %xor2268 = xor i64 %or2264, %or2267, !dbg !2561
  %xor2269 = xor i64 %or2261, %xor2268, !dbg !2561
  %1327 = load i64, i64* %d, align 8, !dbg !2561
  %1328 = load i64, i64* %e, align 8, !dbg !2561
  %and2270 = and i64 %1327, %1328, !dbg !2561
  %1329 = load i64, i64* %f, align 8, !dbg !2561
  %1330 = load i64, i64* %d, align 8, !dbg !2561
  %1331 = load i64, i64* %e, align 8, !dbg !2561
  %or2271 = or i64 %1330, %1331, !dbg !2561
  %and2272 = and i64 %1329, %or2271, !dbg !2561
  %or2273 = or i64 %and2270, %and2272, !dbg !2561
  %add2274 = add i64 %xor2269, %or2273, !dbg !2561
  store i64 %add2274, i64* %t02258, align 8, !dbg !2561
  call void @llvm.dbg.declare(metadata i64* %t12275, metadata !2563, metadata !DIExpression()), !dbg !2561
  %1332 = load i64, i64* %c, align 8, !dbg !2561
  %1333 = load i64, i64* %h, align 8, !dbg !2561
  %shl2276 = shl i64 %1333, 50, !dbg !2561
  %1334 = load i64, i64* %h, align 8, !dbg !2561
  %shr2277 = lshr i64 %1334, 14, !dbg !2561
  %or2278 = or i64 %shl2276, %shr2277, !dbg !2561
  %1335 = load i64, i64* %h, align 8, !dbg !2561
  %shl2279 = shl i64 %1335, 46, !dbg !2561
  %1336 = load i64, i64* %h, align 8, !dbg !2561
  %shr2280 = lshr i64 %1336, 18, !dbg !2561
  %or2281 = or i64 %shl2279, %shr2280, !dbg !2561
  %1337 = load i64, i64* %h, align 8, !dbg !2561
  %shl2282 = shl i64 %1337, 23, !dbg !2561
  %1338 = load i64, i64* %h, align 8, !dbg !2561
  %shr2283 = lshr i64 %1338, 41, !dbg !2561
  %or2284 = or i64 %shl2282, %shr2283, !dbg !2561
  %xor2285 = xor i64 %or2281, %or2284, !dbg !2561
  %xor2286 = xor i64 %or2278, %xor2285, !dbg !2561
  %1339 = load i64, i64* %b, align 8, !dbg !2561
  %1340 = load i64, i64* %h, align 8, !dbg !2561
  %1341 = load i64, i64* %a, align 8, !dbg !2561
  %1342 = load i64, i64* %b, align 8, !dbg !2561
  %xor2287 = xor i64 %1341, %1342, !dbg !2561
  %and2288 = and i64 %1340, %xor2287, !dbg !2561
  %xor2289 = xor i64 %1339, %and2288, !dbg !2561
  %1343 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 37), align 8, !dbg !2561
  %arrayidx2290 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 5, !dbg !2561
  %1344 = load i64, i64* %arrayidx2290, align 8, !dbg !2561
  %arrayidx2291 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 3, !dbg !2561
  %1345 = load i64, i64* %arrayidx2291, align 8, !dbg !2561
  %shl2292 = shl i64 %1345, 45, !dbg !2561
  %arrayidx2293 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 3, !dbg !2561
  %1346 = load i64, i64* %arrayidx2293, align 8, !dbg !2561
  %shr2294 = lshr i64 %1346, 19, !dbg !2561
  %or2295 = or i64 %shl2292, %shr2294, !dbg !2561
  %arrayidx2296 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 3, !dbg !2561
  %1347 = load i64, i64* %arrayidx2296, align 8, !dbg !2561
  %shl2297 = shl i64 %1347, 3, !dbg !2561
  %arrayidx2298 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 3, !dbg !2561
  %1348 = load i64, i64* %arrayidx2298, align 8, !dbg !2561
  %shr2299 = lshr i64 %1348, 61, !dbg !2561
  %or2300 = or i64 %shl2297, %shr2299, !dbg !2561
  %arrayidx2301 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 3, !dbg !2561
  %1349 = load i64, i64* %arrayidx2301, align 8, !dbg !2561
  %shr2302 = lshr i64 %1349, 6, !dbg !2561
  %xor2303 = xor i64 %or2300, %shr2302, !dbg !2561
  %xor2304 = xor i64 %or2295, %xor2303, !dbg !2561
  %arrayidx2305 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 14, !dbg !2561
  %1350 = load i64, i64* %arrayidx2305, align 8, !dbg !2561
  %arrayidx2306 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 6, !dbg !2561
  %1351 = load i64, i64* %arrayidx2306, align 8, !dbg !2561
  %shl2307 = shl i64 %1351, 63, !dbg !2561
  %arrayidx2308 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 6, !dbg !2561
  %1352 = load i64, i64* %arrayidx2308, align 8, !dbg !2561
  %shr2309 = lshr i64 %1352, 1, !dbg !2561
  %or2310 = or i64 %shl2307, %shr2309, !dbg !2561
  %arrayidx2311 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 6, !dbg !2561
  %1353 = load i64, i64* %arrayidx2311, align 8, !dbg !2561
  %shl2312 = shl i64 %1353, 56, !dbg !2561
  %arrayidx2313 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 6, !dbg !2561
  %1354 = load i64, i64* %arrayidx2313, align 8, !dbg !2561
  %shr2314 = lshr i64 %1354, 8, !dbg !2561
  %or2315 = or i64 %shl2312, %shr2314, !dbg !2561
  %arrayidx2316 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 6, !dbg !2561
  %1355 = load i64, i64* %arrayidx2316, align 8, !dbg !2561
  %shr2317 = lshr i64 %1355, 7, !dbg !2561
  %xor2318 = xor i64 %or2315, %shr2317, !dbg !2561
  %xor2319 = xor i64 %or2310, %xor2318, !dbg !2561
  %add2320 = add i64 %1350, %xor2319, !dbg !2561
  %add2321 = add i64 %xor2304, %add2320, !dbg !2561
  %add2322 = add i64 %1344, %add2321, !dbg !2561
  %arrayidx2323 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 5, !dbg !2561
  store i64 %add2322, i64* %arrayidx2323, align 8, !dbg !2561
  %add2324 = add i64 %1343, %add2322, !dbg !2561
  %add2325 = add i64 %xor2289, %add2324, !dbg !2561
  %add2326 = add i64 %xor2286, %add2325, !dbg !2561
  %add2327 = add i64 %1332, %add2326, !dbg !2561
  store i64 %add2327, i64* %t12275, align 8, !dbg !2561
  %1356 = load i64, i64* %g, align 8, !dbg !2561
  %1357 = load i64, i64* %t12275, align 8, !dbg !2561
  %add2328 = add i64 %1356, %1357, !dbg !2561
  store i64 %add2328, i64* %g, align 8, !dbg !2561
  %1358 = load i64, i64* %t02258, align 8, !dbg !2561
  %1359 = load i64, i64* %t12275, align 8, !dbg !2561
  %add2329 = add i64 %1358, %1359, !dbg !2561
  store i64 %add2329, i64* %c, align 8, !dbg !2561
  br label %do.end.2330, !dbg !2561

do.end.2330:                                      ; preds = %do.body.2257
  br label %do.body.2331, !dbg !2564

do.body.2331:                                     ; preds = %do.end.2330
  call void @llvm.dbg.declare(metadata i64* %t02332, metadata !2565, metadata !DIExpression()), !dbg !2567
  %1360 = load i64, i64* %c, align 8, !dbg !2568
  %shl2333 = shl i64 %1360, 36, !dbg !2568
  %1361 = load i64, i64* %c, align 8, !dbg !2568
  %shr2334 = lshr i64 %1361, 28, !dbg !2568
  %or2335 = or i64 %shl2333, %shr2334, !dbg !2568
  %1362 = load i64, i64* %c, align 8, !dbg !2568
  %shl2336 = shl i64 %1362, 30, !dbg !2568
  %1363 = load i64, i64* %c, align 8, !dbg !2568
  %shr2337 = lshr i64 %1363, 34, !dbg !2568
  %or2338 = or i64 %shl2336, %shr2337, !dbg !2568
  %1364 = load i64, i64* %c, align 8, !dbg !2568
  %shl2339 = shl i64 %1364, 25, !dbg !2568
  %1365 = load i64, i64* %c, align 8, !dbg !2568
  %shr2340 = lshr i64 %1365, 39, !dbg !2568
  %or2341 = or i64 %shl2339, %shr2340, !dbg !2568
  %xor2342 = xor i64 %or2338, %or2341, !dbg !2568
  %xor2343 = xor i64 %or2335, %xor2342, !dbg !2568
  %1366 = load i64, i64* %c, align 8, !dbg !2568
  %1367 = load i64, i64* %d, align 8, !dbg !2568
  %and2344 = and i64 %1366, %1367, !dbg !2568
  %1368 = load i64, i64* %e, align 8, !dbg !2568
  %1369 = load i64, i64* %c, align 8, !dbg !2568
  %1370 = load i64, i64* %d, align 8, !dbg !2568
  %or2345 = or i64 %1369, %1370, !dbg !2568
  %and2346 = and i64 %1368, %or2345, !dbg !2568
  %or2347 = or i64 %and2344, %and2346, !dbg !2568
  %add2348 = add i64 %xor2343, %or2347, !dbg !2568
  store i64 %add2348, i64* %t02332, align 8, !dbg !2568
  call void @llvm.dbg.declare(metadata i64* %t12349, metadata !2570, metadata !DIExpression()), !dbg !2568
  %1371 = load i64, i64* %b, align 8, !dbg !2568
  %1372 = load i64, i64* %g, align 8, !dbg !2568
  %shl2350 = shl i64 %1372, 50, !dbg !2568
  %1373 = load i64, i64* %g, align 8, !dbg !2568
  %shr2351 = lshr i64 %1373, 14, !dbg !2568
  %or2352 = or i64 %shl2350, %shr2351, !dbg !2568
  %1374 = load i64, i64* %g, align 8, !dbg !2568
  %shl2353 = shl i64 %1374, 46, !dbg !2568
  %1375 = load i64, i64* %g, align 8, !dbg !2568
  %shr2354 = lshr i64 %1375, 18, !dbg !2568
  %or2355 = or i64 %shl2353, %shr2354, !dbg !2568
  %1376 = load i64, i64* %g, align 8, !dbg !2568
  %shl2356 = shl i64 %1376, 23, !dbg !2568
  %1377 = load i64, i64* %g, align 8, !dbg !2568
  %shr2357 = lshr i64 %1377, 41, !dbg !2568
  %or2358 = or i64 %shl2356, %shr2357, !dbg !2568
  %xor2359 = xor i64 %or2355, %or2358, !dbg !2568
  %xor2360 = xor i64 %or2352, %xor2359, !dbg !2568
  %1378 = load i64, i64* %a, align 8, !dbg !2568
  %1379 = load i64, i64* %g, align 8, !dbg !2568
  %1380 = load i64, i64* %h, align 8, !dbg !2568
  %1381 = load i64, i64* %a, align 8, !dbg !2568
  %xor2361 = xor i64 %1380, %1381, !dbg !2568
  %and2362 = and i64 %1379, %xor2361, !dbg !2568
  %xor2363 = xor i64 %1378, %and2362, !dbg !2568
  %1382 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 38), align 8, !dbg !2568
  %arrayidx2364 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 6, !dbg !2568
  %1383 = load i64, i64* %arrayidx2364, align 8, !dbg !2568
  %arrayidx2365 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 4, !dbg !2568
  %1384 = load i64, i64* %arrayidx2365, align 8, !dbg !2568
  %shl2366 = shl i64 %1384, 45, !dbg !2568
  %arrayidx2367 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 4, !dbg !2568
  %1385 = load i64, i64* %arrayidx2367, align 8, !dbg !2568
  %shr2368 = lshr i64 %1385, 19, !dbg !2568
  %or2369 = or i64 %shl2366, %shr2368, !dbg !2568
  %arrayidx2370 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 4, !dbg !2568
  %1386 = load i64, i64* %arrayidx2370, align 8, !dbg !2568
  %shl2371 = shl i64 %1386, 3, !dbg !2568
  %arrayidx2372 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 4, !dbg !2568
  %1387 = load i64, i64* %arrayidx2372, align 8, !dbg !2568
  %shr2373 = lshr i64 %1387, 61, !dbg !2568
  %or2374 = or i64 %shl2371, %shr2373, !dbg !2568
  %arrayidx2375 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 4, !dbg !2568
  %1388 = load i64, i64* %arrayidx2375, align 8, !dbg !2568
  %shr2376 = lshr i64 %1388, 6, !dbg !2568
  %xor2377 = xor i64 %or2374, %shr2376, !dbg !2568
  %xor2378 = xor i64 %or2369, %xor2377, !dbg !2568
  %arrayidx2379 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 15, !dbg !2568
  %1389 = load i64, i64* %arrayidx2379, align 8, !dbg !2568
  %arrayidx2380 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 7, !dbg !2568
  %1390 = load i64, i64* %arrayidx2380, align 8, !dbg !2568
  %shl2381 = shl i64 %1390, 63, !dbg !2568
  %arrayidx2382 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 7, !dbg !2568
  %1391 = load i64, i64* %arrayidx2382, align 8, !dbg !2568
  %shr2383 = lshr i64 %1391, 1, !dbg !2568
  %or2384 = or i64 %shl2381, %shr2383, !dbg !2568
  %arrayidx2385 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 7, !dbg !2568
  %1392 = load i64, i64* %arrayidx2385, align 8, !dbg !2568
  %shl2386 = shl i64 %1392, 56, !dbg !2568
  %arrayidx2387 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 7, !dbg !2568
  %1393 = load i64, i64* %arrayidx2387, align 8, !dbg !2568
  %shr2388 = lshr i64 %1393, 8, !dbg !2568
  %or2389 = or i64 %shl2386, %shr2388, !dbg !2568
  %arrayidx2390 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 7, !dbg !2568
  %1394 = load i64, i64* %arrayidx2390, align 8, !dbg !2568
  %shr2391 = lshr i64 %1394, 7, !dbg !2568
  %xor2392 = xor i64 %or2389, %shr2391, !dbg !2568
  %xor2393 = xor i64 %or2384, %xor2392, !dbg !2568
  %add2394 = add i64 %1389, %xor2393, !dbg !2568
  %add2395 = add i64 %xor2378, %add2394, !dbg !2568
  %add2396 = add i64 %1383, %add2395, !dbg !2568
  %arrayidx2397 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 6, !dbg !2568
  store i64 %add2396, i64* %arrayidx2397, align 8, !dbg !2568
  %add2398 = add i64 %1382, %add2396, !dbg !2568
  %add2399 = add i64 %xor2363, %add2398, !dbg !2568
  %add2400 = add i64 %xor2360, %add2399, !dbg !2568
  %add2401 = add i64 %1371, %add2400, !dbg !2568
  store i64 %add2401, i64* %t12349, align 8, !dbg !2568
  %1395 = load i64, i64* %f, align 8, !dbg !2568
  %1396 = load i64, i64* %t12349, align 8, !dbg !2568
  %add2402 = add i64 %1395, %1396, !dbg !2568
  store i64 %add2402, i64* %f, align 8, !dbg !2568
  %1397 = load i64, i64* %t02332, align 8, !dbg !2568
  %1398 = load i64, i64* %t12349, align 8, !dbg !2568
  %add2403 = add i64 %1397, %1398, !dbg !2568
  store i64 %add2403, i64* %b, align 8, !dbg !2568
  br label %do.end.2404, !dbg !2568

do.end.2404:                                      ; preds = %do.body.2331
  br label %do.body.2405, !dbg !2571

do.body.2405:                                     ; preds = %do.end.2404
  call void @llvm.dbg.declare(metadata i64* %t02406, metadata !2572, metadata !DIExpression()), !dbg !2574
  %1399 = load i64, i64* %b, align 8, !dbg !2575
  %shl2407 = shl i64 %1399, 36, !dbg !2575
  %1400 = load i64, i64* %b, align 8, !dbg !2575
  %shr2408 = lshr i64 %1400, 28, !dbg !2575
  %or2409 = or i64 %shl2407, %shr2408, !dbg !2575
  %1401 = load i64, i64* %b, align 8, !dbg !2575
  %shl2410 = shl i64 %1401, 30, !dbg !2575
  %1402 = load i64, i64* %b, align 8, !dbg !2575
  %shr2411 = lshr i64 %1402, 34, !dbg !2575
  %or2412 = or i64 %shl2410, %shr2411, !dbg !2575
  %1403 = load i64, i64* %b, align 8, !dbg !2575
  %shl2413 = shl i64 %1403, 25, !dbg !2575
  %1404 = load i64, i64* %b, align 8, !dbg !2575
  %shr2414 = lshr i64 %1404, 39, !dbg !2575
  %or2415 = or i64 %shl2413, %shr2414, !dbg !2575
  %xor2416 = xor i64 %or2412, %or2415, !dbg !2575
  %xor2417 = xor i64 %or2409, %xor2416, !dbg !2575
  %1405 = load i64, i64* %b, align 8, !dbg !2575
  %1406 = load i64, i64* %c, align 8, !dbg !2575
  %and2418 = and i64 %1405, %1406, !dbg !2575
  %1407 = load i64, i64* %d, align 8, !dbg !2575
  %1408 = load i64, i64* %b, align 8, !dbg !2575
  %1409 = load i64, i64* %c, align 8, !dbg !2575
  %or2419 = or i64 %1408, %1409, !dbg !2575
  %and2420 = and i64 %1407, %or2419, !dbg !2575
  %or2421 = or i64 %and2418, %and2420, !dbg !2575
  %add2422 = add i64 %xor2417, %or2421, !dbg !2575
  store i64 %add2422, i64* %t02406, align 8, !dbg !2575
  call void @llvm.dbg.declare(metadata i64* %t12423, metadata !2577, metadata !DIExpression()), !dbg !2575
  %1410 = load i64, i64* %a, align 8, !dbg !2575
  %1411 = load i64, i64* %f, align 8, !dbg !2575
  %shl2424 = shl i64 %1411, 50, !dbg !2575
  %1412 = load i64, i64* %f, align 8, !dbg !2575
  %shr2425 = lshr i64 %1412, 14, !dbg !2575
  %or2426 = or i64 %shl2424, %shr2425, !dbg !2575
  %1413 = load i64, i64* %f, align 8, !dbg !2575
  %shl2427 = shl i64 %1413, 46, !dbg !2575
  %1414 = load i64, i64* %f, align 8, !dbg !2575
  %shr2428 = lshr i64 %1414, 18, !dbg !2575
  %or2429 = or i64 %shl2427, %shr2428, !dbg !2575
  %1415 = load i64, i64* %f, align 8, !dbg !2575
  %shl2430 = shl i64 %1415, 23, !dbg !2575
  %1416 = load i64, i64* %f, align 8, !dbg !2575
  %shr2431 = lshr i64 %1416, 41, !dbg !2575
  %or2432 = or i64 %shl2430, %shr2431, !dbg !2575
  %xor2433 = xor i64 %or2429, %or2432, !dbg !2575
  %xor2434 = xor i64 %or2426, %xor2433, !dbg !2575
  %1417 = load i64, i64* %h, align 8, !dbg !2575
  %1418 = load i64, i64* %f, align 8, !dbg !2575
  %1419 = load i64, i64* %g, align 8, !dbg !2575
  %1420 = load i64, i64* %h, align 8, !dbg !2575
  %xor2435 = xor i64 %1419, %1420, !dbg !2575
  %and2436 = and i64 %1418, %xor2435, !dbg !2575
  %xor2437 = xor i64 %1417, %and2436, !dbg !2575
  %1421 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 39), align 8, !dbg !2575
  %arrayidx2438 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 7, !dbg !2575
  %1422 = load i64, i64* %arrayidx2438, align 8, !dbg !2575
  %arrayidx2439 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 5, !dbg !2575
  %1423 = load i64, i64* %arrayidx2439, align 8, !dbg !2575
  %shl2440 = shl i64 %1423, 45, !dbg !2575
  %arrayidx2441 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 5, !dbg !2575
  %1424 = load i64, i64* %arrayidx2441, align 8, !dbg !2575
  %shr2442 = lshr i64 %1424, 19, !dbg !2575
  %or2443 = or i64 %shl2440, %shr2442, !dbg !2575
  %arrayidx2444 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 5, !dbg !2575
  %1425 = load i64, i64* %arrayidx2444, align 8, !dbg !2575
  %shl2445 = shl i64 %1425, 3, !dbg !2575
  %arrayidx2446 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 5, !dbg !2575
  %1426 = load i64, i64* %arrayidx2446, align 8, !dbg !2575
  %shr2447 = lshr i64 %1426, 61, !dbg !2575
  %or2448 = or i64 %shl2445, %shr2447, !dbg !2575
  %arrayidx2449 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 5, !dbg !2575
  %1427 = load i64, i64* %arrayidx2449, align 8, !dbg !2575
  %shr2450 = lshr i64 %1427, 6, !dbg !2575
  %xor2451 = xor i64 %or2448, %shr2450, !dbg !2575
  %xor2452 = xor i64 %or2443, %xor2451, !dbg !2575
  %arrayidx2453 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 0, !dbg !2575
  %1428 = load i64, i64* %arrayidx2453, align 8, !dbg !2575
  %arrayidx2454 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 8, !dbg !2575
  %1429 = load i64, i64* %arrayidx2454, align 8, !dbg !2575
  %shl2455 = shl i64 %1429, 63, !dbg !2575
  %arrayidx2456 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 8, !dbg !2575
  %1430 = load i64, i64* %arrayidx2456, align 8, !dbg !2575
  %shr2457 = lshr i64 %1430, 1, !dbg !2575
  %or2458 = or i64 %shl2455, %shr2457, !dbg !2575
  %arrayidx2459 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 8, !dbg !2575
  %1431 = load i64, i64* %arrayidx2459, align 8, !dbg !2575
  %shl2460 = shl i64 %1431, 56, !dbg !2575
  %arrayidx2461 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 8, !dbg !2575
  %1432 = load i64, i64* %arrayidx2461, align 8, !dbg !2575
  %shr2462 = lshr i64 %1432, 8, !dbg !2575
  %or2463 = or i64 %shl2460, %shr2462, !dbg !2575
  %arrayidx2464 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 8, !dbg !2575
  %1433 = load i64, i64* %arrayidx2464, align 8, !dbg !2575
  %shr2465 = lshr i64 %1433, 7, !dbg !2575
  %xor2466 = xor i64 %or2463, %shr2465, !dbg !2575
  %xor2467 = xor i64 %or2458, %xor2466, !dbg !2575
  %add2468 = add i64 %1428, %xor2467, !dbg !2575
  %add2469 = add i64 %xor2452, %add2468, !dbg !2575
  %add2470 = add i64 %1422, %add2469, !dbg !2575
  %arrayidx2471 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 7, !dbg !2575
  store i64 %add2470, i64* %arrayidx2471, align 8, !dbg !2575
  %add2472 = add i64 %1421, %add2470, !dbg !2575
  %add2473 = add i64 %xor2437, %add2472, !dbg !2575
  %add2474 = add i64 %xor2434, %add2473, !dbg !2575
  %add2475 = add i64 %1410, %add2474, !dbg !2575
  store i64 %add2475, i64* %t12423, align 8, !dbg !2575
  %1434 = load i64, i64* %e, align 8, !dbg !2575
  %1435 = load i64, i64* %t12423, align 8, !dbg !2575
  %add2476 = add i64 %1434, %1435, !dbg !2575
  store i64 %add2476, i64* %e, align 8, !dbg !2575
  %1436 = load i64, i64* %t02406, align 8, !dbg !2575
  %1437 = load i64, i64* %t12423, align 8, !dbg !2575
  %add2477 = add i64 %1436, %1437, !dbg !2575
  store i64 %add2477, i64* %a, align 8, !dbg !2575
  br label %do.end.2478, !dbg !2575

do.end.2478:                                      ; preds = %do.body.2405
  br label %do.body.2479, !dbg !2578

do.body.2479:                                     ; preds = %do.end.2478
  call void @llvm.dbg.declare(metadata i64* %t02480, metadata !2579, metadata !DIExpression()), !dbg !2581
  %1438 = load i64, i64* %a, align 8, !dbg !2582
  %shl2481 = shl i64 %1438, 36, !dbg !2582
  %1439 = load i64, i64* %a, align 8, !dbg !2582
  %shr2482 = lshr i64 %1439, 28, !dbg !2582
  %or2483 = or i64 %shl2481, %shr2482, !dbg !2582
  %1440 = load i64, i64* %a, align 8, !dbg !2582
  %shl2484 = shl i64 %1440, 30, !dbg !2582
  %1441 = load i64, i64* %a, align 8, !dbg !2582
  %shr2485 = lshr i64 %1441, 34, !dbg !2582
  %or2486 = or i64 %shl2484, %shr2485, !dbg !2582
  %1442 = load i64, i64* %a, align 8, !dbg !2582
  %shl2487 = shl i64 %1442, 25, !dbg !2582
  %1443 = load i64, i64* %a, align 8, !dbg !2582
  %shr2488 = lshr i64 %1443, 39, !dbg !2582
  %or2489 = or i64 %shl2487, %shr2488, !dbg !2582
  %xor2490 = xor i64 %or2486, %or2489, !dbg !2582
  %xor2491 = xor i64 %or2483, %xor2490, !dbg !2582
  %1444 = load i64, i64* %a, align 8, !dbg !2582
  %1445 = load i64, i64* %b, align 8, !dbg !2582
  %and2492 = and i64 %1444, %1445, !dbg !2582
  %1446 = load i64, i64* %c, align 8, !dbg !2582
  %1447 = load i64, i64* %a, align 8, !dbg !2582
  %1448 = load i64, i64* %b, align 8, !dbg !2582
  %or2493 = or i64 %1447, %1448, !dbg !2582
  %and2494 = and i64 %1446, %or2493, !dbg !2582
  %or2495 = or i64 %and2492, %and2494, !dbg !2582
  %add2496 = add i64 %xor2491, %or2495, !dbg !2582
  store i64 %add2496, i64* %t02480, align 8, !dbg !2582
  call void @llvm.dbg.declare(metadata i64* %t12497, metadata !2584, metadata !DIExpression()), !dbg !2582
  %1449 = load i64, i64* %h, align 8, !dbg !2582
  %1450 = load i64, i64* %e, align 8, !dbg !2582
  %shl2498 = shl i64 %1450, 50, !dbg !2582
  %1451 = load i64, i64* %e, align 8, !dbg !2582
  %shr2499 = lshr i64 %1451, 14, !dbg !2582
  %or2500 = or i64 %shl2498, %shr2499, !dbg !2582
  %1452 = load i64, i64* %e, align 8, !dbg !2582
  %shl2501 = shl i64 %1452, 46, !dbg !2582
  %1453 = load i64, i64* %e, align 8, !dbg !2582
  %shr2502 = lshr i64 %1453, 18, !dbg !2582
  %or2503 = or i64 %shl2501, %shr2502, !dbg !2582
  %1454 = load i64, i64* %e, align 8, !dbg !2582
  %shl2504 = shl i64 %1454, 23, !dbg !2582
  %1455 = load i64, i64* %e, align 8, !dbg !2582
  %shr2505 = lshr i64 %1455, 41, !dbg !2582
  %or2506 = or i64 %shl2504, %shr2505, !dbg !2582
  %xor2507 = xor i64 %or2503, %or2506, !dbg !2582
  %xor2508 = xor i64 %or2500, %xor2507, !dbg !2582
  %1456 = load i64, i64* %g, align 8, !dbg !2582
  %1457 = load i64, i64* %e, align 8, !dbg !2582
  %1458 = load i64, i64* %f, align 8, !dbg !2582
  %1459 = load i64, i64* %g, align 8, !dbg !2582
  %xor2509 = xor i64 %1458, %1459, !dbg !2582
  %and2510 = and i64 %1457, %xor2509, !dbg !2582
  %xor2511 = xor i64 %1456, %and2510, !dbg !2582
  %1460 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 40), align 8, !dbg !2582
  %arrayidx2512 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 8, !dbg !2582
  %1461 = load i64, i64* %arrayidx2512, align 8, !dbg !2582
  %arrayidx2513 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 6, !dbg !2582
  %1462 = load i64, i64* %arrayidx2513, align 8, !dbg !2582
  %shl2514 = shl i64 %1462, 45, !dbg !2582
  %arrayidx2515 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 6, !dbg !2582
  %1463 = load i64, i64* %arrayidx2515, align 8, !dbg !2582
  %shr2516 = lshr i64 %1463, 19, !dbg !2582
  %or2517 = or i64 %shl2514, %shr2516, !dbg !2582
  %arrayidx2518 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 6, !dbg !2582
  %1464 = load i64, i64* %arrayidx2518, align 8, !dbg !2582
  %shl2519 = shl i64 %1464, 3, !dbg !2582
  %arrayidx2520 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 6, !dbg !2582
  %1465 = load i64, i64* %arrayidx2520, align 8, !dbg !2582
  %shr2521 = lshr i64 %1465, 61, !dbg !2582
  %or2522 = or i64 %shl2519, %shr2521, !dbg !2582
  %arrayidx2523 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 6, !dbg !2582
  %1466 = load i64, i64* %arrayidx2523, align 8, !dbg !2582
  %shr2524 = lshr i64 %1466, 6, !dbg !2582
  %xor2525 = xor i64 %or2522, %shr2524, !dbg !2582
  %xor2526 = xor i64 %or2517, %xor2525, !dbg !2582
  %arrayidx2527 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 1, !dbg !2582
  %1467 = load i64, i64* %arrayidx2527, align 8, !dbg !2582
  %arrayidx2528 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 9, !dbg !2582
  %1468 = load i64, i64* %arrayidx2528, align 8, !dbg !2582
  %shl2529 = shl i64 %1468, 63, !dbg !2582
  %arrayidx2530 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 9, !dbg !2582
  %1469 = load i64, i64* %arrayidx2530, align 8, !dbg !2582
  %shr2531 = lshr i64 %1469, 1, !dbg !2582
  %or2532 = or i64 %shl2529, %shr2531, !dbg !2582
  %arrayidx2533 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 9, !dbg !2582
  %1470 = load i64, i64* %arrayidx2533, align 8, !dbg !2582
  %shl2534 = shl i64 %1470, 56, !dbg !2582
  %arrayidx2535 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 9, !dbg !2582
  %1471 = load i64, i64* %arrayidx2535, align 8, !dbg !2582
  %shr2536 = lshr i64 %1471, 8, !dbg !2582
  %or2537 = or i64 %shl2534, %shr2536, !dbg !2582
  %arrayidx2538 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 9, !dbg !2582
  %1472 = load i64, i64* %arrayidx2538, align 8, !dbg !2582
  %shr2539 = lshr i64 %1472, 7, !dbg !2582
  %xor2540 = xor i64 %or2537, %shr2539, !dbg !2582
  %xor2541 = xor i64 %or2532, %xor2540, !dbg !2582
  %add2542 = add i64 %1467, %xor2541, !dbg !2582
  %add2543 = add i64 %xor2526, %add2542, !dbg !2582
  %add2544 = add i64 %1461, %add2543, !dbg !2582
  %arrayidx2545 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 8, !dbg !2582
  store i64 %add2544, i64* %arrayidx2545, align 8, !dbg !2582
  %add2546 = add i64 %1460, %add2544, !dbg !2582
  %add2547 = add i64 %xor2511, %add2546, !dbg !2582
  %add2548 = add i64 %xor2508, %add2547, !dbg !2582
  %add2549 = add i64 %1449, %add2548, !dbg !2582
  store i64 %add2549, i64* %t12497, align 8, !dbg !2582
  %1473 = load i64, i64* %d, align 8, !dbg !2582
  %1474 = load i64, i64* %t12497, align 8, !dbg !2582
  %add2550 = add i64 %1473, %1474, !dbg !2582
  store i64 %add2550, i64* %d, align 8, !dbg !2582
  %1475 = load i64, i64* %t02480, align 8, !dbg !2582
  %1476 = load i64, i64* %t12497, align 8, !dbg !2582
  %add2551 = add i64 %1475, %1476, !dbg !2582
  store i64 %add2551, i64* %h, align 8, !dbg !2582
  br label %do.end.2552, !dbg !2582

do.end.2552:                                      ; preds = %do.body.2479
  br label %do.body.2553, !dbg !2585

do.body.2553:                                     ; preds = %do.end.2552
  call void @llvm.dbg.declare(metadata i64* %t02554, metadata !2586, metadata !DIExpression()), !dbg !2588
  %1477 = load i64, i64* %h, align 8, !dbg !2589
  %shl2555 = shl i64 %1477, 36, !dbg !2589
  %1478 = load i64, i64* %h, align 8, !dbg !2589
  %shr2556 = lshr i64 %1478, 28, !dbg !2589
  %or2557 = or i64 %shl2555, %shr2556, !dbg !2589
  %1479 = load i64, i64* %h, align 8, !dbg !2589
  %shl2558 = shl i64 %1479, 30, !dbg !2589
  %1480 = load i64, i64* %h, align 8, !dbg !2589
  %shr2559 = lshr i64 %1480, 34, !dbg !2589
  %or2560 = or i64 %shl2558, %shr2559, !dbg !2589
  %1481 = load i64, i64* %h, align 8, !dbg !2589
  %shl2561 = shl i64 %1481, 25, !dbg !2589
  %1482 = load i64, i64* %h, align 8, !dbg !2589
  %shr2562 = lshr i64 %1482, 39, !dbg !2589
  %or2563 = or i64 %shl2561, %shr2562, !dbg !2589
  %xor2564 = xor i64 %or2560, %or2563, !dbg !2589
  %xor2565 = xor i64 %or2557, %xor2564, !dbg !2589
  %1483 = load i64, i64* %h, align 8, !dbg !2589
  %1484 = load i64, i64* %a, align 8, !dbg !2589
  %and2566 = and i64 %1483, %1484, !dbg !2589
  %1485 = load i64, i64* %b, align 8, !dbg !2589
  %1486 = load i64, i64* %h, align 8, !dbg !2589
  %1487 = load i64, i64* %a, align 8, !dbg !2589
  %or2567 = or i64 %1486, %1487, !dbg !2589
  %and2568 = and i64 %1485, %or2567, !dbg !2589
  %or2569 = or i64 %and2566, %and2568, !dbg !2589
  %add2570 = add i64 %xor2565, %or2569, !dbg !2589
  store i64 %add2570, i64* %t02554, align 8, !dbg !2589
  call void @llvm.dbg.declare(metadata i64* %t12571, metadata !2591, metadata !DIExpression()), !dbg !2589
  %1488 = load i64, i64* %g, align 8, !dbg !2589
  %1489 = load i64, i64* %d, align 8, !dbg !2589
  %shl2572 = shl i64 %1489, 50, !dbg !2589
  %1490 = load i64, i64* %d, align 8, !dbg !2589
  %shr2573 = lshr i64 %1490, 14, !dbg !2589
  %or2574 = or i64 %shl2572, %shr2573, !dbg !2589
  %1491 = load i64, i64* %d, align 8, !dbg !2589
  %shl2575 = shl i64 %1491, 46, !dbg !2589
  %1492 = load i64, i64* %d, align 8, !dbg !2589
  %shr2576 = lshr i64 %1492, 18, !dbg !2589
  %or2577 = or i64 %shl2575, %shr2576, !dbg !2589
  %1493 = load i64, i64* %d, align 8, !dbg !2589
  %shl2578 = shl i64 %1493, 23, !dbg !2589
  %1494 = load i64, i64* %d, align 8, !dbg !2589
  %shr2579 = lshr i64 %1494, 41, !dbg !2589
  %or2580 = or i64 %shl2578, %shr2579, !dbg !2589
  %xor2581 = xor i64 %or2577, %or2580, !dbg !2589
  %xor2582 = xor i64 %or2574, %xor2581, !dbg !2589
  %1495 = load i64, i64* %f, align 8, !dbg !2589
  %1496 = load i64, i64* %d, align 8, !dbg !2589
  %1497 = load i64, i64* %e, align 8, !dbg !2589
  %1498 = load i64, i64* %f, align 8, !dbg !2589
  %xor2583 = xor i64 %1497, %1498, !dbg !2589
  %and2584 = and i64 %1496, %xor2583, !dbg !2589
  %xor2585 = xor i64 %1495, %and2584, !dbg !2589
  %1499 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 41), align 8, !dbg !2589
  %arrayidx2586 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 9, !dbg !2589
  %1500 = load i64, i64* %arrayidx2586, align 8, !dbg !2589
  %arrayidx2587 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 7, !dbg !2589
  %1501 = load i64, i64* %arrayidx2587, align 8, !dbg !2589
  %shl2588 = shl i64 %1501, 45, !dbg !2589
  %arrayidx2589 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 7, !dbg !2589
  %1502 = load i64, i64* %arrayidx2589, align 8, !dbg !2589
  %shr2590 = lshr i64 %1502, 19, !dbg !2589
  %or2591 = or i64 %shl2588, %shr2590, !dbg !2589
  %arrayidx2592 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 7, !dbg !2589
  %1503 = load i64, i64* %arrayidx2592, align 8, !dbg !2589
  %shl2593 = shl i64 %1503, 3, !dbg !2589
  %arrayidx2594 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 7, !dbg !2589
  %1504 = load i64, i64* %arrayidx2594, align 8, !dbg !2589
  %shr2595 = lshr i64 %1504, 61, !dbg !2589
  %or2596 = or i64 %shl2593, %shr2595, !dbg !2589
  %arrayidx2597 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 7, !dbg !2589
  %1505 = load i64, i64* %arrayidx2597, align 8, !dbg !2589
  %shr2598 = lshr i64 %1505, 6, !dbg !2589
  %xor2599 = xor i64 %or2596, %shr2598, !dbg !2589
  %xor2600 = xor i64 %or2591, %xor2599, !dbg !2589
  %arrayidx2601 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 2, !dbg !2589
  %1506 = load i64, i64* %arrayidx2601, align 8, !dbg !2589
  %arrayidx2602 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 10, !dbg !2589
  %1507 = load i64, i64* %arrayidx2602, align 8, !dbg !2589
  %shl2603 = shl i64 %1507, 63, !dbg !2589
  %arrayidx2604 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 10, !dbg !2589
  %1508 = load i64, i64* %arrayidx2604, align 8, !dbg !2589
  %shr2605 = lshr i64 %1508, 1, !dbg !2589
  %or2606 = or i64 %shl2603, %shr2605, !dbg !2589
  %arrayidx2607 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 10, !dbg !2589
  %1509 = load i64, i64* %arrayidx2607, align 8, !dbg !2589
  %shl2608 = shl i64 %1509, 56, !dbg !2589
  %arrayidx2609 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 10, !dbg !2589
  %1510 = load i64, i64* %arrayidx2609, align 8, !dbg !2589
  %shr2610 = lshr i64 %1510, 8, !dbg !2589
  %or2611 = or i64 %shl2608, %shr2610, !dbg !2589
  %arrayidx2612 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 10, !dbg !2589
  %1511 = load i64, i64* %arrayidx2612, align 8, !dbg !2589
  %shr2613 = lshr i64 %1511, 7, !dbg !2589
  %xor2614 = xor i64 %or2611, %shr2613, !dbg !2589
  %xor2615 = xor i64 %or2606, %xor2614, !dbg !2589
  %add2616 = add i64 %1506, %xor2615, !dbg !2589
  %add2617 = add i64 %xor2600, %add2616, !dbg !2589
  %add2618 = add i64 %1500, %add2617, !dbg !2589
  %arrayidx2619 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 9, !dbg !2589
  store i64 %add2618, i64* %arrayidx2619, align 8, !dbg !2589
  %add2620 = add i64 %1499, %add2618, !dbg !2589
  %add2621 = add i64 %xor2585, %add2620, !dbg !2589
  %add2622 = add i64 %xor2582, %add2621, !dbg !2589
  %add2623 = add i64 %1488, %add2622, !dbg !2589
  store i64 %add2623, i64* %t12571, align 8, !dbg !2589
  %1512 = load i64, i64* %c, align 8, !dbg !2589
  %1513 = load i64, i64* %t12571, align 8, !dbg !2589
  %add2624 = add i64 %1512, %1513, !dbg !2589
  store i64 %add2624, i64* %c, align 8, !dbg !2589
  %1514 = load i64, i64* %t02554, align 8, !dbg !2589
  %1515 = load i64, i64* %t12571, align 8, !dbg !2589
  %add2625 = add i64 %1514, %1515, !dbg !2589
  store i64 %add2625, i64* %g, align 8, !dbg !2589
  br label %do.end.2626, !dbg !2589

do.end.2626:                                      ; preds = %do.body.2553
  br label %do.body.2627, !dbg !2592

do.body.2627:                                     ; preds = %do.end.2626
  call void @llvm.dbg.declare(metadata i64* %t02628, metadata !2593, metadata !DIExpression()), !dbg !2595
  %1516 = load i64, i64* %g, align 8, !dbg !2596
  %shl2629 = shl i64 %1516, 36, !dbg !2596
  %1517 = load i64, i64* %g, align 8, !dbg !2596
  %shr2630 = lshr i64 %1517, 28, !dbg !2596
  %or2631 = or i64 %shl2629, %shr2630, !dbg !2596
  %1518 = load i64, i64* %g, align 8, !dbg !2596
  %shl2632 = shl i64 %1518, 30, !dbg !2596
  %1519 = load i64, i64* %g, align 8, !dbg !2596
  %shr2633 = lshr i64 %1519, 34, !dbg !2596
  %or2634 = or i64 %shl2632, %shr2633, !dbg !2596
  %1520 = load i64, i64* %g, align 8, !dbg !2596
  %shl2635 = shl i64 %1520, 25, !dbg !2596
  %1521 = load i64, i64* %g, align 8, !dbg !2596
  %shr2636 = lshr i64 %1521, 39, !dbg !2596
  %or2637 = or i64 %shl2635, %shr2636, !dbg !2596
  %xor2638 = xor i64 %or2634, %or2637, !dbg !2596
  %xor2639 = xor i64 %or2631, %xor2638, !dbg !2596
  %1522 = load i64, i64* %g, align 8, !dbg !2596
  %1523 = load i64, i64* %h, align 8, !dbg !2596
  %and2640 = and i64 %1522, %1523, !dbg !2596
  %1524 = load i64, i64* %a, align 8, !dbg !2596
  %1525 = load i64, i64* %g, align 8, !dbg !2596
  %1526 = load i64, i64* %h, align 8, !dbg !2596
  %or2641 = or i64 %1525, %1526, !dbg !2596
  %and2642 = and i64 %1524, %or2641, !dbg !2596
  %or2643 = or i64 %and2640, %and2642, !dbg !2596
  %add2644 = add i64 %xor2639, %or2643, !dbg !2596
  store i64 %add2644, i64* %t02628, align 8, !dbg !2596
  call void @llvm.dbg.declare(metadata i64* %t12645, metadata !2598, metadata !DIExpression()), !dbg !2596
  %1527 = load i64, i64* %f, align 8, !dbg !2596
  %1528 = load i64, i64* %c, align 8, !dbg !2596
  %shl2646 = shl i64 %1528, 50, !dbg !2596
  %1529 = load i64, i64* %c, align 8, !dbg !2596
  %shr2647 = lshr i64 %1529, 14, !dbg !2596
  %or2648 = or i64 %shl2646, %shr2647, !dbg !2596
  %1530 = load i64, i64* %c, align 8, !dbg !2596
  %shl2649 = shl i64 %1530, 46, !dbg !2596
  %1531 = load i64, i64* %c, align 8, !dbg !2596
  %shr2650 = lshr i64 %1531, 18, !dbg !2596
  %or2651 = or i64 %shl2649, %shr2650, !dbg !2596
  %1532 = load i64, i64* %c, align 8, !dbg !2596
  %shl2652 = shl i64 %1532, 23, !dbg !2596
  %1533 = load i64, i64* %c, align 8, !dbg !2596
  %shr2653 = lshr i64 %1533, 41, !dbg !2596
  %or2654 = or i64 %shl2652, %shr2653, !dbg !2596
  %xor2655 = xor i64 %or2651, %or2654, !dbg !2596
  %xor2656 = xor i64 %or2648, %xor2655, !dbg !2596
  %1534 = load i64, i64* %e, align 8, !dbg !2596
  %1535 = load i64, i64* %c, align 8, !dbg !2596
  %1536 = load i64, i64* %d, align 8, !dbg !2596
  %1537 = load i64, i64* %e, align 8, !dbg !2596
  %xor2657 = xor i64 %1536, %1537, !dbg !2596
  %and2658 = and i64 %1535, %xor2657, !dbg !2596
  %xor2659 = xor i64 %1534, %and2658, !dbg !2596
  %1538 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 42), align 8, !dbg !2596
  %arrayidx2660 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 10, !dbg !2596
  %1539 = load i64, i64* %arrayidx2660, align 8, !dbg !2596
  %arrayidx2661 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 8, !dbg !2596
  %1540 = load i64, i64* %arrayidx2661, align 8, !dbg !2596
  %shl2662 = shl i64 %1540, 45, !dbg !2596
  %arrayidx2663 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 8, !dbg !2596
  %1541 = load i64, i64* %arrayidx2663, align 8, !dbg !2596
  %shr2664 = lshr i64 %1541, 19, !dbg !2596
  %or2665 = or i64 %shl2662, %shr2664, !dbg !2596
  %arrayidx2666 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 8, !dbg !2596
  %1542 = load i64, i64* %arrayidx2666, align 8, !dbg !2596
  %shl2667 = shl i64 %1542, 3, !dbg !2596
  %arrayidx2668 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 8, !dbg !2596
  %1543 = load i64, i64* %arrayidx2668, align 8, !dbg !2596
  %shr2669 = lshr i64 %1543, 61, !dbg !2596
  %or2670 = or i64 %shl2667, %shr2669, !dbg !2596
  %arrayidx2671 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 8, !dbg !2596
  %1544 = load i64, i64* %arrayidx2671, align 8, !dbg !2596
  %shr2672 = lshr i64 %1544, 6, !dbg !2596
  %xor2673 = xor i64 %or2670, %shr2672, !dbg !2596
  %xor2674 = xor i64 %or2665, %xor2673, !dbg !2596
  %arrayidx2675 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 3, !dbg !2596
  %1545 = load i64, i64* %arrayidx2675, align 8, !dbg !2596
  %arrayidx2676 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 11, !dbg !2596
  %1546 = load i64, i64* %arrayidx2676, align 8, !dbg !2596
  %shl2677 = shl i64 %1546, 63, !dbg !2596
  %arrayidx2678 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 11, !dbg !2596
  %1547 = load i64, i64* %arrayidx2678, align 8, !dbg !2596
  %shr2679 = lshr i64 %1547, 1, !dbg !2596
  %or2680 = or i64 %shl2677, %shr2679, !dbg !2596
  %arrayidx2681 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 11, !dbg !2596
  %1548 = load i64, i64* %arrayidx2681, align 8, !dbg !2596
  %shl2682 = shl i64 %1548, 56, !dbg !2596
  %arrayidx2683 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 11, !dbg !2596
  %1549 = load i64, i64* %arrayidx2683, align 8, !dbg !2596
  %shr2684 = lshr i64 %1549, 8, !dbg !2596
  %or2685 = or i64 %shl2682, %shr2684, !dbg !2596
  %arrayidx2686 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 11, !dbg !2596
  %1550 = load i64, i64* %arrayidx2686, align 8, !dbg !2596
  %shr2687 = lshr i64 %1550, 7, !dbg !2596
  %xor2688 = xor i64 %or2685, %shr2687, !dbg !2596
  %xor2689 = xor i64 %or2680, %xor2688, !dbg !2596
  %add2690 = add i64 %1545, %xor2689, !dbg !2596
  %add2691 = add i64 %xor2674, %add2690, !dbg !2596
  %add2692 = add i64 %1539, %add2691, !dbg !2596
  %arrayidx2693 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 10, !dbg !2596
  store i64 %add2692, i64* %arrayidx2693, align 8, !dbg !2596
  %add2694 = add i64 %1538, %add2692, !dbg !2596
  %add2695 = add i64 %xor2659, %add2694, !dbg !2596
  %add2696 = add i64 %xor2656, %add2695, !dbg !2596
  %add2697 = add i64 %1527, %add2696, !dbg !2596
  store i64 %add2697, i64* %t12645, align 8, !dbg !2596
  %1551 = load i64, i64* %b, align 8, !dbg !2596
  %1552 = load i64, i64* %t12645, align 8, !dbg !2596
  %add2698 = add i64 %1551, %1552, !dbg !2596
  store i64 %add2698, i64* %b, align 8, !dbg !2596
  %1553 = load i64, i64* %t02628, align 8, !dbg !2596
  %1554 = load i64, i64* %t12645, align 8, !dbg !2596
  %add2699 = add i64 %1553, %1554, !dbg !2596
  store i64 %add2699, i64* %f, align 8, !dbg !2596
  br label %do.end.2700, !dbg !2596

do.end.2700:                                      ; preds = %do.body.2627
  br label %do.body.2701, !dbg !2599

do.body.2701:                                     ; preds = %do.end.2700
  call void @llvm.dbg.declare(metadata i64* %t02702, metadata !2600, metadata !DIExpression()), !dbg !2602
  %1555 = load i64, i64* %f, align 8, !dbg !2603
  %shl2703 = shl i64 %1555, 36, !dbg !2603
  %1556 = load i64, i64* %f, align 8, !dbg !2603
  %shr2704 = lshr i64 %1556, 28, !dbg !2603
  %or2705 = or i64 %shl2703, %shr2704, !dbg !2603
  %1557 = load i64, i64* %f, align 8, !dbg !2603
  %shl2706 = shl i64 %1557, 30, !dbg !2603
  %1558 = load i64, i64* %f, align 8, !dbg !2603
  %shr2707 = lshr i64 %1558, 34, !dbg !2603
  %or2708 = or i64 %shl2706, %shr2707, !dbg !2603
  %1559 = load i64, i64* %f, align 8, !dbg !2603
  %shl2709 = shl i64 %1559, 25, !dbg !2603
  %1560 = load i64, i64* %f, align 8, !dbg !2603
  %shr2710 = lshr i64 %1560, 39, !dbg !2603
  %or2711 = or i64 %shl2709, %shr2710, !dbg !2603
  %xor2712 = xor i64 %or2708, %or2711, !dbg !2603
  %xor2713 = xor i64 %or2705, %xor2712, !dbg !2603
  %1561 = load i64, i64* %f, align 8, !dbg !2603
  %1562 = load i64, i64* %g, align 8, !dbg !2603
  %and2714 = and i64 %1561, %1562, !dbg !2603
  %1563 = load i64, i64* %h, align 8, !dbg !2603
  %1564 = load i64, i64* %f, align 8, !dbg !2603
  %1565 = load i64, i64* %g, align 8, !dbg !2603
  %or2715 = or i64 %1564, %1565, !dbg !2603
  %and2716 = and i64 %1563, %or2715, !dbg !2603
  %or2717 = or i64 %and2714, %and2716, !dbg !2603
  %add2718 = add i64 %xor2713, %or2717, !dbg !2603
  store i64 %add2718, i64* %t02702, align 8, !dbg !2603
  call void @llvm.dbg.declare(metadata i64* %t12719, metadata !2605, metadata !DIExpression()), !dbg !2603
  %1566 = load i64, i64* %e, align 8, !dbg !2603
  %1567 = load i64, i64* %b, align 8, !dbg !2603
  %shl2720 = shl i64 %1567, 50, !dbg !2603
  %1568 = load i64, i64* %b, align 8, !dbg !2603
  %shr2721 = lshr i64 %1568, 14, !dbg !2603
  %or2722 = or i64 %shl2720, %shr2721, !dbg !2603
  %1569 = load i64, i64* %b, align 8, !dbg !2603
  %shl2723 = shl i64 %1569, 46, !dbg !2603
  %1570 = load i64, i64* %b, align 8, !dbg !2603
  %shr2724 = lshr i64 %1570, 18, !dbg !2603
  %or2725 = or i64 %shl2723, %shr2724, !dbg !2603
  %1571 = load i64, i64* %b, align 8, !dbg !2603
  %shl2726 = shl i64 %1571, 23, !dbg !2603
  %1572 = load i64, i64* %b, align 8, !dbg !2603
  %shr2727 = lshr i64 %1572, 41, !dbg !2603
  %or2728 = or i64 %shl2726, %shr2727, !dbg !2603
  %xor2729 = xor i64 %or2725, %or2728, !dbg !2603
  %xor2730 = xor i64 %or2722, %xor2729, !dbg !2603
  %1573 = load i64, i64* %d, align 8, !dbg !2603
  %1574 = load i64, i64* %b, align 8, !dbg !2603
  %1575 = load i64, i64* %c, align 8, !dbg !2603
  %1576 = load i64, i64* %d, align 8, !dbg !2603
  %xor2731 = xor i64 %1575, %1576, !dbg !2603
  %and2732 = and i64 %1574, %xor2731, !dbg !2603
  %xor2733 = xor i64 %1573, %and2732, !dbg !2603
  %1577 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 43), align 8, !dbg !2603
  %arrayidx2734 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 11, !dbg !2603
  %1578 = load i64, i64* %arrayidx2734, align 8, !dbg !2603
  %arrayidx2735 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 9, !dbg !2603
  %1579 = load i64, i64* %arrayidx2735, align 8, !dbg !2603
  %shl2736 = shl i64 %1579, 45, !dbg !2603
  %arrayidx2737 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 9, !dbg !2603
  %1580 = load i64, i64* %arrayidx2737, align 8, !dbg !2603
  %shr2738 = lshr i64 %1580, 19, !dbg !2603
  %or2739 = or i64 %shl2736, %shr2738, !dbg !2603
  %arrayidx2740 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 9, !dbg !2603
  %1581 = load i64, i64* %arrayidx2740, align 8, !dbg !2603
  %shl2741 = shl i64 %1581, 3, !dbg !2603
  %arrayidx2742 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 9, !dbg !2603
  %1582 = load i64, i64* %arrayidx2742, align 8, !dbg !2603
  %shr2743 = lshr i64 %1582, 61, !dbg !2603
  %or2744 = or i64 %shl2741, %shr2743, !dbg !2603
  %arrayidx2745 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 9, !dbg !2603
  %1583 = load i64, i64* %arrayidx2745, align 8, !dbg !2603
  %shr2746 = lshr i64 %1583, 6, !dbg !2603
  %xor2747 = xor i64 %or2744, %shr2746, !dbg !2603
  %xor2748 = xor i64 %or2739, %xor2747, !dbg !2603
  %arrayidx2749 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 4, !dbg !2603
  %1584 = load i64, i64* %arrayidx2749, align 8, !dbg !2603
  %arrayidx2750 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 12, !dbg !2603
  %1585 = load i64, i64* %arrayidx2750, align 8, !dbg !2603
  %shl2751 = shl i64 %1585, 63, !dbg !2603
  %arrayidx2752 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 12, !dbg !2603
  %1586 = load i64, i64* %arrayidx2752, align 8, !dbg !2603
  %shr2753 = lshr i64 %1586, 1, !dbg !2603
  %or2754 = or i64 %shl2751, %shr2753, !dbg !2603
  %arrayidx2755 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 12, !dbg !2603
  %1587 = load i64, i64* %arrayidx2755, align 8, !dbg !2603
  %shl2756 = shl i64 %1587, 56, !dbg !2603
  %arrayidx2757 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 12, !dbg !2603
  %1588 = load i64, i64* %arrayidx2757, align 8, !dbg !2603
  %shr2758 = lshr i64 %1588, 8, !dbg !2603
  %or2759 = or i64 %shl2756, %shr2758, !dbg !2603
  %arrayidx2760 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 12, !dbg !2603
  %1589 = load i64, i64* %arrayidx2760, align 8, !dbg !2603
  %shr2761 = lshr i64 %1589, 7, !dbg !2603
  %xor2762 = xor i64 %or2759, %shr2761, !dbg !2603
  %xor2763 = xor i64 %or2754, %xor2762, !dbg !2603
  %add2764 = add i64 %1584, %xor2763, !dbg !2603
  %add2765 = add i64 %xor2748, %add2764, !dbg !2603
  %add2766 = add i64 %1578, %add2765, !dbg !2603
  %arrayidx2767 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 11, !dbg !2603
  store i64 %add2766, i64* %arrayidx2767, align 8, !dbg !2603
  %add2768 = add i64 %1577, %add2766, !dbg !2603
  %add2769 = add i64 %xor2733, %add2768, !dbg !2603
  %add2770 = add i64 %xor2730, %add2769, !dbg !2603
  %add2771 = add i64 %1566, %add2770, !dbg !2603
  store i64 %add2771, i64* %t12719, align 8, !dbg !2603
  %1590 = load i64, i64* %a, align 8, !dbg !2603
  %1591 = load i64, i64* %t12719, align 8, !dbg !2603
  %add2772 = add i64 %1590, %1591, !dbg !2603
  store i64 %add2772, i64* %a, align 8, !dbg !2603
  %1592 = load i64, i64* %t02702, align 8, !dbg !2603
  %1593 = load i64, i64* %t12719, align 8, !dbg !2603
  %add2773 = add i64 %1592, %1593, !dbg !2603
  store i64 %add2773, i64* %e, align 8, !dbg !2603
  br label %do.end.2774, !dbg !2603

do.end.2774:                                      ; preds = %do.body.2701
  br label %do.body.2775, !dbg !2606

do.body.2775:                                     ; preds = %do.end.2774
  call void @llvm.dbg.declare(metadata i64* %t02776, metadata !2607, metadata !DIExpression()), !dbg !2609
  %1594 = load i64, i64* %e, align 8, !dbg !2610
  %shl2777 = shl i64 %1594, 36, !dbg !2610
  %1595 = load i64, i64* %e, align 8, !dbg !2610
  %shr2778 = lshr i64 %1595, 28, !dbg !2610
  %or2779 = or i64 %shl2777, %shr2778, !dbg !2610
  %1596 = load i64, i64* %e, align 8, !dbg !2610
  %shl2780 = shl i64 %1596, 30, !dbg !2610
  %1597 = load i64, i64* %e, align 8, !dbg !2610
  %shr2781 = lshr i64 %1597, 34, !dbg !2610
  %or2782 = or i64 %shl2780, %shr2781, !dbg !2610
  %1598 = load i64, i64* %e, align 8, !dbg !2610
  %shl2783 = shl i64 %1598, 25, !dbg !2610
  %1599 = load i64, i64* %e, align 8, !dbg !2610
  %shr2784 = lshr i64 %1599, 39, !dbg !2610
  %or2785 = or i64 %shl2783, %shr2784, !dbg !2610
  %xor2786 = xor i64 %or2782, %or2785, !dbg !2610
  %xor2787 = xor i64 %or2779, %xor2786, !dbg !2610
  %1600 = load i64, i64* %e, align 8, !dbg !2610
  %1601 = load i64, i64* %f, align 8, !dbg !2610
  %and2788 = and i64 %1600, %1601, !dbg !2610
  %1602 = load i64, i64* %g, align 8, !dbg !2610
  %1603 = load i64, i64* %e, align 8, !dbg !2610
  %1604 = load i64, i64* %f, align 8, !dbg !2610
  %or2789 = or i64 %1603, %1604, !dbg !2610
  %and2790 = and i64 %1602, %or2789, !dbg !2610
  %or2791 = or i64 %and2788, %and2790, !dbg !2610
  %add2792 = add i64 %xor2787, %or2791, !dbg !2610
  store i64 %add2792, i64* %t02776, align 8, !dbg !2610
  call void @llvm.dbg.declare(metadata i64* %t12793, metadata !2612, metadata !DIExpression()), !dbg !2610
  %1605 = load i64, i64* %d, align 8, !dbg !2610
  %1606 = load i64, i64* %a, align 8, !dbg !2610
  %shl2794 = shl i64 %1606, 50, !dbg !2610
  %1607 = load i64, i64* %a, align 8, !dbg !2610
  %shr2795 = lshr i64 %1607, 14, !dbg !2610
  %or2796 = or i64 %shl2794, %shr2795, !dbg !2610
  %1608 = load i64, i64* %a, align 8, !dbg !2610
  %shl2797 = shl i64 %1608, 46, !dbg !2610
  %1609 = load i64, i64* %a, align 8, !dbg !2610
  %shr2798 = lshr i64 %1609, 18, !dbg !2610
  %or2799 = or i64 %shl2797, %shr2798, !dbg !2610
  %1610 = load i64, i64* %a, align 8, !dbg !2610
  %shl2800 = shl i64 %1610, 23, !dbg !2610
  %1611 = load i64, i64* %a, align 8, !dbg !2610
  %shr2801 = lshr i64 %1611, 41, !dbg !2610
  %or2802 = or i64 %shl2800, %shr2801, !dbg !2610
  %xor2803 = xor i64 %or2799, %or2802, !dbg !2610
  %xor2804 = xor i64 %or2796, %xor2803, !dbg !2610
  %1612 = load i64, i64* %c, align 8, !dbg !2610
  %1613 = load i64, i64* %a, align 8, !dbg !2610
  %1614 = load i64, i64* %b, align 8, !dbg !2610
  %1615 = load i64, i64* %c, align 8, !dbg !2610
  %xor2805 = xor i64 %1614, %1615, !dbg !2610
  %and2806 = and i64 %1613, %xor2805, !dbg !2610
  %xor2807 = xor i64 %1612, %and2806, !dbg !2610
  %1616 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 44), align 8, !dbg !2610
  %arrayidx2808 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 12, !dbg !2610
  %1617 = load i64, i64* %arrayidx2808, align 8, !dbg !2610
  %arrayidx2809 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 10, !dbg !2610
  %1618 = load i64, i64* %arrayidx2809, align 8, !dbg !2610
  %shl2810 = shl i64 %1618, 45, !dbg !2610
  %arrayidx2811 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 10, !dbg !2610
  %1619 = load i64, i64* %arrayidx2811, align 8, !dbg !2610
  %shr2812 = lshr i64 %1619, 19, !dbg !2610
  %or2813 = or i64 %shl2810, %shr2812, !dbg !2610
  %arrayidx2814 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 10, !dbg !2610
  %1620 = load i64, i64* %arrayidx2814, align 8, !dbg !2610
  %shl2815 = shl i64 %1620, 3, !dbg !2610
  %arrayidx2816 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 10, !dbg !2610
  %1621 = load i64, i64* %arrayidx2816, align 8, !dbg !2610
  %shr2817 = lshr i64 %1621, 61, !dbg !2610
  %or2818 = or i64 %shl2815, %shr2817, !dbg !2610
  %arrayidx2819 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 10, !dbg !2610
  %1622 = load i64, i64* %arrayidx2819, align 8, !dbg !2610
  %shr2820 = lshr i64 %1622, 6, !dbg !2610
  %xor2821 = xor i64 %or2818, %shr2820, !dbg !2610
  %xor2822 = xor i64 %or2813, %xor2821, !dbg !2610
  %arrayidx2823 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 5, !dbg !2610
  %1623 = load i64, i64* %arrayidx2823, align 8, !dbg !2610
  %arrayidx2824 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 13, !dbg !2610
  %1624 = load i64, i64* %arrayidx2824, align 8, !dbg !2610
  %shl2825 = shl i64 %1624, 63, !dbg !2610
  %arrayidx2826 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 13, !dbg !2610
  %1625 = load i64, i64* %arrayidx2826, align 8, !dbg !2610
  %shr2827 = lshr i64 %1625, 1, !dbg !2610
  %or2828 = or i64 %shl2825, %shr2827, !dbg !2610
  %arrayidx2829 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 13, !dbg !2610
  %1626 = load i64, i64* %arrayidx2829, align 8, !dbg !2610
  %shl2830 = shl i64 %1626, 56, !dbg !2610
  %arrayidx2831 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 13, !dbg !2610
  %1627 = load i64, i64* %arrayidx2831, align 8, !dbg !2610
  %shr2832 = lshr i64 %1627, 8, !dbg !2610
  %or2833 = or i64 %shl2830, %shr2832, !dbg !2610
  %arrayidx2834 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 13, !dbg !2610
  %1628 = load i64, i64* %arrayidx2834, align 8, !dbg !2610
  %shr2835 = lshr i64 %1628, 7, !dbg !2610
  %xor2836 = xor i64 %or2833, %shr2835, !dbg !2610
  %xor2837 = xor i64 %or2828, %xor2836, !dbg !2610
  %add2838 = add i64 %1623, %xor2837, !dbg !2610
  %add2839 = add i64 %xor2822, %add2838, !dbg !2610
  %add2840 = add i64 %1617, %add2839, !dbg !2610
  %arrayidx2841 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 12, !dbg !2610
  store i64 %add2840, i64* %arrayidx2841, align 8, !dbg !2610
  %add2842 = add i64 %1616, %add2840, !dbg !2610
  %add2843 = add i64 %xor2807, %add2842, !dbg !2610
  %add2844 = add i64 %xor2804, %add2843, !dbg !2610
  %add2845 = add i64 %1605, %add2844, !dbg !2610
  store i64 %add2845, i64* %t12793, align 8, !dbg !2610
  %1629 = load i64, i64* %h, align 8, !dbg !2610
  %1630 = load i64, i64* %t12793, align 8, !dbg !2610
  %add2846 = add i64 %1629, %1630, !dbg !2610
  store i64 %add2846, i64* %h, align 8, !dbg !2610
  %1631 = load i64, i64* %t02776, align 8, !dbg !2610
  %1632 = load i64, i64* %t12793, align 8, !dbg !2610
  %add2847 = add i64 %1631, %1632, !dbg !2610
  store i64 %add2847, i64* %d, align 8, !dbg !2610
  br label %do.end.2848, !dbg !2610

do.end.2848:                                      ; preds = %do.body.2775
  br label %do.body.2849, !dbg !2613

do.body.2849:                                     ; preds = %do.end.2848
  call void @llvm.dbg.declare(metadata i64* %t02850, metadata !2614, metadata !DIExpression()), !dbg !2616
  %1633 = load i64, i64* %d, align 8, !dbg !2617
  %shl2851 = shl i64 %1633, 36, !dbg !2617
  %1634 = load i64, i64* %d, align 8, !dbg !2617
  %shr2852 = lshr i64 %1634, 28, !dbg !2617
  %or2853 = or i64 %shl2851, %shr2852, !dbg !2617
  %1635 = load i64, i64* %d, align 8, !dbg !2617
  %shl2854 = shl i64 %1635, 30, !dbg !2617
  %1636 = load i64, i64* %d, align 8, !dbg !2617
  %shr2855 = lshr i64 %1636, 34, !dbg !2617
  %or2856 = or i64 %shl2854, %shr2855, !dbg !2617
  %1637 = load i64, i64* %d, align 8, !dbg !2617
  %shl2857 = shl i64 %1637, 25, !dbg !2617
  %1638 = load i64, i64* %d, align 8, !dbg !2617
  %shr2858 = lshr i64 %1638, 39, !dbg !2617
  %or2859 = or i64 %shl2857, %shr2858, !dbg !2617
  %xor2860 = xor i64 %or2856, %or2859, !dbg !2617
  %xor2861 = xor i64 %or2853, %xor2860, !dbg !2617
  %1639 = load i64, i64* %d, align 8, !dbg !2617
  %1640 = load i64, i64* %e, align 8, !dbg !2617
  %and2862 = and i64 %1639, %1640, !dbg !2617
  %1641 = load i64, i64* %f, align 8, !dbg !2617
  %1642 = load i64, i64* %d, align 8, !dbg !2617
  %1643 = load i64, i64* %e, align 8, !dbg !2617
  %or2863 = or i64 %1642, %1643, !dbg !2617
  %and2864 = and i64 %1641, %or2863, !dbg !2617
  %or2865 = or i64 %and2862, %and2864, !dbg !2617
  %add2866 = add i64 %xor2861, %or2865, !dbg !2617
  store i64 %add2866, i64* %t02850, align 8, !dbg !2617
  call void @llvm.dbg.declare(metadata i64* %t12867, metadata !2619, metadata !DIExpression()), !dbg !2617
  %1644 = load i64, i64* %c, align 8, !dbg !2617
  %1645 = load i64, i64* %h, align 8, !dbg !2617
  %shl2868 = shl i64 %1645, 50, !dbg !2617
  %1646 = load i64, i64* %h, align 8, !dbg !2617
  %shr2869 = lshr i64 %1646, 14, !dbg !2617
  %or2870 = or i64 %shl2868, %shr2869, !dbg !2617
  %1647 = load i64, i64* %h, align 8, !dbg !2617
  %shl2871 = shl i64 %1647, 46, !dbg !2617
  %1648 = load i64, i64* %h, align 8, !dbg !2617
  %shr2872 = lshr i64 %1648, 18, !dbg !2617
  %or2873 = or i64 %shl2871, %shr2872, !dbg !2617
  %1649 = load i64, i64* %h, align 8, !dbg !2617
  %shl2874 = shl i64 %1649, 23, !dbg !2617
  %1650 = load i64, i64* %h, align 8, !dbg !2617
  %shr2875 = lshr i64 %1650, 41, !dbg !2617
  %or2876 = or i64 %shl2874, %shr2875, !dbg !2617
  %xor2877 = xor i64 %or2873, %or2876, !dbg !2617
  %xor2878 = xor i64 %or2870, %xor2877, !dbg !2617
  %1651 = load i64, i64* %b, align 8, !dbg !2617
  %1652 = load i64, i64* %h, align 8, !dbg !2617
  %1653 = load i64, i64* %a, align 8, !dbg !2617
  %1654 = load i64, i64* %b, align 8, !dbg !2617
  %xor2879 = xor i64 %1653, %1654, !dbg !2617
  %and2880 = and i64 %1652, %xor2879, !dbg !2617
  %xor2881 = xor i64 %1651, %and2880, !dbg !2617
  %1655 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 45), align 8, !dbg !2617
  %arrayidx2882 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 13, !dbg !2617
  %1656 = load i64, i64* %arrayidx2882, align 8, !dbg !2617
  %arrayidx2883 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 11, !dbg !2617
  %1657 = load i64, i64* %arrayidx2883, align 8, !dbg !2617
  %shl2884 = shl i64 %1657, 45, !dbg !2617
  %arrayidx2885 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 11, !dbg !2617
  %1658 = load i64, i64* %arrayidx2885, align 8, !dbg !2617
  %shr2886 = lshr i64 %1658, 19, !dbg !2617
  %or2887 = or i64 %shl2884, %shr2886, !dbg !2617
  %arrayidx2888 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 11, !dbg !2617
  %1659 = load i64, i64* %arrayidx2888, align 8, !dbg !2617
  %shl2889 = shl i64 %1659, 3, !dbg !2617
  %arrayidx2890 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 11, !dbg !2617
  %1660 = load i64, i64* %arrayidx2890, align 8, !dbg !2617
  %shr2891 = lshr i64 %1660, 61, !dbg !2617
  %or2892 = or i64 %shl2889, %shr2891, !dbg !2617
  %arrayidx2893 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 11, !dbg !2617
  %1661 = load i64, i64* %arrayidx2893, align 8, !dbg !2617
  %shr2894 = lshr i64 %1661, 6, !dbg !2617
  %xor2895 = xor i64 %or2892, %shr2894, !dbg !2617
  %xor2896 = xor i64 %or2887, %xor2895, !dbg !2617
  %arrayidx2897 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 6, !dbg !2617
  %1662 = load i64, i64* %arrayidx2897, align 8, !dbg !2617
  %arrayidx2898 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 14, !dbg !2617
  %1663 = load i64, i64* %arrayidx2898, align 8, !dbg !2617
  %shl2899 = shl i64 %1663, 63, !dbg !2617
  %arrayidx2900 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 14, !dbg !2617
  %1664 = load i64, i64* %arrayidx2900, align 8, !dbg !2617
  %shr2901 = lshr i64 %1664, 1, !dbg !2617
  %or2902 = or i64 %shl2899, %shr2901, !dbg !2617
  %arrayidx2903 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 14, !dbg !2617
  %1665 = load i64, i64* %arrayidx2903, align 8, !dbg !2617
  %shl2904 = shl i64 %1665, 56, !dbg !2617
  %arrayidx2905 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 14, !dbg !2617
  %1666 = load i64, i64* %arrayidx2905, align 8, !dbg !2617
  %shr2906 = lshr i64 %1666, 8, !dbg !2617
  %or2907 = or i64 %shl2904, %shr2906, !dbg !2617
  %arrayidx2908 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 14, !dbg !2617
  %1667 = load i64, i64* %arrayidx2908, align 8, !dbg !2617
  %shr2909 = lshr i64 %1667, 7, !dbg !2617
  %xor2910 = xor i64 %or2907, %shr2909, !dbg !2617
  %xor2911 = xor i64 %or2902, %xor2910, !dbg !2617
  %add2912 = add i64 %1662, %xor2911, !dbg !2617
  %add2913 = add i64 %xor2896, %add2912, !dbg !2617
  %add2914 = add i64 %1656, %add2913, !dbg !2617
  %arrayidx2915 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 13, !dbg !2617
  store i64 %add2914, i64* %arrayidx2915, align 8, !dbg !2617
  %add2916 = add i64 %1655, %add2914, !dbg !2617
  %add2917 = add i64 %xor2881, %add2916, !dbg !2617
  %add2918 = add i64 %xor2878, %add2917, !dbg !2617
  %add2919 = add i64 %1644, %add2918, !dbg !2617
  store i64 %add2919, i64* %t12867, align 8, !dbg !2617
  %1668 = load i64, i64* %g, align 8, !dbg !2617
  %1669 = load i64, i64* %t12867, align 8, !dbg !2617
  %add2920 = add i64 %1668, %1669, !dbg !2617
  store i64 %add2920, i64* %g, align 8, !dbg !2617
  %1670 = load i64, i64* %t02850, align 8, !dbg !2617
  %1671 = load i64, i64* %t12867, align 8, !dbg !2617
  %add2921 = add i64 %1670, %1671, !dbg !2617
  store i64 %add2921, i64* %c, align 8, !dbg !2617
  br label %do.end.2922, !dbg !2617

do.end.2922:                                      ; preds = %do.body.2849
  br label %do.body.2923, !dbg !2620

do.body.2923:                                     ; preds = %do.end.2922
  call void @llvm.dbg.declare(metadata i64* %t02924, metadata !2621, metadata !DIExpression()), !dbg !2623
  %1672 = load i64, i64* %c, align 8, !dbg !2624
  %shl2925 = shl i64 %1672, 36, !dbg !2624
  %1673 = load i64, i64* %c, align 8, !dbg !2624
  %shr2926 = lshr i64 %1673, 28, !dbg !2624
  %or2927 = or i64 %shl2925, %shr2926, !dbg !2624
  %1674 = load i64, i64* %c, align 8, !dbg !2624
  %shl2928 = shl i64 %1674, 30, !dbg !2624
  %1675 = load i64, i64* %c, align 8, !dbg !2624
  %shr2929 = lshr i64 %1675, 34, !dbg !2624
  %or2930 = or i64 %shl2928, %shr2929, !dbg !2624
  %1676 = load i64, i64* %c, align 8, !dbg !2624
  %shl2931 = shl i64 %1676, 25, !dbg !2624
  %1677 = load i64, i64* %c, align 8, !dbg !2624
  %shr2932 = lshr i64 %1677, 39, !dbg !2624
  %or2933 = or i64 %shl2931, %shr2932, !dbg !2624
  %xor2934 = xor i64 %or2930, %or2933, !dbg !2624
  %xor2935 = xor i64 %or2927, %xor2934, !dbg !2624
  %1678 = load i64, i64* %c, align 8, !dbg !2624
  %1679 = load i64, i64* %d, align 8, !dbg !2624
  %and2936 = and i64 %1678, %1679, !dbg !2624
  %1680 = load i64, i64* %e, align 8, !dbg !2624
  %1681 = load i64, i64* %c, align 8, !dbg !2624
  %1682 = load i64, i64* %d, align 8, !dbg !2624
  %or2937 = or i64 %1681, %1682, !dbg !2624
  %and2938 = and i64 %1680, %or2937, !dbg !2624
  %or2939 = or i64 %and2936, %and2938, !dbg !2624
  %add2940 = add i64 %xor2935, %or2939, !dbg !2624
  store i64 %add2940, i64* %t02924, align 8, !dbg !2624
  call void @llvm.dbg.declare(metadata i64* %t12941, metadata !2626, metadata !DIExpression()), !dbg !2624
  %1683 = load i64, i64* %b, align 8, !dbg !2624
  %1684 = load i64, i64* %g, align 8, !dbg !2624
  %shl2942 = shl i64 %1684, 50, !dbg !2624
  %1685 = load i64, i64* %g, align 8, !dbg !2624
  %shr2943 = lshr i64 %1685, 14, !dbg !2624
  %or2944 = or i64 %shl2942, %shr2943, !dbg !2624
  %1686 = load i64, i64* %g, align 8, !dbg !2624
  %shl2945 = shl i64 %1686, 46, !dbg !2624
  %1687 = load i64, i64* %g, align 8, !dbg !2624
  %shr2946 = lshr i64 %1687, 18, !dbg !2624
  %or2947 = or i64 %shl2945, %shr2946, !dbg !2624
  %1688 = load i64, i64* %g, align 8, !dbg !2624
  %shl2948 = shl i64 %1688, 23, !dbg !2624
  %1689 = load i64, i64* %g, align 8, !dbg !2624
  %shr2949 = lshr i64 %1689, 41, !dbg !2624
  %or2950 = or i64 %shl2948, %shr2949, !dbg !2624
  %xor2951 = xor i64 %or2947, %or2950, !dbg !2624
  %xor2952 = xor i64 %or2944, %xor2951, !dbg !2624
  %1690 = load i64, i64* %a, align 8, !dbg !2624
  %1691 = load i64, i64* %g, align 8, !dbg !2624
  %1692 = load i64, i64* %h, align 8, !dbg !2624
  %1693 = load i64, i64* %a, align 8, !dbg !2624
  %xor2953 = xor i64 %1692, %1693, !dbg !2624
  %and2954 = and i64 %1691, %xor2953, !dbg !2624
  %xor2955 = xor i64 %1690, %and2954, !dbg !2624
  %1694 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 46), align 8, !dbg !2624
  %arrayidx2956 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 14, !dbg !2624
  %1695 = load i64, i64* %arrayidx2956, align 8, !dbg !2624
  %arrayidx2957 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 12, !dbg !2624
  %1696 = load i64, i64* %arrayidx2957, align 8, !dbg !2624
  %shl2958 = shl i64 %1696, 45, !dbg !2624
  %arrayidx2959 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 12, !dbg !2624
  %1697 = load i64, i64* %arrayidx2959, align 8, !dbg !2624
  %shr2960 = lshr i64 %1697, 19, !dbg !2624
  %or2961 = or i64 %shl2958, %shr2960, !dbg !2624
  %arrayidx2962 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 12, !dbg !2624
  %1698 = load i64, i64* %arrayidx2962, align 8, !dbg !2624
  %shl2963 = shl i64 %1698, 3, !dbg !2624
  %arrayidx2964 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 12, !dbg !2624
  %1699 = load i64, i64* %arrayidx2964, align 8, !dbg !2624
  %shr2965 = lshr i64 %1699, 61, !dbg !2624
  %or2966 = or i64 %shl2963, %shr2965, !dbg !2624
  %arrayidx2967 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 12, !dbg !2624
  %1700 = load i64, i64* %arrayidx2967, align 8, !dbg !2624
  %shr2968 = lshr i64 %1700, 6, !dbg !2624
  %xor2969 = xor i64 %or2966, %shr2968, !dbg !2624
  %xor2970 = xor i64 %or2961, %xor2969, !dbg !2624
  %arrayidx2971 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 7, !dbg !2624
  %1701 = load i64, i64* %arrayidx2971, align 8, !dbg !2624
  %arrayidx2972 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 15, !dbg !2624
  %1702 = load i64, i64* %arrayidx2972, align 8, !dbg !2624
  %shl2973 = shl i64 %1702, 63, !dbg !2624
  %arrayidx2974 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 15, !dbg !2624
  %1703 = load i64, i64* %arrayidx2974, align 8, !dbg !2624
  %shr2975 = lshr i64 %1703, 1, !dbg !2624
  %or2976 = or i64 %shl2973, %shr2975, !dbg !2624
  %arrayidx2977 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 15, !dbg !2624
  %1704 = load i64, i64* %arrayidx2977, align 8, !dbg !2624
  %shl2978 = shl i64 %1704, 56, !dbg !2624
  %arrayidx2979 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 15, !dbg !2624
  %1705 = load i64, i64* %arrayidx2979, align 8, !dbg !2624
  %shr2980 = lshr i64 %1705, 8, !dbg !2624
  %or2981 = or i64 %shl2978, %shr2980, !dbg !2624
  %arrayidx2982 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 15, !dbg !2624
  %1706 = load i64, i64* %arrayidx2982, align 8, !dbg !2624
  %shr2983 = lshr i64 %1706, 7, !dbg !2624
  %xor2984 = xor i64 %or2981, %shr2983, !dbg !2624
  %xor2985 = xor i64 %or2976, %xor2984, !dbg !2624
  %add2986 = add i64 %1701, %xor2985, !dbg !2624
  %add2987 = add i64 %xor2970, %add2986, !dbg !2624
  %add2988 = add i64 %1695, %add2987, !dbg !2624
  %arrayidx2989 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 14, !dbg !2624
  store i64 %add2988, i64* %arrayidx2989, align 8, !dbg !2624
  %add2990 = add i64 %1694, %add2988, !dbg !2624
  %add2991 = add i64 %xor2955, %add2990, !dbg !2624
  %add2992 = add i64 %xor2952, %add2991, !dbg !2624
  %add2993 = add i64 %1683, %add2992, !dbg !2624
  store i64 %add2993, i64* %t12941, align 8, !dbg !2624
  %1707 = load i64, i64* %f, align 8, !dbg !2624
  %1708 = load i64, i64* %t12941, align 8, !dbg !2624
  %add2994 = add i64 %1707, %1708, !dbg !2624
  store i64 %add2994, i64* %f, align 8, !dbg !2624
  %1709 = load i64, i64* %t02924, align 8, !dbg !2624
  %1710 = load i64, i64* %t12941, align 8, !dbg !2624
  %add2995 = add i64 %1709, %1710, !dbg !2624
  store i64 %add2995, i64* %b, align 8, !dbg !2624
  br label %do.end.2996, !dbg !2624

do.end.2996:                                      ; preds = %do.body.2923
  br label %do.body.2997, !dbg !2627

do.body.2997:                                     ; preds = %do.end.2996
  call void @llvm.dbg.declare(metadata i64* %t02998, metadata !2628, metadata !DIExpression()), !dbg !2630
  %1711 = load i64, i64* %b, align 8, !dbg !2631
  %shl2999 = shl i64 %1711, 36, !dbg !2631
  %1712 = load i64, i64* %b, align 8, !dbg !2631
  %shr3000 = lshr i64 %1712, 28, !dbg !2631
  %or3001 = or i64 %shl2999, %shr3000, !dbg !2631
  %1713 = load i64, i64* %b, align 8, !dbg !2631
  %shl3002 = shl i64 %1713, 30, !dbg !2631
  %1714 = load i64, i64* %b, align 8, !dbg !2631
  %shr3003 = lshr i64 %1714, 34, !dbg !2631
  %or3004 = or i64 %shl3002, %shr3003, !dbg !2631
  %1715 = load i64, i64* %b, align 8, !dbg !2631
  %shl3005 = shl i64 %1715, 25, !dbg !2631
  %1716 = load i64, i64* %b, align 8, !dbg !2631
  %shr3006 = lshr i64 %1716, 39, !dbg !2631
  %or3007 = or i64 %shl3005, %shr3006, !dbg !2631
  %xor3008 = xor i64 %or3004, %or3007, !dbg !2631
  %xor3009 = xor i64 %or3001, %xor3008, !dbg !2631
  %1717 = load i64, i64* %b, align 8, !dbg !2631
  %1718 = load i64, i64* %c, align 8, !dbg !2631
  %and3010 = and i64 %1717, %1718, !dbg !2631
  %1719 = load i64, i64* %d, align 8, !dbg !2631
  %1720 = load i64, i64* %b, align 8, !dbg !2631
  %1721 = load i64, i64* %c, align 8, !dbg !2631
  %or3011 = or i64 %1720, %1721, !dbg !2631
  %and3012 = and i64 %1719, %or3011, !dbg !2631
  %or3013 = or i64 %and3010, %and3012, !dbg !2631
  %add3014 = add i64 %xor3009, %or3013, !dbg !2631
  store i64 %add3014, i64* %t02998, align 8, !dbg !2631
  call void @llvm.dbg.declare(metadata i64* %t13015, metadata !2633, metadata !DIExpression()), !dbg !2631
  %1722 = load i64, i64* %a, align 8, !dbg !2631
  %1723 = load i64, i64* %f, align 8, !dbg !2631
  %shl3016 = shl i64 %1723, 50, !dbg !2631
  %1724 = load i64, i64* %f, align 8, !dbg !2631
  %shr3017 = lshr i64 %1724, 14, !dbg !2631
  %or3018 = or i64 %shl3016, %shr3017, !dbg !2631
  %1725 = load i64, i64* %f, align 8, !dbg !2631
  %shl3019 = shl i64 %1725, 46, !dbg !2631
  %1726 = load i64, i64* %f, align 8, !dbg !2631
  %shr3020 = lshr i64 %1726, 18, !dbg !2631
  %or3021 = or i64 %shl3019, %shr3020, !dbg !2631
  %1727 = load i64, i64* %f, align 8, !dbg !2631
  %shl3022 = shl i64 %1727, 23, !dbg !2631
  %1728 = load i64, i64* %f, align 8, !dbg !2631
  %shr3023 = lshr i64 %1728, 41, !dbg !2631
  %or3024 = or i64 %shl3022, %shr3023, !dbg !2631
  %xor3025 = xor i64 %or3021, %or3024, !dbg !2631
  %xor3026 = xor i64 %or3018, %xor3025, !dbg !2631
  %1729 = load i64, i64* %h, align 8, !dbg !2631
  %1730 = load i64, i64* %f, align 8, !dbg !2631
  %1731 = load i64, i64* %g, align 8, !dbg !2631
  %1732 = load i64, i64* %h, align 8, !dbg !2631
  %xor3027 = xor i64 %1731, %1732, !dbg !2631
  %and3028 = and i64 %1730, %xor3027, !dbg !2631
  %xor3029 = xor i64 %1729, %and3028, !dbg !2631
  %1733 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 47), align 8, !dbg !2631
  %arrayidx3030 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 15, !dbg !2631
  %1734 = load i64, i64* %arrayidx3030, align 8, !dbg !2631
  %arrayidx3031 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 13, !dbg !2631
  %1735 = load i64, i64* %arrayidx3031, align 8, !dbg !2631
  %shl3032 = shl i64 %1735, 45, !dbg !2631
  %arrayidx3033 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 13, !dbg !2631
  %1736 = load i64, i64* %arrayidx3033, align 8, !dbg !2631
  %shr3034 = lshr i64 %1736, 19, !dbg !2631
  %or3035 = or i64 %shl3032, %shr3034, !dbg !2631
  %arrayidx3036 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 13, !dbg !2631
  %1737 = load i64, i64* %arrayidx3036, align 8, !dbg !2631
  %shl3037 = shl i64 %1737, 3, !dbg !2631
  %arrayidx3038 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 13, !dbg !2631
  %1738 = load i64, i64* %arrayidx3038, align 8, !dbg !2631
  %shr3039 = lshr i64 %1738, 61, !dbg !2631
  %or3040 = or i64 %shl3037, %shr3039, !dbg !2631
  %arrayidx3041 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 13, !dbg !2631
  %1739 = load i64, i64* %arrayidx3041, align 8, !dbg !2631
  %shr3042 = lshr i64 %1739, 6, !dbg !2631
  %xor3043 = xor i64 %or3040, %shr3042, !dbg !2631
  %xor3044 = xor i64 %or3035, %xor3043, !dbg !2631
  %arrayidx3045 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 8, !dbg !2631
  %1740 = load i64, i64* %arrayidx3045, align 8, !dbg !2631
  %arrayidx3046 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 0, !dbg !2631
  %1741 = load i64, i64* %arrayidx3046, align 8, !dbg !2631
  %shl3047 = shl i64 %1741, 63, !dbg !2631
  %arrayidx3048 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 0, !dbg !2631
  %1742 = load i64, i64* %arrayidx3048, align 8, !dbg !2631
  %shr3049 = lshr i64 %1742, 1, !dbg !2631
  %or3050 = or i64 %shl3047, %shr3049, !dbg !2631
  %arrayidx3051 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 0, !dbg !2631
  %1743 = load i64, i64* %arrayidx3051, align 8, !dbg !2631
  %shl3052 = shl i64 %1743, 56, !dbg !2631
  %arrayidx3053 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 0, !dbg !2631
  %1744 = load i64, i64* %arrayidx3053, align 8, !dbg !2631
  %shr3054 = lshr i64 %1744, 8, !dbg !2631
  %or3055 = or i64 %shl3052, %shr3054, !dbg !2631
  %arrayidx3056 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 0, !dbg !2631
  %1745 = load i64, i64* %arrayidx3056, align 8, !dbg !2631
  %shr3057 = lshr i64 %1745, 7, !dbg !2631
  %xor3058 = xor i64 %or3055, %shr3057, !dbg !2631
  %xor3059 = xor i64 %or3050, %xor3058, !dbg !2631
  %add3060 = add i64 %1740, %xor3059, !dbg !2631
  %add3061 = add i64 %xor3044, %add3060, !dbg !2631
  %add3062 = add i64 %1734, %add3061, !dbg !2631
  %arrayidx3063 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 15, !dbg !2631
  store i64 %add3062, i64* %arrayidx3063, align 8, !dbg !2631
  %add3064 = add i64 %1733, %add3062, !dbg !2631
  %add3065 = add i64 %xor3029, %add3064, !dbg !2631
  %add3066 = add i64 %xor3026, %add3065, !dbg !2631
  %add3067 = add i64 %1722, %add3066, !dbg !2631
  store i64 %add3067, i64* %t13015, align 8, !dbg !2631
  %1746 = load i64, i64* %e, align 8, !dbg !2631
  %1747 = load i64, i64* %t13015, align 8, !dbg !2631
  %add3068 = add i64 %1746, %1747, !dbg !2631
  store i64 %add3068, i64* %e, align 8, !dbg !2631
  %1748 = load i64, i64* %t02998, align 8, !dbg !2631
  %1749 = load i64, i64* %t13015, align 8, !dbg !2631
  %add3069 = add i64 %1748, %1749, !dbg !2631
  store i64 %add3069, i64* %a, align 8, !dbg !2631
  br label %do.end.3070, !dbg !2631

do.end.3070:                                      ; preds = %do.body.2997
  br label %do.body.3071, !dbg !2634

do.body.3071:                                     ; preds = %do.end.3070
  call void @llvm.dbg.declare(metadata i64* %t03072, metadata !2635, metadata !DIExpression()), !dbg !2637
  %1750 = load i64, i64* %a, align 8, !dbg !2638
  %shl3073 = shl i64 %1750, 36, !dbg !2638
  %1751 = load i64, i64* %a, align 8, !dbg !2638
  %shr3074 = lshr i64 %1751, 28, !dbg !2638
  %or3075 = or i64 %shl3073, %shr3074, !dbg !2638
  %1752 = load i64, i64* %a, align 8, !dbg !2638
  %shl3076 = shl i64 %1752, 30, !dbg !2638
  %1753 = load i64, i64* %a, align 8, !dbg !2638
  %shr3077 = lshr i64 %1753, 34, !dbg !2638
  %or3078 = or i64 %shl3076, %shr3077, !dbg !2638
  %1754 = load i64, i64* %a, align 8, !dbg !2638
  %shl3079 = shl i64 %1754, 25, !dbg !2638
  %1755 = load i64, i64* %a, align 8, !dbg !2638
  %shr3080 = lshr i64 %1755, 39, !dbg !2638
  %or3081 = or i64 %shl3079, %shr3080, !dbg !2638
  %xor3082 = xor i64 %or3078, %or3081, !dbg !2638
  %xor3083 = xor i64 %or3075, %xor3082, !dbg !2638
  %1756 = load i64, i64* %a, align 8, !dbg !2638
  %1757 = load i64, i64* %b, align 8, !dbg !2638
  %and3084 = and i64 %1756, %1757, !dbg !2638
  %1758 = load i64, i64* %c, align 8, !dbg !2638
  %1759 = load i64, i64* %a, align 8, !dbg !2638
  %1760 = load i64, i64* %b, align 8, !dbg !2638
  %or3085 = or i64 %1759, %1760, !dbg !2638
  %and3086 = and i64 %1758, %or3085, !dbg !2638
  %or3087 = or i64 %and3084, %and3086, !dbg !2638
  %add3088 = add i64 %xor3083, %or3087, !dbg !2638
  store i64 %add3088, i64* %t03072, align 8, !dbg !2638
  call void @llvm.dbg.declare(metadata i64* %t13089, metadata !2640, metadata !DIExpression()), !dbg !2638
  %1761 = load i64, i64* %h, align 8, !dbg !2638
  %1762 = load i64, i64* %e, align 8, !dbg !2638
  %shl3090 = shl i64 %1762, 50, !dbg !2638
  %1763 = load i64, i64* %e, align 8, !dbg !2638
  %shr3091 = lshr i64 %1763, 14, !dbg !2638
  %or3092 = or i64 %shl3090, %shr3091, !dbg !2638
  %1764 = load i64, i64* %e, align 8, !dbg !2638
  %shl3093 = shl i64 %1764, 46, !dbg !2638
  %1765 = load i64, i64* %e, align 8, !dbg !2638
  %shr3094 = lshr i64 %1765, 18, !dbg !2638
  %or3095 = or i64 %shl3093, %shr3094, !dbg !2638
  %1766 = load i64, i64* %e, align 8, !dbg !2638
  %shl3096 = shl i64 %1766, 23, !dbg !2638
  %1767 = load i64, i64* %e, align 8, !dbg !2638
  %shr3097 = lshr i64 %1767, 41, !dbg !2638
  %or3098 = or i64 %shl3096, %shr3097, !dbg !2638
  %xor3099 = xor i64 %or3095, %or3098, !dbg !2638
  %xor3100 = xor i64 %or3092, %xor3099, !dbg !2638
  %1768 = load i64, i64* %g, align 8, !dbg !2638
  %1769 = load i64, i64* %e, align 8, !dbg !2638
  %1770 = load i64, i64* %f, align 8, !dbg !2638
  %1771 = load i64, i64* %g, align 8, !dbg !2638
  %xor3101 = xor i64 %1770, %1771, !dbg !2638
  %and3102 = and i64 %1769, %xor3101, !dbg !2638
  %xor3103 = xor i64 %1768, %and3102, !dbg !2638
  %1772 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 48), align 8, !dbg !2638
  %arrayidx3104 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 0, !dbg !2638
  %1773 = load i64, i64* %arrayidx3104, align 8, !dbg !2638
  %arrayidx3105 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 14, !dbg !2638
  %1774 = load i64, i64* %arrayidx3105, align 8, !dbg !2638
  %shl3106 = shl i64 %1774, 45, !dbg !2638
  %arrayidx3107 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 14, !dbg !2638
  %1775 = load i64, i64* %arrayidx3107, align 8, !dbg !2638
  %shr3108 = lshr i64 %1775, 19, !dbg !2638
  %or3109 = or i64 %shl3106, %shr3108, !dbg !2638
  %arrayidx3110 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 14, !dbg !2638
  %1776 = load i64, i64* %arrayidx3110, align 8, !dbg !2638
  %shl3111 = shl i64 %1776, 3, !dbg !2638
  %arrayidx3112 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 14, !dbg !2638
  %1777 = load i64, i64* %arrayidx3112, align 8, !dbg !2638
  %shr3113 = lshr i64 %1777, 61, !dbg !2638
  %or3114 = or i64 %shl3111, %shr3113, !dbg !2638
  %arrayidx3115 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 14, !dbg !2638
  %1778 = load i64, i64* %arrayidx3115, align 8, !dbg !2638
  %shr3116 = lshr i64 %1778, 6, !dbg !2638
  %xor3117 = xor i64 %or3114, %shr3116, !dbg !2638
  %xor3118 = xor i64 %or3109, %xor3117, !dbg !2638
  %arrayidx3119 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 9, !dbg !2638
  %1779 = load i64, i64* %arrayidx3119, align 8, !dbg !2638
  %arrayidx3120 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 1, !dbg !2638
  %1780 = load i64, i64* %arrayidx3120, align 8, !dbg !2638
  %shl3121 = shl i64 %1780, 63, !dbg !2638
  %arrayidx3122 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 1, !dbg !2638
  %1781 = load i64, i64* %arrayidx3122, align 8, !dbg !2638
  %shr3123 = lshr i64 %1781, 1, !dbg !2638
  %or3124 = or i64 %shl3121, %shr3123, !dbg !2638
  %arrayidx3125 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 1, !dbg !2638
  %1782 = load i64, i64* %arrayidx3125, align 8, !dbg !2638
  %shl3126 = shl i64 %1782, 56, !dbg !2638
  %arrayidx3127 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 1, !dbg !2638
  %1783 = load i64, i64* %arrayidx3127, align 8, !dbg !2638
  %shr3128 = lshr i64 %1783, 8, !dbg !2638
  %or3129 = or i64 %shl3126, %shr3128, !dbg !2638
  %arrayidx3130 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 1, !dbg !2638
  %1784 = load i64, i64* %arrayidx3130, align 8, !dbg !2638
  %shr3131 = lshr i64 %1784, 7, !dbg !2638
  %xor3132 = xor i64 %or3129, %shr3131, !dbg !2638
  %xor3133 = xor i64 %or3124, %xor3132, !dbg !2638
  %add3134 = add i64 %1779, %xor3133, !dbg !2638
  %add3135 = add i64 %xor3118, %add3134, !dbg !2638
  %add3136 = add i64 %1773, %add3135, !dbg !2638
  %arrayidx3137 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 0, !dbg !2638
  store i64 %add3136, i64* %arrayidx3137, align 8, !dbg !2638
  %add3138 = add i64 %1772, %add3136, !dbg !2638
  %add3139 = add i64 %xor3103, %add3138, !dbg !2638
  %add3140 = add i64 %xor3100, %add3139, !dbg !2638
  %add3141 = add i64 %1761, %add3140, !dbg !2638
  store i64 %add3141, i64* %t13089, align 8, !dbg !2638
  %1785 = load i64, i64* %d, align 8, !dbg !2638
  %1786 = load i64, i64* %t13089, align 8, !dbg !2638
  %add3142 = add i64 %1785, %1786, !dbg !2638
  store i64 %add3142, i64* %d, align 8, !dbg !2638
  %1787 = load i64, i64* %t03072, align 8, !dbg !2638
  %1788 = load i64, i64* %t13089, align 8, !dbg !2638
  %add3143 = add i64 %1787, %1788, !dbg !2638
  store i64 %add3143, i64* %h, align 8, !dbg !2638
  br label %do.end.3144, !dbg !2638

do.end.3144:                                      ; preds = %do.body.3071
  br label %do.body.3145, !dbg !2641

do.body.3145:                                     ; preds = %do.end.3144
  call void @llvm.dbg.declare(metadata i64* %t03146, metadata !2642, metadata !DIExpression()), !dbg !2644
  %1789 = load i64, i64* %h, align 8, !dbg !2645
  %shl3147 = shl i64 %1789, 36, !dbg !2645
  %1790 = load i64, i64* %h, align 8, !dbg !2645
  %shr3148 = lshr i64 %1790, 28, !dbg !2645
  %or3149 = or i64 %shl3147, %shr3148, !dbg !2645
  %1791 = load i64, i64* %h, align 8, !dbg !2645
  %shl3150 = shl i64 %1791, 30, !dbg !2645
  %1792 = load i64, i64* %h, align 8, !dbg !2645
  %shr3151 = lshr i64 %1792, 34, !dbg !2645
  %or3152 = or i64 %shl3150, %shr3151, !dbg !2645
  %1793 = load i64, i64* %h, align 8, !dbg !2645
  %shl3153 = shl i64 %1793, 25, !dbg !2645
  %1794 = load i64, i64* %h, align 8, !dbg !2645
  %shr3154 = lshr i64 %1794, 39, !dbg !2645
  %or3155 = or i64 %shl3153, %shr3154, !dbg !2645
  %xor3156 = xor i64 %or3152, %or3155, !dbg !2645
  %xor3157 = xor i64 %or3149, %xor3156, !dbg !2645
  %1795 = load i64, i64* %h, align 8, !dbg !2645
  %1796 = load i64, i64* %a, align 8, !dbg !2645
  %and3158 = and i64 %1795, %1796, !dbg !2645
  %1797 = load i64, i64* %b, align 8, !dbg !2645
  %1798 = load i64, i64* %h, align 8, !dbg !2645
  %1799 = load i64, i64* %a, align 8, !dbg !2645
  %or3159 = or i64 %1798, %1799, !dbg !2645
  %and3160 = and i64 %1797, %or3159, !dbg !2645
  %or3161 = or i64 %and3158, %and3160, !dbg !2645
  %add3162 = add i64 %xor3157, %or3161, !dbg !2645
  store i64 %add3162, i64* %t03146, align 8, !dbg !2645
  call void @llvm.dbg.declare(metadata i64* %t13163, metadata !2647, metadata !DIExpression()), !dbg !2645
  %1800 = load i64, i64* %g, align 8, !dbg !2645
  %1801 = load i64, i64* %d, align 8, !dbg !2645
  %shl3164 = shl i64 %1801, 50, !dbg !2645
  %1802 = load i64, i64* %d, align 8, !dbg !2645
  %shr3165 = lshr i64 %1802, 14, !dbg !2645
  %or3166 = or i64 %shl3164, %shr3165, !dbg !2645
  %1803 = load i64, i64* %d, align 8, !dbg !2645
  %shl3167 = shl i64 %1803, 46, !dbg !2645
  %1804 = load i64, i64* %d, align 8, !dbg !2645
  %shr3168 = lshr i64 %1804, 18, !dbg !2645
  %or3169 = or i64 %shl3167, %shr3168, !dbg !2645
  %1805 = load i64, i64* %d, align 8, !dbg !2645
  %shl3170 = shl i64 %1805, 23, !dbg !2645
  %1806 = load i64, i64* %d, align 8, !dbg !2645
  %shr3171 = lshr i64 %1806, 41, !dbg !2645
  %or3172 = or i64 %shl3170, %shr3171, !dbg !2645
  %xor3173 = xor i64 %or3169, %or3172, !dbg !2645
  %xor3174 = xor i64 %or3166, %xor3173, !dbg !2645
  %1807 = load i64, i64* %f, align 8, !dbg !2645
  %1808 = load i64, i64* %d, align 8, !dbg !2645
  %1809 = load i64, i64* %e, align 8, !dbg !2645
  %1810 = load i64, i64* %f, align 8, !dbg !2645
  %xor3175 = xor i64 %1809, %1810, !dbg !2645
  %and3176 = and i64 %1808, %xor3175, !dbg !2645
  %xor3177 = xor i64 %1807, %and3176, !dbg !2645
  %1811 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 49), align 8, !dbg !2645
  %arrayidx3178 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 1, !dbg !2645
  %1812 = load i64, i64* %arrayidx3178, align 8, !dbg !2645
  %arrayidx3179 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 15, !dbg !2645
  %1813 = load i64, i64* %arrayidx3179, align 8, !dbg !2645
  %shl3180 = shl i64 %1813, 45, !dbg !2645
  %arrayidx3181 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 15, !dbg !2645
  %1814 = load i64, i64* %arrayidx3181, align 8, !dbg !2645
  %shr3182 = lshr i64 %1814, 19, !dbg !2645
  %or3183 = or i64 %shl3180, %shr3182, !dbg !2645
  %arrayidx3184 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 15, !dbg !2645
  %1815 = load i64, i64* %arrayidx3184, align 8, !dbg !2645
  %shl3185 = shl i64 %1815, 3, !dbg !2645
  %arrayidx3186 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 15, !dbg !2645
  %1816 = load i64, i64* %arrayidx3186, align 8, !dbg !2645
  %shr3187 = lshr i64 %1816, 61, !dbg !2645
  %or3188 = or i64 %shl3185, %shr3187, !dbg !2645
  %arrayidx3189 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 15, !dbg !2645
  %1817 = load i64, i64* %arrayidx3189, align 8, !dbg !2645
  %shr3190 = lshr i64 %1817, 6, !dbg !2645
  %xor3191 = xor i64 %or3188, %shr3190, !dbg !2645
  %xor3192 = xor i64 %or3183, %xor3191, !dbg !2645
  %arrayidx3193 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 10, !dbg !2645
  %1818 = load i64, i64* %arrayidx3193, align 8, !dbg !2645
  %arrayidx3194 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 2, !dbg !2645
  %1819 = load i64, i64* %arrayidx3194, align 8, !dbg !2645
  %shl3195 = shl i64 %1819, 63, !dbg !2645
  %arrayidx3196 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 2, !dbg !2645
  %1820 = load i64, i64* %arrayidx3196, align 8, !dbg !2645
  %shr3197 = lshr i64 %1820, 1, !dbg !2645
  %or3198 = or i64 %shl3195, %shr3197, !dbg !2645
  %arrayidx3199 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 2, !dbg !2645
  %1821 = load i64, i64* %arrayidx3199, align 8, !dbg !2645
  %shl3200 = shl i64 %1821, 56, !dbg !2645
  %arrayidx3201 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 2, !dbg !2645
  %1822 = load i64, i64* %arrayidx3201, align 8, !dbg !2645
  %shr3202 = lshr i64 %1822, 8, !dbg !2645
  %or3203 = or i64 %shl3200, %shr3202, !dbg !2645
  %arrayidx3204 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 2, !dbg !2645
  %1823 = load i64, i64* %arrayidx3204, align 8, !dbg !2645
  %shr3205 = lshr i64 %1823, 7, !dbg !2645
  %xor3206 = xor i64 %or3203, %shr3205, !dbg !2645
  %xor3207 = xor i64 %or3198, %xor3206, !dbg !2645
  %add3208 = add i64 %1818, %xor3207, !dbg !2645
  %add3209 = add i64 %xor3192, %add3208, !dbg !2645
  %add3210 = add i64 %1812, %add3209, !dbg !2645
  %arrayidx3211 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 1, !dbg !2645
  store i64 %add3210, i64* %arrayidx3211, align 8, !dbg !2645
  %add3212 = add i64 %1811, %add3210, !dbg !2645
  %add3213 = add i64 %xor3177, %add3212, !dbg !2645
  %add3214 = add i64 %xor3174, %add3213, !dbg !2645
  %add3215 = add i64 %1800, %add3214, !dbg !2645
  store i64 %add3215, i64* %t13163, align 8, !dbg !2645
  %1824 = load i64, i64* %c, align 8, !dbg !2645
  %1825 = load i64, i64* %t13163, align 8, !dbg !2645
  %add3216 = add i64 %1824, %1825, !dbg !2645
  store i64 %add3216, i64* %c, align 8, !dbg !2645
  %1826 = load i64, i64* %t03146, align 8, !dbg !2645
  %1827 = load i64, i64* %t13163, align 8, !dbg !2645
  %add3217 = add i64 %1826, %1827, !dbg !2645
  store i64 %add3217, i64* %g, align 8, !dbg !2645
  br label %do.end.3218, !dbg !2645

do.end.3218:                                      ; preds = %do.body.3145
  br label %do.body.3219, !dbg !2648

do.body.3219:                                     ; preds = %do.end.3218
  call void @llvm.dbg.declare(metadata i64* %t03220, metadata !2649, metadata !DIExpression()), !dbg !2651
  %1828 = load i64, i64* %g, align 8, !dbg !2652
  %shl3221 = shl i64 %1828, 36, !dbg !2652
  %1829 = load i64, i64* %g, align 8, !dbg !2652
  %shr3222 = lshr i64 %1829, 28, !dbg !2652
  %or3223 = or i64 %shl3221, %shr3222, !dbg !2652
  %1830 = load i64, i64* %g, align 8, !dbg !2652
  %shl3224 = shl i64 %1830, 30, !dbg !2652
  %1831 = load i64, i64* %g, align 8, !dbg !2652
  %shr3225 = lshr i64 %1831, 34, !dbg !2652
  %or3226 = or i64 %shl3224, %shr3225, !dbg !2652
  %1832 = load i64, i64* %g, align 8, !dbg !2652
  %shl3227 = shl i64 %1832, 25, !dbg !2652
  %1833 = load i64, i64* %g, align 8, !dbg !2652
  %shr3228 = lshr i64 %1833, 39, !dbg !2652
  %or3229 = or i64 %shl3227, %shr3228, !dbg !2652
  %xor3230 = xor i64 %or3226, %or3229, !dbg !2652
  %xor3231 = xor i64 %or3223, %xor3230, !dbg !2652
  %1834 = load i64, i64* %g, align 8, !dbg !2652
  %1835 = load i64, i64* %h, align 8, !dbg !2652
  %and3232 = and i64 %1834, %1835, !dbg !2652
  %1836 = load i64, i64* %a, align 8, !dbg !2652
  %1837 = load i64, i64* %g, align 8, !dbg !2652
  %1838 = load i64, i64* %h, align 8, !dbg !2652
  %or3233 = or i64 %1837, %1838, !dbg !2652
  %and3234 = and i64 %1836, %or3233, !dbg !2652
  %or3235 = or i64 %and3232, %and3234, !dbg !2652
  %add3236 = add i64 %xor3231, %or3235, !dbg !2652
  store i64 %add3236, i64* %t03220, align 8, !dbg !2652
  call void @llvm.dbg.declare(metadata i64* %t13237, metadata !2654, metadata !DIExpression()), !dbg !2652
  %1839 = load i64, i64* %f, align 8, !dbg !2652
  %1840 = load i64, i64* %c, align 8, !dbg !2652
  %shl3238 = shl i64 %1840, 50, !dbg !2652
  %1841 = load i64, i64* %c, align 8, !dbg !2652
  %shr3239 = lshr i64 %1841, 14, !dbg !2652
  %or3240 = or i64 %shl3238, %shr3239, !dbg !2652
  %1842 = load i64, i64* %c, align 8, !dbg !2652
  %shl3241 = shl i64 %1842, 46, !dbg !2652
  %1843 = load i64, i64* %c, align 8, !dbg !2652
  %shr3242 = lshr i64 %1843, 18, !dbg !2652
  %or3243 = or i64 %shl3241, %shr3242, !dbg !2652
  %1844 = load i64, i64* %c, align 8, !dbg !2652
  %shl3244 = shl i64 %1844, 23, !dbg !2652
  %1845 = load i64, i64* %c, align 8, !dbg !2652
  %shr3245 = lshr i64 %1845, 41, !dbg !2652
  %or3246 = or i64 %shl3244, %shr3245, !dbg !2652
  %xor3247 = xor i64 %or3243, %or3246, !dbg !2652
  %xor3248 = xor i64 %or3240, %xor3247, !dbg !2652
  %1846 = load i64, i64* %e, align 8, !dbg !2652
  %1847 = load i64, i64* %c, align 8, !dbg !2652
  %1848 = load i64, i64* %d, align 8, !dbg !2652
  %1849 = load i64, i64* %e, align 8, !dbg !2652
  %xor3249 = xor i64 %1848, %1849, !dbg !2652
  %and3250 = and i64 %1847, %xor3249, !dbg !2652
  %xor3251 = xor i64 %1846, %and3250, !dbg !2652
  %1850 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 50), align 8, !dbg !2652
  %arrayidx3252 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 2, !dbg !2652
  %1851 = load i64, i64* %arrayidx3252, align 8, !dbg !2652
  %arrayidx3253 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 0, !dbg !2652
  %1852 = load i64, i64* %arrayidx3253, align 8, !dbg !2652
  %shl3254 = shl i64 %1852, 45, !dbg !2652
  %arrayidx3255 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 0, !dbg !2652
  %1853 = load i64, i64* %arrayidx3255, align 8, !dbg !2652
  %shr3256 = lshr i64 %1853, 19, !dbg !2652
  %or3257 = or i64 %shl3254, %shr3256, !dbg !2652
  %arrayidx3258 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 0, !dbg !2652
  %1854 = load i64, i64* %arrayidx3258, align 8, !dbg !2652
  %shl3259 = shl i64 %1854, 3, !dbg !2652
  %arrayidx3260 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 0, !dbg !2652
  %1855 = load i64, i64* %arrayidx3260, align 8, !dbg !2652
  %shr3261 = lshr i64 %1855, 61, !dbg !2652
  %or3262 = or i64 %shl3259, %shr3261, !dbg !2652
  %arrayidx3263 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 0, !dbg !2652
  %1856 = load i64, i64* %arrayidx3263, align 8, !dbg !2652
  %shr3264 = lshr i64 %1856, 6, !dbg !2652
  %xor3265 = xor i64 %or3262, %shr3264, !dbg !2652
  %xor3266 = xor i64 %or3257, %xor3265, !dbg !2652
  %arrayidx3267 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 11, !dbg !2652
  %1857 = load i64, i64* %arrayidx3267, align 8, !dbg !2652
  %arrayidx3268 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 3, !dbg !2652
  %1858 = load i64, i64* %arrayidx3268, align 8, !dbg !2652
  %shl3269 = shl i64 %1858, 63, !dbg !2652
  %arrayidx3270 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 3, !dbg !2652
  %1859 = load i64, i64* %arrayidx3270, align 8, !dbg !2652
  %shr3271 = lshr i64 %1859, 1, !dbg !2652
  %or3272 = or i64 %shl3269, %shr3271, !dbg !2652
  %arrayidx3273 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 3, !dbg !2652
  %1860 = load i64, i64* %arrayidx3273, align 8, !dbg !2652
  %shl3274 = shl i64 %1860, 56, !dbg !2652
  %arrayidx3275 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 3, !dbg !2652
  %1861 = load i64, i64* %arrayidx3275, align 8, !dbg !2652
  %shr3276 = lshr i64 %1861, 8, !dbg !2652
  %or3277 = or i64 %shl3274, %shr3276, !dbg !2652
  %arrayidx3278 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 3, !dbg !2652
  %1862 = load i64, i64* %arrayidx3278, align 8, !dbg !2652
  %shr3279 = lshr i64 %1862, 7, !dbg !2652
  %xor3280 = xor i64 %or3277, %shr3279, !dbg !2652
  %xor3281 = xor i64 %or3272, %xor3280, !dbg !2652
  %add3282 = add i64 %1857, %xor3281, !dbg !2652
  %add3283 = add i64 %xor3266, %add3282, !dbg !2652
  %add3284 = add i64 %1851, %add3283, !dbg !2652
  %arrayidx3285 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 2, !dbg !2652
  store i64 %add3284, i64* %arrayidx3285, align 8, !dbg !2652
  %add3286 = add i64 %1850, %add3284, !dbg !2652
  %add3287 = add i64 %xor3251, %add3286, !dbg !2652
  %add3288 = add i64 %xor3248, %add3287, !dbg !2652
  %add3289 = add i64 %1839, %add3288, !dbg !2652
  store i64 %add3289, i64* %t13237, align 8, !dbg !2652
  %1863 = load i64, i64* %b, align 8, !dbg !2652
  %1864 = load i64, i64* %t13237, align 8, !dbg !2652
  %add3290 = add i64 %1863, %1864, !dbg !2652
  store i64 %add3290, i64* %b, align 8, !dbg !2652
  %1865 = load i64, i64* %t03220, align 8, !dbg !2652
  %1866 = load i64, i64* %t13237, align 8, !dbg !2652
  %add3291 = add i64 %1865, %1866, !dbg !2652
  store i64 %add3291, i64* %f, align 8, !dbg !2652
  br label %do.end.3292, !dbg !2652

do.end.3292:                                      ; preds = %do.body.3219
  br label %do.body.3293, !dbg !2655

do.body.3293:                                     ; preds = %do.end.3292
  call void @llvm.dbg.declare(metadata i64* %t03294, metadata !2656, metadata !DIExpression()), !dbg !2658
  %1867 = load i64, i64* %f, align 8, !dbg !2659
  %shl3295 = shl i64 %1867, 36, !dbg !2659
  %1868 = load i64, i64* %f, align 8, !dbg !2659
  %shr3296 = lshr i64 %1868, 28, !dbg !2659
  %or3297 = or i64 %shl3295, %shr3296, !dbg !2659
  %1869 = load i64, i64* %f, align 8, !dbg !2659
  %shl3298 = shl i64 %1869, 30, !dbg !2659
  %1870 = load i64, i64* %f, align 8, !dbg !2659
  %shr3299 = lshr i64 %1870, 34, !dbg !2659
  %or3300 = or i64 %shl3298, %shr3299, !dbg !2659
  %1871 = load i64, i64* %f, align 8, !dbg !2659
  %shl3301 = shl i64 %1871, 25, !dbg !2659
  %1872 = load i64, i64* %f, align 8, !dbg !2659
  %shr3302 = lshr i64 %1872, 39, !dbg !2659
  %or3303 = or i64 %shl3301, %shr3302, !dbg !2659
  %xor3304 = xor i64 %or3300, %or3303, !dbg !2659
  %xor3305 = xor i64 %or3297, %xor3304, !dbg !2659
  %1873 = load i64, i64* %f, align 8, !dbg !2659
  %1874 = load i64, i64* %g, align 8, !dbg !2659
  %and3306 = and i64 %1873, %1874, !dbg !2659
  %1875 = load i64, i64* %h, align 8, !dbg !2659
  %1876 = load i64, i64* %f, align 8, !dbg !2659
  %1877 = load i64, i64* %g, align 8, !dbg !2659
  %or3307 = or i64 %1876, %1877, !dbg !2659
  %and3308 = and i64 %1875, %or3307, !dbg !2659
  %or3309 = or i64 %and3306, %and3308, !dbg !2659
  %add3310 = add i64 %xor3305, %or3309, !dbg !2659
  store i64 %add3310, i64* %t03294, align 8, !dbg !2659
  call void @llvm.dbg.declare(metadata i64* %t13311, metadata !2661, metadata !DIExpression()), !dbg !2659
  %1878 = load i64, i64* %e, align 8, !dbg !2659
  %1879 = load i64, i64* %b, align 8, !dbg !2659
  %shl3312 = shl i64 %1879, 50, !dbg !2659
  %1880 = load i64, i64* %b, align 8, !dbg !2659
  %shr3313 = lshr i64 %1880, 14, !dbg !2659
  %or3314 = or i64 %shl3312, %shr3313, !dbg !2659
  %1881 = load i64, i64* %b, align 8, !dbg !2659
  %shl3315 = shl i64 %1881, 46, !dbg !2659
  %1882 = load i64, i64* %b, align 8, !dbg !2659
  %shr3316 = lshr i64 %1882, 18, !dbg !2659
  %or3317 = or i64 %shl3315, %shr3316, !dbg !2659
  %1883 = load i64, i64* %b, align 8, !dbg !2659
  %shl3318 = shl i64 %1883, 23, !dbg !2659
  %1884 = load i64, i64* %b, align 8, !dbg !2659
  %shr3319 = lshr i64 %1884, 41, !dbg !2659
  %or3320 = or i64 %shl3318, %shr3319, !dbg !2659
  %xor3321 = xor i64 %or3317, %or3320, !dbg !2659
  %xor3322 = xor i64 %or3314, %xor3321, !dbg !2659
  %1885 = load i64, i64* %d, align 8, !dbg !2659
  %1886 = load i64, i64* %b, align 8, !dbg !2659
  %1887 = load i64, i64* %c, align 8, !dbg !2659
  %1888 = load i64, i64* %d, align 8, !dbg !2659
  %xor3323 = xor i64 %1887, %1888, !dbg !2659
  %and3324 = and i64 %1886, %xor3323, !dbg !2659
  %xor3325 = xor i64 %1885, %and3324, !dbg !2659
  %1889 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 51), align 8, !dbg !2659
  %arrayidx3326 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 3, !dbg !2659
  %1890 = load i64, i64* %arrayidx3326, align 8, !dbg !2659
  %arrayidx3327 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 1, !dbg !2659
  %1891 = load i64, i64* %arrayidx3327, align 8, !dbg !2659
  %shl3328 = shl i64 %1891, 45, !dbg !2659
  %arrayidx3329 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 1, !dbg !2659
  %1892 = load i64, i64* %arrayidx3329, align 8, !dbg !2659
  %shr3330 = lshr i64 %1892, 19, !dbg !2659
  %or3331 = or i64 %shl3328, %shr3330, !dbg !2659
  %arrayidx3332 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 1, !dbg !2659
  %1893 = load i64, i64* %arrayidx3332, align 8, !dbg !2659
  %shl3333 = shl i64 %1893, 3, !dbg !2659
  %arrayidx3334 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 1, !dbg !2659
  %1894 = load i64, i64* %arrayidx3334, align 8, !dbg !2659
  %shr3335 = lshr i64 %1894, 61, !dbg !2659
  %or3336 = or i64 %shl3333, %shr3335, !dbg !2659
  %arrayidx3337 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 1, !dbg !2659
  %1895 = load i64, i64* %arrayidx3337, align 8, !dbg !2659
  %shr3338 = lshr i64 %1895, 6, !dbg !2659
  %xor3339 = xor i64 %or3336, %shr3338, !dbg !2659
  %xor3340 = xor i64 %or3331, %xor3339, !dbg !2659
  %arrayidx3341 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 12, !dbg !2659
  %1896 = load i64, i64* %arrayidx3341, align 8, !dbg !2659
  %arrayidx3342 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 4, !dbg !2659
  %1897 = load i64, i64* %arrayidx3342, align 8, !dbg !2659
  %shl3343 = shl i64 %1897, 63, !dbg !2659
  %arrayidx3344 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 4, !dbg !2659
  %1898 = load i64, i64* %arrayidx3344, align 8, !dbg !2659
  %shr3345 = lshr i64 %1898, 1, !dbg !2659
  %or3346 = or i64 %shl3343, %shr3345, !dbg !2659
  %arrayidx3347 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 4, !dbg !2659
  %1899 = load i64, i64* %arrayidx3347, align 8, !dbg !2659
  %shl3348 = shl i64 %1899, 56, !dbg !2659
  %arrayidx3349 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 4, !dbg !2659
  %1900 = load i64, i64* %arrayidx3349, align 8, !dbg !2659
  %shr3350 = lshr i64 %1900, 8, !dbg !2659
  %or3351 = or i64 %shl3348, %shr3350, !dbg !2659
  %arrayidx3352 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 4, !dbg !2659
  %1901 = load i64, i64* %arrayidx3352, align 8, !dbg !2659
  %shr3353 = lshr i64 %1901, 7, !dbg !2659
  %xor3354 = xor i64 %or3351, %shr3353, !dbg !2659
  %xor3355 = xor i64 %or3346, %xor3354, !dbg !2659
  %add3356 = add i64 %1896, %xor3355, !dbg !2659
  %add3357 = add i64 %xor3340, %add3356, !dbg !2659
  %add3358 = add i64 %1890, %add3357, !dbg !2659
  %arrayidx3359 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 3, !dbg !2659
  store i64 %add3358, i64* %arrayidx3359, align 8, !dbg !2659
  %add3360 = add i64 %1889, %add3358, !dbg !2659
  %add3361 = add i64 %xor3325, %add3360, !dbg !2659
  %add3362 = add i64 %xor3322, %add3361, !dbg !2659
  %add3363 = add i64 %1878, %add3362, !dbg !2659
  store i64 %add3363, i64* %t13311, align 8, !dbg !2659
  %1902 = load i64, i64* %a, align 8, !dbg !2659
  %1903 = load i64, i64* %t13311, align 8, !dbg !2659
  %add3364 = add i64 %1902, %1903, !dbg !2659
  store i64 %add3364, i64* %a, align 8, !dbg !2659
  %1904 = load i64, i64* %t03294, align 8, !dbg !2659
  %1905 = load i64, i64* %t13311, align 8, !dbg !2659
  %add3365 = add i64 %1904, %1905, !dbg !2659
  store i64 %add3365, i64* %e, align 8, !dbg !2659
  br label %do.end.3366, !dbg !2659

do.end.3366:                                      ; preds = %do.body.3293
  br label %do.body.3367, !dbg !2662

do.body.3367:                                     ; preds = %do.end.3366
  call void @llvm.dbg.declare(metadata i64* %t03368, metadata !2663, metadata !DIExpression()), !dbg !2665
  %1906 = load i64, i64* %e, align 8, !dbg !2666
  %shl3369 = shl i64 %1906, 36, !dbg !2666
  %1907 = load i64, i64* %e, align 8, !dbg !2666
  %shr3370 = lshr i64 %1907, 28, !dbg !2666
  %or3371 = or i64 %shl3369, %shr3370, !dbg !2666
  %1908 = load i64, i64* %e, align 8, !dbg !2666
  %shl3372 = shl i64 %1908, 30, !dbg !2666
  %1909 = load i64, i64* %e, align 8, !dbg !2666
  %shr3373 = lshr i64 %1909, 34, !dbg !2666
  %or3374 = or i64 %shl3372, %shr3373, !dbg !2666
  %1910 = load i64, i64* %e, align 8, !dbg !2666
  %shl3375 = shl i64 %1910, 25, !dbg !2666
  %1911 = load i64, i64* %e, align 8, !dbg !2666
  %shr3376 = lshr i64 %1911, 39, !dbg !2666
  %or3377 = or i64 %shl3375, %shr3376, !dbg !2666
  %xor3378 = xor i64 %or3374, %or3377, !dbg !2666
  %xor3379 = xor i64 %or3371, %xor3378, !dbg !2666
  %1912 = load i64, i64* %e, align 8, !dbg !2666
  %1913 = load i64, i64* %f, align 8, !dbg !2666
  %and3380 = and i64 %1912, %1913, !dbg !2666
  %1914 = load i64, i64* %g, align 8, !dbg !2666
  %1915 = load i64, i64* %e, align 8, !dbg !2666
  %1916 = load i64, i64* %f, align 8, !dbg !2666
  %or3381 = or i64 %1915, %1916, !dbg !2666
  %and3382 = and i64 %1914, %or3381, !dbg !2666
  %or3383 = or i64 %and3380, %and3382, !dbg !2666
  %add3384 = add i64 %xor3379, %or3383, !dbg !2666
  store i64 %add3384, i64* %t03368, align 8, !dbg !2666
  call void @llvm.dbg.declare(metadata i64* %t13385, metadata !2668, metadata !DIExpression()), !dbg !2666
  %1917 = load i64, i64* %d, align 8, !dbg !2666
  %1918 = load i64, i64* %a, align 8, !dbg !2666
  %shl3386 = shl i64 %1918, 50, !dbg !2666
  %1919 = load i64, i64* %a, align 8, !dbg !2666
  %shr3387 = lshr i64 %1919, 14, !dbg !2666
  %or3388 = or i64 %shl3386, %shr3387, !dbg !2666
  %1920 = load i64, i64* %a, align 8, !dbg !2666
  %shl3389 = shl i64 %1920, 46, !dbg !2666
  %1921 = load i64, i64* %a, align 8, !dbg !2666
  %shr3390 = lshr i64 %1921, 18, !dbg !2666
  %or3391 = or i64 %shl3389, %shr3390, !dbg !2666
  %1922 = load i64, i64* %a, align 8, !dbg !2666
  %shl3392 = shl i64 %1922, 23, !dbg !2666
  %1923 = load i64, i64* %a, align 8, !dbg !2666
  %shr3393 = lshr i64 %1923, 41, !dbg !2666
  %or3394 = or i64 %shl3392, %shr3393, !dbg !2666
  %xor3395 = xor i64 %or3391, %or3394, !dbg !2666
  %xor3396 = xor i64 %or3388, %xor3395, !dbg !2666
  %1924 = load i64, i64* %c, align 8, !dbg !2666
  %1925 = load i64, i64* %a, align 8, !dbg !2666
  %1926 = load i64, i64* %b, align 8, !dbg !2666
  %1927 = load i64, i64* %c, align 8, !dbg !2666
  %xor3397 = xor i64 %1926, %1927, !dbg !2666
  %and3398 = and i64 %1925, %xor3397, !dbg !2666
  %xor3399 = xor i64 %1924, %and3398, !dbg !2666
  %1928 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 52), align 8, !dbg !2666
  %arrayidx3400 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 4, !dbg !2666
  %1929 = load i64, i64* %arrayidx3400, align 8, !dbg !2666
  %arrayidx3401 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 2, !dbg !2666
  %1930 = load i64, i64* %arrayidx3401, align 8, !dbg !2666
  %shl3402 = shl i64 %1930, 45, !dbg !2666
  %arrayidx3403 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 2, !dbg !2666
  %1931 = load i64, i64* %arrayidx3403, align 8, !dbg !2666
  %shr3404 = lshr i64 %1931, 19, !dbg !2666
  %or3405 = or i64 %shl3402, %shr3404, !dbg !2666
  %arrayidx3406 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 2, !dbg !2666
  %1932 = load i64, i64* %arrayidx3406, align 8, !dbg !2666
  %shl3407 = shl i64 %1932, 3, !dbg !2666
  %arrayidx3408 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 2, !dbg !2666
  %1933 = load i64, i64* %arrayidx3408, align 8, !dbg !2666
  %shr3409 = lshr i64 %1933, 61, !dbg !2666
  %or3410 = or i64 %shl3407, %shr3409, !dbg !2666
  %arrayidx3411 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 2, !dbg !2666
  %1934 = load i64, i64* %arrayidx3411, align 8, !dbg !2666
  %shr3412 = lshr i64 %1934, 6, !dbg !2666
  %xor3413 = xor i64 %or3410, %shr3412, !dbg !2666
  %xor3414 = xor i64 %or3405, %xor3413, !dbg !2666
  %arrayidx3415 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 13, !dbg !2666
  %1935 = load i64, i64* %arrayidx3415, align 8, !dbg !2666
  %arrayidx3416 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 5, !dbg !2666
  %1936 = load i64, i64* %arrayidx3416, align 8, !dbg !2666
  %shl3417 = shl i64 %1936, 63, !dbg !2666
  %arrayidx3418 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 5, !dbg !2666
  %1937 = load i64, i64* %arrayidx3418, align 8, !dbg !2666
  %shr3419 = lshr i64 %1937, 1, !dbg !2666
  %or3420 = or i64 %shl3417, %shr3419, !dbg !2666
  %arrayidx3421 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 5, !dbg !2666
  %1938 = load i64, i64* %arrayidx3421, align 8, !dbg !2666
  %shl3422 = shl i64 %1938, 56, !dbg !2666
  %arrayidx3423 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 5, !dbg !2666
  %1939 = load i64, i64* %arrayidx3423, align 8, !dbg !2666
  %shr3424 = lshr i64 %1939, 8, !dbg !2666
  %or3425 = or i64 %shl3422, %shr3424, !dbg !2666
  %arrayidx3426 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 5, !dbg !2666
  %1940 = load i64, i64* %arrayidx3426, align 8, !dbg !2666
  %shr3427 = lshr i64 %1940, 7, !dbg !2666
  %xor3428 = xor i64 %or3425, %shr3427, !dbg !2666
  %xor3429 = xor i64 %or3420, %xor3428, !dbg !2666
  %add3430 = add i64 %1935, %xor3429, !dbg !2666
  %add3431 = add i64 %xor3414, %add3430, !dbg !2666
  %add3432 = add i64 %1929, %add3431, !dbg !2666
  %arrayidx3433 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 4, !dbg !2666
  store i64 %add3432, i64* %arrayidx3433, align 8, !dbg !2666
  %add3434 = add i64 %1928, %add3432, !dbg !2666
  %add3435 = add i64 %xor3399, %add3434, !dbg !2666
  %add3436 = add i64 %xor3396, %add3435, !dbg !2666
  %add3437 = add i64 %1917, %add3436, !dbg !2666
  store i64 %add3437, i64* %t13385, align 8, !dbg !2666
  %1941 = load i64, i64* %h, align 8, !dbg !2666
  %1942 = load i64, i64* %t13385, align 8, !dbg !2666
  %add3438 = add i64 %1941, %1942, !dbg !2666
  store i64 %add3438, i64* %h, align 8, !dbg !2666
  %1943 = load i64, i64* %t03368, align 8, !dbg !2666
  %1944 = load i64, i64* %t13385, align 8, !dbg !2666
  %add3439 = add i64 %1943, %1944, !dbg !2666
  store i64 %add3439, i64* %d, align 8, !dbg !2666
  br label %do.end.3440, !dbg !2666

do.end.3440:                                      ; preds = %do.body.3367
  br label %do.body.3441, !dbg !2669

do.body.3441:                                     ; preds = %do.end.3440
  call void @llvm.dbg.declare(metadata i64* %t03442, metadata !2670, metadata !DIExpression()), !dbg !2672
  %1945 = load i64, i64* %d, align 8, !dbg !2673
  %shl3443 = shl i64 %1945, 36, !dbg !2673
  %1946 = load i64, i64* %d, align 8, !dbg !2673
  %shr3444 = lshr i64 %1946, 28, !dbg !2673
  %or3445 = or i64 %shl3443, %shr3444, !dbg !2673
  %1947 = load i64, i64* %d, align 8, !dbg !2673
  %shl3446 = shl i64 %1947, 30, !dbg !2673
  %1948 = load i64, i64* %d, align 8, !dbg !2673
  %shr3447 = lshr i64 %1948, 34, !dbg !2673
  %or3448 = or i64 %shl3446, %shr3447, !dbg !2673
  %1949 = load i64, i64* %d, align 8, !dbg !2673
  %shl3449 = shl i64 %1949, 25, !dbg !2673
  %1950 = load i64, i64* %d, align 8, !dbg !2673
  %shr3450 = lshr i64 %1950, 39, !dbg !2673
  %or3451 = or i64 %shl3449, %shr3450, !dbg !2673
  %xor3452 = xor i64 %or3448, %or3451, !dbg !2673
  %xor3453 = xor i64 %or3445, %xor3452, !dbg !2673
  %1951 = load i64, i64* %d, align 8, !dbg !2673
  %1952 = load i64, i64* %e, align 8, !dbg !2673
  %and3454 = and i64 %1951, %1952, !dbg !2673
  %1953 = load i64, i64* %f, align 8, !dbg !2673
  %1954 = load i64, i64* %d, align 8, !dbg !2673
  %1955 = load i64, i64* %e, align 8, !dbg !2673
  %or3455 = or i64 %1954, %1955, !dbg !2673
  %and3456 = and i64 %1953, %or3455, !dbg !2673
  %or3457 = or i64 %and3454, %and3456, !dbg !2673
  %add3458 = add i64 %xor3453, %or3457, !dbg !2673
  store i64 %add3458, i64* %t03442, align 8, !dbg !2673
  call void @llvm.dbg.declare(metadata i64* %t13459, metadata !2675, metadata !DIExpression()), !dbg !2673
  %1956 = load i64, i64* %c, align 8, !dbg !2673
  %1957 = load i64, i64* %h, align 8, !dbg !2673
  %shl3460 = shl i64 %1957, 50, !dbg !2673
  %1958 = load i64, i64* %h, align 8, !dbg !2673
  %shr3461 = lshr i64 %1958, 14, !dbg !2673
  %or3462 = or i64 %shl3460, %shr3461, !dbg !2673
  %1959 = load i64, i64* %h, align 8, !dbg !2673
  %shl3463 = shl i64 %1959, 46, !dbg !2673
  %1960 = load i64, i64* %h, align 8, !dbg !2673
  %shr3464 = lshr i64 %1960, 18, !dbg !2673
  %or3465 = or i64 %shl3463, %shr3464, !dbg !2673
  %1961 = load i64, i64* %h, align 8, !dbg !2673
  %shl3466 = shl i64 %1961, 23, !dbg !2673
  %1962 = load i64, i64* %h, align 8, !dbg !2673
  %shr3467 = lshr i64 %1962, 41, !dbg !2673
  %or3468 = or i64 %shl3466, %shr3467, !dbg !2673
  %xor3469 = xor i64 %or3465, %or3468, !dbg !2673
  %xor3470 = xor i64 %or3462, %xor3469, !dbg !2673
  %1963 = load i64, i64* %b, align 8, !dbg !2673
  %1964 = load i64, i64* %h, align 8, !dbg !2673
  %1965 = load i64, i64* %a, align 8, !dbg !2673
  %1966 = load i64, i64* %b, align 8, !dbg !2673
  %xor3471 = xor i64 %1965, %1966, !dbg !2673
  %and3472 = and i64 %1964, %xor3471, !dbg !2673
  %xor3473 = xor i64 %1963, %and3472, !dbg !2673
  %1967 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 53), align 8, !dbg !2673
  %arrayidx3474 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 5, !dbg !2673
  %1968 = load i64, i64* %arrayidx3474, align 8, !dbg !2673
  %arrayidx3475 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 3, !dbg !2673
  %1969 = load i64, i64* %arrayidx3475, align 8, !dbg !2673
  %shl3476 = shl i64 %1969, 45, !dbg !2673
  %arrayidx3477 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 3, !dbg !2673
  %1970 = load i64, i64* %arrayidx3477, align 8, !dbg !2673
  %shr3478 = lshr i64 %1970, 19, !dbg !2673
  %or3479 = or i64 %shl3476, %shr3478, !dbg !2673
  %arrayidx3480 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 3, !dbg !2673
  %1971 = load i64, i64* %arrayidx3480, align 8, !dbg !2673
  %shl3481 = shl i64 %1971, 3, !dbg !2673
  %arrayidx3482 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 3, !dbg !2673
  %1972 = load i64, i64* %arrayidx3482, align 8, !dbg !2673
  %shr3483 = lshr i64 %1972, 61, !dbg !2673
  %or3484 = or i64 %shl3481, %shr3483, !dbg !2673
  %arrayidx3485 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 3, !dbg !2673
  %1973 = load i64, i64* %arrayidx3485, align 8, !dbg !2673
  %shr3486 = lshr i64 %1973, 6, !dbg !2673
  %xor3487 = xor i64 %or3484, %shr3486, !dbg !2673
  %xor3488 = xor i64 %or3479, %xor3487, !dbg !2673
  %arrayidx3489 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 14, !dbg !2673
  %1974 = load i64, i64* %arrayidx3489, align 8, !dbg !2673
  %arrayidx3490 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 6, !dbg !2673
  %1975 = load i64, i64* %arrayidx3490, align 8, !dbg !2673
  %shl3491 = shl i64 %1975, 63, !dbg !2673
  %arrayidx3492 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 6, !dbg !2673
  %1976 = load i64, i64* %arrayidx3492, align 8, !dbg !2673
  %shr3493 = lshr i64 %1976, 1, !dbg !2673
  %or3494 = or i64 %shl3491, %shr3493, !dbg !2673
  %arrayidx3495 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 6, !dbg !2673
  %1977 = load i64, i64* %arrayidx3495, align 8, !dbg !2673
  %shl3496 = shl i64 %1977, 56, !dbg !2673
  %arrayidx3497 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 6, !dbg !2673
  %1978 = load i64, i64* %arrayidx3497, align 8, !dbg !2673
  %shr3498 = lshr i64 %1978, 8, !dbg !2673
  %or3499 = or i64 %shl3496, %shr3498, !dbg !2673
  %arrayidx3500 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 6, !dbg !2673
  %1979 = load i64, i64* %arrayidx3500, align 8, !dbg !2673
  %shr3501 = lshr i64 %1979, 7, !dbg !2673
  %xor3502 = xor i64 %or3499, %shr3501, !dbg !2673
  %xor3503 = xor i64 %or3494, %xor3502, !dbg !2673
  %add3504 = add i64 %1974, %xor3503, !dbg !2673
  %add3505 = add i64 %xor3488, %add3504, !dbg !2673
  %add3506 = add i64 %1968, %add3505, !dbg !2673
  %arrayidx3507 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 5, !dbg !2673
  store i64 %add3506, i64* %arrayidx3507, align 8, !dbg !2673
  %add3508 = add i64 %1967, %add3506, !dbg !2673
  %add3509 = add i64 %xor3473, %add3508, !dbg !2673
  %add3510 = add i64 %xor3470, %add3509, !dbg !2673
  %add3511 = add i64 %1956, %add3510, !dbg !2673
  store i64 %add3511, i64* %t13459, align 8, !dbg !2673
  %1980 = load i64, i64* %g, align 8, !dbg !2673
  %1981 = load i64, i64* %t13459, align 8, !dbg !2673
  %add3512 = add i64 %1980, %1981, !dbg !2673
  store i64 %add3512, i64* %g, align 8, !dbg !2673
  %1982 = load i64, i64* %t03442, align 8, !dbg !2673
  %1983 = load i64, i64* %t13459, align 8, !dbg !2673
  %add3513 = add i64 %1982, %1983, !dbg !2673
  store i64 %add3513, i64* %c, align 8, !dbg !2673
  br label %do.end.3514, !dbg !2673

do.end.3514:                                      ; preds = %do.body.3441
  br label %do.body.3515, !dbg !2676

do.body.3515:                                     ; preds = %do.end.3514
  call void @llvm.dbg.declare(metadata i64* %t03516, metadata !2677, metadata !DIExpression()), !dbg !2679
  %1984 = load i64, i64* %c, align 8, !dbg !2680
  %shl3517 = shl i64 %1984, 36, !dbg !2680
  %1985 = load i64, i64* %c, align 8, !dbg !2680
  %shr3518 = lshr i64 %1985, 28, !dbg !2680
  %or3519 = or i64 %shl3517, %shr3518, !dbg !2680
  %1986 = load i64, i64* %c, align 8, !dbg !2680
  %shl3520 = shl i64 %1986, 30, !dbg !2680
  %1987 = load i64, i64* %c, align 8, !dbg !2680
  %shr3521 = lshr i64 %1987, 34, !dbg !2680
  %or3522 = or i64 %shl3520, %shr3521, !dbg !2680
  %1988 = load i64, i64* %c, align 8, !dbg !2680
  %shl3523 = shl i64 %1988, 25, !dbg !2680
  %1989 = load i64, i64* %c, align 8, !dbg !2680
  %shr3524 = lshr i64 %1989, 39, !dbg !2680
  %or3525 = or i64 %shl3523, %shr3524, !dbg !2680
  %xor3526 = xor i64 %or3522, %or3525, !dbg !2680
  %xor3527 = xor i64 %or3519, %xor3526, !dbg !2680
  %1990 = load i64, i64* %c, align 8, !dbg !2680
  %1991 = load i64, i64* %d, align 8, !dbg !2680
  %and3528 = and i64 %1990, %1991, !dbg !2680
  %1992 = load i64, i64* %e, align 8, !dbg !2680
  %1993 = load i64, i64* %c, align 8, !dbg !2680
  %1994 = load i64, i64* %d, align 8, !dbg !2680
  %or3529 = or i64 %1993, %1994, !dbg !2680
  %and3530 = and i64 %1992, %or3529, !dbg !2680
  %or3531 = or i64 %and3528, %and3530, !dbg !2680
  %add3532 = add i64 %xor3527, %or3531, !dbg !2680
  store i64 %add3532, i64* %t03516, align 8, !dbg !2680
  call void @llvm.dbg.declare(metadata i64* %t13533, metadata !2682, metadata !DIExpression()), !dbg !2680
  %1995 = load i64, i64* %b, align 8, !dbg !2680
  %1996 = load i64, i64* %g, align 8, !dbg !2680
  %shl3534 = shl i64 %1996, 50, !dbg !2680
  %1997 = load i64, i64* %g, align 8, !dbg !2680
  %shr3535 = lshr i64 %1997, 14, !dbg !2680
  %or3536 = or i64 %shl3534, %shr3535, !dbg !2680
  %1998 = load i64, i64* %g, align 8, !dbg !2680
  %shl3537 = shl i64 %1998, 46, !dbg !2680
  %1999 = load i64, i64* %g, align 8, !dbg !2680
  %shr3538 = lshr i64 %1999, 18, !dbg !2680
  %or3539 = or i64 %shl3537, %shr3538, !dbg !2680
  %2000 = load i64, i64* %g, align 8, !dbg !2680
  %shl3540 = shl i64 %2000, 23, !dbg !2680
  %2001 = load i64, i64* %g, align 8, !dbg !2680
  %shr3541 = lshr i64 %2001, 41, !dbg !2680
  %or3542 = or i64 %shl3540, %shr3541, !dbg !2680
  %xor3543 = xor i64 %or3539, %or3542, !dbg !2680
  %xor3544 = xor i64 %or3536, %xor3543, !dbg !2680
  %2002 = load i64, i64* %a, align 8, !dbg !2680
  %2003 = load i64, i64* %g, align 8, !dbg !2680
  %2004 = load i64, i64* %h, align 8, !dbg !2680
  %2005 = load i64, i64* %a, align 8, !dbg !2680
  %xor3545 = xor i64 %2004, %2005, !dbg !2680
  %and3546 = and i64 %2003, %xor3545, !dbg !2680
  %xor3547 = xor i64 %2002, %and3546, !dbg !2680
  %2006 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 54), align 8, !dbg !2680
  %arrayidx3548 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 6, !dbg !2680
  %2007 = load i64, i64* %arrayidx3548, align 8, !dbg !2680
  %arrayidx3549 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 4, !dbg !2680
  %2008 = load i64, i64* %arrayidx3549, align 8, !dbg !2680
  %shl3550 = shl i64 %2008, 45, !dbg !2680
  %arrayidx3551 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 4, !dbg !2680
  %2009 = load i64, i64* %arrayidx3551, align 8, !dbg !2680
  %shr3552 = lshr i64 %2009, 19, !dbg !2680
  %or3553 = or i64 %shl3550, %shr3552, !dbg !2680
  %arrayidx3554 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 4, !dbg !2680
  %2010 = load i64, i64* %arrayidx3554, align 8, !dbg !2680
  %shl3555 = shl i64 %2010, 3, !dbg !2680
  %arrayidx3556 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 4, !dbg !2680
  %2011 = load i64, i64* %arrayidx3556, align 8, !dbg !2680
  %shr3557 = lshr i64 %2011, 61, !dbg !2680
  %or3558 = or i64 %shl3555, %shr3557, !dbg !2680
  %arrayidx3559 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 4, !dbg !2680
  %2012 = load i64, i64* %arrayidx3559, align 8, !dbg !2680
  %shr3560 = lshr i64 %2012, 6, !dbg !2680
  %xor3561 = xor i64 %or3558, %shr3560, !dbg !2680
  %xor3562 = xor i64 %or3553, %xor3561, !dbg !2680
  %arrayidx3563 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 15, !dbg !2680
  %2013 = load i64, i64* %arrayidx3563, align 8, !dbg !2680
  %arrayidx3564 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 7, !dbg !2680
  %2014 = load i64, i64* %arrayidx3564, align 8, !dbg !2680
  %shl3565 = shl i64 %2014, 63, !dbg !2680
  %arrayidx3566 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 7, !dbg !2680
  %2015 = load i64, i64* %arrayidx3566, align 8, !dbg !2680
  %shr3567 = lshr i64 %2015, 1, !dbg !2680
  %or3568 = or i64 %shl3565, %shr3567, !dbg !2680
  %arrayidx3569 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 7, !dbg !2680
  %2016 = load i64, i64* %arrayidx3569, align 8, !dbg !2680
  %shl3570 = shl i64 %2016, 56, !dbg !2680
  %arrayidx3571 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 7, !dbg !2680
  %2017 = load i64, i64* %arrayidx3571, align 8, !dbg !2680
  %shr3572 = lshr i64 %2017, 8, !dbg !2680
  %or3573 = or i64 %shl3570, %shr3572, !dbg !2680
  %arrayidx3574 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 7, !dbg !2680
  %2018 = load i64, i64* %arrayidx3574, align 8, !dbg !2680
  %shr3575 = lshr i64 %2018, 7, !dbg !2680
  %xor3576 = xor i64 %or3573, %shr3575, !dbg !2680
  %xor3577 = xor i64 %or3568, %xor3576, !dbg !2680
  %add3578 = add i64 %2013, %xor3577, !dbg !2680
  %add3579 = add i64 %xor3562, %add3578, !dbg !2680
  %add3580 = add i64 %2007, %add3579, !dbg !2680
  %arrayidx3581 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 6, !dbg !2680
  store i64 %add3580, i64* %arrayidx3581, align 8, !dbg !2680
  %add3582 = add i64 %2006, %add3580, !dbg !2680
  %add3583 = add i64 %xor3547, %add3582, !dbg !2680
  %add3584 = add i64 %xor3544, %add3583, !dbg !2680
  %add3585 = add i64 %1995, %add3584, !dbg !2680
  store i64 %add3585, i64* %t13533, align 8, !dbg !2680
  %2019 = load i64, i64* %f, align 8, !dbg !2680
  %2020 = load i64, i64* %t13533, align 8, !dbg !2680
  %add3586 = add i64 %2019, %2020, !dbg !2680
  store i64 %add3586, i64* %f, align 8, !dbg !2680
  %2021 = load i64, i64* %t03516, align 8, !dbg !2680
  %2022 = load i64, i64* %t13533, align 8, !dbg !2680
  %add3587 = add i64 %2021, %2022, !dbg !2680
  store i64 %add3587, i64* %b, align 8, !dbg !2680
  br label %do.end.3588, !dbg !2680

do.end.3588:                                      ; preds = %do.body.3515
  br label %do.body.3589, !dbg !2683

do.body.3589:                                     ; preds = %do.end.3588
  call void @llvm.dbg.declare(metadata i64* %t03590, metadata !2684, metadata !DIExpression()), !dbg !2686
  %2023 = load i64, i64* %b, align 8, !dbg !2687
  %shl3591 = shl i64 %2023, 36, !dbg !2687
  %2024 = load i64, i64* %b, align 8, !dbg !2687
  %shr3592 = lshr i64 %2024, 28, !dbg !2687
  %or3593 = or i64 %shl3591, %shr3592, !dbg !2687
  %2025 = load i64, i64* %b, align 8, !dbg !2687
  %shl3594 = shl i64 %2025, 30, !dbg !2687
  %2026 = load i64, i64* %b, align 8, !dbg !2687
  %shr3595 = lshr i64 %2026, 34, !dbg !2687
  %or3596 = or i64 %shl3594, %shr3595, !dbg !2687
  %2027 = load i64, i64* %b, align 8, !dbg !2687
  %shl3597 = shl i64 %2027, 25, !dbg !2687
  %2028 = load i64, i64* %b, align 8, !dbg !2687
  %shr3598 = lshr i64 %2028, 39, !dbg !2687
  %or3599 = or i64 %shl3597, %shr3598, !dbg !2687
  %xor3600 = xor i64 %or3596, %or3599, !dbg !2687
  %xor3601 = xor i64 %or3593, %xor3600, !dbg !2687
  %2029 = load i64, i64* %b, align 8, !dbg !2687
  %2030 = load i64, i64* %c, align 8, !dbg !2687
  %and3602 = and i64 %2029, %2030, !dbg !2687
  %2031 = load i64, i64* %d, align 8, !dbg !2687
  %2032 = load i64, i64* %b, align 8, !dbg !2687
  %2033 = load i64, i64* %c, align 8, !dbg !2687
  %or3603 = or i64 %2032, %2033, !dbg !2687
  %and3604 = and i64 %2031, %or3603, !dbg !2687
  %or3605 = or i64 %and3602, %and3604, !dbg !2687
  %add3606 = add i64 %xor3601, %or3605, !dbg !2687
  store i64 %add3606, i64* %t03590, align 8, !dbg !2687
  call void @llvm.dbg.declare(metadata i64* %t13607, metadata !2689, metadata !DIExpression()), !dbg !2687
  %2034 = load i64, i64* %a, align 8, !dbg !2687
  %2035 = load i64, i64* %f, align 8, !dbg !2687
  %shl3608 = shl i64 %2035, 50, !dbg !2687
  %2036 = load i64, i64* %f, align 8, !dbg !2687
  %shr3609 = lshr i64 %2036, 14, !dbg !2687
  %or3610 = or i64 %shl3608, %shr3609, !dbg !2687
  %2037 = load i64, i64* %f, align 8, !dbg !2687
  %shl3611 = shl i64 %2037, 46, !dbg !2687
  %2038 = load i64, i64* %f, align 8, !dbg !2687
  %shr3612 = lshr i64 %2038, 18, !dbg !2687
  %or3613 = or i64 %shl3611, %shr3612, !dbg !2687
  %2039 = load i64, i64* %f, align 8, !dbg !2687
  %shl3614 = shl i64 %2039, 23, !dbg !2687
  %2040 = load i64, i64* %f, align 8, !dbg !2687
  %shr3615 = lshr i64 %2040, 41, !dbg !2687
  %or3616 = or i64 %shl3614, %shr3615, !dbg !2687
  %xor3617 = xor i64 %or3613, %or3616, !dbg !2687
  %xor3618 = xor i64 %or3610, %xor3617, !dbg !2687
  %2041 = load i64, i64* %h, align 8, !dbg !2687
  %2042 = load i64, i64* %f, align 8, !dbg !2687
  %2043 = load i64, i64* %g, align 8, !dbg !2687
  %2044 = load i64, i64* %h, align 8, !dbg !2687
  %xor3619 = xor i64 %2043, %2044, !dbg !2687
  %and3620 = and i64 %2042, %xor3619, !dbg !2687
  %xor3621 = xor i64 %2041, %and3620, !dbg !2687
  %2045 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 55), align 8, !dbg !2687
  %arrayidx3622 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 7, !dbg !2687
  %2046 = load i64, i64* %arrayidx3622, align 8, !dbg !2687
  %arrayidx3623 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 5, !dbg !2687
  %2047 = load i64, i64* %arrayidx3623, align 8, !dbg !2687
  %shl3624 = shl i64 %2047, 45, !dbg !2687
  %arrayidx3625 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 5, !dbg !2687
  %2048 = load i64, i64* %arrayidx3625, align 8, !dbg !2687
  %shr3626 = lshr i64 %2048, 19, !dbg !2687
  %or3627 = or i64 %shl3624, %shr3626, !dbg !2687
  %arrayidx3628 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 5, !dbg !2687
  %2049 = load i64, i64* %arrayidx3628, align 8, !dbg !2687
  %shl3629 = shl i64 %2049, 3, !dbg !2687
  %arrayidx3630 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 5, !dbg !2687
  %2050 = load i64, i64* %arrayidx3630, align 8, !dbg !2687
  %shr3631 = lshr i64 %2050, 61, !dbg !2687
  %or3632 = or i64 %shl3629, %shr3631, !dbg !2687
  %arrayidx3633 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 5, !dbg !2687
  %2051 = load i64, i64* %arrayidx3633, align 8, !dbg !2687
  %shr3634 = lshr i64 %2051, 6, !dbg !2687
  %xor3635 = xor i64 %or3632, %shr3634, !dbg !2687
  %xor3636 = xor i64 %or3627, %xor3635, !dbg !2687
  %arrayidx3637 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 0, !dbg !2687
  %2052 = load i64, i64* %arrayidx3637, align 8, !dbg !2687
  %arrayidx3638 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 8, !dbg !2687
  %2053 = load i64, i64* %arrayidx3638, align 8, !dbg !2687
  %shl3639 = shl i64 %2053, 63, !dbg !2687
  %arrayidx3640 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 8, !dbg !2687
  %2054 = load i64, i64* %arrayidx3640, align 8, !dbg !2687
  %shr3641 = lshr i64 %2054, 1, !dbg !2687
  %or3642 = or i64 %shl3639, %shr3641, !dbg !2687
  %arrayidx3643 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 8, !dbg !2687
  %2055 = load i64, i64* %arrayidx3643, align 8, !dbg !2687
  %shl3644 = shl i64 %2055, 56, !dbg !2687
  %arrayidx3645 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 8, !dbg !2687
  %2056 = load i64, i64* %arrayidx3645, align 8, !dbg !2687
  %shr3646 = lshr i64 %2056, 8, !dbg !2687
  %or3647 = or i64 %shl3644, %shr3646, !dbg !2687
  %arrayidx3648 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 8, !dbg !2687
  %2057 = load i64, i64* %arrayidx3648, align 8, !dbg !2687
  %shr3649 = lshr i64 %2057, 7, !dbg !2687
  %xor3650 = xor i64 %or3647, %shr3649, !dbg !2687
  %xor3651 = xor i64 %or3642, %xor3650, !dbg !2687
  %add3652 = add i64 %2052, %xor3651, !dbg !2687
  %add3653 = add i64 %xor3636, %add3652, !dbg !2687
  %add3654 = add i64 %2046, %add3653, !dbg !2687
  %arrayidx3655 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 7, !dbg !2687
  store i64 %add3654, i64* %arrayidx3655, align 8, !dbg !2687
  %add3656 = add i64 %2045, %add3654, !dbg !2687
  %add3657 = add i64 %xor3621, %add3656, !dbg !2687
  %add3658 = add i64 %xor3618, %add3657, !dbg !2687
  %add3659 = add i64 %2034, %add3658, !dbg !2687
  store i64 %add3659, i64* %t13607, align 8, !dbg !2687
  %2058 = load i64, i64* %e, align 8, !dbg !2687
  %2059 = load i64, i64* %t13607, align 8, !dbg !2687
  %add3660 = add i64 %2058, %2059, !dbg !2687
  store i64 %add3660, i64* %e, align 8, !dbg !2687
  %2060 = load i64, i64* %t03590, align 8, !dbg !2687
  %2061 = load i64, i64* %t13607, align 8, !dbg !2687
  %add3661 = add i64 %2060, %2061, !dbg !2687
  store i64 %add3661, i64* %a, align 8, !dbg !2687
  br label %do.end.3662, !dbg !2687

do.end.3662:                                      ; preds = %do.body.3589
  br label %do.body.3663, !dbg !2690

do.body.3663:                                     ; preds = %do.end.3662
  call void @llvm.dbg.declare(metadata i64* %t03664, metadata !2691, metadata !DIExpression()), !dbg !2693
  %2062 = load i64, i64* %a, align 8, !dbg !2694
  %shl3665 = shl i64 %2062, 36, !dbg !2694
  %2063 = load i64, i64* %a, align 8, !dbg !2694
  %shr3666 = lshr i64 %2063, 28, !dbg !2694
  %or3667 = or i64 %shl3665, %shr3666, !dbg !2694
  %2064 = load i64, i64* %a, align 8, !dbg !2694
  %shl3668 = shl i64 %2064, 30, !dbg !2694
  %2065 = load i64, i64* %a, align 8, !dbg !2694
  %shr3669 = lshr i64 %2065, 34, !dbg !2694
  %or3670 = or i64 %shl3668, %shr3669, !dbg !2694
  %2066 = load i64, i64* %a, align 8, !dbg !2694
  %shl3671 = shl i64 %2066, 25, !dbg !2694
  %2067 = load i64, i64* %a, align 8, !dbg !2694
  %shr3672 = lshr i64 %2067, 39, !dbg !2694
  %or3673 = or i64 %shl3671, %shr3672, !dbg !2694
  %xor3674 = xor i64 %or3670, %or3673, !dbg !2694
  %xor3675 = xor i64 %or3667, %xor3674, !dbg !2694
  %2068 = load i64, i64* %a, align 8, !dbg !2694
  %2069 = load i64, i64* %b, align 8, !dbg !2694
  %and3676 = and i64 %2068, %2069, !dbg !2694
  %2070 = load i64, i64* %c, align 8, !dbg !2694
  %2071 = load i64, i64* %a, align 8, !dbg !2694
  %2072 = load i64, i64* %b, align 8, !dbg !2694
  %or3677 = or i64 %2071, %2072, !dbg !2694
  %and3678 = and i64 %2070, %or3677, !dbg !2694
  %or3679 = or i64 %and3676, %and3678, !dbg !2694
  %add3680 = add i64 %xor3675, %or3679, !dbg !2694
  store i64 %add3680, i64* %t03664, align 8, !dbg !2694
  call void @llvm.dbg.declare(metadata i64* %t13681, metadata !2696, metadata !DIExpression()), !dbg !2694
  %2073 = load i64, i64* %h, align 8, !dbg !2694
  %2074 = load i64, i64* %e, align 8, !dbg !2694
  %shl3682 = shl i64 %2074, 50, !dbg !2694
  %2075 = load i64, i64* %e, align 8, !dbg !2694
  %shr3683 = lshr i64 %2075, 14, !dbg !2694
  %or3684 = or i64 %shl3682, %shr3683, !dbg !2694
  %2076 = load i64, i64* %e, align 8, !dbg !2694
  %shl3685 = shl i64 %2076, 46, !dbg !2694
  %2077 = load i64, i64* %e, align 8, !dbg !2694
  %shr3686 = lshr i64 %2077, 18, !dbg !2694
  %or3687 = or i64 %shl3685, %shr3686, !dbg !2694
  %2078 = load i64, i64* %e, align 8, !dbg !2694
  %shl3688 = shl i64 %2078, 23, !dbg !2694
  %2079 = load i64, i64* %e, align 8, !dbg !2694
  %shr3689 = lshr i64 %2079, 41, !dbg !2694
  %or3690 = or i64 %shl3688, %shr3689, !dbg !2694
  %xor3691 = xor i64 %or3687, %or3690, !dbg !2694
  %xor3692 = xor i64 %or3684, %xor3691, !dbg !2694
  %2080 = load i64, i64* %g, align 8, !dbg !2694
  %2081 = load i64, i64* %e, align 8, !dbg !2694
  %2082 = load i64, i64* %f, align 8, !dbg !2694
  %2083 = load i64, i64* %g, align 8, !dbg !2694
  %xor3693 = xor i64 %2082, %2083, !dbg !2694
  %and3694 = and i64 %2081, %xor3693, !dbg !2694
  %xor3695 = xor i64 %2080, %and3694, !dbg !2694
  %2084 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 56), align 8, !dbg !2694
  %arrayidx3696 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 8, !dbg !2694
  %2085 = load i64, i64* %arrayidx3696, align 8, !dbg !2694
  %arrayidx3697 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 6, !dbg !2694
  %2086 = load i64, i64* %arrayidx3697, align 8, !dbg !2694
  %shl3698 = shl i64 %2086, 45, !dbg !2694
  %arrayidx3699 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 6, !dbg !2694
  %2087 = load i64, i64* %arrayidx3699, align 8, !dbg !2694
  %shr3700 = lshr i64 %2087, 19, !dbg !2694
  %or3701 = or i64 %shl3698, %shr3700, !dbg !2694
  %arrayidx3702 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 6, !dbg !2694
  %2088 = load i64, i64* %arrayidx3702, align 8, !dbg !2694
  %shl3703 = shl i64 %2088, 3, !dbg !2694
  %arrayidx3704 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 6, !dbg !2694
  %2089 = load i64, i64* %arrayidx3704, align 8, !dbg !2694
  %shr3705 = lshr i64 %2089, 61, !dbg !2694
  %or3706 = or i64 %shl3703, %shr3705, !dbg !2694
  %arrayidx3707 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 6, !dbg !2694
  %2090 = load i64, i64* %arrayidx3707, align 8, !dbg !2694
  %shr3708 = lshr i64 %2090, 6, !dbg !2694
  %xor3709 = xor i64 %or3706, %shr3708, !dbg !2694
  %xor3710 = xor i64 %or3701, %xor3709, !dbg !2694
  %arrayidx3711 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 1, !dbg !2694
  %2091 = load i64, i64* %arrayidx3711, align 8, !dbg !2694
  %arrayidx3712 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 9, !dbg !2694
  %2092 = load i64, i64* %arrayidx3712, align 8, !dbg !2694
  %shl3713 = shl i64 %2092, 63, !dbg !2694
  %arrayidx3714 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 9, !dbg !2694
  %2093 = load i64, i64* %arrayidx3714, align 8, !dbg !2694
  %shr3715 = lshr i64 %2093, 1, !dbg !2694
  %or3716 = or i64 %shl3713, %shr3715, !dbg !2694
  %arrayidx3717 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 9, !dbg !2694
  %2094 = load i64, i64* %arrayidx3717, align 8, !dbg !2694
  %shl3718 = shl i64 %2094, 56, !dbg !2694
  %arrayidx3719 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 9, !dbg !2694
  %2095 = load i64, i64* %arrayidx3719, align 8, !dbg !2694
  %shr3720 = lshr i64 %2095, 8, !dbg !2694
  %or3721 = or i64 %shl3718, %shr3720, !dbg !2694
  %arrayidx3722 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 9, !dbg !2694
  %2096 = load i64, i64* %arrayidx3722, align 8, !dbg !2694
  %shr3723 = lshr i64 %2096, 7, !dbg !2694
  %xor3724 = xor i64 %or3721, %shr3723, !dbg !2694
  %xor3725 = xor i64 %or3716, %xor3724, !dbg !2694
  %add3726 = add i64 %2091, %xor3725, !dbg !2694
  %add3727 = add i64 %xor3710, %add3726, !dbg !2694
  %add3728 = add i64 %2085, %add3727, !dbg !2694
  %arrayidx3729 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 8, !dbg !2694
  store i64 %add3728, i64* %arrayidx3729, align 8, !dbg !2694
  %add3730 = add i64 %2084, %add3728, !dbg !2694
  %add3731 = add i64 %xor3695, %add3730, !dbg !2694
  %add3732 = add i64 %xor3692, %add3731, !dbg !2694
  %add3733 = add i64 %2073, %add3732, !dbg !2694
  store i64 %add3733, i64* %t13681, align 8, !dbg !2694
  %2097 = load i64, i64* %d, align 8, !dbg !2694
  %2098 = load i64, i64* %t13681, align 8, !dbg !2694
  %add3734 = add i64 %2097, %2098, !dbg !2694
  store i64 %add3734, i64* %d, align 8, !dbg !2694
  %2099 = load i64, i64* %t03664, align 8, !dbg !2694
  %2100 = load i64, i64* %t13681, align 8, !dbg !2694
  %add3735 = add i64 %2099, %2100, !dbg !2694
  store i64 %add3735, i64* %h, align 8, !dbg !2694
  br label %do.end.3736, !dbg !2694

do.end.3736:                                      ; preds = %do.body.3663
  br label %do.body.3737, !dbg !2697

do.body.3737:                                     ; preds = %do.end.3736
  call void @llvm.dbg.declare(metadata i64* %t03738, metadata !2698, metadata !DIExpression()), !dbg !2700
  %2101 = load i64, i64* %h, align 8, !dbg !2701
  %shl3739 = shl i64 %2101, 36, !dbg !2701
  %2102 = load i64, i64* %h, align 8, !dbg !2701
  %shr3740 = lshr i64 %2102, 28, !dbg !2701
  %or3741 = or i64 %shl3739, %shr3740, !dbg !2701
  %2103 = load i64, i64* %h, align 8, !dbg !2701
  %shl3742 = shl i64 %2103, 30, !dbg !2701
  %2104 = load i64, i64* %h, align 8, !dbg !2701
  %shr3743 = lshr i64 %2104, 34, !dbg !2701
  %or3744 = or i64 %shl3742, %shr3743, !dbg !2701
  %2105 = load i64, i64* %h, align 8, !dbg !2701
  %shl3745 = shl i64 %2105, 25, !dbg !2701
  %2106 = load i64, i64* %h, align 8, !dbg !2701
  %shr3746 = lshr i64 %2106, 39, !dbg !2701
  %or3747 = or i64 %shl3745, %shr3746, !dbg !2701
  %xor3748 = xor i64 %or3744, %or3747, !dbg !2701
  %xor3749 = xor i64 %or3741, %xor3748, !dbg !2701
  %2107 = load i64, i64* %h, align 8, !dbg !2701
  %2108 = load i64, i64* %a, align 8, !dbg !2701
  %and3750 = and i64 %2107, %2108, !dbg !2701
  %2109 = load i64, i64* %b, align 8, !dbg !2701
  %2110 = load i64, i64* %h, align 8, !dbg !2701
  %2111 = load i64, i64* %a, align 8, !dbg !2701
  %or3751 = or i64 %2110, %2111, !dbg !2701
  %and3752 = and i64 %2109, %or3751, !dbg !2701
  %or3753 = or i64 %and3750, %and3752, !dbg !2701
  %add3754 = add i64 %xor3749, %or3753, !dbg !2701
  store i64 %add3754, i64* %t03738, align 8, !dbg !2701
  call void @llvm.dbg.declare(metadata i64* %t13755, metadata !2703, metadata !DIExpression()), !dbg !2701
  %2112 = load i64, i64* %g, align 8, !dbg !2701
  %2113 = load i64, i64* %d, align 8, !dbg !2701
  %shl3756 = shl i64 %2113, 50, !dbg !2701
  %2114 = load i64, i64* %d, align 8, !dbg !2701
  %shr3757 = lshr i64 %2114, 14, !dbg !2701
  %or3758 = or i64 %shl3756, %shr3757, !dbg !2701
  %2115 = load i64, i64* %d, align 8, !dbg !2701
  %shl3759 = shl i64 %2115, 46, !dbg !2701
  %2116 = load i64, i64* %d, align 8, !dbg !2701
  %shr3760 = lshr i64 %2116, 18, !dbg !2701
  %or3761 = or i64 %shl3759, %shr3760, !dbg !2701
  %2117 = load i64, i64* %d, align 8, !dbg !2701
  %shl3762 = shl i64 %2117, 23, !dbg !2701
  %2118 = load i64, i64* %d, align 8, !dbg !2701
  %shr3763 = lshr i64 %2118, 41, !dbg !2701
  %or3764 = or i64 %shl3762, %shr3763, !dbg !2701
  %xor3765 = xor i64 %or3761, %or3764, !dbg !2701
  %xor3766 = xor i64 %or3758, %xor3765, !dbg !2701
  %2119 = load i64, i64* %f, align 8, !dbg !2701
  %2120 = load i64, i64* %d, align 8, !dbg !2701
  %2121 = load i64, i64* %e, align 8, !dbg !2701
  %2122 = load i64, i64* %f, align 8, !dbg !2701
  %xor3767 = xor i64 %2121, %2122, !dbg !2701
  %and3768 = and i64 %2120, %xor3767, !dbg !2701
  %xor3769 = xor i64 %2119, %and3768, !dbg !2701
  %2123 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 57), align 8, !dbg !2701
  %arrayidx3770 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 9, !dbg !2701
  %2124 = load i64, i64* %arrayidx3770, align 8, !dbg !2701
  %arrayidx3771 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 7, !dbg !2701
  %2125 = load i64, i64* %arrayidx3771, align 8, !dbg !2701
  %shl3772 = shl i64 %2125, 45, !dbg !2701
  %arrayidx3773 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 7, !dbg !2701
  %2126 = load i64, i64* %arrayidx3773, align 8, !dbg !2701
  %shr3774 = lshr i64 %2126, 19, !dbg !2701
  %or3775 = or i64 %shl3772, %shr3774, !dbg !2701
  %arrayidx3776 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 7, !dbg !2701
  %2127 = load i64, i64* %arrayidx3776, align 8, !dbg !2701
  %shl3777 = shl i64 %2127, 3, !dbg !2701
  %arrayidx3778 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 7, !dbg !2701
  %2128 = load i64, i64* %arrayidx3778, align 8, !dbg !2701
  %shr3779 = lshr i64 %2128, 61, !dbg !2701
  %or3780 = or i64 %shl3777, %shr3779, !dbg !2701
  %arrayidx3781 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 7, !dbg !2701
  %2129 = load i64, i64* %arrayidx3781, align 8, !dbg !2701
  %shr3782 = lshr i64 %2129, 6, !dbg !2701
  %xor3783 = xor i64 %or3780, %shr3782, !dbg !2701
  %xor3784 = xor i64 %or3775, %xor3783, !dbg !2701
  %arrayidx3785 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 2, !dbg !2701
  %2130 = load i64, i64* %arrayidx3785, align 8, !dbg !2701
  %arrayidx3786 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 10, !dbg !2701
  %2131 = load i64, i64* %arrayidx3786, align 8, !dbg !2701
  %shl3787 = shl i64 %2131, 63, !dbg !2701
  %arrayidx3788 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 10, !dbg !2701
  %2132 = load i64, i64* %arrayidx3788, align 8, !dbg !2701
  %shr3789 = lshr i64 %2132, 1, !dbg !2701
  %or3790 = or i64 %shl3787, %shr3789, !dbg !2701
  %arrayidx3791 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 10, !dbg !2701
  %2133 = load i64, i64* %arrayidx3791, align 8, !dbg !2701
  %shl3792 = shl i64 %2133, 56, !dbg !2701
  %arrayidx3793 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 10, !dbg !2701
  %2134 = load i64, i64* %arrayidx3793, align 8, !dbg !2701
  %shr3794 = lshr i64 %2134, 8, !dbg !2701
  %or3795 = or i64 %shl3792, %shr3794, !dbg !2701
  %arrayidx3796 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 10, !dbg !2701
  %2135 = load i64, i64* %arrayidx3796, align 8, !dbg !2701
  %shr3797 = lshr i64 %2135, 7, !dbg !2701
  %xor3798 = xor i64 %or3795, %shr3797, !dbg !2701
  %xor3799 = xor i64 %or3790, %xor3798, !dbg !2701
  %add3800 = add i64 %2130, %xor3799, !dbg !2701
  %add3801 = add i64 %xor3784, %add3800, !dbg !2701
  %add3802 = add i64 %2124, %add3801, !dbg !2701
  %arrayidx3803 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 9, !dbg !2701
  store i64 %add3802, i64* %arrayidx3803, align 8, !dbg !2701
  %add3804 = add i64 %2123, %add3802, !dbg !2701
  %add3805 = add i64 %xor3769, %add3804, !dbg !2701
  %add3806 = add i64 %xor3766, %add3805, !dbg !2701
  %add3807 = add i64 %2112, %add3806, !dbg !2701
  store i64 %add3807, i64* %t13755, align 8, !dbg !2701
  %2136 = load i64, i64* %c, align 8, !dbg !2701
  %2137 = load i64, i64* %t13755, align 8, !dbg !2701
  %add3808 = add i64 %2136, %2137, !dbg !2701
  store i64 %add3808, i64* %c, align 8, !dbg !2701
  %2138 = load i64, i64* %t03738, align 8, !dbg !2701
  %2139 = load i64, i64* %t13755, align 8, !dbg !2701
  %add3809 = add i64 %2138, %2139, !dbg !2701
  store i64 %add3809, i64* %g, align 8, !dbg !2701
  br label %do.end.3810, !dbg !2701

do.end.3810:                                      ; preds = %do.body.3737
  br label %do.body.3811, !dbg !2704

do.body.3811:                                     ; preds = %do.end.3810
  call void @llvm.dbg.declare(metadata i64* %t03812, metadata !2705, metadata !DIExpression()), !dbg !2707
  %2140 = load i64, i64* %g, align 8, !dbg !2708
  %shl3813 = shl i64 %2140, 36, !dbg !2708
  %2141 = load i64, i64* %g, align 8, !dbg !2708
  %shr3814 = lshr i64 %2141, 28, !dbg !2708
  %or3815 = or i64 %shl3813, %shr3814, !dbg !2708
  %2142 = load i64, i64* %g, align 8, !dbg !2708
  %shl3816 = shl i64 %2142, 30, !dbg !2708
  %2143 = load i64, i64* %g, align 8, !dbg !2708
  %shr3817 = lshr i64 %2143, 34, !dbg !2708
  %or3818 = or i64 %shl3816, %shr3817, !dbg !2708
  %2144 = load i64, i64* %g, align 8, !dbg !2708
  %shl3819 = shl i64 %2144, 25, !dbg !2708
  %2145 = load i64, i64* %g, align 8, !dbg !2708
  %shr3820 = lshr i64 %2145, 39, !dbg !2708
  %or3821 = or i64 %shl3819, %shr3820, !dbg !2708
  %xor3822 = xor i64 %or3818, %or3821, !dbg !2708
  %xor3823 = xor i64 %or3815, %xor3822, !dbg !2708
  %2146 = load i64, i64* %g, align 8, !dbg !2708
  %2147 = load i64, i64* %h, align 8, !dbg !2708
  %and3824 = and i64 %2146, %2147, !dbg !2708
  %2148 = load i64, i64* %a, align 8, !dbg !2708
  %2149 = load i64, i64* %g, align 8, !dbg !2708
  %2150 = load i64, i64* %h, align 8, !dbg !2708
  %or3825 = or i64 %2149, %2150, !dbg !2708
  %and3826 = and i64 %2148, %or3825, !dbg !2708
  %or3827 = or i64 %and3824, %and3826, !dbg !2708
  %add3828 = add i64 %xor3823, %or3827, !dbg !2708
  store i64 %add3828, i64* %t03812, align 8, !dbg !2708
  call void @llvm.dbg.declare(metadata i64* %t13829, metadata !2710, metadata !DIExpression()), !dbg !2708
  %2151 = load i64, i64* %f, align 8, !dbg !2708
  %2152 = load i64, i64* %c, align 8, !dbg !2708
  %shl3830 = shl i64 %2152, 50, !dbg !2708
  %2153 = load i64, i64* %c, align 8, !dbg !2708
  %shr3831 = lshr i64 %2153, 14, !dbg !2708
  %or3832 = or i64 %shl3830, %shr3831, !dbg !2708
  %2154 = load i64, i64* %c, align 8, !dbg !2708
  %shl3833 = shl i64 %2154, 46, !dbg !2708
  %2155 = load i64, i64* %c, align 8, !dbg !2708
  %shr3834 = lshr i64 %2155, 18, !dbg !2708
  %or3835 = or i64 %shl3833, %shr3834, !dbg !2708
  %2156 = load i64, i64* %c, align 8, !dbg !2708
  %shl3836 = shl i64 %2156, 23, !dbg !2708
  %2157 = load i64, i64* %c, align 8, !dbg !2708
  %shr3837 = lshr i64 %2157, 41, !dbg !2708
  %or3838 = or i64 %shl3836, %shr3837, !dbg !2708
  %xor3839 = xor i64 %or3835, %or3838, !dbg !2708
  %xor3840 = xor i64 %or3832, %xor3839, !dbg !2708
  %2158 = load i64, i64* %e, align 8, !dbg !2708
  %2159 = load i64, i64* %c, align 8, !dbg !2708
  %2160 = load i64, i64* %d, align 8, !dbg !2708
  %2161 = load i64, i64* %e, align 8, !dbg !2708
  %xor3841 = xor i64 %2160, %2161, !dbg !2708
  %and3842 = and i64 %2159, %xor3841, !dbg !2708
  %xor3843 = xor i64 %2158, %and3842, !dbg !2708
  %2162 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 58), align 8, !dbg !2708
  %arrayidx3844 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 10, !dbg !2708
  %2163 = load i64, i64* %arrayidx3844, align 8, !dbg !2708
  %arrayidx3845 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 8, !dbg !2708
  %2164 = load i64, i64* %arrayidx3845, align 8, !dbg !2708
  %shl3846 = shl i64 %2164, 45, !dbg !2708
  %arrayidx3847 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 8, !dbg !2708
  %2165 = load i64, i64* %arrayidx3847, align 8, !dbg !2708
  %shr3848 = lshr i64 %2165, 19, !dbg !2708
  %or3849 = or i64 %shl3846, %shr3848, !dbg !2708
  %arrayidx3850 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 8, !dbg !2708
  %2166 = load i64, i64* %arrayidx3850, align 8, !dbg !2708
  %shl3851 = shl i64 %2166, 3, !dbg !2708
  %arrayidx3852 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 8, !dbg !2708
  %2167 = load i64, i64* %arrayidx3852, align 8, !dbg !2708
  %shr3853 = lshr i64 %2167, 61, !dbg !2708
  %or3854 = or i64 %shl3851, %shr3853, !dbg !2708
  %arrayidx3855 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 8, !dbg !2708
  %2168 = load i64, i64* %arrayidx3855, align 8, !dbg !2708
  %shr3856 = lshr i64 %2168, 6, !dbg !2708
  %xor3857 = xor i64 %or3854, %shr3856, !dbg !2708
  %xor3858 = xor i64 %or3849, %xor3857, !dbg !2708
  %arrayidx3859 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 3, !dbg !2708
  %2169 = load i64, i64* %arrayidx3859, align 8, !dbg !2708
  %arrayidx3860 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 11, !dbg !2708
  %2170 = load i64, i64* %arrayidx3860, align 8, !dbg !2708
  %shl3861 = shl i64 %2170, 63, !dbg !2708
  %arrayidx3862 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 11, !dbg !2708
  %2171 = load i64, i64* %arrayidx3862, align 8, !dbg !2708
  %shr3863 = lshr i64 %2171, 1, !dbg !2708
  %or3864 = or i64 %shl3861, %shr3863, !dbg !2708
  %arrayidx3865 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 11, !dbg !2708
  %2172 = load i64, i64* %arrayidx3865, align 8, !dbg !2708
  %shl3866 = shl i64 %2172, 56, !dbg !2708
  %arrayidx3867 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 11, !dbg !2708
  %2173 = load i64, i64* %arrayidx3867, align 8, !dbg !2708
  %shr3868 = lshr i64 %2173, 8, !dbg !2708
  %or3869 = or i64 %shl3866, %shr3868, !dbg !2708
  %arrayidx3870 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 11, !dbg !2708
  %2174 = load i64, i64* %arrayidx3870, align 8, !dbg !2708
  %shr3871 = lshr i64 %2174, 7, !dbg !2708
  %xor3872 = xor i64 %or3869, %shr3871, !dbg !2708
  %xor3873 = xor i64 %or3864, %xor3872, !dbg !2708
  %add3874 = add i64 %2169, %xor3873, !dbg !2708
  %add3875 = add i64 %xor3858, %add3874, !dbg !2708
  %add3876 = add i64 %2163, %add3875, !dbg !2708
  %arrayidx3877 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 10, !dbg !2708
  store i64 %add3876, i64* %arrayidx3877, align 8, !dbg !2708
  %add3878 = add i64 %2162, %add3876, !dbg !2708
  %add3879 = add i64 %xor3843, %add3878, !dbg !2708
  %add3880 = add i64 %xor3840, %add3879, !dbg !2708
  %add3881 = add i64 %2151, %add3880, !dbg !2708
  store i64 %add3881, i64* %t13829, align 8, !dbg !2708
  %2175 = load i64, i64* %b, align 8, !dbg !2708
  %2176 = load i64, i64* %t13829, align 8, !dbg !2708
  %add3882 = add i64 %2175, %2176, !dbg !2708
  store i64 %add3882, i64* %b, align 8, !dbg !2708
  %2177 = load i64, i64* %t03812, align 8, !dbg !2708
  %2178 = load i64, i64* %t13829, align 8, !dbg !2708
  %add3883 = add i64 %2177, %2178, !dbg !2708
  store i64 %add3883, i64* %f, align 8, !dbg !2708
  br label %do.end.3884, !dbg !2708

do.end.3884:                                      ; preds = %do.body.3811
  br label %do.body.3885, !dbg !2711

do.body.3885:                                     ; preds = %do.end.3884
  call void @llvm.dbg.declare(metadata i64* %t03886, metadata !2712, metadata !DIExpression()), !dbg !2714
  %2179 = load i64, i64* %f, align 8, !dbg !2715
  %shl3887 = shl i64 %2179, 36, !dbg !2715
  %2180 = load i64, i64* %f, align 8, !dbg !2715
  %shr3888 = lshr i64 %2180, 28, !dbg !2715
  %or3889 = or i64 %shl3887, %shr3888, !dbg !2715
  %2181 = load i64, i64* %f, align 8, !dbg !2715
  %shl3890 = shl i64 %2181, 30, !dbg !2715
  %2182 = load i64, i64* %f, align 8, !dbg !2715
  %shr3891 = lshr i64 %2182, 34, !dbg !2715
  %or3892 = or i64 %shl3890, %shr3891, !dbg !2715
  %2183 = load i64, i64* %f, align 8, !dbg !2715
  %shl3893 = shl i64 %2183, 25, !dbg !2715
  %2184 = load i64, i64* %f, align 8, !dbg !2715
  %shr3894 = lshr i64 %2184, 39, !dbg !2715
  %or3895 = or i64 %shl3893, %shr3894, !dbg !2715
  %xor3896 = xor i64 %or3892, %or3895, !dbg !2715
  %xor3897 = xor i64 %or3889, %xor3896, !dbg !2715
  %2185 = load i64, i64* %f, align 8, !dbg !2715
  %2186 = load i64, i64* %g, align 8, !dbg !2715
  %and3898 = and i64 %2185, %2186, !dbg !2715
  %2187 = load i64, i64* %h, align 8, !dbg !2715
  %2188 = load i64, i64* %f, align 8, !dbg !2715
  %2189 = load i64, i64* %g, align 8, !dbg !2715
  %or3899 = or i64 %2188, %2189, !dbg !2715
  %and3900 = and i64 %2187, %or3899, !dbg !2715
  %or3901 = or i64 %and3898, %and3900, !dbg !2715
  %add3902 = add i64 %xor3897, %or3901, !dbg !2715
  store i64 %add3902, i64* %t03886, align 8, !dbg !2715
  call void @llvm.dbg.declare(metadata i64* %t13903, metadata !2717, metadata !DIExpression()), !dbg !2715
  %2190 = load i64, i64* %e, align 8, !dbg !2715
  %2191 = load i64, i64* %b, align 8, !dbg !2715
  %shl3904 = shl i64 %2191, 50, !dbg !2715
  %2192 = load i64, i64* %b, align 8, !dbg !2715
  %shr3905 = lshr i64 %2192, 14, !dbg !2715
  %or3906 = or i64 %shl3904, %shr3905, !dbg !2715
  %2193 = load i64, i64* %b, align 8, !dbg !2715
  %shl3907 = shl i64 %2193, 46, !dbg !2715
  %2194 = load i64, i64* %b, align 8, !dbg !2715
  %shr3908 = lshr i64 %2194, 18, !dbg !2715
  %or3909 = or i64 %shl3907, %shr3908, !dbg !2715
  %2195 = load i64, i64* %b, align 8, !dbg !2715
  %shl3910 = shl i64 %2195, 23, !dbg !2715
  %2196 = load i64, i64* %b, align 8, !dbg !2715
  %shr3911 = lshr i64 %2196, 41, !dbg !2715
  %or3912 = or i64 %shl3910, %shr3911, !dbg !2715
  %xor3913 = xor i64 %or3909, %or3912, !dbg !2715
  %xor3914 = xor i64 %or3906, %xor3913, !dbg !2715
  %2197 = load i64, i64* %d, align 8, !dbg !2715
  %2198 = load i64, i64* %b, align 8, !dbg !2715
  %2199 = load i64, i64* %c, align 8, !dbg !2715
  %2200 = load i64, i64* %d, align 8, !dbg !2715
  %xor3915 = xor i64 %2199, %2200, !dbg !2715
  %and3916 = and i64 %2198, %xor3915, !dbg !2715
  %xor3917 = xor i64 %2197, %and3916, !dbg !2715
  %2201 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 59), align 8, !dbg !2715
  %arrayidx3918 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 11, !dbg !2715
  %2202 = load i64, i64* %arrayidx3918, align 8, !dbg !2715
  %arrayidx3919 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 9, !dbg !2715
  %2203 = load i64, i64* %arrayidx3919, align 8, !dbg !2715
  %shl3920 = shl i64 %2203, 45, !dbg !2715
  %arrayidx3921 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 9, !dbg !2715
  %2204 = load i64, i64* %arrayidx3921, align 8, !dbg !2715
  %shr3922 = lshr i64 %2204, 19, !dbg !2715
  %or3923 = or i64 %shl3920, %shr3922, !dbg !2715
  %arrayidx3924 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 9, !dbg !2715
  %2205 = load i64, i64* %arrayidx3924, align 8, !dbg !2715
  %shl3925 = shl i64 %2205, 3, !dbg !2715
  %arrayidx3926 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 9, !dbg !2715
  %2206 = load i64, i64* %arrayidx3926, align 8, !dbg !2715
  %shr3927 = lshr i64 %2206, 61, !dbg !2715
  %or3928 = or i64 %shl3925, %shr3927, !dbg !2715
  %arrayidx3929 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 9, !dbg !2715
  %2207 = load i64, i64* %arrayidx3929, align 8, !dbg !2715
  %shr3930 = lshr i64 %2207, 6, !dbg !2715
  %xor3931 = xor i64 %or3928, %shr3930, !dbg !2715
  %xor3932 = xor i64 %or3923, %xor3931, !dbg !2715
  %arrayidx3933 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 4, !dbg !2715
  %2208 = load i64, i64* %arrayidx3933, align 8, !dbg !2715
  %arrayidx3934 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 12, !dbg !2715
  %2209 = load i64, i64* %arrayidx3934, align 8, !dbg !2715
  %shl3935 = shl i64 %2209, 63, !dbg !2715
  %arrayidx3936 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 12, !dbg !2715
  %2210 = load i64, i64* %arrayidx3936, align 8, !dbg !2715
  %shr3937 = lshr i64 %2210, 1, !dbg !2715
  %or3938 = or i64 %shl3935, %shr3937, !dbg !2715
  %arrayidx3939 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 12, !dbg !2715
  %2211 = load i64, i64* %arrayidx3939, align 8, !dbg !2715
  %shl3940 = shl i64 %2211, 56, !dbg !2715
  %arrayidx3941 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 12, !dbg !2715
  %2212 = load i64, i64* %arrayidx3941, align 8, !dbg !2715
  %shr3942 = lshr i64 %2212, 8, !dbg !2715
  %or3943 = or i64 %shl3940, %shr3942, !dbg !2715
  %arrayidx3944 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 12, !dbg !2715
  %2213 = load i64, i64* %arrayidx3944, align 8, !dbg !2715
  %shr3945 = lshr i64 %2213, 7, !dbg !2715
  %xor3946 = xor i64 %or3943, %shr3945, !dbg !2715
  %xor3947 = xor i64 %or3938, %xor3946, !dbg !2715
  %add3948 = add i64 %2208, %xor3947, !dbg !2715
  %add3949 = add i64 %xor3932, %add3948, !dbg !2715
  %add3950 = add i64 %2202, %add3949, !dbg !2715
  %arrayidx3951 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 11, !dbg !2715
  store i64 %add3950, i64* %arrayidx3951, align 8, !dbg !2715
  %add3952 = add i64 %2201, %add3950, !dbg !2715
  %add3953 = add i64 %xor3917, %add3952, !dbg !2715
  %add3954 = add i64 %xor3914, %add3953, !dbg !2715
  %add3955 = add i64 %2190, %add3954, !dbg !2715
  store i64 %add3955, i64* %t13903, align 8, !dbg !2715
  %2214 = load i64, i64* %a, align 8, !dbg !2715
  %2215 = load i64, i64* %t13903, align 8, !dbg !2715
  %add3956 = add i64 %2214, %2215, !dbg !2715
  store i64 %add3956, i64* %a, align 8, !dbg !2715
  %2216 = load i64, i64* %t03886, align 8, !dbg !2715
  %2217 = load i64, i64* %t13903, align 8, !dbg !2715
  %add3957 = add i64 %2216, %2217, !dbg !2715
  store i64 %add3957, i64* %e, align 8, !dbg !2715
  br label %do.end.3958, !dbg !2715

do.end.3958:                                      ; preds = %do.body.3885
  br label %do.body.3959, !dbg !2718

do.body.3959:                                     ; preds = %do.end.3958
  call void @llvm.dbg.declare(metadata i64* %t03960, metadata !2719, metadata !DIExpression()), !dbg !2721
  %2218 = load i64, i64* %e, align 8, !dbg !2722
  %shl3961 = shl i64 %2218, 36, !dbg !2722
  %2219 = load i64, i64* %e, align 8, !dbg !2722
  %shr3962 = lshr i64 %2219, 28, !dbg !2722
  %or3963 = or i64 %shl3961, %shr3962, !dbg !2722
  %2220 = load i64, i64* %e, align 8, !dbg !2722
  %shl3964 = shl i64 %2220, 30, !dbg !2722
  %2221 = load i64, i64* %e, align 8, !dbg !2722
  %shr3965 = lshr i64 %2221, 34, !dbg !2722
  %or3966 = or i64 %shl3964, %shr3965, !dbg !2722
  %2222 = load i64, i64* %e, align 8, !dbg !2722
  %shl3967 = shl i64 %2222, 25, !dbg !2722
  %2223 = load i64, i64* %e, align 8, !dbg !2722
  %shr3968 = lshr i64 %2223, 39, !dbg !2722
  %or3969 = or i64 %shl3967, %shr3968, !dbg !2722
  %xor3970 = xor i64 %or3966, %or3969, !dbg !2722
  %xor3971 = xor i64 %or3963, %xor3970, !dbg !2722
  %2224 = load i64, i64* %e, align 8, !dbg !2722
  %2225 = load i64, i64* %f, align 8, !dbg !2722
  %and3972 = and i64 %2224, %2225, !dbg !2722
  %2226 = load i64, i64* %g, align 8, !dbg !2722
  %2227 = load i64, i64* %e, align 8, !dbg !2722
  %2228 = load i64, i64* %f, align 8, !dbg !2722
  %or3973 = or i64 %2227, %2228, !dbg !2722
  %and3974 = and i64 %2226, %or3973, !dbg !2722
  %or3975 = or i64 %and3972, %and3974, !dbg !2722
  %add3976 = add i64 %xor3971, %or3975, !dbg !2722
  store i64 %add3976, i64* %t03960, align 8, !dbg !2722
  call void @llvm.dbg.declare(metadata i64* %t13977, metadata !2724, metadata !DIExpression()), !dbg !2722
  %2229 = load i64, i64* %d, align 8, !dbg !2722
  %2230 = load i64, i64* %a, align 8, !dbg !2722
  %shl3978 = shl i64 %2230, 50, !dbg !2722
  %2231 = load i64, i64* %a, align 8, !dbg !2722
  %shr3979 = lshr i64 %2231, 14, !dbg !2722
  %or3980 = or i64 %shl3978, %shr3979, !dbg !2722
  %2232 = load i64, i64* %a, align 8, !dbg !2722
  %shl3981 = shl i64 %2232, 46, !dbg !2722
  %2233 = load i64, i64* %a, align 8, !dbg !2722
  %shr3982 = lshr i64 %2233, 18, !dbg !2722
  %or3983 = or i64 %shl3981, %shr3982, !dbg !2722
  %2234 = load i64, i64* %a, align 8, !dbg !2722
  %shl3984 = shl i64 %2234, 23, !dbg !2722
  %2235 = load i64, i64* %a, align 8, !dbg !2722
  %shr3985 = lshr i64 %2235, 41, !dbg !2722
  %or3986 = or i64 %shl3984, %shr3985, !dbg !2722
  %xor3987 = xor i64 %or3983, %or3986, !dbg !2722
  %xor3988 = xor i64 %or3980, %xor3987, !dbg !2722
  %2236 = load i64, i64* %c, align 8, !dbg !2722
  %2237 = load i64, i64* %a, align 8, !dbg !2722
  %2238 = load i64, i64* %b, align 8, !dbg !2722
  %2239 = load i64, i64* %c, align 8, !dbg !2722
  %xor3989 = xor i64 %2238, %2239, !dbg !2722
  %and3990 = and i64 %2237, %xor3989, !dbg !2722
  %xor3991 = xor i64 %2236, %and3990, !dbg !2722
  %2240 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 60), align 8, !dbg !2722
  %arrayidx3992 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 12, !dbg !2722
  %2241 = load i64, i64* %arrayidx3992, align 8, !dbg !2722
  %arrayidx3993 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 10, !dbg !2722
  %2242 = load i64, i64* %arrayidx3993, align 8, !dbg !2722
  %shl3994 = shl i64 %2242, 45, !dbg !2722
  %arrayidx3995 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 10, !dbg !2722
  %2243 = load i64, i64* %arrayidx3995, align 8, !dbg !2722
  %shr3996 = lshr i64 %2243, 19, !dbg !2722
  %or3997 = or i64 %shl3994, %shr3996, !dbg !2722
  %arrayidx3998 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 10, !dbg !2722
  %2244 = load i64, i64* %arrayidx3998, align 8, !dbg !2722
  %shl3999 = shl i64 %2244, 3, !dbg !2722
  %arrayidx4000 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 10, !dbg !2722
  %2245 = load i64, i64* %arrayidx4000, align 8, !dbg !2722
  %shr4001 = lshr i64 %2245, 61, !dbg !2722
  %or4002 = or i64 %shl3999, %shr4001, !dbg !2722
  %arrayidx4003 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 10, !dbg !2722
  %2246 = load i64, i64* %arrayidx4003, align 8, !dbg !2722
  %shr4004 = lshr i64 %2246, 6, !dbg !2722
  %xor4005 = xor i64 %or4002, %shr4004, !dbg !2722
  %xor4006 = xor i64 %or3997, %xor4005, !dbg !2722
  %arrayidx4007 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 5, !dbg !2722
  %2247 = load i64, i64* %arrayidx4007, align 8, !dbg !2722
  %arrayidx4008 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 13, !dbg !2722
  %2248 = load i64, i64* %arrayidx4008, align 8, !dbg !2722
  %shl4009 = shl i64 %2248, 63, !dbg !2722
  %arrayidx4010 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 13, !dbg !2722
  %2249 = load i64, i64* %arrayidx4010, align 8, !dbg !2722
  %shr4011 = lshr i64 %2249, 1, !dbg !2722
  %or4012 = or i64 %shl4009, %shr4011, !dbg !2722
  %arrayidx4013 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 13, !dbg !2722
  %2250 = load i64, i64* %arrayidx4013, align 8, !dbg !2722
  %shl4014 = shl i64 %2250, 56, !dbg !2722
  %arrayidx4015 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 13, !dbg !2722
  %2251 = load i64, i64* %arrayidx4015, align 8, !dbg !2722
  %shr4016 = lshr i64 %2251, 8, !dbg !2722
  %or4017 = or i64 %shl4014, %shr4016, !dbg !2722
  %arrayidx4018 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 13, !dbg !2722
  %2252 = load i64, i64* %arrayidx4018, align 8, !dbg !2722
  %shr4019 = lshr i64 %2252, 7, !dbg !2722
  %xor4020 = xor i64 %or4017, %shr4019, !dbg !2722
  %xor4021 = xor i64 %or4012, %xor4020, !dbg !2722
  %add4022 = add i64 %2247, %xor4021, !dbg !2722
  %add4023 = add i64 %xor4006, %add4022, !dbg !2722
  %add4024 = add i64 %2241, %add4023, !dbg !2722
  %arrayidx4025 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 12, !dbg !2722
  store i64 %add4024, i64* %arrayidx4025, align 8, !dbg !2722
  %add4026 = add i64 %2240, %add4024, !dbg !2722
  %add4027 = add i64 %xor3991, %add4026, !dbg !2722
  %add4028 = add i64 %xor3988, %add4027, !dbg !2722
  %add4029 = add i64 %2229, %add4028, !dbg !2722
  store i64 %add4029, i64* %t13977, align 8, !dbg !2722
  %2253 = load i64, i64* %h, align 8, !dbg !2722
  %2254 = load i64, i64* %t13977, align 8, !dbg !2722
  %add4030 = add i64 %2253, %2254, !dbg !2722
  store i64 %add4030, i64* %h, align 8, !dbg !2722
  %2255 = load i64, i64* %t03960, align 8, !dbg !2722
  %2256 = load i64, i64* %t13977, align 8, !dbg !2722
  %add4031 = add i64 %2255, %2256, !dbg !2722
  store i64 %add4031, i64* %d, align 8, !dbg !2722
  br label %do.end.4032, !dbg !2722

do.end.4032:                                      ; preds = %do.body.3959
  br label %do.body.4033, !dbg !2725

do.body.4033:                                     ; preds = %do.end.4032
  call void @llvm.dbg.declare(metadata i64* %t04034, metadata !2726, metadata !DIExpression()), !dbg !2728
  %2257 = load i64, i64* %d, align 8, !dbg !2729
  %shl4035 = shl i64 %2257, 36, !dbg !2729
  %2258 = load i64, i64* %d, align 8, !dbg !2729
  %shr4036 = lshr i64 %2258, 28, !dbg !2729
  %or4037 = or i64 %shl4035, %shr4036, !dbg !2729
  %2259 = load i64, i64* %d, align 8, !dbg !2729
  %shl4038 = shl i64 %2259, 30, !dbg !2729
  %2260 = load i64, i64* %d, align 8, !dbg !2729
  %shr4039 = lshr i64 %2260, 34, !dbg !2729
  %or4040 = or i64 %shl4038, %shr4039, !dbg !2729
  %2261 = load i64, i64* %d, align 8, !dbg !2729
  %shl4041 = shl i64 %2261, 25, !dbg !2729
  %2262 = load i64, i64* %d, align 8, !dbg !2729
  %shr4042 = lshr i64 %2262, 39, !dbg !2729
  %or4043 = or i64 %shl4041, %shr4042, !dbg !2729
  %xor4044 = xor i64 %or4040, %or4043, !dbg !2729
  %xor4045 = xor i64 %or4037, %xor4044, !dbg !2729
  %2263 = load i64, i64* %d, align 8, !dbg !2729
  %2264 = load i64, i64* %e, align 8, !dbg !2729
  %and4046 = and i64 %2263, %2264, !dbg !2729
  %2265 = load i64, i64* %f, align 8, !dbg !2729
  %2266 = load i64, i64* %d, align 8, !dbg !2729
  %2267 = load i64, i64* %e, align 8, !dbg !2729
  %or4047 = or i64 %2266, %2267, !dbg !2729
  %and4048 = and i64 %2265, %or4047, !dbg !2729
  %or4049 = or i64 %and4046, %and4048, !dbg !2729
  %add4050 = add i64 %xor4045, %or4049, !dbg !2729
  store i64 %add4050, i64* %t04034, align 8, !dbg !2729
  call void @llvm.dbg.declare(metadata i64* %t14051, metadata !2731, metadata !DIExpression()), !dbg !2729
  %2268 = load i64, i64* %c, align 8, !dbg !2729
  %2269 = load i64, i64* %h, align 8, !dbg !2729
  %shl4052 = shl i64 %2269, 50, !dbg !2729
  %2270 = load i64, i64* %h, align 8, !dbg !2729
  %shr4053 = lshr i64 %2270, 14, !dbg !2729
  %or4054 = or i64 %shl4052, %shr4053, !dbg !2729
  %2271 = load i64, i64* %h, align 8, !dbg !2729
  %shl4055 = shl i64 %2271, 46, !dbg !2729
  %2272 = load i64, i64* %h, align 8, !dbg !2729
  %shr4056 = lshr i64 %2272, 18, !dbg !2729
  %or4057 = or i64 %shl4055, %shr4056, !dbg !2729
  %2273 = load i64, i64* %h, align 8, !dbg !2729
  %shl4058 = shl i64 %2273, 23, !dbg !2729
  %2274 = load i64, i64* %h, align 8, !dbg !2729
  %shr4059 = lshr i64 %2274, 41, !dbg !2729
  %or4060 = or i64 %shl4058, %shr4059, !dbg !2729
  %xor4061 = xor i64 %or4057, %or4060, !dbg !2729
  %xor4062 = xor i64 %or4054, %xor4061, !dbg !2729
  %2275 = load i64, i64* %b, align 8, !dbg !2729
  %2276 = load i64, i64* %h, align 8, !dbg !2729
  %2277 = load i64, i64* %a, align 8, !dbg !2729
  %2278 = load i64, i64* %b, align 8, !dbg !2729
  %xor4063 = xor i64 %2277, %2278, !dbg !2729
  %and4064 = and i64 %2276, %xor4063, !dbg !2729
  %xor4065 = xor i64 %2275, %and4064, !dbg !2729
  %2279 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 61), align 8, !dbg !2729
  %arrayidx4066 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 13, !dbg !2729
  %2280 = load i64, i64* %arrayidx4066, align 8, !dbg !2729
  %arrayidx4067 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 11, !dbg !2729
  %2281 = load i64, i64* %arrayidx4067, align 8, !dbg !2729
  %shl4068 = shl i64 %2281, 45, !dbg !2729
  %arrayidx4069 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 11, !dbg !2729
  %2282 = load i64, i64* %arrayidx4069, align 8, !dbg !2729
  %shr4070 = lshr i64 %2282, 19, !dbg !2729
  %or4071 = or i64 %shl4068, %shr4070, !dbg !2729
  %arrayidx4072 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 11, !dbg !2729
  %2283 = load i64, i64* %arrayidx4072, align 8, !dbg !2729
  %shl4073 = shl i64 %2283, 3, !dbg !2729
  %arrayidx4074 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 11, !dbg !2729
  %2284 = load i64, i64* %arrayidx4074, align 8, !dbg !2729
  %shr4075 = lshr i64 %2284, 61, !dbg !2729
  %or4076 = or i64 %shl4073, %shr4075, !dbg !2729
  %arrayidx4077 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 11, !dbg !2729
  %2285 = load i64, i64* %arrayidx4077, align 8, !dbg !2729
  %shr4078 = lshr i64 %2285, 6, !dbg !2729
  %xor4079 = xor i64 %or4076, %shr4078, !dbg !2729
  %xor4080 = xor i64 %or4071, %xor4079, !dbg !2729
  %arrayidx4081 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 6, !dbg !2729
  %2286 = load i64, i64* %arrayidx4081, align 8, !dbg !2729
  %arrayidx4082 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 14, !dbg !2729
  %2287 = load i64, i64* %arrayidx4082, align 8, !dbg !2729
  %shl4083 = shl i64 %2287, 63, !dbg !2729
  %arrayidx4084 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 14, !dbg !2729
  %2288 = load i64, i64* %arrayidx4084, align 8, !dbg !2729
  %shr4085 = lshr i64 %2288, 1, !dbg !2729
  %or4086 = or i64 %shl4083, %shr4085, !dbg !2729
  %arrayidx4087 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 14, !dbg !2729
  %2289 = load i64, i64* %arrayidx4087, align 8, !dbg !2729
  %shl4088 = shl i64 %2289, 56, !dbg !2729
  %arrayidx4089 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 14, !dbg !2729
  %2290 = load i64, i64* %arrayidx4089, align 8, !dbg !2729
  %shr4090 = lshr i64 %2290, 8, !dbg !2729
  %or4091 = or i64 %shl4088, %shr4090, !dbg !2729
  %arrayidx4092 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 14, !dbg !2729
  %2291 = load i64, i64* %arrayidx4092, align 8, !dbg !2729
  %shr4093 = lshr i64 %2291, 7, !dbg !2729
  %xor4094 = xor i64 %or4091, %shr4093, !dbg !2729
  %xor4095 = xor i64 %or4086, %xor4094, !dbg !2729
  %add4096 = add i64 %2286, %xor4095, !dbg !2729
  %add4097 = add i64 %xor4080, %add4096, !dbg !2729
  %add4098 = add i64 %2280, %add4097, !dbg !2729
  %arrayidx4099 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 13, !dbg !2729
  store i64 %add4098, i64* %arrayidx4099, align 8, !dbg !2729
  %add4100 = add i64 %2279, %add4098, !dbg !2729
  %add4101 = add i64 %xor4065, %add4100, !dbg !2729
  %add4102 = add i64 %xor4062, %add4101, !dbg !2729
  %add4103 = add i64 %2268, %add4102, !dbg !2729
  store i64 %add4103, i64* %t14051, align 8, !dbg !2729
  %2292 = load i64, i64* %g, align 8, !dbg !2729
  %2293 = load i64, i64* %t14051, align 8, !dbg !2729
  %add4104 = add i64 %2292, %2293, !dbg !2729
  store i64 %add4104, i64* %g, align 8, !dbg !2729
  %2294 = load i64, i64* %t04034, align 8, !dbg !2729
  %2295 = load i64, i64* %t14051, align 8, !dbg !2729
  %add4105 = add i64 %2294, %2295, !dbg !2729
  store i64 %add4105, i64* %c, align 8, !dbg !2729
  br label %do.end.4106, !dbg !2729

do.end.4106:                                      ; preds = %do.body.4033
  br label %do.body.4107, !dbg !2732

do.body.4107:                                     ; preds = %do.end.4106
  call void @llvm.dbg.declare(metadata i64* %t04108, metadata !2733, metadata !DIExpression()), !dbg !2735
  %2296 = load i64, i64* %c, align 8, !dbg !2736
  %shl4109 = shl i64 %2296, 36, !dbg !2736
  %2297 = load i64, i64* %c, align 8, !dbg !2736
  %shr4110 = lshr i64 %2297, 28, !dbg !2736
  %or4111 = or i64 %shl4109, %shr4110, !dbg !2736
  %2298 = load i64, i64* %c, align 8, !dbg !2736
  %shl4112 = shl i64 %2298, 30, !dbg !2736
  %2299 = load i64, i64* %c, align 8, !dbg !2736
  %shr4113 = lshr i64 %2299, 34, !dbg !2736
  %or4114 = or i64 %shl4112, %shr4113, !dbg !2736
  %2300 = load i64, i64* %c, align 8, !dbg !2736
  %shl4115 = shl i64 %2300, 25, !dbg !2736
  %2301 = load i64, i64* %c, align 8, !dbg !2736
  %shr4116 = lshr i64 %2301, 39, !dbg !2736
  %or4117 = or i64 %shl4115, %shr4116, !dbg !2736
  %xor4118 = xor i64 %or4114, %or4117, !dbg !2736
  %xor4119 = xor i64 %or4111, %xor4118, !dbg !2736
  %2302 = load i64, i64* %c, align 8, !dbg !2736
  %2303 = load i64, i64* %d, align 8, !dbg !2736
  %and4120 = and i64 %2302, %2303, !dbg !2736
  %2304 = load i64, i64* %e, align 8, !dbg !2736
  %2305 = load i64, i64* %c, align 8, !dbg !2736
  %2306 = load i64, i64* %d, align 8, !dbg !2736
  %or4121 = or i64 %2305, %2306, !dbg !2736
  %and4122 = and i64 %2304, %or4121, !dbg !2736
  %or4123 = or i64 %and4120, %and4122, !dbg !2736
  %add4124 = add i64 %xor4119, %or4123, !dbg !2736
  store i64 %add4124, i64* %t04108, align 8, !dbg !2736
  call void @llvm.dbg.declare(metadata i64* %t14125, metadata !2738, metadata !DIExpression()), !dbg !2736
  %2307 = load i64, i64* %b, align 8, !dbg !2736
  %2308 = load i64, i64* %g, align 8, !dbg !2736
  %shl4126 = shl i64 %2308, 50, !dbg !2736
  %2309 = load i64, i64* %g, align 8, !dbg !2736
  %shr4127 = lshr i64 %2309, 14, !dbg !2736
  %or4128 = or i64 %shl4126, %shr4127, !dbg !2736
  %2310 = load i64, i64* %g, align 8, !dbg !2736
  %shl4129 = shl i64 %2310, 46, !dbg !2736
  %2311 = load i64, i64* %g, align 8, !dbg !2736
  %shr4130 = lshr i64 %2311, 18, !dbg !2736
  %or4131 = or i64 %shl4129, %shr4130, !dbg !2736
  %2312 = load i64, i64* %g, align 8, !dbg !2736
  %shl4132 = shl i64 %2312, 23, !dbg !2736
  %2313 = load i64, i64* %g, align 8, !dbg !2736
  %shr4133 = lshr i64 %2313, 41, !dbg !2736
  %or4134 = or i64 %shl4132, %shr4133, !dbg !2736
  %xor4135 = xor i64 %or4131, %or4134, !dbg !2736
  %xor4136 = xor i64 %or4128, %xor4135, !dbg !2736
  %2314 = load i64, i64* %a, align 8, !dbg !2736
  %2315 = load i64, i64* %g, align 8, !dbg !2736
  %2316 = load i64, i64* %h, align 8, !dbg !2736
  %2317 = load i64, i64* %a, align 8, !dbg !2736
  %xor4137 = xor i64 %2316, %2317, !dbg !2736
  %and4138 = and i64 %2315, %xor4137, !dbg !2736
  %xor4139 = xor i64 %2314, %and4138, !dbg !2736
  %2318 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 62), align 8, !dbg !2736
  %arrayidx4140 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 14, !dbg !2736
  %2319 = load i64, i64* %arrayidx4140, align 8, !dbg !2736
  %arrayidx4141 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 12, !dbg !2736
  %2320 = load i64, i64* %arrayidx4141, align 8, !dbg !2736
  %shl4142 = shl i64 %2320, 45, !dbg !2736
  %arrayidx4143 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 12, !dbg !2736
  %2321 = load i64, i64* %arrayidx4143, align 8, !dbg !2736
  %shr4144 = lshr i64 %2321, 19, !dbg !2736
  %or4145 = or i64 %shl4142, %shr4144, !dbg !2736
  %arrayidx4146 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 12, !dbg !2736
  %2322 = load i64, i64* %arrayidx4146, align 8, !dbg !2736
  %shl4147 = shl i64 %2322, 3, !dbg !2736
  %arrayidx4148 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 12, !dbg !2736
  %2323 = load i64, i64* %arrayidx4148, align 8, !dbg !2736
  %shr4149 = lshr i64 %2323, 61, !dbg !2736
  %or4150 = or i64 %shl4147, %shr4149, !dbg !2736
  %arrayidx4151 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 12, !dbg !2736
  %2324 = load i64, i64* %arrayidx4151, align 8, !dbg !2736
  %shr4152 = lshr i64 %2324, 6, !dbg !2736
  %xor4153 = xor i64 %or4150, %shr4152, !dbg !2736
  %xor4154 = xor i64 %or4145, %xor4153, !dbg !2736
  %arrayidx4155 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 7, !dbg !2736
  %2325 = load i64, i64* %arrayidx4155, align 8, !dbg !2736
  %arrayidx4156 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 15, !dbg !2736
  %2326 = load i64, i64* %arrayidx4156, align 8, !dbg !2736
  %shl4157 = shl i64 %2326, 63, !dbg !2736
  %arrayidx4158 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 15, !dbg !2736
  %2327 = load i64, i64* %arrayidx4158, align 8, !dbg !2736
  %shr4159 = lshr i64 %2327, 1, !dbg !2736
  %or4160 = or i64 %shl4157, %shr4159, !dbg !2736
  %arrayidx4161 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 15, !dbg !2736
  %2328 = load i64, i64* %arrayidx4161, align 8, !dbg !2736
  %shl4162 = shl i64 %2328, 56, !dbg !2736
  %arrayidx4163 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 15, !dbg !2736
  %2329 = load i64, i64* %arrayidx4163, align 8, !dbg !2736
  %shr4164 = lshr i64 %2329, 8, !dbg !2736
  %or4165 = or i64 %shl4162, %shr4164, !dbg !2736
  %arrayidx4166 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 15, !dbg !2736
  %2330 = load i64, i64* %arrayidx4166, align 8, !dbg !2736
  %shr4167 = lshr i64 %2330, 7, !dbg !2736
  %xor4168 = xor i64 %or4165, %shr4167, !dbg !2736
  %xor4169 = xor i64 %or4160, %xor4168, !dbg !2736
  %add4170 = add i64 %2325, %xor4169, !dbg !2736
  %add4171 = add i64 %xor4154, %add4170, !dbg !2736
  %add4172 = add i64 %2319, %add4171, !dbg !2736
  %arrayidx4173 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 14, !dbg !2736
  store i64 %add4172, i64* %arrayidx4173, align 8, !dbg !2736
  %add4174 = add i64 %2318, %add4172, !dbg !2736
  %add4175 = add i64 %xor4139, %add4174, !dbg !2736
  %add4176 = add i64 %xor4136, %add4175, !dbg !2736
  %add4177 = add i64 %2307, %add4176, !dbg !2736
  store i64 %add4177, i64* %t14125, align 8, !dbg !2736
  %2331 = load i64, i64* %f, align 8, !dbg !2736
  %2332 = load i64, i64* %t14125, align 8, !dbg !2736
  %add4178 = add i64 %2331, %2332, !dbg !2736
  store i64 %add4178, i64* %f, align 8, !dbg !2736
  %2333 = load i64, i64* %t04108, align 8, !dbg !2736
  %2334 = load i64, i64* %t14125, align 8, !dbg !2736
  %add4179 = add i64 %2333, %2334, !dbg !2736
  store i64 %add4179, i64* %b, align 8, !dbg !2736
  br label %do.end.4180, !dbg !2736

do.end.4180:                                      ; preds = %do.body.4107
  br label %do.body.4181, !dbg !2739

do.body.4181:                                     ; preds = %do.end.4180
  call void @llvm.dbg.declare(metadata i64* %t04182, metadata !2740, metadata !DIExpression()), !dbg !2742
  %2335 = load i64, i64* %b, align 8, !dbg !2743
  %shl4183 = shl i64 %2335, 36, !dbg !2743
  %2336 = load i64, i64* %b, align 8, !dbg !2743
  %shr4184 = lshr i64 %2336, 28, !dbg !2743
  %or4185 = or i64 %shl4183, %shr4184, !dbg !2743
  %2337 = load i64, i64* %b, align 8, !dbg !2743
  %shl4186 = shl i64 %2337, 30, !dbg !2743
  %2338 = load i64, i64* %b, align 8, !dbg !2743
  %shr4187 = lshr i64 %2338, 34, !dbg !2743
  %or4188 = or i64 %shl4186, %shr4187, !dbg !2743
  %2339 = load i64, i64* %b, align 8, !dbg !2743
  %shl4189 = shl i64 %2339, 25, !dbg !2743
  %2340 = load i64, i64* %b, align 8, !dbg !2743
  %shr4190 = lshr i64 %2340, 39, !dbg !2743
  %or4191 = or i64 %shl4189, %shr4190, !dbg !2743
  %xor4192 = xor i64 %or4188, %or4191, !dbg !2743
  %xor4193 = xor i64 %or4185, %xor4192, !dbg !2743
  %2341 = load i64, i64* %b, align 8, !dbg !2743
  %2342 = load i64, i64* %c, align 8, !dbg !2743
  %and4194 = and i64 %2341, %2342, !dbg !2743
  %2343 = load i64, i64* %d, align 8, !dbg !2743
  %2344 = load i64, i64* %b, align 8, !dbg !2743
  %2345 = load i64, i64* %c, align 8, !dbg !2743
  %or4195 = or i64 %2344, %2345, !dbg !2743
  %and4196 = and i64 %2343, %or4195, !dbg !2743
  %or4197 = or i64 %and4194, %and4196, !dbg !2743
  %add4198 = add i64 %xor4193, %or4197, !dbg !2743
  store i64 %add4198, i64* %t04182, align 8, !dbg !2743
  call void @llvm.dbg.declare(metadata i64* %t14199, metadata !2745, metadata !DIExpression()), !dbg !2743
  %2346 = load i64, i64* %a, align 8, !dbg !2743
  %2347 = load i64, i64* %f, align 8, !dbg !2743
  %shl4200 = shl i64 %2347, 50, !dbg !2743
  %2348 = load i64, i64* %f, align 8, !dbg !2743
  %shr4201 = lshr i64 %2348, 14, !dbg !2743
  %or4202 = or i64 %shl4200, %shr4201, !dbg !2743
  %2349 = load i64, i64* %f, align 8, !dbg !2743
  %shl4203 = shl i64 %2349, 46, !dbg !2743
  %2350 = load i64, i64* %f, align 8, !dbg !2743
  %shr4204 = lshr i64 %2350, 18, !dbg !2743
  %or4205 = or i64 %shl4203, %shr4204, !dbg !2743
  %2351 = load i64, i64* %f, align 8, !dbg !2743
  %shl4206 = shl i64 %2351, 23, !dbg !2743
  %2352 = load i64, i64* %f, align 8, !dbg !2743
  %shr4207 = lshr i64 %2352, 41, !dbg !2743
  %or4208 = or i64 %shl4206, %shr4207, !dbg !2743
  %xor4209 = xor i64 %or4205, %or4208, !dbg !2743
  %xor4210 = xor i64 %or4202, %xor4209, !dbg !2743
  %2353 = load i64, i64* %h, align 8, !dbg !2743
  %2354 = load i64, i64* %f, align 8, !dbg !2743
  %2355 = load i64, i64* %g, align 8, !dbg !2743
  %2356 = load i64, i64* %h, align 8, !dbg !2743
  %xor4211 = xor i64 %2355, %2356, !dbg !2743
  %and4212 = and i64 %2354, %xor4211, !dbg !2743
  %xor4213 = xor i64 %2353, %and4212, !dbg !2743
  %2357 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 63), align 8, !dbg !2743
  %arrayidx4214 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 15, !dbg !2743
  %2358 = load i64, i64* %arrayidx4214, align 8, !dbg !2743
  %arrayidx4215 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 13, !dbg !2743
  %2359 = load i64, i64* %arrayidx4215, align 8, !dbg !2743
  %shl4216 = shl i64 %2359, 45, !dbg !2743
  %arrayidx4217 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 13, !dbg !2743
  %2360 = load i64, i64* %arrayidx4217, align 8, !dbg !2743
  %shr4218 = lshr i64 %2360, 19, !dbg !2743
  %or4219 = or i64 %shl4216, %shr4218, !dbg !2743
  %arrayidx4220 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 13, !dbg !2743
  %2361 = load i64, i64* %arrayidx4220, align 8, !dbg !2743
  %shl4221 = shl i64 %2361, 3, !dbg !2743
  %arrayidx4222 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 13, !dbg !2743
  %2362 = load i64, i64* %arrayidx4222, align 8, !dbg !2743
  %shr4223 = lshr i64 %2362, 61, !dbg !2743
  %or4224 = or i64 %shl4221, %shr4223, !dbg !2743
  %arrayidx4225 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 13, !dbg !2743
  %2363 = load i64, i64* %arrayidx4225, align 8, !dbg !2743
  %shr4226 = lshr i64 %2363, 6, !dbg !2743
  %xor4227 = xor i64 %or4224, %shr4226, !dbg !2743
  %xor4228 = xor i64 %or4219, %xor4227, !dbg !2743
  %arrayidx4229 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 8, !dbg !2743
  %2364 = load i64, i64* %arrayidx4229, align 8, !dbg !2743
  %arrayidx4230 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 0, !dbg !2743
  %2365 = load i64, i64* %arrayidx4230, align 8, !dbg !2743
  %shl4231 = shl i64 %2365, 63, !dbg !2743
  %arrayidx4232 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 0, !dbg !2743
  %2366 = load i64, i64* %arrayidx4232, align 8, !dbg !2743
  %shr4233 = lshr i64 %2366, 1, !dbg !2743
  %or4234 = or i64 %shl4231, %shr4233, !dbg !2743
  %arrayidx4235 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 0, !dbg !2743
  %2367 = load i64, i64* %arrayidx4235, align 8, !dbg !2743
  %shl4236 = shl i64 %2367, 56, !dbg !2743
  %arrayidx4237 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 0, !dbg !2743
  %2368 = load i64, i64* %arrayidx4237, align 8, !dbg !2743
  %shr4238 = lshr i64 %2368, 8, !dbg !2743
  %or4239 = or i64 %shl4236, %shr4238, !dbg !2743
  %arrayidx4240 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 0, !dbg !2743
  %2369 = load i64, i64* %arrayidx4240, align 8, !dbg !2743
  %shr4241 = lshr i64 %2369, 7, !dbg !2743
  %xor4242 = xor i64 %or4239, %shr4241, !dbg !2743
  %xor4243 = xor i64 %or4234, %xor4242, !dbg !2743
  %add4244 = add i64 %2364, %xor4243, !dbg !2743
  %add4245 = add i64 %xor4228, %add4244, !dbg !2743
  %add4246 = add i64 %2358, %add4245, !dbg !2743
  %arrayidx4247 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 15, !dbg !2743
  store i64 %add4246, i64* %arrayidx4247, align 8, !dbg !2743
  %add4248 = add i64 %2357, %add4246, !dbg !2743
  %add4249 = add i64 %xor4213, %add4248, !dbg !2743
  %add4250 = add i64 %xor4210, %add4249, !dbg !2743
  %add4251 = add i64 %2346, %add4250, !dbg !2743
  store i64 %add4251, i64* %t14199, align 8, !dbg !2743
  %2370 = load i64, i64* %e, align 8, !dbg !2743
  %2371 = load i64, i64* %t14199, align 8, !dbg !2743
  %add4252 = add i64 %2370, %2371, !dbg !2743
  store i64 %add4252, i64* %e, align 8, !dbg !2743
  %2372 = load i64, i64* %t04182, align 8, !dbg !2743
  %2373 = load i64, i64* %t14199, align 8, !dbg !2743
  %add4253 = add i64 %2372, %2373, !dbg !2743
  store i64 %add4253, i64* %a, align 8, !dbg !2743
  br label %do.end.4254, !dbg !2743

do.end.4254:                                      ; preds = %do.body.4181
  br label %do.body.4255, !dbg !2746

do.body.4255:                                     ; preds = %do.end.4254
  call void @llvm.dbg.declare(metadata i64* %t04256, metadata !2747, metadata !DIExpression()), !dbg !2749
  %2374 = load i64, i64* %a, align 8, !dbg !2750
  %shl4257 = shl i64 %2374, 36, !dbg !2750
  %2375 = load i64, i64* %a, align 8, !dbg !2750
  %shr4258 = lshr i64 %2375, 28, !dbg !2750
  %or4259 = or i64 %shl4257, %shr4258, !dbg !2750
  %2376 = load i64, i64* %a, align 8, !dbg !2750
  %shl4260 = shl i64 %2376, 30, !dbg !2750
  %2377 = load i64, i64* %a, align 8, !dbg !2750
  %shr4261 = lshr i64 %2377, 34, !dbg !2750
  %or4262 = or i64 %shl4260, %shr4261, !dbg !2750
  %2378 = load i64, i64* %a, align 8, !dbg !2750
  %shl4263 = shl i64 %2378, 25, !dbg !2750
  %2379 = load i64, i64* %a, align 8, !dbg !2750
  %shr4264 = lshr i64 %2379, 39, !dbg !2750
  %or4265 = or i64 %shl4263, %shr4264, !dbg !2750
  %xor4266 = xor i64 %or4262, %or4265, !dbg !2750
  %xor4267 = xor i64 %or4259, %xor4266, !dbg !2750
  %2380 = load i64, i64* %a, align 8, !dbg !2750
  %2381 = load i64, i64* %b, align 8, !dbg !2750
  %and4268 = and i64 %2380, %2381, !dbg !2750
  %2382 = load i64, i64* %c, align 8, !dbg !2750
  %2383 = load i64, i64* %a, align 8, !dbg !2750
  %2384 = load i64, i64* %b, align 8, !dbg !2750
  %or4269 = or i64 %2383, %2384, !dbg !2750
  %and4270 = and i64 %2382, %or4269, !dbg !2750
  %or4271 = or i64 %and4268, %and4270, !dbg !2750
  %add4272 = add i64 %xor4267, %or4271, !dbg !2750
  store i64 %add4272, i64* %t04256, align 8, !dbg !2750
  call void @llvm.dbg.declare(metadata i64* %t14273, metadata !2752, metadata !DIExpression()), !dbg !2750
  %2385 = load i64, i64* %h, align 8, !dbg !2750
  %2386 = load i64, i64* %e, align 8, !dbg !2750
  %shl4274 = shl i64 %2386, 50, !dbg !2750
  %2387 = load i64, i64* %e, align 8, !dbg !2750
  %shr4275 = lshr i64 %2387, 14, !dbg !2750
  %or4276 = or i64 %shl4274, %shr4275, !dbg !2750
  %2388 = load i64, i64* %e, align 8, !dbg !2750
  %shl4277 = shl i64 %2388, 46, !dbg !2750
  %2389 = load i64, i64* %e, align 8, !dbg !2750
  %shr4278 = lshr i64 %2389, 18, !dbg !2750
  %or4279 = or i64 %shl4277, %shr4278, !dbg !2750
  %2390 = load i64, i64* %e, align 8, !dbg !2750
  %shl4280 = shl i64 %2390, 23, !dbg !2750
  %2391 = load i64, i64* %e, align 8, !dbg !2750
  %shr4281 = lshr i64 %2391, 41, !dbg !2750
  %or4282 = or i64 %shl4280, %shr4281, !dbg !2750
  %xor4283 = xor i64 %or4279, %or4282, !dbg !2750
  %xor4284 = xor i64 %or4276, %xor4283, !dbg !2750
  %2392 = load i64, i64* %g, align 8, !dbg !2750
  %2393 = load i64, i64* %e, align 8, !dbg !2750
  %2394 = load i64, i64* %f, align 8, !dbg !2750
  %2395 = load i64, i64* %g, align 8, !dbg !2750
  %xor4285 = xor i64 %2394, %2395, !dbg !2750
  %and4286 = and i64 %2393, %xor4285, !dbg !2750
  %xor4287 = xor i64 %2392, %and4286, !dbg !2750
  %2396 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 64), align 8, !dbg !2750
  %arrayidx4288 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 0, !dbg !2750
  %2397 = load i64, i64* %arrayidx4288, align 8, !dbg !2750
  %arrayidx4289 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 14, !dbg !2750
  %2398 = load i64, i64* %arrayidx4289, align 8, !dbg !2750
  %shl4290 = shl i64 %2398, 45, !dbg !2750
  %arrayidx4291 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 14, !dbg !2750
  %2399 = load i64, i64* %arrayidx4291, align 8, !dbg !2750
  %shr4292 = lshr i64 %2399, 19, !dbg !2750
  %or4293 = or i64 %shl4290, %shr4292, !dbg !2750
  %arrayidx4294 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 14, !dbg !2750
  %2400 = load i64, i64* %arrayidx4294, align 8, !dbg !2750
  %shl4295 = shl i64 %2400, 3, !dbg !2750
  %arrayidx4296 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 14, !dbg !2750
  %2401 = load i64, i64* %arrayidx4296, align 8, !dbg !2750
  %shr4297 = lshr i64 %2401, 61, !dbg !2750
  %or4298 = or i64 %shl4295, %shr4297, !dbg !2750
  %arrayidx4299 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 14, !dbg !2750
  %2402 = load i64, i64* %arrayidx4299, align 8, !dbg !2750
  %shr4300 = lshr i64 %2402, 6, !dbg !2750
  %xor4301 = xor i64 %or4298, %shr4300, !dbg !2750
  %xor4302 = xor i64 %or4293, %xor4301, !dbg !2750
  %arrayidx4303 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 9, !dbg !2750
  %2403 = load i64, i64* %arrayidx4303, align 8, !dbg !2750
  %arrayidx4304 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 1, !dbg !2750
  %2404 = load i64, i64* %arrayidx4304, align 8, !dbg !2750
  %shl4305 = shl i64 %2404, 63, !dbg !2750
  %arrayidx4306 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 1, !dbg !2750
  %2405 = load i64, i64* %arrayidx4306, align 8, !dbg !2750
  %shr4307 = lshr i64 %2405, 1, !dbg !2750
  %or4308 = or i64 %shl4305, %shr4307, !dbg !2750
  %arrayidx4309 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 1, !dbg !2750
  %2406 = load i64, i64* %arrayidx4309, align 8, !dbg !2750
  %shl4310 = shl i64 %2406, 56, !dbg !2750
  %arrayidx4311 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 1, !dbg !2750
  %2407 = load i64, i64* %arrayidx4311, align 8, !dbg !2750
  %shr4312 = lshr i64 %2407, 8, !dbg !2750
  %or4313 = or i64 %shl4310, %shr4312, !dbg !2750
  %arrayidx4314 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 1, !dbg !2750
  %2408 = load i64, i64* %arrayidx4314, align 8, !dbg !2750
  %shr4315 = lshr i64 %2408, 7, !dbg !2750
  %xor4316 = xor i64 %or4313, %shr4315, !dbg !2750
  %xor4317 = xor i64 %or4308, %xor4316, !dbg !2750
  %add4318 = add i64 %2403, %xor4317, !dbg !2750
  %add4319 = add i64 %xor4302, %add4318, !dbg !2750
  %add4320 = add i64 %2397, %add4319, !dbg !2750
  %arrayidx4321 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 0, !dbg !2750
  store i64 %add4320, i64* %arrayidx4321, align 8, !dbg !2750
  %add4322 = add i64 %2396, %add4320, !dbg !2750
  %add4323 = add i64 %xor4287, %add4322, !dbg !2750
  %add4324 = add i64 %xor4284, %add4323, !dbg !2750
  %add4325 = add i64 %2385, %add4324, !dbg !2750
  store i64 %add4325, i64* %t14273, align 8, !dbg !2750
  %2409 = load i64, i64* %d, align 8, !dbg !2750
  %2410 = load i64, i64* %t14273, align 8, !dbg !2750
  %add4326 = add i64 %2409, %2410, !dbg !2750
  store i64 %add4326, i64* %d, align 8, !dbg !2750
  %2411 = load i64, i64* %t04256, align 8, !dbg !2750
  %2412 = load i64, i64* %t14273, align 8, !dbg !2750
  %add4327 = add i64 %2411, %2412, !dbg !2750
  store i64 %add4327, i64* %h, align 8, !dbg !2750
  br label %do.end.4328, !dbg !2750

do.end.4328:                                      ; preds = %do.body.4255
  br label %do.body.4329, !dbg !2753

do.body.4329:                                     ; preds = %do.end.4328
  call void @llvm.dbg.declare(metadata i64* %t04330, metadata !2754, metadata !DIExpression()), !dbg !2756
  %2413 = load i64, i64* %h, align 8, !dbg !2757
  %shl4331 = shl i64 %2413, 36, !dbg !2757
  %2414 = load i64, i64* %h, align 8, !dbg !2757
  %shr4332 = lshr i64 %2414, 28, !dbg !2757
  %or4333 = or i64 %shl4331, %shr4332, !dbg !2757
  %2415 = load i64, i64* %h, align 8, !dbg !2757
  %shl4334 = shl i64 %2415, 30, !dbg !2757
  %2416 = load i64, i64* %h, align 8, !dbg !2757
  %shr4335 = lshr i64 %2416, 34, !dbg !2757
  %or4336 = or i64 %shl4334, %shr4335, !dbg !2757
  %2417 = load i64, i64* %h, align 8, !dbg !2757
  %shl4337 = shl i64 %2417, 25, !dbg !2757
  %2418 = load i64, i64* %h, align 8, !dbg !2757
  %shr4338 = lshr i64 %2418, 39, !dbg !2757
  %or4339 = or i64 %shl4337, %shr4338, !dbg !2757
  %xor4340 = xor i64 %or4336, %or4339, !dbg !2757
  %xor4341 = xor i64 %or4333, %xor4340, !dbg !2757
  %2419 = load i64, i64* %h, align 8, !dbg !2757
  %2420 = load i64, i64* %a, align 8, !dbg !2757
  %and4342 = and i64 %2419, %2420, !dbg !2757
  %2421 = load i64, i64* %b, align 8, !dbg !2757
  %2422 = load i64, i64* %h, align 8, !dbg !2757
  %2423 = load i64, i64* %a, align 8, !dbg !2757
  %or4343 = or i64 %2422, %2423, !dbg !2757
  %and4344 = and i64 %2421, %or4343, !dbg !2757
  %or4345 = or i64 %and4342, %and4344, !dbg !2757
  %add4346 = add i64 %xor4341, %or4345, !dbg !2757
  store i64 %add4346, i64* %t04330, align 8, !dbg !2757
  call void @llvm.dbg.declare(metadata i64* %t14347, metadata !2759, metadata !DIExpression()), !dbg !2757
  %2424 = load i64, i64* %g, align 8, !dbg !2757
  %2425 = load i64, i64* %d, align 8, !dbg !2757
  %shl4348 = shl i64 %2425, 50, !dbg !2757
  %2426 = load i64, i64* %d, align 8, !dbg !2757
  %shr4349 = lshr i64 %2426, 14, !dbg !2757
  %or4350 = or i64 %shl4348, %shr4349, !dbg !2757
  %2427 = load i64, i64* %d, align 8, !dbg !2757
  %shl4351 = shl i64 %2427, 46, !dbg !2757
  %2428 = load i64, i64* %d, align 8, !dbg !2757
  %shr4352 = lshr i64 %2428, 18, !dbg !2757
  %or4353 = or i64 %shl4351, %shr4352, !dbg !2757
  %2429 = load i64, i64* %d, align 8, !dbg !2757
  %shl4354 = shl i64 %2429, 23, !dbg !2757
  %2430 = load i64, i64* %d, align 8, !dbg !2757
  %shr4355 = lshr i64 %2430, 41, !dbg !2757
  %or4356 = or i64 %shl4354, %shr4355, !dbg !2757
  %xor4357 = xor i64 %or4353, %or4356, !dbg !2757
  %xor4358 = xor i64 %or4350, %xor4357, !dbg !2757
  %2431 = load i64, i64* %f, align 8, !dbg !2757
  %2432 = load i64, i64* %d, align 8, !dbg !2757
  %2433 = load i64, i64* %e, align 8, !dbg !2757
  %2434 = load i64, i64* %f, align 8, !dbg !2757
  %xor4359 = xor i64 %2433, %2434, !dbg !2757
  %and4360 = and i64 %2432, %xor4359, !dbg !2757
  %xor4361 = xor i64 %2431, %and4360, !dbg !2757
  %2435 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 65), align 8, !dbg !2757
  %arrayidx4362 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 1, !dbg !2757
  %2436 = load i64, i64* %arrayidx4362, align 8, !dbg !2757
  %arrayidx4363 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 15, !dbg !2757
  %2437 = load i64, i64* %arrayidx4363, align 8, !dbg !2757
  %shl4364 = shl i64 %2437, 45, !dbg !2757
  %arrayidx4365 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 15, !dbg !2757
  %2438 = load i64, i64* %arrayidx4365, align 8, !dbg !2757
  %shr4366 = lshr i64 %2438, 19, !dbg !2757
  %or4367 = or i64 %shl4364, %shr4366, !dbg !2757
  %arrayidx4368 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 15, !dbg !2757
  %2439 = load i64, i64* %arrayidx4368, align 8, !dbg !2757
  %shl4369 = shl i64 %2439, 3, !dbg !2757
  %arrayidx4370 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 15, !dbg !2757
  %2440 = load i64, i64* %arrayidx4370, align 8, !dbg !2757
  %shr4371 = lshr i64 %2440, 61, !dbg !2757
  %or4372 = or i64 %shl4369, %shr4371, !dbg !2757
  %arrayidx4373 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 15, !dbg !2757
  %2441 = load i64, i64* %arrayidx4373, align 8, !dbg !2757
  %shr4374 = lshr i64 %2441, 6, !dbg !2757
  %xor4375 = xor i64 %or4372, %shr4374, !dbg !2757
  %xor4376 = xor i64 %or4367, %xor4375, !dbg !2757
  %arrayidx4377 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 10, !dbg !2757
  %2442 = load i64, i64* %arrayidx4377, align 8, !dbg !2757
  %arrayidx4378 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 2, !dbg !2757
  %2443 = load i64, i64* %arrayidx4378, align 8, !dbg !2757
  %shl4379 = shl i64 %2443, 63, !dbg !2757
  %arrayidx4380 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 2, !dbg !2757
  %2444 = load i64, i64* %arrayidx4380, align 8, !dbg !2757
  %shr4381 = lshr i64 %2444, 1, !dbg !2757
  %or4382 = or i64 %shl4379, %shr4381, !dbg !2757
  %arrayidx4383 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 2, !dbg !2757
  %2445 = load i64, i64* %arrayidx4383, align 8, !dbg !2757
  %shl4384 = shl i64 %2445, 56, !dbg !2757
  %arrayidx4385 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 2, !dbg !2757
  %2446 = load i64, i64* %arrayidx4385, align 8, !dbg !2757
  %shr4386 = lshr i64 %2446, 8, !dbg !2757
  %or4387 = or i64 %shl4384, %shr4386, !dbg !2757
  %arrayidx4388 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 2, !dbg !2757
  %2447 = load i64, i64* %arrayidx4388, align 8, !dbg !2757
  %shr4389 = lshr i64 %2447, 7, !dbg !2757
  %xor4390 = xor i64 %or4387, %shr4389, !dbg !2757
  %xor4391 = xor i64 %or4382, %xor4390, !dbg !2757
  %add4392 = add i64 %2442, %xor4391, !dbg !2757
  %add4393 = add i64 %xor4376, %add4392, !dbg !2757
  %add4394 = add i64 %2436, %add4393, !dbg !2757
  %arrayidx4395 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 1, !dbg !2757
  store i64 %add4394, i64* %arrayidx4395, align 8, !dbg !2757
  %add4396 = add i64 %2435, %add4394, !dbg !2757
  %add4397 = add i64 %xor4361, %add4396, !dbg !2757
  %add4398 = add i64 %xor4358, %add4397, !dbg !2757
  %add4399 = add i64 %2424, %add4398, !dbg !2757
  store i64 %add4399, i64* %t14347, align 8, !dbg !2757
  %2448 = load i64, i64* %c, align 8, !dbg !2757
  %2449 = load i64, i64* %t14347, align 8, !dbg !2757
  %add4400 = add i64 %2448, %2449, !dbg !2757
  store i64 %add4400, i64* %c, align 8, !dbg !2757
  %2450 = load i64, i64* %t04330, align 8, !dbg !2757
  %2451 = load i64, i64* %t14347, align 8, !dbg !2757
  %add4401 = add i64 %2450, %2451, !dbg !2757
  store i64 %add4401, i64* %g, align 8, !dbg !2757
  br label %do.end.4402, !dbg !2757

do.end.4402:                                      ; preds = %do.body.4329
  br label %do.body.4403, !dbg !2760

do.body.4403:                                     ; preds = %do.end.4402
  call void @llvm.dbg.declare(metadata i64* %t04404, metadata !2761, metadata !DIExpression()), !dbg !2763
  %2452 = load i64, i64* %g, align 8, !dbg !2764
  %shl4405 = shl i64 %2452, 36, !dbg !2764
  %2453 = load i64, i64* %g, align 8, !dbg !2764
  %shr4406 = lshr i64 %2453, 28, !dbg !2764
  %or4407 = or i64 %shl4405, %shr4406, !dbg !2764
  %2454 = load i64, i64* %g, align 8, !dbg !2764
  %shl4408 = shl i64 %2454, 30, !dbg !2764
  %2455 = load i64, i64* %g, align 8, !dbg !2764
  %shr4409 = lshr i64 %2455, 34, !dbg !2764
  %or4410 = or i64 %shl4408, %shr4409, !dbg !2764
  %2456 = load i64, i64* %g, align 8, !dbg !2764
  %shl4411 = shl i64 %2456, 25, !dbg !2764
  %2457 = load i64, i64* %g, align 8, !dbg !2764
  %shr4412 = lshr i64 %2457, 39, !dbg !2764
  %or4413 = or i64 %shl4411, %shr4412, !dbg !2764
  %xor4414 = xor i64 %or4410, %or4413, !dbg !2764
  %xor4415 = xor i64 %or4407, %xor4414, !dbg !2764
  %2458 = load i64, i64* %g, align 8, !dbg !2764
  %2459 = load i64, i64* %h, align 8, !dbg !2764
  %and4416 = and i64 %2458, %2459, !dbg !2764
  %2460 = load i64, i64* %a, align 8, !dbg !2764
  %2461 = load i64, i64* %g, align 8, !dbg !2764
  %2462 = load i64, i64* %h, align 8, !dbg !2764
  %or4417 = or i64 %2461, %2462, !dbg !2764
  %and4418 = and i64 %2460, %or4417, !dbg !2764
  %or4419 = or i64 %and4416, %and4418, !dbg !2764
  %add4420 = add i64 %xor4415, %or4419, !dbg !2764
  store i64 %add4420, i64* %t04404, align 8, !dbg !2764
  call void @llvm.dbg.declare(metadata i64* %t14421, metadata !2766, metadata !DIExpression()), !dbg !2764
  %2463 = load i64, i64* %f, align 8, !dbg !2764
  %2464 = load i64, i64* %c, align 8, !dbg !2764
  %shl4422 = shl i64 %2464, 50, !dbg !2764
  %2465 = load i64, i64* %c, align 8, !dbg !2764
  %shr4423 = lshr i64 %2465, 14, !dbg !2764
  %or4424 = or i64 %shl4422, %shr4423, !dbg !2764
  %2466 = load i64, i64* %c, align 8, !dbg !2764
  %shl4425 = shl i64 %2466, 46, !dbg !2764
  %2467 = load i64, i64* %c, align 8, !dbg !2764
  %shr4426 = lshr i64 %2467, 18, !dbg !2764
  %or4427 = or i64 %shl4425, %shr4426, !dbg !2764
  %2468 = load i64, i64* %c, align 8, !dbg !2764
  %shl4428 = shl i64 %2468, 23, !dbg !2764
  %2469 = load i64, i64* %c, align 8, !dbg !2764
  %shr4429 = lshr i64 %2469, 41, !dbg !2764
  %or4430 = or i64 %shl4428, %shr4429, !dbg !2764
  %xor4431 = xor i64 %or4427, %or4430, !dbg !2764
  %xor4432 = xor i64 %or4424, %xor4431, !dbg !2764
  %2470 = load i64, i64* %e, align 8, !dbg !2764
  %2471 = load i64, i64* %c, align 8, !dbg !2764
  %2472 = load i64, i64* %d, align 8, !dbg !2764
  %2473 = load i64, i64* %e, align 8, !dbg !2764
  %xor4433 = xor i64 %2472, %2473, !dbg !2764
  %and4434 = and i64 %2471, %xor4433, !dbg !2764
  %xor4435 = xor i64 %2470, %and4434, !dbg !2764
  %2474 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 66), align 8, !dbg !2764
  %arrayidx4436 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 2, !dbg !2764
  %2475 = load i64, i64* %arrayidx4436, align 8, !dbg !2764
  %arrayidx4437 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 0, !dbg !2764
  %2476 = load i64, i64* %arrayidx4437, align 8, !dbg !2764
  %shl4438 = shl i64 %2476, 45, !dbg !2764
  %arrayidx4439 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 0, !dbg !2764
  %2477 = load i64, i64* %arrayidx4439, align 8, !dbg !2764
  %shr4440 = lshr i64 %2477, 19, !dbg !2764
  %or4441 = or i64 %shl4438, %shr4440, !dbg !2764
  %arrayidx4442 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 0, !dbg !2764
  %2478 = load i64, i64* %arrayidx4442, align 8, !dbg !2764
  %shl4443 = shl i64 %2478, 3, !dbg !2764
  %arrayidx4444 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 0, !dbg !2764
  %2479 = load i64, i64* %arrayidx4444, align 8, !dbg !2764
  %shr4445 = lshr i64 %2479, 61, !dbg !2764
  %or4446 = or i64 %shl4443, %shr4445, !dbg !2764
  %arrayidx4447 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 0, !dbg !2764
  %2480 = load i64, i64* %arrayidx4447, align 8, !dbg !2764
  %shr4448 = lshr i64 %2480, 6, !dbg !2764
  %xor4449 = xor i64 %or4446, %shr4448, !dbg !2764
  %xor4450 = xor i64 %or4441, %xor4449, !dbg !2764
  %arrayidx4451 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 11, !dbg !2764
  %2481 = load i64, i64* %arrayidx4451, align 8, !dbg !2764
  %arrayidx4452 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 3, !dbg !2764
  %2482 = load i64, i64* %arrayidx4452, align 8, !dbg !2764
  %shl4453 = shl i64 %2482, 63, !dbg !2764
  %arrayidx4454 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 3, !dbg !2764
  %2483 = load i64, i64* %arrayidx4454, align 8, !dbg !2764
  %shr4455 = lshr i64 %2483, 1, !dbg !2764
  %or4456 = or i64 %shl4453, %shr4455, !dbg !2764
  %arrayidx4457 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 3, !dbg !2764
  %2484 = load i64, i64* %arrayidx4457, align 8, !dbg !2764
  %shl4458 = shl i64 %2484, 56, !dbg !2764
  %arrayidx4459 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 3, !dbg !2764
  %2485 = load i64, i64* %arrayidx4459, align 8, !dbg !2764
  %shr4460 = lshr i64 %2485, 8, !dbg !2764
  %or4461 = or i64 %shl4458, %shr4460, !dbg !2764
  %arrayidx4462 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 3, !dbg !2764
  %2486 = load i64, i64* %arrayidx4462, align 8, !dbg !2764
  %shr4463 = lshr i64 %2486, 7, !dbg !2764
  %xor4464 = xor i64 %or4461, %shr4463, !dbg !2764
  %xor4465 = xor i64 %or4456, %xor4464, !dbg !2764
  %add4466 = add i64 %2481, %xor4465, !dbg !2764
  %add4467 = add i64 %xor4450, %add4466, !dbg !2764
  %add4468 = add i64 %2475, %add4467, !dbg !2764
  %arrayidx4469 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 2, !dbg !2764
  store i64 %add4468, i64* %arrayidx4469, align 8, !dbg !2764
  %add4470 = add i64 %2474, %add4468, !dbg !2764
  %add4471 = add i64 %xor4435, %add4470, !dbg !2764
  %add4472 = add i64 %xor4432, %add4471, !dbg !2764
  %add4473 = add i64 %2463, %add4472, !dbg !2764
  store i64 %add4473, i64* %t14421, align 8, !dbg !2764
  %2487 = load i64, i64* %b, align 8, !dbg !2764
  %2488 = load i64, i64* %t14421, align 8, !dbg !2764
  %add4474 = add i64 %2487, %2488, !dbg !2764
  store i64 %add4474, i64* %b, align 8, !dbg !2764
  %2489 = load i64, i64* %t04404, align 8, !dbg !2764
  %2490 = load i64, i64* %t14421, align 8, !dbg !2764
  %add4475 = add i64 %2489, %2490, !dbg !2764
  store i64 %add4475, i64* %f, align 8, !dbg !2764
  br label %do.end.4476, !dbg !2764

do.end.4476:                                      ; preds = %do.body.4403
  br label %do.body.4477, !dbg !2767

do.body.4477:                                     ; preds = %do.end.4476
  call void @llvm.dbg.declare(metadata i64* %t04478, metadata !2768, metadata !DIExpression()), !dbg !2770
  %2491 = load i64, i64* %f, align 8, !dbg !2771
  %shl4479 = shl i64 %2491, 36, !dbg !2771
  %2492 = load i64, i64* %f, align 8, !dbg !2771
  %shr4480 = lshr i64 %2492, 28, !dbg !2771
  %or4481 = or i64 %shl4479, %shr4480, !dbg !2771
  %2493 = load i64, i64* %f, align 8, !dbg !2771
  %shl4482 = shl i64 %2493, 30, !dbg !2771
  %2494 = load i64, i64* %f, align 8, !dbg !2771
  %shr4483 = lshr i64 %2494, 34, !dbg !2771
  %or4484 = or i64 %shl4482, %shr4483, !dbg !2771
  %2495 = load i64, i64* %f, align 8, !dbg !2771
  %shl4485 = shl i64 %2495, 25, !dbg !2771
  %2496 = load i64, i64* %f, align 8, !dbg !2771
  %shr4486 = lshr i64 %2496, 39, !dbg !2771
  %or4487 = or i64 %shl4485, %shr4486, !dbg !2771
  %xor4488 = xor i64 %or4484, %or4487, !dbg !2771
  %xor4489 = xor i64 %or4481, %xor4488, !dbg !2771
  %2497 = load i64, i64* %f, align 8, !dbg !2771
  %2498 = load i64, i64* %g, align 8, !dbg !2771
  %and4490 = and i64 %2497, %2498, !dbg !2771
  %2499 = load i64, i64* %h, align 8, !dbg !2771
  %2500 = load i64, i64* %f, align 8, !dbg !2771
  %2501 = load i64, i64* %g, align 8, !dbg !2771
  %or4491 = or i64 %2500, %2501, !dbg !2771
  %and4492 = and i64 %2499, %or4491, !dbg !2771
  %or4493 = or i64 %and4490, %and4492, !dbg !2771
  %add4494 = add i64 %xor4489, %or4493, !dbg !2771
  store i64 %add4494, i64* %t04478, align 8, !dbg !2771
  call void @llvm.dbg.declare(metadata i64* %t14495, metadata !2773, metadata !DIExpression()), !dbg !2771
  %2502 = load i64, i64* %e, align 8, !dbg !2771
  %2503 = load i64, i64* %b, align 8, !dbg !2771
  %shl4496 = shl i64 %2503, 50, !dbg !2771
  %2504 = load i64, i64* %b, align 8, !dbg !2771
  %shr4497 = lshr i64 %2504, 14, !dbg !2771
  %or4498 = or i64 %shl4496, %shr4497, !dbg !2771
  %2505 = load i64, i64* %b, align 8, !dbg !2771
  %shl4499 = shl i64 %2505, 46, !dbg !2771
  %2506 = load i64, i64* %b, align 8, !dbg !2771
  %shr4500 = lshr i64 %2506, 18, !dbg !2771
  %or4501 = or i64 %shl4499, %shr4500, !dbg !2771
  %2507 = load i64, i64* %b, align 8, !dbg !2771
  %shl4502 = shl i64 %2507, 23, !dbg !2771
  %2508 = load i64, i64* %b, align 8, !dbg !2771
  %shr4503 = lshr i64 %2508, 41, !dbg !2771
  %or4504 = or i64 %shl4502, %shr4503, !dbg !2771
  %xor4505 = xor i64 %or4501, %or4504, !dbg !2771
  %xor4506 = xor i64 %or4498, %xor4505, !dbg !2771
  %2509 = load i64, i64* %d, align 8, !dbg !2771
  %2510 = load i64, i64* %b, align 8, !dbg !2771
  %2511 = load i64, i64* %c, align 8, !dbg !2771
  %2512 = load i64, i64* %d, align 8, !dbg !2771
  %xor4507 = xor i64 %2511, %2512, !dbg !2771
  %and4508 = and i64 %2510, %xor4507, !dbg !2771
  %xor4509 = xor i64 %2509, %and4508, !dbg !2771
  %2513 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 67), align 8, !dbg !2771
  %arrayidx4510 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 3, !dbg !2771
  %2514 = load i64, i64* %arrayidx4510, align 8, !dbg !2771
  %arrayidx4511 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 1, !dbg !2771
  %2515 = load i64, i64* %arrayidx4511, align 8, !dbg !2771
  %shl4512 = shl i64 %2515, 45, !dbg !2771
  %arrayidx4513 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 1, !dbg !2771
  %2516 = load i64, i64* %arrayidx4513, align 8, !dbg !2771
  %shr4514 = lshr i64 %2516, 19, !dbg !2771
  %or4515 = or i64 %shl4512, %shr4514, !dbg !2771
  %arrayidx4516 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 1, !dbg !2771
  %2517 = load i64, i64* %arrayidx4516, align 8, !dbg !2771
  %shl4517 = shl i64 %2517, 3, !dbg !2771
  %arrayidx4518 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 1, !dbg !2771
  %2518 = load i64, i64* %arrayidx4518, align 8, !dbg !2771
  %shr4519 = lshr i64 %2518, 61, !dbg !2771
  %or4520 = or i64 %shl4517, %shr4519, !dbg !2771
  %arrayidx4521 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 1, !dbg !2771
  %2519 = load i64, i64* %arrayidx4521, align 8, !dbg !2771
  %shr4522 = lshr i64 %2519, 6, !dbg !2771
  %xor4523 = xor i64 %or4520, %shr4522, !dbg !2771
  %xor4524 = xor i64 %or4515, %xor4523, !dbg !2771
  %arrayidx4525 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 12, !dbg !2771
  %2520 = load i64, i64* %arrayidx4525, align 8, !dbg !2771
  %arrayidx4526 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 4, !dbg !2771
  %2521 = load i64, i64* %arrayidx4526, align 8, !dbg !2771
  %shl4527 = shl i64 %2521, 63, !dbg !2771
  %arrayidx4528 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 4, !dbg !2771
  %2522 = load i64, i64* %arrayidx4528, align 8, !dbg !2771
  %shr4529 = lshr i64 %2522, 1, !dbg !2771
  %or4530 = or i64 %shl4527, %shr4529, !dbg !2771
  %arrayidx4531 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 4, !dbg !2771
  %2523 = load i64, i64* %arrayidx4531, align 8, !dbg !2771
  %shl4532 = shl i64 %2523, 56, !dbg !2771
  %arrayidx4533 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 4, !dbg !2771
  %2524 = load i64, i64* %arrayidx4533, align 8, !dbg !2771
  %shr4534 = lshr i64 %2524, 8, !dbg !2771
  %or4535 = or i64 %shl4532, %shr4534, !dbg !2771
  %arrayidx4536 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 4, !dbg !2771
  %2525 = load i64, i64* %arrayidx4536, align 8, !dbg !2771
  %shr4537 = lshr i64 %2525, 7, !dbg !2771
  %xor4538 = xor i64 %or4535, %shr4537, !dbg !2771
  %xor4539 = xor i64 %or4530, %xor4538, !dbg !2771
  %add4540 = add i64 %2520, %xor4539, !dbg !2771
  %add4541 = add i64 %xor4524, %add4540, !dbg !2771
  %add4542 = add i64 %2514, %add4541, !dbg !2771
  %arrayidx4543 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 3, !dbg !2771
  store i64 %add4542, i64* %arrayidx4543, align 8, !dbg !2771
  %add4544 = add i64 %2513, %add4542, !dbg !2771
  %add4545 = add i64 %xor4509, %add4544, !dbg !2771
  %add4546 = add i64 %xor4506, %add4545, !dbg !2771
  %add4547 = add i64 %2502, %add4546, !dbg !2771
  store i64 %add4547, i64* %t14495, align 8, !dbg !2771
  %2526 = load i64, i64* %a, align 8, !dbg !2771
  %2527 = load i64, i64* %t14495, align 8, !dbg !2771
  %add4548 = add i64 %2526, %2527, !dbg !2771
  store i64 %add4548, i64* %a, align 8, !dbg !2771
  %2528 = load i64, i64* %t04478, align 8, !dbg !2771
  %2529 = load i64, i64* %t14495, align 8, !dbg !2771
  %add4549 = add i64 %2528, %2529, !dbg !2771
  store i64 %add4549, i64* %e, align 8, !dbg !2771
  br label %do.end.4550, !dbg !2771

do.end.4550:                                      ; preds = %do.body.4477
  br label %do.body.4551, !dbg !2774

do.body.4551:                                     ; preds = %do.end.4550
  call void @llvm.dbg.declare(metadata i64* %t04552, metadata !2775, metadata !DIExpression()), !dbg !2777
  %2530 = load i64, i64* %e, align 8, !dbg !2778
  %shl4553 = shl i64 %2530, 36, !dbg !2778
  %2531 = load i64, i64* %e, align 8, !dbg !2778
  %shr4554 = lshr i64 %2531, 28, !dbg !2778
  %or4555 = or i64 %shl4553, %shr4554, !dbg !2778
  %2532 = load i64, i64* %e, align 8, !dbg !2778
  %shl4556 = shl i64 %2532, 30, !dbg !2778
  %2533 = load i64, i64* %e, align 8, !dbg !2778
  %shr4557 = lshr i64 %2533, 34, !dbg !2778
  %or4558 = or i64 %shl4556, %shr4557, !dbg !2778
  %2534 = load i64, i64* %e, align 8, !dbg !2778
  %shl4559 = shl i64 %2534, 25, !dbg !2778
  %2535 = load i64, i64* %e, align 8, !dbg !2778
  %shr4560 = lshr i64 %2535, 39, !dbg !2778
  %or4561 = or i64 %shl4559, %shr4560, !dbg !2778
  %xor4562 = xor i64 %or4558, %or4561, !dbg !2778
  %xor4563 = xor i64 %or4555, %xor4562, !dbg !2778
  %2536 = load i64, i64* %e, align 8, !dbg !2778
  %2537 = load i64, i64* %f, align 8, !dbg !2778
  %and4564 = and i64 %2536, %2537, !dbg !2778
  %2538 = load i64, i64* %g, align 8, !dbg !2778
  %2539 = load i64, i64* %e, align 8, !dbg !2778
  %2540 = load i64, i64* %f, align 8, !dbg !2778
  %or4565 = or i64 %2539, %2540, !dbg !2778
  %and4566 = and i64 %2538, %or4565, !dbg !2778
  %or4567 = or i64 %and4564, %and4566, !dbg !2778
  %add4568 = add i64 %xor4563, %or4567, !dbg !2778
  store i64 %add4568, i64* %t04552, align 8, !dbg !2778
  call void @llvm.dbg.declare(metadata i64* %t14569, metadata !2780, metadata !DIExpression()), !dbg !2778
  %2541 = load i64, i64* %d, align 8, !dbg !2778
  %2542 = load i64, i64* %a, align 8, !dbg !2778
  %shl4570 = shl i64 %2542, 50, !dbg !2778
  %2543 = load i64, i64* %a, align 8, !dbg !2778
  %shr4571 = lshr i64 %2543, 14, !dbg !2778
  %or4572 = or i64 %shl4570, %shr4571, !dbg !2778
  %2544 = load i64, i64* %a, align 8, !dbg !2778
  %shl4573 = shl i64 %2544, 46, !dbg !2778
  %2545 = load i64, i64* %a, align 8, !dbg !2778
  %shr4574 = lshr i64 %2545, 18, !dbg !2778
  %or4575 = or i64 %shl4573, %shr4574, !dbg !2778
  %2546 = load i64, i64* %a, align 8, !dbg !2778
  %shl4576 = shl i64 %2546, 23, !dbg !2778
  %2547 = load i64, i64* %a, align 8, !dbg !2778
  %shr4577 = lshr i64 %2547, 41, !dbg !2778
  %or4578 = or i64 %shl4576, %shr4577, !dbg !2778
  %xor4579 = xor i64 %or4575, %or4578, !dbg !2778
  %xor4580 = xor i64 %or4572, %xor4579, !dbg !2778
  %2548 = load i64, i64* %c, align 8, !dbg !2778
  %2549 = load i64, i64* %a, align 8, !dbg !2778
  %2550 = load i64, i64* %b, align 8, !dbg !2778
  %2551 = load i64, i64* %c, align 8, !dbg !2778
  %xor4581 = xor i64 %2550, %2551, !dbg !2778
  %and4582 = and i64 %2549, %xor4581, !dbg !2778
  %xor4583 = xor i64 %2548, %and4582, !dbg !2778
  %2552 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 68), align 8, !dbg !2778
  %arrayidx4584 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 4, !dbg !2778
  %2553 = load i64, i64* %arrayidx4584, align 8, !dbg !2778
  %arrayidx4585 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 2, !dbg !2778
  %2554 = load i64, i64* %arrayidx4585, align 8, !dbg !2778
  %shl4586 = shl i64 %2554, 45, !dbg !2778
  %arrayidx4587 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 2, !dbg !2778
  %2555 = load i64, i64* %arrayidx4587, align 8, !dbg !2778
  %shr4588 = lshr i64 %2555, 19, !dbg !2778
  %or4589 = or i64 %shl4586, %shr4588, !dbg !2778
  %arrayidx4590 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 2, !dbg !2778
  %2556 = load i64, i64* %arrayidx4590, align 8, !dbg !2778
  %shl4591 = shl i64 %2556, 3, !dbg !2778
  %arrayidx4592 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 2, !dbg !2778
  %2557 = load i64, i64* %arrayidx4592, align 8, !dbg !2778
  %shr4593 = lshr i64 %2557, 61, !dbg !2778
  %or4594 = or i64 %shl4591, %shr4593, !dbg !2778
  %arrayidx4595 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 2, !dbg !2778
  %2558 = load i64, i64* %arrayidx4595, align 8, !dbg !2778
  %shr4596 = lshr i64 %2558, 6, !dbg !2778
  %xor4597 = xor i64 %or4594, %shr4596, !dbg !2778
  %xor4598 = xor i64 %or4589, %xor4597, !dbg !2778
  %arrayidx4599 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 13, !dbg !2778
  %2559 = load i64, i64* %arrayidx4599, align 8, !dbg !2778
  %arrayidx4600 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 5, !dbg !2778
  %2560 = load i64, i64* %arrayidx4600, align 8, !dbg !2778
  %shl4601 = shl i64 %2560, 63, !dbg !2778
  %arrayidx4602 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 5, !dbg !2778
  %2561 = load i64, i64* %arrayidx4602, align 8, !dbg !2778
  %shr4603 = lshr i64 %2561, 1, !dbg !2778
  %or4604 = or i64 %shl4601, %shr4603, !dbg !2778
  %arrayidx4605 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 5, !dbg !2778
  %2562 = load i64, i64* %arrayidx4605, align 8, !dbg !2778
  %shl4606 = shl i64 %2562, 56, !dbg !2778
  %arrayidx4607 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 5, !dbg !2778
  %2563 = load i64, i64* %arrayidx4607, align 8, !dbg !2778
  %shr4608 = lshr i64 %2563, 8, !dbg !2778
  %or4609 = or i64 %shl4606, %shr4608, !dbg !2778
  %arrayidx4610 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 5, !dbg !2778
  %2564 = load i64, i64* %arrayidx4610, align 8, !dbg !2778
  %shr4611 = lshr i64 %2564, 7, !dbg !2778
  %xor4612 = xor i64 %or4609, %shr4611, !dbg !2778
  %xor4613 = xor i64 %or4604, %xor4612, !dbg !2778
  %add4614 = add i64 %2559, %xor4613, !dbg !2778
  %add4615 = add i64 %xor4598, %add4614, !dbg !2778
  %add4616 = add i64 %2553, %add4615, !dbg !2778
  %arrayidx4617 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 4, !dbg !2778
  store i64 %add4616, i64* %arrayidx4617, align 8, !dbg !2778
  %add4618 = add i64 %2552, %add4616, !dbg !2778
  %add4619 = add i64 %xor4583, %add4618, !dbg !2778
  %add4620 = add i64 %xor4580, %add4619, !dbg !2778
  %add4621 = add i64 %2541, %add4620, !dbg !2778
  store i64 %add4621, i64* %t14569, align 8, !dbg !2778
  %2565 = load i64, i64* %h, align 8, !dbg !2778
  %2566 = load i64, i64* %t14569, align 8, !dbg !2778
  %add4622 = add i64 %2565, %2566, !dbg !2778
  store i64 %add4622, i64* %h, align 8, !dbg !2778
  %2567 = load i64, i64* %t04552, align 8, !dbg !2778
  %2568 = load i64, i64* %t14569, align 8, !dbg !2778
  %add4623 = add i64 %2567, %2568, !dbg !2778
  store i64 %add4623, i64* %d, align 8, !dbg !2778
  br label %do.end.4624, !dbg !2778

do.end.4624:                                      ; preds = %do.body.4551
  br label %do.body.4625, !dbg !2781

do.body.4625:                                     ; preds = %do.end.4624
  call void @llvm.dbg.declare(metadata i64* %t04626, metadata !2782, metadata !DIExpression()), !dbg !2784
  %2569 = load i64, i64* %d, align 8, !dbg !2785
  %shl4627 = shl i64 %2569, 36, !dbg !2785
  %2570 = load i64, i64* %d, align 8, !dbg !2785
  %shr4628 = lshr i64 %2570, 28, !dbg !2785
  %or4629 = or i64 %shl4627, %shr4628, !dbg !2785
  %2571 = load i64, i64* %d, align 8, !dbg !2785
  %shl4630 = shl i64 %2571, 30, !dbg !2785
  %2572 = load i64, i64* %d, align 8, !dbg !2785
  %shr4631 = lshr i64 %2572, 34, !dbg !2785
  %or4632 = or i64 %shl4630, %shr4631, !dbg !2785
  %2573 = load i64, i64* %d, align 8, !dbg !2785
  %shl4633 = shl i64 %2573, 25, !dbg !2785
  %2574 = load i64, i64* %d, align 8, !dbg !2785
  %shr4634 = lshr i64 %2574, 39, !dbg !2785
  %or4635 = or i64 %shl4633, %shr4634, !dbg !2785
  %xor4636 = xor i64 %or4632, %or4635, !dbg !2785
  %xor4637 = xor i64 %or4629, %xor4636, !dbg !2785
  %2575 = load i64, i64* %d, align 8, !dbg !2785
  %2576 = load i64, i64* %e, align 8, !dbg !2785
  %and4638 = and i64 %2575, %2576, !dbg !2785
  %2577 = load i64, i64* %f, align 8, !dbg !2785
  %2578 = load i64, i64* %d, align 8, !dbg !2785
  %2579 = load i64, i64* %e, align 8, !dbg !2785
  %or4639 = or i64 %2578, %2579, !dbg !2785
  %and4640 = and i64 %2577, %or4639, !dbg !2785
  %or4641 = or i64 %and4638, %and4640, !dbg !2785
  %add4642 = add i64 %xor4637, %or4641, !dbg !2785
  store i64 %add4642, i64* %t04626, align 8, !dbg !2785
  call void @llvm.dbg.declare(metadata i64* %t14643, metadata !2787, metadata !DIExpression()), !dbg !2785
  %2580 = load i64, i64* %c, align 8, !dbg !2785
  %2581 = load i64, i64* %h, align 8, !dbg !2785
  %shl4644 = shl i64 %2581, 50, !dbg !2785
  %2582 = load i64, i64* %h, align 8, !dbg !2785
  %shr4645 = lshr i64 %2582, 14, !dbg !2785
  %or4646 = or i64 %shl4644, %shr4645, !dbg !2785
  %2583 = load i64, i64* %h, align 8, !dbg !2785
  %shl4647 = shl i64 %2583, 46, !dbg !2785
  %2584 = load i64, i64* %h, align 8, !dbg !2785
  %shr4648 = lshr i64 %2584, 18, !dbg !2785
  %or4649 = or i64 %shl4647, %shr4648, !dbg !2785
  %2585 = load i64, i64* %h, align 8, !dbg !2785
  %shl4650 = shl i64 %2585, 23, !dbg !2785
  %2586 = load i64, i64* %h, align 8, !dbg !2785
  %shr4651 = lshr i64 %2586, 41, !dbg !2785
  %or4652 = or i64 %shl4650, %shr4651, !dbg !2785
  %xor4653 = xor i64 %or4649, %or4652, !dbg !2785
  %xor4654 = xor i64 %or4646, %xor4653, !dbg !2785
  %2587 = load i64, i64* %b, align 8, !dbg !2785
  %2588 = load i64, i64* %h, align 8, !dbg !2785
  %2589 = load i64, i64* %a, align 8, !dbg !2785
  %2590 = load i64, i64* %b, align 8, !dbg !2785
  %xor4655 = xor i64 %2589, %2590, !dbg !2785
  %and4656 = and i64 %2588, %xor4655, !dbg !2785
  %xor4657 = xor i64 %2587, %and4656, !dbg !2785
  %2591 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 69), align 8, !dbg !2785
  %arrayidx4658 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 5, !dbg !2785
  %2592 = load i64, i64* %arrayidx4658, align 8, !dbg !2785
  %arrayidx4659 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 3, !dbg !2785
  %2593 = load i64, i64* %arrayidx4659, align 8, !dbg !2785
  %shl4660 = shl i64 %2593, 45, !dbg !2785
  %arrayidx4661 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 3, !dbg !2785
  %2594 = load i64, i64* %arrayidx4661, align 8, !dbg !2785
  %shr4662 = lshr i64 %2594, 19, !dbg !2785
  %or4663 = or i64 %shl4660, %shr4662, !dbg !2785
  %arrayidx4664 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 3, !dbg !2785
  %2595 = load i64, i64* %arrayidx4664, align 8, !dbg !2785
  %shl4665 = shl i64 %2595, 3, !dbg !2785
  %arrayidx4666 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 3, !dbg !2785
  %2596 = load i64, i64* %arrayidx4666, align 8, !dbg !2785
  %shr4667 = lshr i64 %2596, 61, !dbg !2785
  %or4668 = or i64 %shl4665, %shr4667, !dbg !2785
  %arrayidx4669 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 3, !dbg !2785
  %2597 = load i64, i64* %arrayidx4669, align 8, !dbg !2785
  %shr4670 = lshr i64 %2597, 6, !dbg !2785
  %xor4671 = xor i64 %or4668, %shr4670, !dbg !2785
  %xor4672 = xor i64 %or4663, %xor4671, !dbg !2785
  %arrayidx4673 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 14, !dbg !2785
  %2598 = load i64, i64* %arrayidx4673, align 8, !dbg !2785
  %arrayidx4674 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 6, !dbg !2785
  %2599 = load i64, i64* %arrayidx4674, align 8, !dbg !2785
  %shl4675 = shl i64 %2599, 63, !dbg !2785
  %arrayidx4676 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 6, !dbg !2785
  %2600 = load i64, i64* %arrayidx4676, align 8, !dbg !2785
  %shr4677 = lshr i64 %2600, 1, !dbg !2785
  %or4678 = or i64 %shl4675, %shr4677, !dbg !2785
  %arrayidx4679 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 6, !dbg !2785
  %2601 = load i64, i64* %arrayidx4679, align 8, !dbg !2785
  %shl4680 = shl i64 %2601, 56, !dbg !2785
  %arrayidx4681 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 6, !dbg !2785
  %2602 = load i64, i64* %arrayidx4681, align 8, !dbg !2785
  %shr4682 = lshr i64 %2602, 8, !dbg !2785
  %or4683 = or i64 %shl4680, %shr4682, !dbg !2785
  %arrayidx4684 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 6, !dbg !2785
  %2603 = load i64, i64* %arrayidx4684, align 8, !dbg !2785
  %shr4685 = lshr i64 %2603, 7, !dbg !2785
  %xor4686 = xor i64 %or4683, %shr4685, !dbg !2785
  %xor4687 = xor i64 %or4678, %xor4686, !dbg !2785
  %add4688 = add i64 %2598, %xor4687, !dbg !2785
  %add4689 = add i64 %xor4672, %add4688, !dbg !2785
  %add4690 = add i64 %2592, %add4689, !dbg !2785
  %arrayidx4691 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 5, !dbg !2785
  store i64 %add4690, i64* %arrayidx4691, align 8, !dbg !2785
  %add4692 = add i64 %2591, %add4690, !dbg !2785
  %add4693 = add i64 %xor4657, %add4692, !dbg !2785
  %add4694 = add i64 %xor4654, %add4693, !dbg !2785
  %add4695 = add i64 %2580, %add4694, !dbg !2785
  store i64 %add4695, i64* %t14643, align 8, !dbg !2785
  %2604 = load i64, i64* %g, align 8, !dbg !2785
  %2605 = load i64, i64* %t14643, align 8, !dbg !2785
  %add4696 = add i64 %2604, %2605, !dbg !2785
  store i64 %add4696, i64* %g, align 8, !dbg !2785
  %2606 = load i64, i64* %t04626, align 8, !dbg !2785
  %2607 = load i64, i64* %t14643, align 8, !dbg !2785
  %add4697 = add i64 %2606, %2607, !dbg !2785
  store i64 %add4697, i64* %c, align 8, !dbg !2785
  br label %do.end.4698, !dbg !2785

do.end.4698:                                      ; preds = %do.body.4625
  br label %do.body.4699, !dbg !2788

do.body.4699:                                     ; preds = %do.end.4698
  call void @llvm.dbg.declare(metadata i64* %t04700, metadata !2789, metadata !DIExpression()), !dbg !2791
  %2608 = load i64, i64* %c, align 8, !dbg !2792
  %shl4701 = shl i64 %2608, 36, !dbg !2792
  %2609 = load i64, i64* %c, align 8, !dbg !2792
  %shr4702 = lshr i64 %2609, 28, !dbg !2792
  %or4703 = or i64 %shl4701, %shr4702, !dbg !2792
  %2610 = load i64, i64* %c, align 8, !dbg !2792
  %shl4704 = shl i64 %2610, 30, !dbg !2792
  %2611 = load i64, i64* %c, align 8, !dbg !2792
  %shr4705 = lshr i64 %2611, 34, !dbg !2792
  %or4706 = or i64 %shl4704, %shr4705, !dbg !2792
  %2612 = load i64, i64* %c, align 8, !dbg !2792
  %shl4707 = shl i64 %2612, 25, !dbg !2792
  %2613 = load i64, i64* %c, align 8, !dbg !2792
  %shr4708 = lshr i64 %2613, 39, !dbg !2792
  %or4709 = or i64 %shl4707, %shr4708, !dbg !2792
  %xor4710 = xor i64 %or4706, %or4709, !dbg !2792
  %xor4711 = xor i64 %or4703, %xor4710, !dbg !2792
  %2614 = load i64, i64* %c, align 8, !dbg !2792
  %2615 = load i64, i64* %d, align 8, !dbg !2792
  %and4712 = and i64 %2614, %2615, !dbg !2792
  %2616 = load i64, i64* %e, align 8, !dbg !2792
  %2617 = load i64, i64* %c, align 8, !dbg !2792
  %2618 = load i64, i64* %d, align 8, !dbg !2792
  %or4713 = or i64 %2617, %2618, !dbg !2792
  %and4714 = and i64 %2616, %or4713, !dbg !2792
  %or4715 = or i64 %and4712, %and4714, !dbg !2792
  %add4716 = add i64 %xor4711, %or4715, !dbg !2792
  store i64 %add4716, i64* %t04700, align 8, !dbg !2792
  call void @llvm.dbg.declare(metadata i64* %t14717, metadata !2794, metadata !DIExpression()), !dbg !2792
  %2619 = load i64, i64* %b, align 8, !dbg !2792
  %2620 = load i64, i64* %g, align 8, !dbg !2792
  %shl4718 = shl i64 %2620, 50, !dbg !2792
  %2621 = load i64, i64* %g, align 8, !dbg !2792
  %shr4719 = lshr i64 %2621, 14, !dbg !2792
  %or4720 = or i64 %shl4718, %shr4719, !dbg !2792
  %2622 = load i64, i64* %g, align 8, !dbg !2792
  %shl4721 = shl i64 %2622, 46, !dbg !2792
  %2623 = load i64, i64* %g, align 8, !dbg !2792
  %shr4722 = lshr i64 %2623, 18, !dbg !2792
  %or4723 = or i64 %shl4721, %shr4722, !dbg !2792
  %2624 = load i64, i64* %g, align 8, !dbg !2792
  %shl4724 = shl i64 %2624, 23, !dbg !2792
  %2625 = load i64, i64* %g, align 8, !dbg !2792
  %shr4725 = lshr i64 %2625, 41, !dbg !2792
  %or4726 = or i64 %shl4724, %shr4725, !dbg !2792
  %xor4727 = xor i64 %or4723, %or4726, !dbg !2792
  %xor4728 = xor i64 %or4720, %xor4727, !dbg !2792
  %2626 = load i64, i64* %a, align 8, !dbg !2792
  %2627 = load i64, i64* %g, align 8, !dbg !2792
  %2628 = load i64, i64* %h, align 8, !dbg !2792
  %2629 = load i64, i64* %a, align 8, !dbg !2792
  %xor4729 = xor i64 %2628, %2629, !dbg !2792
  %and4730 = and i64 %2627, %xor4729, !dbg !2792
  %xor4731 = xor i64 %2626, %and4730, !dbg !2792
  %2630 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 70), align 8, !dbg !2792
  %arrayidx4732 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 6, !dbg !2792
  %2631 = load i64, i64* %arrayidx4732, align 8, !dbg !2792
  %arrayidx4733 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 4, !dbg !2792
  %2632 = load i64, i64* %arrayidx4733, align 8, !dbg !2792
  %shl4734 = shl i64 %2632, 45, !dbg !2792
  %arrayidx4735 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 4, !dbg !2792
  %2633 = load i64, i64* %arrayidx4735, align 8, !dbg !2792
  %shr4736 = lshr i64 %2633, 19, !dbg !2792
  %or4737 = or i64 %shl4734, %shr4736, !dbg !2792
  %arrayidx4738 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 4, !dbg !2792
  %2634 = load i64, i64* %arrayidx4738, align 8, !dbg !2792
  %shl4739 = shl i64 %2634, 3, !dbg !2792
  %arrayidx4740 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 4, !dbg !2792
  %2635 = load i64, i64* %arrayidx4740, align 8, !dbg !2792
  %shr4741 = lshr i64 %2635, 61, !dbg !2792
  %or4742 = or i64 %shl4739, %shr4741, !dbg !2792
  %arrayidx4743 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 4, !dbg !2792
  %2636 = load i64, i64* %arrayidx4743, align 8, !dbg !2792
  %shr4744 = lshr i64 %2636, 6, !dbg !2792
  %xor4745 = xor i64 %or4742, %shr4744, !dbg !2792
  %xor4746 = xor i64 %or4737, %xor4745, !dbg !2792
  %arrayidx4747 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 15, !dbg !2792
  %2637 = load i64, i64* %arrayidx4747, align 8, !dbg !2792
  %arrayidx4748 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 7, !dbg !2792
  %2638 = load i64, i64* %arrayidx4748, align 8, !dbg !2792
  %shl4749 = shl i64 %2638, 63, !dbg !2792
  %arrayidx4750 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 7, !dbg !2792
  %2639 = load i64, i64* %arrayidx4750, align 8, !dbg !2792
  %shr4751 = lshr i64 %2639, 1, !dbg !2792
  %or4752 = or i64 %shl4749, %shr4751, !dbg !2792
  %arrayidx4753 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 7, !dbg !2792
  %2640 = load i64, i64* %arrayidx4753, align 8, !dbg !2792
  %shl4754 = shl i64 %2640, 56, !dbg !2792
  %arrayidx4755 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 7, !dbg !2792
  %2641 = load i64, i64* %arrayidx4755, align 8, !dbg !2792
  %shr4756 = lshr i64 %2641, 8, !dbg !2792
  %or4757 = or i64 %shl4754, %shr4756, !dbg !2792
  %arrayidx4758 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 7, !dbg !2792
  %2642 = load i64, i64* %arrayidx4758, align 8, !dbg !2792
  %shr4759 = lshr i64 %2642, 7, !dbg !2792
  %xor4760 = xor i64 %or4757, %shr4759, !dbg !2792
  %xor4761 = xor i64 %or4752, %xor4760, !dbg !2792
  %add4762 = add i64 %2637, %xor4761, !dbg !2792
  %add4763 = add i64 %xor4746, %add4762, !dbg !2792
  %add4764 = add i64 %2631, %add4763, !dbg !2792
  %arrayidx4765 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 6, !dbg !2792
  store i64 %add4764, i64* %arrayidx4765, align 8, !dbg !2792
  %add4766 = add i64 %2630, %add4764, !dbg !2792
  %add4767 = add i64 %xor4731, %add4766, !dbg !2792
  %add4768 = add i64 %xor4728, %add4767, !dbg !2792
  %add4769 = add i64 %2619, %add4768, !dbg !2792
  store i64 %add4769, i64* %t14717, align 8, !dbg !2792
  %2643 = load i64, i64* %f, align 8, !dbg !2792
  %2644 = load i64, i64* %t14717, align 8, !dbg !2792
  %add4770 = add i64 %2643, %2644, !dbg !2792
  store i64 %add4770, i64* %f, align 8, !dbg !2792
  %2645 = load i64, i64* %t04700, align 8, !dbg !2792
  %2646 = load i64, i64* %t14717, align 8, !dbg !2792
  %add4771 = add i64 %2645, %2646, !dbg !2792
  store i64 %add4771, i64* %b, align 8, !dbg !2792
  br label %do.end.4772, !dbg !2792

do.end.4772:                                      ; preds = %do.body.4699
  br label %do.body.4773, !dbg !2795

do.body.4773:                                     ; preds = %do.end.4772
  call void @llvm.dbg.declare(metadata i64* %t04774, metadata !2796, metadata !DIExpression()), !dbg !2798
  %2647 = load i64, i64* %b, align 8, !dbg !2799
  %shl4775 = shl i64 %2647, 36, !dbg !2799
  %2648 = load i64, i64* %b, align 8, !dbg !2799
  %shr4776 = lshr i64 %2648, 28, !dbg !2799
  %or4777 = or i64 %shl4775, %shr4776, !dbg !2799
  %2649 = load i64, i64* %b, align 8, !dbg !2799
  %shl4778 = shl i64 %2649, 30, !dbg !2799
  %2650 = load i64, i64* %b, align 8, !dbg !2799
  %shr4779 = lshr i64 %2650, 34, !dbg !2799
  %or4780 = or i64 %shl4778, %shr4779, !dbg !2799
  %2651 = load i64, i64* %b, align 8, !dbg !2799
  %shl4781 = shl i64 %2651, 25, !dbg !2799
  %2652 = load i64, i64* %b, align 8, !dbg !2799
  %shr4782 = lshr i64 %2652, 39, !dbg !2799
  %or4783 = or i64 %shl4781, %shr4782, !dbg !2799
  %xor4784 = xor i64 %or4780, %or4783, !dbg !2799
  %xor4785 = xor i64 %or4777, %xor4784, !dbg !2799
  %2653 = load i64, i64* %b, align 8, !dbg !2799
  %2654 = load i64, i64* %c, align 8, !dbg !2799
  %and4786 = and i64 %2653, %2654, !dbg !2799
  %2655 = load i64, i64* %d, align 8, !dbg !2799
  %2656 = load i64, i64* %b, align 8, !dbg !2799
  %2657 = load i64, i64* %c, align 8, !dbg !2799
  %or4787 = or i64 %2656, %2657, !dbg !2799
  %and4788 = and i64 %2655, %or4787, !dbg !2799
  %or4789 = or i64 %and4786, %and4788, !dbg !2799
  %add4790 = add i64 %xor4785, %or4789, !dbg !2799
  store i64 %add4790, i64* %t04774, align 8, !dbg !2799
  call void @llvm.dbg.declare(metadata i64* %t14791, metadata !2801, metadata !DIExpression()), !dbg !2799
  %2658 = load i64, i64* %a, align 8, !dbg !2799
  %2659 = load i64, i64* %f, align 8, !dbg !2799
  %shl4792 = shl i64 %2659, 50, !dbg !2799
  %2660 = load i64, i64* %f, align 8, !dbg !2799
  %shr4793 = lshr i64 %2660, 14, !dbg !2799
  %or4794 = or i64 %shl4792, %shr4793, !dbg !2799
  %2661 = load i64, i64* %f, align 8, !dbg !2799
  %shl4795 = shl i64 %2661, 46, !dbg !2799
  %2662 = load i64, i64* %f, align 8, !dbg !2799
  %shr4796 = lshr i64 %2662, 18, !dbg !2799
  %or4797 = or i64 %shl4795, %shr4796, !dbg !2799
  %2663 = load i64, i64* %f, align 8, !dbg !2799
  %shl4798 = shl i64 %2663, 23, !dbg !2799
  %2664 = load i64, i64* %f, align 8, !dbg !2799
  %shr4799 = lshr i64 %2664, 41, !dbg !2799
  %or4800 = or i64 %shl4798, %shr4799, !dbg !2799
  %xor4801 = xor i64 %or4797, %or4800, !dbg !2799
  %xor4802 = xor i64 %or4794, %xor4801, !dbg !2799
  %2665 = load i64, i64* %h, align 8, !dbg !2799
  %2666 = load i64, i64* %f, align 8, !dbg !2799
  %2667 = load i64, i64* %g, align 8, !dbg !2799
  %2668 = load i64, i64* %h, align 8, !dbg !2799
  %xor4803 = xor i64 %2667, %2668, !dbg !2799
  %and4804 = and i64 %2666, %xor4803, !dbg !2799
  %xor4805 = xor i64 %2665, %and4804, !dbg !2799
  %2669 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 71), align 8, !dbg !2799
  %arrayidx4806 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 7, !dbg !2799
  %2670 = load i64, i64* %arrayidx4806, align 8, !dbg !2799
  %arrayidx4807 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 5, !dbg !2799
  %2671 = load i64, i64* %arrayidx4807, align 8, !dbg !2799
  %shl4808 = shl i64 %2671, 45, !dbg !2799
  %arrayidx4809 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 5, !dbg !2799
  %2672 = load i64, i64* %arrayidx4809, align 8, !dbg !2799
  %shr4810 = lshr i64 %2672, 19, !dbg !2799
  %or4811 = or i64 %shl4808, %shr4810, !dbg !2799
  %arrayidx4812 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 5, !dbg !2799
  %2673 = load i64, i64* %arrayidx4812, align 8, !dbg !2799
  %shl4813 = shl i64 %2673, 3, !dbg !2799
  %arrayidx4814 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 5, !dbg !2799
  %2674 = load i64, i64* %arrayidx4814, align 8, !dbg !2799
  %shr4815 = lshr i64 %2674, 61, !dbg !2799
  %or4816 = or i64 %shl4813, %shr4815, !dbg !2799
  %arrayidx4817 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 5, !dbg !2799
  %2675 = load i64, i64* %arrayidx4817, align 8, !dbg !2799
  %shr4818 = lshr i64 %2675, 6, !dbg !2799
  %xor4819 = xor i64 %or4816, %shr4818, !dbg !2799
  %xor4820 = xor i64 %or4811, %xor4819, !dbg !2799
  %arrayidx4821 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 0, !dbg !2799
  %2676 = load i64, i64* %arrayidx4821, align 8, !dbg !2799
  %arrayidx4822 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 8, !dbg !2799
  %2677 = load i64, i64* %arrayidx4822, align 8, !dbg !2799
  %shl4823 = shl i64 %2677, 63, !dbg !2799
  %arrayidx4824 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 8, !dbg !2799
  %2678 = load i64, i64* %arrayidx4824, align 8, !dbg !2799
  %shr4825 = lshr i64 %2678, 1, !dbg !2799
  %or4826 = or i64 %shl4823, %shr4825, !dbg !2799
  %arrayidx4827 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 8, !dbg !2799
  %2679 = load i64, i64* %arrayidx4827, align 8, !dbg !2799
  %shl4828 = shl i64 %2679, 56, !dbg !2799
  %arrayidx4829 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 8, !dbg !2799
  %2680 = load i64, i64* %arrayidx4829, align 8, !dbg !2799
  %shr4830 = lshr i64 %2680, 8, !dbg !2799
  %or4831 = or i64 %shl4828, %shr4830, !dbg !2799
  %arrayidx4832 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 8, !dbg !2799
  %2681 = load i64, i64* %arrayidx4832, align 8, !dbg !2799
  %shr4833 = lshr i64 %2681, 7, !dbg !2799
  %xor4834 = xor i64 %or4831, %shr4833, !dbg !2799
  %xor4835 = xor i64 %or4826, %xor4834, !dbg !2799
  %add4836 = add i64 %2676, %xor4835, !dbg !2799
  %add4837 = add i64 %xor4820, %add4836, !dbg !2799
  %add4838 = add i64 %2670, %add4837, !dbg !2799
  %arrayidx4839 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 7, !dbg !2799
  store i64 %add4838, i64* %arrayidx4839, align 8, !dbg !2799
  %add4840 = add i64 %2669, %add4838, !dbg !2799
  %add4841 = add i64 %xor4805, %add4840, !dbg !2799
  %add4842 = add i64 %xor4802, %add4841, !dbg !2799
  %add4843 = add i64 %2658, %add4842, !dbg !2799
  store i64 %add4843, i64* %t14791, align 8, !dbg !2799
  %2682 = load i64, i64* %e, align 8, !dbg !2799
  %2683 = load i64, i64* %t14791, align 8, !dbg !2799
  %add4844 = add i64 %2682, %2683, !dbg !2799
  store i64 %add4844, i64* %e, align 8, !dbg !2799
  %2684 = load i64, i64* %t04774, align 8, !dbg !2799
  %2685 = load i64, i64* %t14791, align 8, !dbg !2799
  %add4845 = add i64 %2684, %2685, !dbg !2799
  store i64 %add4845, i64* %a, align 8, !dbg !2799
  br label %do.end.4846, !dbg !2799

do.end.4846:                                      ; preds = %do.body.4773
  br label %do.body.4847, !dbg !2802

do.body.4847:                                     ; preds = %do.end.4846
  call void @llvm.dbg.declare(metadata i64* %t04848, metadata !2803, metadata !DIExpression()), !dbg !2805
  %2686 = load i64, i64* %a, align 8, !dbg !2806
  %shl4849 = shl i64 %2686, 36, !dbg !2806
  %2687 = load i64, i64* %a, align 8, !dbg !2806
  %shr4850 = lshr i64 %2687, 28, !dbg !2806
  %or4851 = or i64 %shl4849, %shr4850, !dbg !2806
  %2688 = load i64, i64* %a, align 8, !dbg !2806
  %shl4852 = shl i64 %2688, 30, !dbg !2806
  %2689 = load i64, i64* %a, align 8, !dbg !2806
  %shr4853 = lshr i64 %2689, 34, !dbg !2806
  %or4854 = or i64 %shl4852, %shr4853, !dbg !2806
  %2690 = load i64, i64* %a, align 8, !dbg !2806
  %shl4855 = shl i64 %2690, 25, !dbg !2806
  %2691 = load i64, i64* %a, align 8, !dbg !2806
  %shr4856 = lshr i64 %2691, 39, !dbg !2806
  %or4857 = or i64 %shl4855, %shr4856, !dbg !2806
  %xor4858 = xor i64 %or4854, %or4857, !dbg !2806
  %xor4859 = xor i64 %or4851, %xor4858, !dbg !2806
  %2692 = load i64, i64* %a, align 8, !dbg !2806
  %2693 = load i64, i64* %b, align 8, !dbg !2806
  %and4860 = and i64 %2692, %2693, !dbg !2806
  %2694 = load i64, i64* %c, align 8, !dbg !2806
  %2695 = load i64, i64* %a, align 8, !dbg !2806
  %2696 = load i64, i64* %b, align 8, !dbg !2806
  %or4861 = or i64 %2695, %2696, !dbg !2806
  %and4862 = and i64 %2694, %or4861, !dbg !2806
  %or4863 = or i64 %and4860, %and4862, !dbg !2806
  %add4864 = add i64 %xor4859, %or4863, !dbg !2806
  store i64 %add4864, i64* %t04848, align 8, !dbg !2806
  call void @llvm.dbg.declare(metadata i64* %t14865, metadata !2808, metadata !DIExpression()), !dbg !2806
  %2697 = load i64, i64* %h, align 8, !dbg !2806
  %2698 = load i64, i64* %e, align 8, !dbg !2806
  %shl4866 = shl i64 %2698, 50, !dbg !2806
  %2699 = load i64, i64* %e, align 8, !dbg !2806
  %shr4867 = lshr i64 %2699, 14, !dbg !2806
  %or4868 = or i64 %shl4866, %shr4867, !dbg !2806
  %2700 = load i64, i64* %e, align 8, !dbg !2806
  %shl4869 = shl i64 %2700, 46, !dbg !2806
  %2701 = load i64, i64* %e, align 8, !dbg !2806
  %shr4870 = lshr i64 %2701, 18, !dbg !2806
  %or4871 = or i64 %shl4869, %shr4870, !dbg !2806
  %2702 = load i64, i64* %e, align 8, !dbg !2806
  %shl4872 = shl i64 %2702, 23, !dbg !2806
  %2703 = load i64, i64* %e, align 8, !dbg !2806
  %shr4873 = lshr i64 %2703, 41, !dbg !2806
  %or4874 = or i64 %shl4872, %shr4873, !dbg !2806
  %xor4875 = xor i64 %or4871, %or4874, !dbg !2806
  %xor4876 = xor i64 %or4868, %xor4875, !dbg !2806
  %2704 = load i64, i64* %g, align 8, !dbg !2806
  %2705 = load i64, i64* %e, align 8, !dbg !2806
  %2706 = load i64, i64* %f, align 8, !dbg !2806
  %2707 = load i64, i64* %g, align 8, !dbg !2806
  %xor4877 = xor i64 %2706, %2707, !dbg !2806
  %and4878 = and i64 %2705, %xor4877, !dbg !2806
  %xor4879 = xor i64 %2704, %and4878, !dbg !2806
  %2708 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 72), align 8, !dbg !2806
  %arrayidx4880 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 8, !dbg !2806
  %2709 = load i64, i64* %arrayidx4880, align 8, !dbg !2806
  %arrayidx4881 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 6, !dbg !2806
  %2710 = load i64, i64* %arrayidx4881, align 8, !dbg !2806
  %shl4882 = shl i64 %2710, 45, !dbg !2806
  %arrayidx4883 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 6, !dbg !2806
  %2711 = load i64, i64* %arrayidx4883, align 8, !dbg !2806
  %shr4884 = lshr i64 %2711, 19, !dbg !2806
  %or4885 = or i64 %shl4882, %shr4884, !dbg !2806
  %arrayidx4886 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 6, !dbg !2806
  %2712 = load i64, i64* %arrayidx4886, align 8, !dbg !2806
  %shl4887 = shl i64 %2712, 3, !dbg !2806
  %arrayidx4888 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 6, !dbg !2806
  %2713 = load i64, i64* %arrayidx4888, align 8, !dbg !2806
  %shr4889 = lshr i64 %2713, 61, !dbg !2806
  %or4890 = or i64 %shl4887, %shr4889, !dbg !2806
  %arrayidx4891 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 6, !dbg !2806
  %2714 = load i64, i64* %arrayidx4891, align 8, !dbg !2806
  %shr4892 = lshr i64 %2714, 6, !dbg !2806
  %xor4893 = xor i64 %or4890, %shr4892, !dbg !2806
  %xor4894 = xor i64 %or4885, %xor4893, !dbg !2806
  %arrayidx4895 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 1, !dbg !2806
  %2715 = load i64, i64* %arrayidx4895, align 8, !dbg !2806
  %arrayidx4896 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 9, !dbg !2806
  %2716 = load i64, i64* %arrayidx4896, align 8, !dbg !2806
  %shl4897 = shl i64 %2716, 63, !dbg !2806
  %arrayidx4898 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 9, !dbg !2806
  %2717 = load i64, i64* %arrayidx4898, align 8, !dbg !2806
  %shr4899 = lshr i64 %2717, 1, !dbg !2806
  %or4900 = or i64 %shl4897, %shr4899, !dbg !2806
  %arrayidx4901 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 9, !dbg !2806
  %2718 = load i64, i64* %arrayidx4901, align 8, !dbg !2806
  %shl4902 = shl i64 %2718, 56, !dbg !2806
  %arrayidx4903 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 9, !dbg !2806
  %2719 = load i64, i64* %arrayidx4903, align 8, !dbg !2806
  %shr4904 = lshr i64 %2719, 8, !dbg !2806
  %or4905 = or i64 %shl4902, %shr4904, !dbg !2806
  %arrayidx4906 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 9, !dbg !2806
  %2720 = load i64, i64* %arrayidx4906, align 8, !dbg !2806
  %shr4907 = lshr i64 %2720, 7, !dbg !2806
  %xor4908 = xor i64 %or4905, %shr4907, !dbg !2806
  %xor4909 = xor i64 %or4900, %xor4908, !dbg !2806
  %add4910 = add i64 %2715, %xor4909, !dbg !2806
  %add4911 = add i64 %xor4894, %add4910, !dbg !2806
  %add4912 = add i64 %2709, %add4911, !dbg !2806
  %arrayidx4913 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 8, !dbg !2806
  store i64 %add4912, i64* %arrayidx4913, align 8, !dbg !2806
  %add4914 = add i64 %2708, %add4912, !dbg !2806
  %add4915 = add i64 %xor4879, %add4914, !dbg !2806
  %add4916 = add i64 %xor4876, %add4915, !dbg !2806
  %add4917 = add i64 %2697, %add4916, !dbg !2806
  store i64 %add4917, i64* %t14865, align 8, !dbg !2806
  %2721 = load i64, i64* %d, align 8, !dbg !2806
  %2722 = load i64, i64* %t14865, align 8, !dbg !2806
  %add4918 = add i64 %2721, %2722, !dbg !2806
  store i64 %add4918, i64* %d, align 8, !dbg !2806
  %2723 = load i64, i64* %t04848, align 8, !dbg !2806
  %2724 = load i64, i64* %t14865, align 8, !dbg !2806
  %add4919 = add i64 %2723, %2724, !dbg !2806
  store i64 %add4919, i64* %h, align 8, !dbg !2806
  br label %do.end.4920, !dbg !2806

do.end.4920:                                      ; preds = %do.body.4847
  br label %do.body.4921, !dbg !2809

do.body.4921:                                     ; preds = %do.end.4920
  call void @llvm.dbg.declare(metadata i64* %t04922, metadata !2810, metadata !DIExpression()), !dbg !2812
  %2725 = load i64, i64* %h, align 8, !dbg !2813
  %shl4923 = shl i64 %2725, 36, !dbg !2813
  %2726 = load i64, i64* %h, align 8, !dbg !2813
  %shr4924 = lshr i64 %2726, 28, !dbg !2813
  %or4925 = or i64 %shl4923, %shr4924, !dbg !2813
  %2727 = load i64, i64* %h, align 8, !dbg !2813
  %shl4926 = shl i64 %2727, 30, !dbg !2813
  %2728 = load i64, i64* %h, align 8, !dbg !2813
  %shr4927 = lshr i64 %2728, 34, !dbg !2813
  %or4928 = or i64 %shl4926, %shr4927, !dbg !2813
  %2729 = load i64, i64* %h, align 8, !dbg !2813
  %shl4929 = shl i64 %2729, 25, !dbg !2813
  %2730 = load i64, i64* %h, align 8, !dbg !2813
  %shr4930 = lshr i64 %2730, 39, !dbg !2813
  %or4931 = or i64 %shl4929, %shr4930, !dbg !2813
  %xor4932 = xor i64 %or4928, %or4931, !dbg !2813
  %xor4933 = xor i64 %or4925, %xor4932, !dbg !2813
  %2731 = load i64, i64* %h, align 8, !dbg !2813
  %2732 = load i64, i64* %a, align 8, !dbg !2813
  %and4934 = and i64 %2731, %2732, !dbg !2813
  %2733 = load i64, i64* %b, align 8, !dbg !2813
  %2734 = load i64, i64* %h, align 8, !dbg !2813
  %2735 = load i64, i64* %a, align 8, !dbg !2813
  %or4935 = or i64 %2734, %2735, !dbg !2813
  %and4936 = and i64 %2733, %or4935, !dbg !2813
  %or4937 = or i64 %and4934, %and4936, !dbg !2813
  %add4938 = add i64 %xor4933, %or4937, !dbg !2813
  store i64 %add4938, i64* %t04922, align 8, !dbg !2813
  call void @llvm.dbg.declare(metadata i64* %t14939, metadata !2815, metadata !DIExpression()), !dbg !2813
  %2736 = load i64, i64* %g, align 8, !dbg !2813
  %2737 = load i64, i64* %d, align 8, !dbg !2813
  %shl4940 = shl i64 %2737, 50, !dbg !2813
  %2738 = load i64, i64* %d, align 8, !dbg !2813
  %shr4941 = lshr i64 %2738, 14, !dbg !2813
  %or4942 = or i64 %shl4940, %shr4941, !dbg !2813
  %2739 = load i64, i64* %d, align 8, !dbg !2813
  %shl4943 = shl i64 %2739, 46, !dbg !2813
  %2740 = load i64, i64* %d, align 8, !dbg !2813
  %shr4944 = lshr i64 %2740, 18, !dbg !2813
  %or4945 = or i64 %shl4943, %shr4944, !dbg !2813
  %2741 = load i64, i64* %d, align 8, !dbg !2813
  %shl4946 = shl i64 %2741, 23, !dbg !2813
  %2742 = load i64, i64* %d, align 8, !dbg !2813
  %shr4947 = lshr i64 %2742, 41, !dbg !2813
  %or4948 = or i64 %shl4946, %shr4947, !dbg !2813
  %xor4949 = xor i64 %or4945, %or4948, !dbg !2813
  %xor4950 = xor i64 %or4942, %xor4949, !dbg !2813
  %2743 = load i64, i64* %f, align 8, !dbg !2813
  %2744 = load i64, i64* %d, align 8, !dbg !2813
  %2745 = load i64, i64* %e, align 8, !dbg !2813
  %2746 = load i64, i64* %f, align 8, !dbg !2813
  %xor4951 = xor i64 %2745, %2746, !dbg !2813
  %and4952 = and i64 %2744, %xor4951, !dbg !2813
  %xor4953 = xor i64 %2743, %and4952, !dbg !2813
  %2747 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 73), align 8, !dbg !2813
  %arrayidx4954 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 9, !dbg !2813
  %2748 = load i64, i64* %arrayidx4954, align 8, !dbg !2813
  %arrayidx4955 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 7, !dbg !2813
  %2749 = load i64, i64* %arrayidx4955, align 8, !dbg !2813
  %shl4956 = shl i64 %2749, 45, !dbg !2813
  %arrayidx4957 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 7, !dbg !2813
  %2750 = load i64, i64* %arrayidx4957, align 8, !dbg !2813
  %shr4958 = lshr i64 %2750, 19, !dbg !2813
  %or4959 = or i64 %shl4956, %shr4958, !dbg !2813
  %arrayidx4960 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 7, !dbg !2813
  %2751 = load i64, i64* %arrayidx4960, align 8, !dbg !2813
  %shl4961 = shl i64 %2751, 3, !dbg !2813
  %arrayidx4962 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 7, !dbg !2813
  %2752 = load i64, i64* %arrayidx4962, align 8, !dbg !2813
  %shr4963 = lshr i64 %2752, 61, !dbg !2813
  %or4964 = or i64 %shl4961, %shr4963, !dbg !2813
  %arrayidx4965 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 7, !dbg !2813
  %2753 = load i64, i64* %arrayidx4965, align 8, !dbg !2813
  %shr4966 = lshr i64 %2753, 6, !dbg !2813
  %xor4967 = xor i64 %or4964, %shr4966, !dbg !2813
  %xor4968 = xor i64 %or4959, %xor4967, !dbg !2813
  %arrayidx4969 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 2, !dbg !2813
  %2754 = load i64, i64* %arrayidx4969, align 8, !dbg !2813
  %arrayidx4970 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 10, !dbg !2813
  %2755 = load i64, i64* %arrayidx4970, align 8, !dbg !2813
  %shl4971 = shl i64 %2755, 63, !dbg !2813
  %arrayidx4972 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 10, !dbg !2813
  %2756 = load i64, i64* %arrayidx4972, align 8, !dbg !2813
  %shr4973 = lshr i64 %2756, 1, !dbg !2813
  %or4974 = or i64 %shl4971, %shr4973, !dbg !2813
  %arrayidx4975 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 10, !dbg !2813
  %2757 = load i64, i64* %arrayidx4975, align 8, !dbg !2813
  %shl4976 = shl i64 %2757, 56, !dbg !2813
  %arrayidx4977 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 10, !dbg !2813
  %2758 = load i64, i64* %arrayidx4977, align 8, !dbg !2813
  %shr4978 = lshr i64 %2758, 8, !dbg !2813
  %or4979 = or i64 %shl4976, %shr4978, !dbg !2813
  %arrayidx4980 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 10, !dbg !2813
  %2759 = load i64, i64* %arrayidx4980, align 8, !dbg !2813
  %shr4981 = lshr i64 %2759, 7, !dbg !2813
  %xor4982 = xor i64 %or4979, %shr4981, !dbg !2813
  %xor4983 = xor i64 %or4974, %xor4982, !dbg !2813
  %add4984 = add i64 %2754, %xor4983, !dbg !2813
  %add4985 = add i64 %xor4968, %add4984, !dbg !2813
  %add4986 = add i64 %2748, %add4985, !dbg !2813
  %arrayidx4987 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 9, !dbg !2813
  store i64 %add4986, i64* %arrayidx4987, align 8, !dbg !2813
  %add4988 = add i64 %2747, %add4986, !dbg !2813
  %add4989 = add i64 %xor4953, %add4988, !dbg !2813
  %add4990 = add i64 %xor4950, %add4989, !dbg !2813
  %add4991 = add i64 %2736, %add4990, !dbg !2813
  store i64 %add4991, i64* %t14939, align 8, !dbg !2813
  %2760 = load i64, i64* %c, align 8, !dbg !2813
  %2761 = load i64, i64* %t14939, align 8, !dbg !2813
  %add4992 = add i64 %2760, %2761, !dbg !2813
  store i64 %add4992, i64* %c, align 8, !dbg !2813
  %2762 = load i64, i64* %t04922, align 8, !dbg !2813
  %2763 = load i64, i64* %t14939, align 8, !dbg !2813
  %add4993 = add i64 %2762, %2763, !dbg !2813
  store i64 %add4993, i64* %g, align 8, !dbg !2813
  br label %do.end.4994, !dbg !2813

do.end.4994:                                      ; preds = %do.body.4921
  br label %do.body.4995, !dbg !2816

do.body.4995:                                     ; preds = %do.end.4994
  call void @llvm.dbg.declare(metadata i64* %t04996, metadata !2817, metadata !DIExpression()), !dbg !2819
  %2764 = load i64, i64* %g, align 8, !dbg !2820
  %shl4997 = shl i64 %2764, 36, !dbg !2820
  %2765 = load i64, i64* %g, align 8, !dbg !2820
  %shr4998 = lshr i64 %2765, 28, !dbg !2820
  %or4999 = or i64 %shl4997, %shr4998, !dbg !2820
  %2766 = load i64, i64* %g, align 8, !dbg !2820
  %shl5000 = shl i64 %2766, 30, !dbg !2820
  %2767 = load i64, i64* %g, align 8, !dbg !2820
  %shr5001 = lshr i64 %2767, 34, !dbg !2820
  %or5002 = or i64 %shl5000, %shr5001, !dbg !2820
  %2768 = load i64, i64* %g, align 8, !dbg !2820
  %shl5003 = shl i64 %2768, 25, !dbg !2820
  %2769 = load i64, i64* %g, align 8, !dbg !2820
  %shr5004 = lshr i64 %2769, 39, !dbg !2820
  %or5005 = or i64 %shl5003, %shr5004, !dbg !2820
  %xor5006 = xor i64 %or5002, %or5005, !dbg !2820
  %xor5007 = xor i64 %or4999, %xor5006, !dbg !2820
  %2770 = load i64, i64* %g, align 8, !dbg !2820
  %2771 = load i64, i64* %h, align 8, !dbg !2820
  %and5008 = and i64 %2770, %2771, !dbg !2820
  %2772 = load i64, i64* %a, align 8, !dbg !2820
  %2773 = load i64, i64* %g, align 8, !dbg !2820
  %2774 = load i64, i64* %h, align 8, !dbg !2820
  %or5009 = or i64 %2773, %2774, !dbg !2820
  %and5010 = and i64 %2772, %or5009, !dbg !2820
  %or5011 = or i64 %and5008, %and5010, !dbg !2820
  %add5012 = add i64 %xor5007, %or5011, !dbg !2820
  store i64 %add5012, i64* %t04996, align 8, !dbg !2820
  call void @llvm.dbg.declare(metadata i64* %t15013, metadata !2822, metadata !DIExpression()), !dbg !2820
  %2775 = load i64, i64* %f, align 8, !dbg !2820
  %2776 = load i64, i64* %c, align 8, !dbg !2820
  %shl5014 = shl i64 %2776, 50, !dbg !2820
  %2777 = load i64, i64* %c, align 8, !dbg !2820
  %shr5015 = lshr i64 %2777, 14, !dbg !2820
  %or5016 = or i64 %shl5014, %shr5015, !dbg !2820
  %2778 = load i64, i64* %c, align 8, !dbg !2820
  %shl5017 = shl i64 %2778, 46, !dbg !2820
  %2779 = load i64, i64* %c, align 8, !dbg !2820
  %shr5018 = lshr i64 %2779, 18, !dbg !2820
  %or5019 = or i64 %shl5017, %shr5018, !dbg !2820
  %2780 = load i64, i64* %c, align 8, !dbg !2820
  %shl5020 = shl i64 %2780, 23, !dbg !2820
  %2781 = load i64, i64* %c, align 8, !dbg !2820
  %shr5021 = lshr i64 %2781, 41, !dbg !2820
  %or5022 = or i64 %shl5020, %shr5021, !dbg !2820
  %xor5023 = xor i64 %or5019, %or5022, !dbg !2820
  %xor5024 = xor i64 %or5016, %xor5023, !dbg !2820
  %2782 = load i64, i64* %e, align 8, !dbg !2820
  %2783 = load i64, i64* %c, align 8, !dbg !2820
  %2784 = load i64, i64* %d, align 8, !dbg !2820
  %2785 = load i64, i64* %e, align 8, !dbg !2820
  %xor5025 = xor i64 %2784, %2785, !dbg !2820
  %and5026 = and i64 %2783, %xor5025, !dbg !2820
  %xor5027 = xor i64 %2782, %and5026, !dbg !2820
  %2786 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 74), align 8, !dbg !2820
  %arrayidx5028 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 10, !dbg !2820
  %2787 = load i64, i64* %arrayidx5028, align 8, !dbg !2820
  %arrayidx5029 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 8, !dbg !2820
  %2788 = load i64, i64* %arrayidx5029, align 8, !dbg !2820
  %shl5030 = shl i64 %2788, 45, !dbg !2820
  %arrayidx5031 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 8, !dbg !2820
  %2789 = load i64, i64* %arrayidx5031, align 8, !dbg !2820
  %shr5032 = lshr i64 %2789, 19, !dbg !2820
  %or5033 = or i64 %shl5030, %shr5032, !dbg !2820
  %arrayidx5034 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 8, !dbg !2820
  %2790 = load i64, i64* %arrayidx5034, align 8, !dbg !2820
  %shl5035 = shl i64 %2790, 3, !dbg !2820
  %arrayidx5036 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 8, !dbg !2820
  %2791 = load i64, i64* %arrayidx5036, align 8, !dbg !2820
  %shr5037 = lshr i64 %2791, 61, !dbg !2820
  %or5038 = or i64 %shl5035, %shr5037, !dbg !2820
  %arrayidx5039 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 8, !dbg !2820
  %2792 = load i64, i64* %arrayidx5039, align 8, !dbg !2820
  %shr5040 = lshr i64 %2792, 6, !dbg !2820
  %xor5041 = xor i64 %or5038, %shr5040, !dbg !2820
  %xor5042 = xor i64 %or5033, %xor5041, !dbg !2820
  %arrayidx5043 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 3, !dbg !2820
  %2793 = load i64, i64* %arrayidx5043, align 8, !dbg !2820
  %arrayidx5044 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 11, !dbg !2820
  %2794 = load i64, i64* %arrayidx5044, align 8, !dbg !2820
  %shl5045 = shl i64 %2794, 63, !dbg !2820
  %arrayidx5046 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 11, !dbg !2820
  %2795 = load i64, i64* %arrayidx5046, align 8, !dbg !2820
  %shr5047 = lshr i64 %2795, 1, !dbg !2820
  %or5048 = or i64 %shl5045, %shr5047, !dbg !2820
  %arrayidx5049 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 11, !dbg !2820
  %2796 = load i64, i64* %arrayidx5049, align 8, !dbg !2820
  %shl5050 = shl i64 %2796, 56, !dbg !2820
  %arrayidx5051 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 11, !dbg !2820
  %2797 = load i64, i64* %arrayidx5051, align 8, !dbg !2820
  %shr5052 = lshr i64 %2797, 8, !dbg !2820
  %or5053 = or i64 %shl5050, %shr5052, !dbg !2820
  %arrayidx5054 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 11, !dbg !2820
  %2798 = load i64, i64* %arrayidx5054, align 8, !dbg !2820
  %shr5055 = lshr i64 %2798, 7, !dbg !2820
  %xor5056 = xor i64 %or5053, %shr5055, !dbg !2820
  %xor5057 = xor i64 %or5048, %xor5056, !dbg !2820
  %add5058 = add i64 %2793, %xor5057, !dbg !2820
  %add5059 = add i64 %xor5042, %add5058, !dbg !2820
  %add5060 = add i64 %2787, %add5059, !dbg !2820
  %arrayidx5061 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 10, !dbg !2820
  store i64 %add5060, i64* %arrayidx5061, align 8, !dbg !2820
  %add5062 = add i64 %2786, %add5060, !dbg !2820
  %add5063 = add i64 %xor5027, %add5062, !dbg !2820
  %add5064 = add i64 %xor5024, %add5063, !dbg !2820
  %add5065 = add i64 %2775, %add5064, !dbg !2820
  store i64 %add5065, i64* %t15013, align 8, !dbg !2820
  %2799 = load i64, i64* %b, align 8, !dbg !2820
  %2800 = load i64, i64* %t15013, align 8, !dbg !2820
  %add5066 = add i64 %2799, %2800, !dbg !2820
  store i64 %add5066, i64* %b, align 8, !dbg !2820
  %2801 = load i64, i64* %t04996, align 8, !dbg !2820
  %2802 = load i64, i64* %t15013, align 8, !dbg !2820
  %add5067 = add i64 %2801, %2802, !dbg !2820
  store i64 %add5067, i64* %f, align 8, !dbg !2820
  br label %do.end.5068, !dbg !2820

do.end.5068:                                      ; preds = %do.body.4995
  br label %do.body.5069, !dbg !2823

do.body.5069:                                     ; preds = %do.end.5068
  call void @llvm.dbg.declare(metadata i64* %t05070, metadata !2824, metadata !DIExpression()), !dbg !2826
  %2803 = load i64, i64* %f, align 8, !dbg !2827
  %shl5071 = shl i64 %2803, 36, !dbg !2827
  %2804 = load i64, i64* %f, align 8, !dbg !2827
  %shr5072 = lshr i64 %2804, 28, !dbg !2827
  %or5073 = or i64 %shl5071, %shr5072, !dbg !2827
  %2805 = load i64, i64* %f, align 8, !dbg !2827
  %shl5074 = shl i64 %2805, 30, !dbg !2827
  %2806 = load i64, i64* %f, align 8, !dbg !2827
  %shr5075 = lshr i64 %2806, 34, !dbg !2827
  %or5076 = or i64 %shl5074, %shr5075, !dbg !2827
  %2807 = load i64, i64* %f, align 8, !dbg !2827
  %shl5077 = shl i64 %2807, 25, !dbg !2827
  %2808 = load i64, i64* %f, align 8, !dbg !2827
  %shr5078 = lshr i64 %2808, 39, !dbg !2827
  %or5079 = or i64 %shl5077, %shr5078, !dbg !2827
  %xor5080 = xor i64 %or5076, %or5079, !dbg !2827
  %xor5081 = xor i64 %or5073, %xor5080, !dbg !2827
  %2809 = load i64, i64* %f, align 8, !dbg !2827
  %2810 = load i64, i64* %g, align 8, !dbg !2827
  %and5082 = and i64 %2809, %2810, !dbg !2827
  %2811 = load i64, i64* %h, align 8, !dbg !2827
  %2812 = load i64, i64* %f, align 8, !dbg !2827
  %2813 = load i64, i64* %g, align 8, !dbg !2827
  %or5083 = or i64 %2812, %2813, !dbg !2827
  %and5084 = and i64 %2811, %or5083, !dbg !2827
  %or5085 = or i64 %and5082, %and5084, !dbg !2827
  %add5086 = add i64 %xor5081, %or5085, !dbg !2827
  store i64 %add5086, i64* %t05070, align 8, !dbg !2827
  call void @llvm.dbg.declare(metadata i64* %t15087, metadata !2829, metadata !DIExpression()), !dbg !2827
  %2814 = load i64, i64* %e, align 8, !dbg !2827
  %2815 = load i64, i64* %b, align 8, !dbg !2827
  %shl5088 = shl i64 %2815, 50, !dbg !2827
  %2816 = load i64, i64* %b, align 8, !dbg !2827
  %shr5089 = lshr i64 %2816, 14, !dbg !2827
  %or5090 = or i64 %shl5088, %shr5089, !dbg !2827
  %2817 = load i64, i64* %b, align 8, !dbg !2827
  %shl5091 = shl i64 %2817, 46, !dbg !2827
  %2818 = load i64, i64* %b, align 8, !dbg !2827
  %shr5092 = lshr i64 %2818, 18, !dbg !2827
  %or5093 = or i64 %shl5091, %shr5092, !dbg !2827
  %2819 = load i64, i64* %b, align 8, !dbg !2827
  %shl5094 = shl i64 %2819, 23, !dbg !2827
  %2820 = load i64, i64* %b, align 8, !dbg !2827
  %shr5095 = lshr i64 %2820, 41, !dbg !2827
  %or5096 = or i64 %shl5094, %shr5095, !dbg !2827
  %xor5097 = xor i64 %or5093, %or5096, !dbg !2827
  %xor5098 = xor i64 %or5090, %xor5097, !dbg !2827
  %2821 = load i64, i64* %d, align 8, !dbg !2827
  %2822 = load i64, i64* %b, align 8, !dbg !2827
  %2823 = load i64, i64* %c, align 8, !dbg !2827
  %2824 = load i64, i64* %d, align 8, !dbg !2827
  %xor5099 = xor i64 %2823, %2824, !dbg !2827
  %and5100 = and i64 %2822, %xor5099, !dbg !2827
  %xor5101 = xor i64 %2821, %and5100, !dbg !2827
  %2825 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 75), align 8, !dbg !2827
  %arrayidx5102 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 11, !dbg !2827
  %2826 = load i64, i64* %arrayidx5102, align 8, !dbg !2827
  %arrayidx5103 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 9, !dbg !2827
  %2827 = load i64, i64* %arrayidx5103, align 8, !dbg !2827
  %shl5104 = shl i64 %2827, 45, !dbg !2827
  %arrayidx5105 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 9, !dbg !2827
  %2828 = load i64, i64* %arrayidx5105, align 8, !dbg !2827
  %shr5106 = lshr i64 %2828, 19, !dbg !2827
  %or5107 = or i64 %shl5104, %shr5106, !dbg !2827
  %arrayidx5108 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 9, !dbg !2827
  %2829 = load i64, i64* %arrayidx5108, align 8, !dbg !2827
  %shl5109 = shl i64 %2829, 3, !dbg !2827
  %arrayidx5110 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 9, !dbg !2827
  %2830 = load i64, i64* %arrayidx5110, align 8, !dbg !2827
  %shr5111 = lshr i64 %2830, 61, !dbg !2827
  %or5112 = or i64 %shl5109, %shr5111, !dbg !2827
  %arrayidx5113 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 9, !dbg !2827
  %2831 = load i64, i64* %arrayidx5113, align 8, !dbg !2827
  %shr5114 = lshr i64 %2831, 6, !dbg !2827
  %xor5115 = xor i64 %or5112, %shr5114, !dbg !2827
  %xor5116 = xor i64 %or5107, %xor5115, !dbg !2827
  %arrayidx5117 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 4, !dbg !2827
  %2832 = load i64, i64* %arrayidx5117, align 8, !dbg !2827
  %arrayidx5118 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 12, !dbg !2827
  %2833 = load i64, i64* %arrayidx5118, align 8, !dbg !2827
  %shl5119 = shl i64 %2833, 63, !dbg !2827
  %arrayidx5120 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 12, !dbg !2827
  %2834 = load i64, i64* %arrayidx5120, align 8, !dbg !2827
  %shr5121 = lshr i64 %2834, 1, !dbg !2827
  %or5122 = or i64 %shl5119, %shr5121, !dbg !2827
  %arrayidx5123 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 12, !dbg !2827
  %2835 = load i64, i64* %arrayidx5123, align 8, !dbg !2827
  %shl5124 = shl i64 %2835, 56, !dbg !2827
  %arrayidx5125 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 12, !dbg !2827
  %2836 = load i64, i64* %arrayidx5125, align 8, !dbg !2827
  %shr5126 = lshr i64 %2836, 8, !dbg !2827
  %or5127 = or i64 %shl5124, %shr5126, !dbg !2827
  %arrayidx5128 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 12, !dbg !2827
  %2837 = load i64, i64* %arrayidx5128, align 8, !dbg !2827
  %shr5129 = lshr i64 %2837, 7, !dbg !2827
  %xor5130 = xor i64 %or5127, %shr5129, !dbg !2827
  %xor5131 = xor i64 %or5122, %xor5130, !dbg !2827
  %add5132 = add i64 %2832, %xor5131, !dbg !2827
  %add5133 = add i64 %xor5116, %add5132, !dbg !2827
  %add5134 = add i64 %2826, %add5133, !dbg !2827
  %arrayidx5135 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 11, !dbg !2827
  store i64 %add5134, i64* %arrayidx5135, align 8, !dbg !2827
  %add5136 = add i64 %2825, %add5134, !dbg !2827
  %add5137 = add i64 %xor5101, %add5136, !dbg !2827
  %add5138 = add i64 %xor5098, %add5137, !dbg !2827
  %add5139 = add i64 %2814, %add5138, !dbg !2827
  store i64 %add5139, i64* %t15087, align 8, !dbg !2827
  %2838 = load i64, i64* %a, align 8, !dbg !2827
  %2839 = load i64, i64* %t15087, align 8, !dbg !2827
  %add5140 = add i64 %2838, %2839, !dbg !2827
  store i64 %add5140, i64* %a, align 8, !dbg !2827
  %2840 = load i64, i64* %t05070, align 8, !dbg !2827
  %2841 = load i64, i64* %t15087, align 8, !dbg !2827
  %add5141 = add i64 %2840, %2841, !dbg !2827
  store i64 %add5141, i64* %e, align 8, !dbg !2827
  br label %do.end.5142, !dbg !2827

do.end.5142:                                      ; preds = %do.body.5069
  br label %do.body.5143, !dbg !2830

do.body.5143:                                     ; preds = %do.end.5142
  call void @llvm.dbg.declare(metadata i64* %t05144, metadata !2831, metadata !DIExpression()), !dbg !2833
  %2842 = load i64, i64* %e, align 8, !dbg !2834
  %shl5145 = shl i64 %2842, 36, !dbg !2834
  %2843 = load i64, i64* %e, align 8, !dbg !2834
  %shr5146 = lshr i64 %2843, 28, !dbg !2834
  %or5147 = or i64 %shl5145, %shr5146, !dbg !2834
  %2844 = load i64, i64* %e, align 8, !dbg !2834
  %shl5148 = shl i64 %2844, 30, !dbg !2834
  %2845 = load i64, i64* %e, align 8, !dbg !2834
  %shr5149 = lshr i64 %2845, 34, !dbg !2834
  %or5150 = or i64 %shl5148, %shr5149, !dbg !2834
  %2846 = load i64, i64* %e, align 8, !dbg !2834
  %shl5151 = shl i64 %2846, 25, !dbg !2834
  %2847 = load i64, i64* %e, align 8, !dbg !2834
  %shr5152 = lshr i64 %2847, 39, !dbg !2834
  %or5153 = or i64 %shl5151, %shr5152, !dbg !2834
  %xor5154 = xor i64 %or5150, %or5153, !dbg !2834
  %xor5155 = xor i64 %or5147, %xor5154, !dbg !2834
  %2848 = load i64, i64* %e, align 8, !dbg !2834
  %2849 = load i64, i64* %f, align 8, !dbg !2834
  %and5156 = and i64 %2848, %2849, !dbg !2834
  %2850 = load i64, i64* %g, align 8, !dbg !2834
  %2851 = load i64, i64* %e, align 8, !dbg !2834
  %2852 = load i64, i64* %f, align 8, !dbg !2834
  %or5157 = or i64 %2851, %2852, !dbg !2834
  %and5158 = and i64 %2850, %or5157, !dbg !2834
  %or5159 = or i64 %and5156, %and5158, !dbg !2834
  %add5160 = add i64 %xor5155, %or5159, !dbg !2834
  store i64 %add5160, i64* %t05144, align 8, !dbg !2834
  call void @llvm.dbg.declare(metadata i64* %t15161, metadata !2836, metadata !DIExpression()), !dbg !2834
  %2853 = load i64, i64* %d, align 8, !dbg !2834
  %2854 = load i64, i64* %a, align 8, !dbg !2834
  %shl5162 = shl i64 %2854, 50, !dbg !2834
  %2855 = load i64, i64* %a, align 8, !dbg !2834
  %shr5163 = lshr i64 %2855, 14, !dbg !2834
  %or5164 = or i64 %shl5162, %shr5163, !dbg !2834
  %2856 = load i64, i64* %a, align 8, !dbg !2834
  %shl5165 = shl i64 %2856, 46, !dbg !2834
  %2857 = load i64, i64* %a, align 8, !dbg !2834
  %shr5166 = lshr i64 %2857, 18, !dbg !2834
  %or5167 = or i64 %shl5165, %shr5166, !dbg !2834
  %2858 = load i64, i64* %a, align 8, !dbg !2834
  %shl5168 = shl i64 %2858, 23, !dbg !2834
  %2859 = load i64, i64* %a, align 8, !dbg !2834
  %shr5169 = lshr i64 %2859, 41, !dbg !2834
  %or5170 = or i64 %shl5168, %shr5169, !dbg !2834
  %xor5171 = xor i64 %or5167, %or5170, !dbg !2834
  %xor5172 = xor i64 %or5164, %xor5171, !dbg !2834
  %2860 = load i64, i64* %c, align 8, !dbg !2834
  %2861 = load i64, i64* %a, align 8, !dbg !2834
  %2862 = load i64, i64* %b, align 8, !dbg !2834
  %2863 = load i64, i64* %c, align 8, !dbg !2834
  %xor5173 = xor i64 %2862, %2863, !dbg !2834
  %and5174 = and i64 %2861, %xor5173, !dbg !2834
  %xor5175 = xor i64 %2860, %and5174, !dbg !2834
  %2864 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 76), align 8, !dbg !2834
  %arrayidx5176 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 12, !dbg !2834
  %2865 = load i64, i64* %arrayidx5176, align 8, !dbg !2834
  %arrayidx5177 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 10, !dbg !2834
  %2866 = load i64, i64* %arrayidx5177, align 8, !dbg !2834
  %shl5178 = shl i64 %2866, 45, !dbg !2834
  %arrayidx5179 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 10, !dbg !2834
  %2867 = load i64, i64* %arrayidx5179, align 8, !dbg !2834
  %shr5180 = lshr i64 %2867, 19, !dbg !2834
  %or5181 = or i64 %shl5178, %shr5180, !dbg !2834
  %arrayidx5182 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 10, !dbg !2834
  %2868 = load i64, i64* %arrayidx5182, align 8, !dbg !2834
  %shl5183 = shl i64 %2868, 3, !dbg !2834
  %arrayidx5184 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 10, !dbg !2834
  %2869 = load i64, i64* %arrayidx5184, align 8, !dbg !2834
  %shr5185 = lshr i64 %2869, 61, !dbg !2834
  %or5186 = or i64 %shl5183, %shr5185, !dbg !2834
  %arrayidx5187 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 10, !dbg !2834
  %2870 = load i64, i64* %arrayidx5187, align 8, !dbg !2834
  %shr5188 = lshr i64 %2870, 6, !dbg !2834
  %xor5189 = xor i64 %or5186, %shr5188, !dbg !2834
  %xor5190 = xor i64 %or5181, %xor5189, !dbg !2834
  %arrayidx5191 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 5, !dbg !2834
  %2871 = load i64, i64* %arrayidx5191, align 8, !dbg !2834
  %arrayidx5192 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 13, !dbg !2834
  %2872 = load i64, i64* %arrayidx5192, align 8, !dbg !2834
  %shl5193 = shl i64 %2872, 63, !dbg !2834
  %arrayidx5194 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 13, !dbg !2834
  %2873 = load i64, i64* %arrayidx5194, align 8, !dbg !2834
  %shr5195 = lshr i64 %2873, 1, !dbg !2834
  %or5196 = or i64 %shl5193, %shr5195, !dbg !2834
  %arrayidx5197 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 13, !dbg !2834
  %2874 = load i64, i64* %arrayidx5197, align 8, !dbg !2834
  %shl5198 = shl i64 %2874, 56, !dbg !2834
  %arrayidx5199 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 13, !dbg !2834
  %2875 = load i64, i64* %arrayidx5199, align 8, !dbg !2834
  %shr5200 = lshr i64 %2875, 8, !dbg !2834
  %or5201 = or i64 %shl5198, %shr5200, !dbg !2834
  %arrayidx5202 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 13, !dbg !2834
  %2876 = load i64, i64* %arrayidx5202, align 8, !dbg !2834
  %shr5203 = lshr i64 %2876, 7, !dbg !2834
  %xor5204 = xor i64 %or5201, %shr5203, !dbg !2834
  %xor5205 = xor i64 %or5196, %xor5204, !dbg !2834
  %add5206 = add i64 %2871, %xor5205, !dbg !2834
  %add5207 = add i64 %xor5190, %add5206, !dbg !2834
  %add5208 = add i64 %2865, %add5207, !dbg !2834
  %arrayidx5209 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 12, !dbg !2834
  store i64 %add5208, i64* %arrayidx5209, align 8, !dbg !2834
  %add5210 = add i64 %2864, %add5208, !dbg !2834
  %add5211 = add i64 %xor5175, %add5210, !dbg !2834
  %add5212 = add i64 %xor5172, %add5211, !dbg !2834
  %add5213 = add i64 %2853, %add5212, !dbg !2834
  store i64 %add5213, i64* %t15161, align 8, !dbg !2834
  %2877 = load i64, i64* %h, align 8, !dbg !2834
  %2878 = load i64, i64* %t15161, align 8, !dbg !2834
  %add5214 = add i64 %2877, %2878, !dbg !2834
  store i64 %add5214, i64* %h, align 8, !dbg !2834
  %2879 = load i64, i64* %t05144, align 8, !dbg !2834
  %2880 = load i64, i64* %t15161, align 8, !dbg !2834
  %add5215 = add i64 %2879, %2880, !dbg !2834
  store i64 %add5215, i64* %d, align 8, !dbg !2834
  br label %do.end.5216, !dbg !2834

do.end.5216:                                      ; preds = %do.body.5143
  br label %do.body.5217, !dbg !2837

do.body.5217:                                     ; preds = %do.end.5216
  call void @llvm.dbg.declare(metadata i64* %t05218, metadata !2838, metadata !DIExpression()), !dbg !2840
  %2881 = load i64, i64* %d, align 8, !dbg !2841
  %shl5219 = shl i64 %2881, 36, !dbg !2841
  %2882 = load i64, i64* %d, align 8, !dbg !2841
  %shr5220 = lshr i64 %2882, 28, !dbg !2841
  %or5221 = or i64 %shl5219, %shr5220, !dbg !2841
  %2883 = load i64, i64* %d, align 8, !dbg !2841
  %shl5222 = shl i64 %2883, 30, !dbg !2841
  %2884 = load i64, i64* %d, align 8, !dbg !2841
  %shr5223 = lshr i64 %2884, 34, !dbg !2841
  %or5224 = or i64 %shl5222, %shr5223, !dbg !2841
  %2885 = load i64, i64* %d, align 8, !dbg !2841
  %shl5225 = shl i64 %2885, 25, !dbg !2841
  %2886 = load i64, i64* %d, align 8, !dbg !2841
  %shr5226 = lshr i64 %2886, 39, !dbg !2841
  %or5227 = or i64 %shl5225, %shr5226, !dbg !2841
  %xor5228 = xor i64 %or5224, %or5227, !dbg !2841
  %xor5229 = xor i64 %or5221, %xor5228, !dbg !2841
  %2887 = load i64, i64* %d, align 8, !dbg !2841
  %2888 = load i64, i64* %e, align 8, !dbg !2841
  %and5230 = and i64 %2887, %2888, !dbg !2841
  %2889 = load i64, i64* %f, align 8, !dbg !2841
  %2890 = load i64, i64* %d, align 8, !dbg !2841
  %2891 = load i64, i64* %e, align 8, !dbg !2841
  %or5231 = or i64 %2890, %2891, !dbg !2841
  %and5232 = and i64 %2889, %or5231, !dbg !2841
  %or5233 = or i64 %and5230, %and5232, !dbg !2841
  %add5234 = add i64 %xor5229, %or5233, !dbg !2841
  store i64 %add5234, i64* %t05218, align 8, !dbg !2841
  call void @llvm.dbg.declare(metadata i64* %t15235, metadata !2843, metadata !DIExpression()), !dbg !2841
  %2892 = load i64, i64* %c, align 8, !dbg !2841
  %2893 = load i64, i64* %h, align 8, !dbg !2841
  %shl5236 = shl i64 %2893, 50, !dbg !2841
  %2894 = load i64, i64* %h, align 8, !dbg !2841
  %shr5237 = lshr i64 %2894, 14, !dbg !2841
  %or5238 = or i64 %shl5236, %shr5237, !dbg !2841
  %2895 = load i64, i64* %h, align 8, !dbg !2841
  %shl5239 = shl i64 %2895, 46, !dbg !2841
  %2896 = load i64, i64* %h, align 8, !dbg !2841
  %shr5240 = lshr i64 %2896, 18, !dbg !2841
  %or5241 = or i64 %shl5239, %shr5240, !dbg !2841
  %2897 = load i64, i64* %h, align 8, !dbg !2841
  %shl5242 = shl i64 %2897, 23, !dbg !2841
  %2898 = load i64, i64* %h, align 8, !dbg !2841
  %shr5243 = lshr i64 %2898, 41, !dbg !2841
  %or5244 = or i64 %shl5242, %shr5243, !dbg !2841
  %xor5245 = xor i64 %or5241, %or5244, !dbg !2841
  %xor5246 = xor i64 %or5238, %xor5245, !dbg !2841
  %2899 = load i64, i64* %b, align 8, !dbg !2841
  %2900 = load i64, i64* %h, align 8, !dbg !2841
  %2901 = load i64, i64* %a, align 8, !dbg !2841
  %2902 = load i64, i64* %b, align 8, !dbg !2841
  %xor5247 = xor i64 %2901, %2902, !dbg !2841
  %and5248 = and i64 %2900, %xor5247, !dbg !2841
  %xor5249 = xor i64 %2899, %and5248, !dbg !2841
  %2903 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 77), align 8, !dbg !2841
  %arrayidx5250 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 13, !dbg !2841
  %2904 = load i64, i64* %arrayidx5250, align 8, !dbg !2841
  %arrayidx5251 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 11, !dbg !2841
  %2905 = load i64, i64* %arrayidx5251, align 8, !dbg !2841
  %shl5252 = shl i64 %2905, 45, !dbg !2841
  %arrayidx5253 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 11, !dbg !2841
  %2906 = load i64, i64* %arrayidx5253, align 8, !dbg !2841
  %shr5254 = lshr i64 %2906, 19, !dbg !2841
  %or5255 = or i64 %shl5252, %shr5254, !dbg !2841
  %arrayidx5256 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 11, !dbg !2841
  %2907 = load i64, i64* %arrayidx5256, align 8, !dbg !2841
  %shl5257 = shl i64 %2907, 3, !dbg !2841
  %arrayidx5258 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 11, !dbg !2841
  %2908 = load i64, i64* %arrayidx5258, align 8, !dbg !2841
  %shr5259 = lshr i64 %2908, 61, !dbg !2841
  %or5260 = or i64 %shl5257, %shr5259, !dbg !2841
  %arrayidx5261 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 11, !dbg !2841
  %2909 = load i64, i64* %arrayidx5261, align 8, !dbg !2841
  %shr5262 = lshr i64 %2909, 6, !dbg !2841
  %xor5263 = xor i64 %or5260, %shr5262, !dbg !2841
  %xor5264 = xor i64 %or5255, %xor5263, !dbg !2841
  %arrayidx5265 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 6, !dbg !2841
  %2910 = load i64, i64* %arrayidx5265, align 8, !dbg !2841
  %arrayidx5266 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 14, !dbg !2841
  %2911 = load i64, i64* %arrayidx5266, align 8, !dbg !2841
  %shl5267 = shl i64 %2911, 63, !dbg !2841
  %arrayidx5268 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 14, !dbg !2841
  %2912 = load i64, i64* %arrayidx5268, align 8, !dbg !2841
  %shr5269 = lshr i64 %2912, 1, !dbg !2841
  %or5270 = or i64 %shl5267, %shr5269, !dbg !2841
  %arrayidx5271 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 14, !dbg !2841
  %2913 = load i64, i64* %arrayidx5271, align 8, !dbg !2841
  %shl5272 = shl i64 %2913, 56, !dbg !2841
  %arrayidx5273 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 14, !dbg !2841
  %2914 = load i64, i64* %arrayidx5273, align 8, !dbg !2841
  %shr5274 = lshr i64 %2914, 8, !dbg !2841
  %or5275 = or i64 %shl5272, %shr5274, !dbg !2841
  %arrayidx5276 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 14, !dbg !2841
  %2915 = load i64, i64* %arrayidx5276, align 8, !dbg !2841
  %shr5277 = lshr i64 %2915, 7, !dbg !2841
  %xor5278 = xor i64 %or5275, %shr5277, !dbg !2841
  %xor5279 = xor i64 %or5270, %xor5278, !dbg !2841
  %add5280 = add i64 %2910, %xor5279, !dbg !2841
  %add5281 = add i64 %xor5264, %add5280, !dbg !2841
  %add5282 = add i64 %2904, %add5281, !dbg !2841
  %arrayidx5283 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 13, !dbg !2841
  store i64 %add5282, i64* %arrayidx5283, align 8, !dbg !2841
  %add5284 = add i64 %2903, %add5282, !dbg !2841
  %add5285 = add i64 %xor5249, %add5284, !dbg !2841
  %add5286 = add i64 %xor5246, %add5285, !dbg !2841
  %add5287 = add i64 %2892, %add5286, !dbg !2841
  store i64 %add5287, i64* %t15235, align 8, !dbg !2841
  %2916 = load i64, i64* %g, align 8, !dbg !2841
  %2917 = load i64, i64* %t15235, align 8, !dbg !2841
  %add5288 = add i64 %2916, %2917, !dbg !2841
  store i64 %add5288, i64* %g, align 8, !dbg !2841
  %2918 = load i64, i64* %t05218, align 8, !dbg !2841
  %2919 = load i64, i64* %t15235, align 8, !dbg !2841
  %add5289 = add i64 %2918, %2919, !dbg !2841
  store i64 %add5289, i64* %c, align 8, !dbg !2841
  br label %do.end.5290, !dbg !2841

do.end.5290:                                      ; preds = %do.body.5217
  br label %do.body.5291, !dbg !2844

do.body.5291:                                     ; preds = %do.end.5290
  call void @llvm.dbg.declare(metadata i64* %t05292, metadata !2845, metadata !DIExpression()), !dbg !2847
  %2920 = load i64, i64* %c, align 8, !dbg !2848
  %shl5293 = shl i64 %2920, 36, !dbg !2848
  %2921 = load i64, i64* %c, align 8, !dbg !2848
  %shr5294 = lshr i64 %2921, 28, !dbg !2848
  %or5295 = or i64 %shl5293, %shr5294, !dbg !2848
  %2922 = load i64, i64* %c, align 8, !dbg !2848
  %shl5296 = shl i64 %2922, 30, !dbg !2848
  %2923 = load i64, i64* %c, align 8, !dbg !2848
  %shr5297 = lshr i64 %2923, 34, !dbg !2848
  %or5298 = or i64 %shl5296, %shr5297, !dbg !2848
  %2924 = load i64, i64* %c, align 8, !dbg !2848
  %shl5299 = shl i64 %2924, 25, !dbg !2848
  %2925 = load i64, i64* %c, align 8, !dbg !2848
  %shr5300 = lshr i64 %2925, 39, !dbg !2848
  %or5301 = or i64 %shl5299, %shr5300, !dbg !2848
  %xor5302 = xor i64 %or5298, %or5301, !dbg !2848
  %xor5303 = xor i64 %or5295, %xor5302, !dbg !2848
  %2926 = load i64, i64* %c, align 8, !dbg !2848
  %2927 = load i64, i64* %d, align 8, !dbg !2848
  %and5304 = and i64 %2926, %2927, !dbg !2848
  %2928 = load i64, i64* %e, align 8, !dbg !2848
  %2929 = load i64, i64* %c, align 8, !dbg !2848
  %2930 = load i64, i64* %d, align 8, !dbg !2848
  %or5305 = or i64 %2929, %2930, !dbg !2848
  %and5306 = and i64 %2928, %or5305, !dbg !2848
  %or5307 = or i64 %and5304, %and5306, !dbg !2848
  %add5308 = add i64 %xor5303, %or5307, !dbg !2848
  store i64 %add5308, i64* %t05292, align 8, !dbg !2848
  call void @llvm.dbg.declare(metadata i64* %t15309, metadata !2850, metadata !DIExpression()), !dbg !2848
  %2931 = load i64, i64* %b, align 8, !dbg !2848
  %2932 = load i64, i64* %g, align 8, !dbg !2848
  %shl5310 = shl i64 %2932, 50, !dbg !2848
  %2933 = load i64, i64* %g, align 8, !dbg !2848
  %shr5311 = lshr i64 %2933, 14, !dbg !2848
  %or5312 = or i64 %shl5310, %shr5311, !dbg !2848
  %2934 = load i64, i64* %g, align 8, !dbg !2848
  %shl5313 = shl i64 %2934, 46, !dbg !2848
  %2935 = load i64, i64* %g, align 8, !dbg !2848
  %shr5314 = lshr i64 %2935, 18, !dbg !2848
  %or5315 = or i64 %shl5313, %shr5314, !dbg !2848
  %2936 = load i64, i64* %g, align 8, !dbg !2848
  %shl5316 = shl i64 %2936, 23, !dbg !2848
  %2937 = load i64, i64* %g, align 8, !dbg !2848
  %shr5317 = lshr i64 %2937, 41, !dbg !2848
  %or5318 = or i64 %shl5316, %shr5317, !dbg !2848
  %xor5319 = xor i64 %or5315, %or5318, !dbg !2848
  %xor5320 = xor i64 %or5312, %xor5319, !dbg !2848
  %2938 = load i64, i64* %a, align 8, !dbg !2848
  %2939 = load i64, i64* %g, align 8, !dbg !2848
  %2940 = load i64, i64* %h, align 8, !dbg !2848
  %2941 = load i64, i64* %a, align 8, !dbg !2848
  %xor5321 = xor i64 %2940, %2941, !dbg !2848
  %and5322 = and i64 %2939, %xor5321, !dbg !2848
  %xor5323 = xor i64 %2938, %and5322, !dbg !2848
  %2942 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 78), align 8, !dbg !2848
  %arrayidx5324 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 14, !dbg !2848
  %2943 = load i64, i64* %arrayidx5324, align 8, !dbg !2848
  %arrayidx5325 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 12, !dbg !2848
  %2944 = load i64, i64* %arrayidx5325, align 8, !dbg !2848
  %shl5326 = shl i64 %2944, 45, !dbg !2848
  %arrayidx5327 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 12, !dbg !2848
  %2945 = load i64, i64* %arrayidx5327, align 8, !dbg !2848
  %shr5328 = lshr i64 %2945, 19, !dbg !2848
  %or5329 = or i64 %shl5326, %shr5328, !dbg !2848
  %arrayidx5330 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 12, !dbg !2848
  %2946 = load i64, i64* %arrayidx5330, align 8, !dbg !2848
  %shl5331 = shl i64 %2946, 3, !dbg !2848
  %arrayidx5332 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 12, !dbg !2848
  %2947 = load i64, i64* %arrayidx5332, align 8, !dbg !2848
  %shr5333 = lshr i64 %2947, 61, !dbg !2848
  %or5334 = or i64 %shl5331, %shr5333, !dbg !2848
  %arrayidx5335 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 12, !dbg !2848
  %2948 = load i64, i64* %arrayidx5335, align 8, !dbg !2848
  %shr5336 = lshr i64 %2948, 6, !dbg !2848
  %xor5337 = xor i64 %or5334, %shr5336, !dbg !2848
  %xor5338 = xor i64 %or5329, %xor5337, !dbg !2848
  %arrayidx5339 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 7, !dbg !2848
  %2949 = load i64, i64* %arrayidx5339, align 8, !dbg !2848
  %arrayidx5340 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 15, !dbg !2848
  %2950 = load i64, i64* %arrayidx5340, align 8, !dbg !2848
  %shl5341 = shl i64 %2950, 63, !dbg !2848
  %arrayidx5342 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 15, !dbg !2848
  %2951 = load i64, i64* %arrayidx5342, align 8, !dbg !2848
  %shr5343 = lshr i64 %2951, 1, !dbg !2848
  %or5344 = or i64 %shl5341, %shr5343, !dbg !2848
  %arrayidx5345 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 15, !dbg !2848
  %2952 = load i64, i64* %arrayidx5345, align 8, !dbg !2848
  %shl5346 = shl i64 %2952, 56, !dbg !2848
  %arrayidx5347 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 15, !dbg !2848
  %2953 = load i64, i64* %arrayidx5347, align 8, !dbg !2848
  %shr5348 = lshr i64 %2953, 8, !dbg !2848
  %or5349 = or i64 %shl5346, %shr5348, !dbg !2848
  %arrayidx5350 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 15, !dbg !2848
  %2954 = load i64, i64* %arrayidx5350, align 8, !dbg !2848
  %shr5351 = lshr i64 %2954, 7, !dbg !2848
  %xor5352 = xor i64 %or5349, %shr5351, !dbg !2848
  %xor5353 = xor i64 %or5344, %xor5352, !dbg !2848
  %add5354 = add i64 %2949, %xor5353, !dbg !2848
  %add5355 = add i64 %xor5338, %add5354, !dbg !2848
  %add5356 = add i64 %2943, %add5355, !dbg !2848
  %arrayidx5357 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 14, !dbg !2848
  store i64 %add5356, i64* %arrayidx5357, align 8, !dbg !2848
  %add5358 = add i64 %2942, %add5356, !dbg !2848
  %add5359 = add i64 %xor5323, %add5358, !dbg !2848
  %add5360 = add i64 %xor5320, %add5359, !dbg !2848
  %add5361 = add i64 %2931, %add5360, !dbg !2848
  store i64 %add5361, i64* %t15309, align 8, !dbg !2848
  %2955 = load i64, i64* %f, align 8, !dbg !2848
  %2956 = load i64, i64* %t15309, align 8, !dbg !2848
  %add5362 = add i64 %2955, %2956, !dbg !2848
  store i64 %add5362, i64* %f, align 8, !dbg !2848
  %2957 = load i64, i64* %t05292, align 8, !dbg !2848
  %2958 = load i64, i64* %t15309, align 8, !dbg !2848
  %add5363 = add i64 %2957, %2958, !dbg !2848
  store i64 %add5363, i64* %b, align 8, !dbg !2848
  br label %do.end.5364, !dbg !2848

do.end.5364:                                      ; preds = %do.body.5291
  br label %do.body.5365, !dbg !2851

do.body.5365:                                     ; preds = %do.end.5364
  call void @llvm.dbg.declare(metadata i64* %t05366, metadata !2852, metadata !DIExpression()), !dbg !2854
  %2959 = load i64, i64* %b, align 8, !dbg !2855
  %shl5367 = shl i64 %2959, 36, !dbg !2855
  %2960 = load i64, i64* %b, align 8, !dbg !2855
  %shr5368 = lshr i64 %2960, 28, !dbg !2855
  %or5369 = or i64 %shl5367, %shr5368, !dbg !2855
  %2961 = load i64, i64* %b, align 8, !dbg !2855
  %shl5370 = shl i64 %2961, 30, !dbg !2855
  %2962 = load i64, i64* %b, align 8, !dbg !2855
  %shr5371 = lshr i64 %2962, 34, !dbg !2855
  %or5372 = or i64 %shl5370, %shr5371, !dbg !2855
  %2963 = load i64, i64* %b, align 8, !dbg !2855
  %shl5373 = shl i64 %2963, 25, !dbg !2855
  %2964 = load i64, i64* %b, align 8, !dbg !2855
  %shr5374 = lshr i64 %2964, 39, !dbg !2855
  %or5375 = or i64 %shl5373, %shr5374, !dbg !2855
  %xor5376 = xor i64 %or5372, %or5375, !dbg !2855
  %xor5377 = xor i64 %or5369, %xor5376, !dbg !2855
  %2965 = load i64, i64* %b, align 8, !dbg !2855
  %2966 = load i64, i64* %c, align 8, !dbg !2855
  %and5378 = and i64 %2965, %2966, !dbg !2855
  %2967 = load i64, i64* %d, align 8, !dbg !2855
  %2968 = load i64, i64* %b, align 8, !dbg !2855
  %2969 = load i64, i64* %c, align 8, !dbg !2855
  %or5379 = or i64 %2968, %2969, !dbg !2855
  %and5380 = and i64 %2967, %or5379, !dbg !2855
  %or5381 = or i64 %and5378, %and5380, !dbg !2855
  %add5382 = add i64 %xor5377, %or5381, !dbg !2855
  store i64 %add5382, i64* %t05366, align 8, !dbg !2855
  call void @llvm.dbg.declare(metadata i64* %t15383, metadata !2857, metadata !DIExpression()), !dbg !2855
  %2970 = load i64, i64* %a, align 8, !dbg !2855
  %2971 = load i64, i64* %f, align 8, !dbg !2855
  %shl5384 = shl i64 %2971, 50, !dbg !2855
  %2972 = load i64, i64* %f, align 8, !dbg !2855
  %shr5385 = lshr i64 %2972, 14, !dbg !2855
  %or5386 = or i64 %shl5384, %shr5385, !dbg !2855
  %2973 = load i64, i64* %f, align 8, !dbg !2855
  %shl5387 = shl i64 %2973, 46, !dbg !2855
  %2974 = load i64, i64* %f, align 8, !dbg !2855
  %shr5388 = lshr i64 %2974, 18, !dbg !2855
  %or5389 = or i64 %shl5387, %shr5388, !dbg !2855
  %2975 = load i64, i64* %f, align 8, !dbg !2855
  %shl5390 = shl i64 %2975, 23, !dbg !2855
  %2976 = load i64, i64* %f, align 8, !dbg !2855
  %shr5391 = lshr i64 %2976, 41, !dbg !2855
  %or5392 = or i64 %shl5390, %shr5391, !dbg !2855
  %xor5393 = xor i64 %or5389, %or5392, !dbg !2855
  %xor5394 = xor i64 %or5386, %xor5393, !dbg !2855
  %2977 = load i64, i64* %h, align 8, !dbg !2855
  %2978 = load i64, i64* %f, align 8, !dbg !2855
  %2979 = load i64, i64* %g, align 8, !dbg !2855
  %2980 = load i64, i64* %h, align 8, !dbg !2855
  %xor5395 = xor i64 %2979, %2980, !dbg !2855
  %and5396 = and i64 %2978, %xor5395, !dbg !2855
  %xor5397 = xor i64 %2977, %and5396, !dbg !2855
  %2981 = load i64, i64* getelementptr inbounds ([80 x i64], [80 x i64]* @sha512_round_constants, i32 0, i64 79), align 8, !dbg !2855
  %arrayidx5398 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 15, !dbg !2855
  %2982 = load i64, i64* %arrayidx5398, align 8, !dbg !2855
  %arrayidx5399 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 13, !dbg !2855
  %2983 = load i64, i64* %arrayidx5399, align 8, !dbg !2855
  %shl5400 = shl i64 %2983, 45, !dbg !2855
  %arrayidx5401 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 13, !dbg !2855
  %2984 = load i64, i64* %arrayidx5401, align 8, !dbg !2855
  %shr5402 = lshr i64 %2984, 19, !dbg !2855
  %or5403 = or i64 %shl5400, %shr5402, !dbg !2855
  %arrayidx5404 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 13, !dbg !2855
  %2985 = load i64, i64* %arrayidx5404, align 8, !dbg !2855
  %shl5405 = shl i64 %2985, 3, !dbg !2855
  %arrayidx5406 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 13, !dbg !2855
  %2986 = load i64, i64* %arrayidx5406, align 8, !dbg !2855
  %shr5407 = lshr i64 %2986, 61, !dbg !2855
  %or5408 = or i64 %shl5405, %shr5407, !dbg !2855
  %arrayidx5409 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 13, !dbg !2855
  %2987 = load i64, i64* %arrayidx5409, align 8, !dbg !2855
  %shr5410 = lshr i64 %2987, 6, !dbg !2855
  %xor5411 = xor i64 %or5408, %shr5410, !dbg !2855
  %xor5412 = xor i64 %or5403, %xor5411, !dbg !2855
  %arrayidx5413 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 8, !dbg !2855
  %2988 = load i64, i64* %arrayidx5413, align 8, !dbg !2855
  %arrayidx5414 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 0, !dbg !2855
  %2989 = load i64, i64* %arrayidx5414, align 8, !dbg !2855
  %shl5415 = shl i64 %2989, 63, !dbg !2855
  %arrayidx5416 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 0, !dbg !2855
  %2990 = load i64, i64* %arrayidx5416, align 8, !dbg !2855
  %shr5417 = lshr i64 %2990, 1, !dbg !2855
  %or5418 = or i64 %shl5415, %shr5417, !dbg !2855
  %arrayidx5419 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 0, !dbg !2855
  %2991 = load i64, i64* %arrayidx5419, align 8, !dbg !2855
  %shl5420 = shl i64 %2991, 56, !dbg !2855
  %arrayidx5421 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 0, !dbg !2855
  %2992 = load i64, i64* %arrayidx5421, align 8, !dbg !2855
  %shr5422 = lshr i64 %2992, 8, !dbg !2855
  %or5423 = or i64 %shl5420, %shr5422, !dbg !2855
  %arrayidx5424 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 0, !dbg !2855
  %2993 = load i64, i64* %arrayidx5424, align 8, !dbg !2855
  %shr5425 = lshr i64 %2993, 7, !dbg !2855
  %xor5426 = xor i64 %or5423, %shr5425, !dbg !2855
  %xor5427 = xor i64 %or5418, %xor5426, !dbg !2855
  %add5428 = add i64 %2988, %xor5427, !dbg !2855
  %add5429 = add i64 %xor5412, %add5428, !dbg !2855
  %add5430 = add i64 %2982, %add5429, !dbg !2855
  %arrayidx5431 = getelementptr inbounds [16 x i64], [16 x i64]* %x, i32 0, i64 15, !dbg !2855
  store i64 %add5430, i64* %arrayidx5431, align 8, !dbg !2855
  %add5432 = add i64 %2981, %add5430, !dbg !2855
  %add5433 = add i64 %xor5397, %add5432, !dbg !2855
  %add5434 = add i64 %xor5394, %add5433, !dbg !2855
  %add5435 = add i64 %2970, %add5434, !dbg !2855
  store i64 %add5435, i64* %t15383, align 8, !dbg !2855
  %2994 = load i64, i64* %e, align 8, !dbg !2855
  %2995 = load i64, i64* %t15383, align 8, !dbg !2855
  %add5436 = add i64 %2994, %2995, !dbg !2855
  store i64 %add5436, i64* %e, align 8, !dbg !2855
  %2996 = load i64, i64* %t05366, align 8, !dbg !2855
  %2997 = load i64, i64* %t15383, align 8, !dbg !2855
  %add5437 = add i64 %2996, %2997, !dbg !2855
  store i64 %add5437, i64* %a, align 8, !dbg !2855
  br label %do.end.5438, !dbg !2855

do.end.5438:                                      ; preds = %do.body.5365
  %2998 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2858
  %state5439 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %2998, i32 0, i32 0, !dbg !2858
  %arrayidx5440 = getelementptr inbounds [8 x i64], [8 x i64]* %state5439, i32 0, i64 0, !dbg !2858
  %2999 = load i64, i64* %arrayidx5440, align 8, !dbg !2858
  %3000 = load i64, i64* %a, align 8, !dbg !2858
  %add5441 = add i64 %2999, %3000, !dbg !2858
  %3001 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2859
  %state5442 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %3001, i32 0, i32 0, !dbg !2860
  %arrayidx5443 = getelementptr inbounds [8 x i64], [8 x i64]* %state5442, i32 0, i64 0, !dbg !2859
  store i64 %add5441, i64* %arrayidx5443, align 8, !dbg !2861
  store i64 %add5441, i64* %a, align 8, !dbg !2862
  %3002 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2863
  %state5444 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %3002, i32 0, i32 0, !dbg !2863
  %arrayidx5445 = getelementptr inbounds [8 x i64], [8 x i64]* %state5444, i32 0, i64 1, !dbg !2863
  %3003 = load i64, i64* %arrayidx5445, align 8, !dbg !2863
  %3004 = load i64, i64* %b, align 8, !dbg !2863
  %add5446 = add i64 %3003, %3004, !dbg !2863
  %3005 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2864
  %state5447 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %3005, i32 0, i32 0, !dbg !2865
  %arrayidx5448 = getelementptr inbounds [8 x i64], [8 x i64]* %state5447, i32 0, i64 1, !dbg !2864
  store i64 %add5446, i64* %arrayidx5448, align 8, !dbg !2866
  store i64 %add5446, i64* %b, align 8, !dbg !2867
  %3006 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2868
  %state5449 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %3006, i32 0, i32 0, !dbg !2868
  %arrayidx5450 = getelementptr inbounds [8 x i64], [8 x i64]* %state5449, i32 0, i64 2, !dbg !2868
  %3007 = load i64, i64* %arrayidx5450, align 8, !dbg !2868
  %3008 = load i64, i64* %c, align 8, !dbg !2868
  %add5451 = add i64 %3007, %3008, !dbg !2868
  %3009 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2869
  %state5452 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %3009, i32 0, i32 0, !dbg !2870
  %arrayidx5453 = getelementptr inbounds [8 x i64], [8 x i64]* %state5452, i32 0, i64 2, !dbg !2869
  store i64 %add5451, i64* %arrayidx5453, align 8, !dbg !2871
  store i64 %add5451, i64* %c, align 8, !dbg !2872
  %3010 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2873
  %state5454 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %3010, i32 0, i32 0, !dbg !2873
  %arrayidx5455 = getelementptr inbounds [8 x i64], [8 x i64]* %state5454, i32 0, i64 3, !dbg !2873
  %3011 = load i64, i64* %arrayidx5455, align 8, !dbg !2873
  %3012 = load i64, i64* %d, align 8, !dbg !2873
  %add5456 = add i64 %3011, %3012, !dbg !2873
  %3013 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2874
  %state5457 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %3013, i32 0, i32 0, !dbg !2875
  %arrayidx5458 = getelementptr inbounds [8 x i64], [8 x i64]* %state5457, i32 0, i64 3, !dbg !2874
  store i64 %add5456, i64* %arrayidx5458, align 8, !dbg !2876
  store i64 %add5456, i64* %d, align 8, !dbg !2877
  %3014 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2878
  %state5459 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %3014, i32 0, i32 0, !dbg !2878
  %arrayidx5460 = getelementptr inbounds [8 x i64], [8 x i64]* %state5459, i32 0, i64 4, !dbg !2878
  %3015 = load i64, i64* %arrayidx5460, align 8, !dbg !2878
  %3016 = load i64, i64* %e, align 8, !dbg !2878
  %add5461 = add i64 %3015, %3016, !dbg !2878
  %3017 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2879
  %state5462 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %3017, i32 0, i32 0, !dbg !2880
  %arrayidx5463 = getelementptr inbounds [8 x i64], [8 x i64]* %state5462, i32 0, i64 4, !dbg !2879
  store i64 %add5461, i64* %arrayidx5463, align 8, !dbg !2881
  store i64 %add5461, i64* %e, align 8, !dbg !2882
  %3018 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2883
  %state5464 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %3018, i32 0, i32 0, !dbg !2883
  %arrayidx5465 = getelementptr inbounds [8 x i64], [8 x i64]* %state5464, i32 0, i64 5, !dbg !2883
  %3019 = load i64, i64* %arrayidx5465, align 8, !dbg !2883
  %3020 = load i64, i64* %f, align 8, !dbg !2883
  %add5466 = add i64 %3019, %3020, !dbg !2883
  %3021 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2884
  %state5467 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %3021, i32 0, i32 0, !dbg !2885
  %arrayidx5468 = getelementptr inbounds [8 x i64], [8 x i64]* %state5467, i32 0, i64 5, !dbg !2884
  store i64 %add5466, i64* %arrayidx5468, align 8, !dbg !2886
  store i64 %add5466, i64* %f, align 8, !dbg !2887
  %3022 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2888
  %state5469 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %3022, i32 0, i32 0, !dbg !2888
  %arrayidx5470 = getelementptr inbounds [8 x i64], [8 x i64]* %state5469, i32 0, i64 6, !dbg !2888
  %3023 = load i64, i64* %arrayidx5470, align 8, !dbg !2888
  %3024 = load i64, i64* %g, align 8, !dbg !2888
  %add5471 = add i64 %3023, %3024, !dbg !2888
  %3025 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2889
  %state5472 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %3025, i32 0, i32 0, !dbg !2890
  %arrayidx5473 = getelementptr inbounds [8 x i64], [8 x i64]* %state5472, i32 0, i64 6, !dbg !2889
  store i64 %add5471, i64* %arrayidx5473, align 8, !dbg !2891
  store i64 %add5471, i64* %g, align 8, !dbg !2892
  %3026 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2893
  %state5474 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %3026, i32 0, i32 0, !dbg !2893
  %arrayidx5475 = getelementptr inbounds [8 x i64], [8 x i64]* %state5474, i32 0, i64 7, !dbg !2893
  %3027 = load i64, i64* %arrayidx5475, align 8, !dbg !2893
  %3028 = load i64, i64* %h, align 8, !dbg !2893
  %add5476 = add i64 %3027, %3028, !dbg !2893
  %3029 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2894
  %state5477 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %3029, i32 0, i32 0, !dbg !2895
  %arrayidx5478 = getelementptr inbounds [8 x i64], [8 x i64]* %state5477, i32 0, i64 7, !dbg !2894
  store i64 %add5476, i64* %arrayidx5478, align 8, !dbg !2896
  store i64 %add5476, i64* %h, align 8, !dbg !2897
  br label %while.cond, !dbg !2271

while.end:                                        ; preds = %while.cond
  ret void, !dbg !2898
}

; Function Attrs: nounwind uwtable
define internal void @sha512_process_bytes(i8* %buffer, i64 %len, %struct.sha512_ctx* %ctx) #5 !dbg !2899 {
entry:
  %buffer.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  %ctx.addr = alloca %struct.sha512_ctx*, align 8
  %left_over = alloca i64, align 8
  %add = alloca i64, align 8
  %left_over40 = alloca i64, align 8
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !2900, metadata !DIExpression()), !dbg !2901
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !2902, metadata !DIExpression()), !dbg !2903
  store %struct.sha512_ctx* %ctx, %struct.sha512_ctx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sha512_ctx** %ctx.addr, metadata !2904, metadata !DIExpression()), !dbg !2905
  %0 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2906
  %buflen = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %0, i32 0, i32 2, !dbg !2908
  %1 = load i64, i64* %buflen, align 8, !dbg !2908
  %cmp = icmp ne i64 %1, 0, !dbg !2909
  br i1 %cmp, label %if.then, label %if.end.23, !dbg !2910

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %left_over, metadata !2911, metadata !DIExpression()), !dbg !2913
  %2 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2914
  %buflen1 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %2, i32 0, i32 2, !dbg !2915
  %3 = load i64, i64* %buflen1, align 8, !dbg !2915
  store i64 %3, i64* %left_over, align 8, !dbg !2913
  call void @llvm.dbg.declare(metadata i64* %add, metadata !2916, metadata !DIExpression()), !dbg !2917
  %4 = load i64, i64* %left_over, align 8, !dbg !2918
  %sub = sub i64 256, %4, !dbg !2919
  %5 = load i64, i64* %len.addr, align 8, !dbg !2920
  %cmp2 = icmp ugt i64 %sub, %5, !dbg !2921
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !2922

cond.true:                                        ; preds = %if.then
  %6 = load i64, i64* %len.addr, align 8, !dbg !2923
  br label %cond.end, !dbg !2922

cond.false:                                       ; preds = %if.then
  %7 = load i64, i64* %left_over, align 8, !dbg !2925
  %sub3 = sub i64 256, %7, !dbg !2927
  br label %cond.end, !dbg !2922

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %6, %cond.true ], [ %sub3, %cond.false ], !dbg !2922
  store i64 %cond, i64* %add, align 8, !dbg !2928
  %8 = load i64, i64* %left_over, align 8, !dbg !2931
  %9 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2932
  %buffer4 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %9, i32 0, i32 3, !dbg !2933
  %arraydecay = getelementptr inbounds [32 x i64], [32 x i64]* %buffer4, i32 0, i32 0, !dbg !2932
  %10 = bitcast i64* %arraydecay to i8*, !dbg !2934
  %arrayidx = getelementptr inbounds i8, i8* %10, i64 %8, !dbg !2935
  %11 = load i8*, i8** %buffer.addr, align 8, !dbg !2936
  %12 = load i64, i64* %add, align 8, !dbg !2937
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arrayidx, i8* align 1 %11, i64 %12, i1 false), !dbg !2938
  %13 = load i64, i64* %add, align 8, !dbg !2939
  %14 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2940
  %buflen5 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %14, i32 0, i32 2, !dbg !2941
  %15 = load i64, i64* %buflen5, align 8, !dbg !2942
  %add6 = add i64 %15, %13, !dbg !2942
  store i64 %add6, i64* %buflen5, align 8, !dbg !2942
  %16 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2943
  %buflen7 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %16, i32 0, i32 2, !dbg !2945
  %17 = load i64, i64* %buflen7, align 8, !dbg !2945
  %cmp8 = icmp ugt i64 %17, 128, !dbg !2946
  br i1 %cmp8, label %if.then.9, label %if.end, !dbg !2947

if.then.9:                                        ; preds = %cond.end
  %18 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2948
  %buffer10 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %18, i32 0, i32 3, !dbg !2950
  %arraydecay11 = getelementptr inbounds [32 x i64], [32 x i64]* %buffer10, i32 0, i32 0, !dbg !2948
  %19 = bitcast i64* %arraydecay11 to i8*, !dbg !2948
  %20 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2951
  %buflen12 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %20, i32 0, i32 2, !dbg !2952
  %21 = load i64, i64* %buflen12, align 8, !dbg !2952
  %and = and i64 %21, -128, !dbg !2953
  %22 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2954
  call void @sha512_process_block(i8* %19, i64 %and, %struct.sha512_ctx* %22), !dbg !2955
  %23 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2956
  %buflen13 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %23, i32 0, i32 2, !dbg !2957
  %24 = load i64, i64* %buflen13, align 8, !dbg !2958
  %and14 = and i64 %24, 127, !dbg !2958
  store i64 %and14, i64* %buflen13, align 8, !dbg !2958
  %25 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2959
  %buffer15 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %25, i32 0, i32 3, !dbg !2960
  %26 = bitcast [32 x i64]* %buffer15 to i8*, !dbg !2961
  %27 = load i64, i64* %left_over, align 8, !dbg !2962
  %28 = load i64, i64* %add, align 8, !dbg !2963
  %add16 = add i64 %27, %28, !dbg !2964
  %and17 = and i64 %add16, -128, !dbg !2965
  %29 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2966
  %buffer18 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %29, i32 0, i32 3, !dbg !2967
  %arraydecay19 = getelementptr inbounds [32 x i64], [32 x i64]* %buffer18, i32 0, i32 0, !dbg !2966
  %30 = bitcast i64* %arraydecay19 to i8*, !dbg !2968
  %arrayidx20 = getelementptr inbounds i8, i8* %30, i64 %and17, !dbg !2969
  %31 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2970
  %buflen21 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %31, i32 0, i32 2, !dbg !2971
  %32 = load i64, i64* %buflen21, align 8, !dbg !2971
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %26, i8* align 1 %arrayidx20, i64 %32, i1 false), !dbg !2961
  br label %if.end, !dbg !2972

if.end:                                           ; preds = %if.then.9, %cond.end
  %33 = load i8*, i8** %buffer.addr, align 8, !dbg !2973
  %34 = load i64, i64* %add, align 8, !dbg !2974
  %add.ptr = getelementptr inbounds i8, i8* %33, i64 %34, !dbg !2975
  store i8* %add.ptr, i8** %buffer.addr, align 8, !dbg !2976
  %35 = load i64, i64* %add, align 8, !dbg !2977
  %36 = load i64, i64* %len.addr, align 8, !dbg !2978
  %sub22 = sub i64 %36, %35, !dbg !2978
  store i64 %sub22, i64* %len.addr, align 8, !dbg !2978
  br label %if.end.23, !dbg !2979

if.end.23:                                        ; preds = %if.end, %entry
  %37 = load i64, i64* %len.addr, align 8, !dbg !2980
  %cmp24 = icmp uge i64 %37, 128, !dbg !2982
  br i1 %cmp24, label %if.then.25, label %if.end.37, !dbg !2983

if.then.25:                                       ; preds = %if.end.23
  %38 = load i8*, i8** %buffer.addr, align 8, !dbg !2984
  %39 = ptrtoint i8* %38 to i64, !dbg !2984
  %rem = urem i64 %39, 8, !dbg !2984
  %cmp26 = icmp ne i64 %rem, 0, !dbg !2984
  br i1 %cmp26, label %if.then.27, label %if.else, !dbg !2987

if.then.27:                                       ; preds = %if.then.25
  br label %while.cond, !dbg !2988

while.cond:                                       ; preds = %while.body, %if.then.27
  %40 = load i64, i64* %len.addr, align 8, !dbg !2989
  %cmp28 = icmp ugt i64 %40, 128, !dbg !2992
  br i1 %cmp28, label %while.body, label %while.end, !dbg !2988

while.body:                                       ; preds = %while.cond
  %41 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2993
  %buffer29 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %41, i32 0, i32 3, !dbg !2995
  %42 = bitcast [32 x i64]* %buffer29 to i8*, !dbg !2996
  %43 = load i8*, i8** %buffer.addr, align 8, !dbg !2997
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %42, i8* align 1 %43, i64 128, i1 false), !dbg !2996
  %44 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !2998
  call void @sha512_process_block(i8* %42, i64 128, %struct.sha512_ctx* %44), !dbg !2999
  %45 = load i8*, i8** %buffer.addr, align 8, !dbg !3000
  %add.ptr30 = getelementptr inbounds i8, i8* %45, i64 128, !dbg !3001
  store i8* %add.ptr30, i8** %buffer.addr, align 8, !dbg !3002
  %46 = load i64, i64* %len.addr, align 8, !dbg !3003
  %sub31 = sub i64 %46, 128, !dbg !3003
  store i64 %sub31, i64* %len.addr, align 8, !dbg !3003
  br label %while.cond, !dbg !2988

while.end:                                        ; preds = %while.cond
  br label %if.end.36, !dbg !3004

if.else:                                          ; preds = %if.then.25
  %47 = load i8*, i8** %buffer.addr, align 8, !dbg !3006
  %48 = load i64, i64* %len.addr, align 8, !dbg !3008
  %and32 = and i64 %48, -128, !dbg !3009
  %49 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !3010
  call void @sha512_process_block(i8* %47, i64 %and32, %struct.sha512_ctx* %49), !dbg !3011
  %50 = load i8*, i8** %buffer.addr, align 8, !dbg !3012
  %51 = load i64, i64* %len.addr, align 8, !dbg !3013
  %and33 = and i64 %51, -128, !dbg !3014
  %add.ptr34 = getelementptr inbounds i8, i8* %50, i64 %and33, !dbg !3015
  store i8* %add.ptr34, i8** %buffer.addr, align 8, !dbg !3016
  %52 = load i64, i64* %len.addr, align 8, !dbg !3017
  %and35 = and i64 %52, 127, !dbg !3017
  store i64 %and35, i64* %len.addr, align 8, !dbg !3017
  br label %if.end.36

if.end.36:                                        ; preds = %if.else, %while.end
  br label %if.end.37, !dbg !3018

if.end.37:                                        ; preds = %if.end.36, %if.end.23
  %53 = load i64, i64* %len.addr, align 8, !dbg !3019
  %cmp38 = icmp ugt i64 %53, 0, !dbg !3021
  br i1 %cmp38, label %if.then.39, label %if.end.56, !dbg !3022

if.then.39:                                       ; preds = %if.end.37
  call void @llvm.dbg.declare(metadata i64* %left_over40, metadata !3023, metadata !DIExpression()), !dbg !3025
  %54 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !3026
  %buflen41 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %54, i32 0, i32 2, !dbg !3027
  %55 = load i64, i64* %buflen41, align 8, !dbg !3027
  store i64 %55, i64* %left_over40, align 8, !dbg !3025
  %56 = load i64, i64* %left_over40, align 8, !dbg !3028
  %57 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !3029
  %buffer42 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %57, i32 0, i32 3, !dbg !3030
  %arraydecay43 = getelementptr inbounds [32 x i64], [32 x i64]* %buffer42, i32 0, i32 0, !dbg !3029
  %58 = bitcast i64* %arraydecay43 to i8*, !dbg !3031
  %arrayidx44 = getelementptr inbounds i8, i8* %58, i64 %56, !dbg !3032
  %59 = load i8*, i8** %buffer.addr, align 8, !dbg !3033
  %60 = load i64, i64* %len.addr, align 8, !dbg !3034
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arrayidx44, i8* align 1 %59, i64 %60, i1 false), !dbg !3035
  %61 = load i64, i64* %len.addr, align 8, !dbg !3036
  %62 = load i64, i64* %left_over40, align 8, !dbg !3037
  %add45 = add i64 %62, %61, !dbg !3037
  store i64 %add45, i64* %left_over40, align 8, !dbg !3037
  %63 = load i64, i64* %left_over40, align 8, !dbg !3038
  %cmp46 = icmp uge i64 %63, 128, !dbg !3040
  br i1 %cmp46, label %if.then.47, label %if.end.54, !dbg !3041

if.then.47:                                       ; preds = %if.then.39
  %64 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !3042
  %buffer48 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %64, i32 0, i32 3, !dbg !3044
  %arraydecay49 = getelementptr inbounds [32 x i64], [32 x i64]* %buffer48, i32 0, i32 0, !dbg !3042
  %65 = bitcast i64* %arraydecay49 to i8*, !dbg !3042
  %66 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !3045
  call void @sha512_process_block(i8* %65, i64 128, %struct.sha512_ctx* %66), !dbg !3046
  %67 = load i64, i64* %left_over40, align 8, !dbg !3047
  %sub50 = sub i64 %67, 128, !dbg !3047
  store i64 %sub50, i64* %left_over40, align 8, !dbg !3047
  %68 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !3048
  %buffer51 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %68, i32 0, i32 3, !dbg !3049
  %69 = bitcast [32 x i64]* %buffer51 to i8*, !dbg !3050
  %70 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !3051
  %buffer52 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %70, i32 0, i32 3, !dbg !3052
  %arrayidx53 = getelementptr inbounds [32 x i64], [32 x i64]* %buffer52, i32 0, i64 16, !dbg !3051
  %71 = bitcast i64* %arrayidx53 to i8*, !dbg !3050
  %72 = load i64, i64* %left_over40, align 8, !dbg !3053
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* align 8 %71, i64 %72, i1 false), !dbg !3050
  br label %if.end.54, !dbg !3054

if.end.54:                                        ; preds = %if.then.47, %if.then.39
  %73 = load i64, i64* %left_over40, align 8, !dbg !3055
  %74 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !3056
  %buflen55 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %74, i32 0, i32 2, !dbg !3057
  store i64 %73, i64* %buflen55, align 8, !dbg !3058
  br label %if.end.56, !dbg !3059

if.end.56:                                        ; preds = %if.end.54, %if.end.37
  ret void, !dbg !3060
}

; Function Attrs: nounwind uwtable
define internal i32 @sha384_stream(%struct._IO_FILE* %stream, i8* %resblock) #5 !dbg !3061 {
entry:
  %retval = alloca i32, align 4
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %resblock.addr = alloca i8*, align 8
  %ctx = alloca %struct.sha512_ctx, align 8
  %sum = alloca i64, align 8
  %buffer = alloca i8*, align 8
  %n = alloca i64, align 8
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !3062, metadata !DIExpression()), !dbg !3063
  store i8* %resblock, i8** %resblock.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %resblock.addr, metadata !3064, metadata !DIExpression()), !dbg !3065
  call void @llvm.dbg.declare(metadata %struct.sha512_ctx* %ctx, metadata !3066, metadata !DIExpression()), !dbg !3067
  call void @llvm.dbg.declare(metadata i64* %sum, metadata !3068, metadata !DIExpression()), !dbg !3069
  call void @llvm.dbg.declare(metadata i8** %buffer, metadata !3070, metadata !DIExpression()), !dbg !3071
  %call = call noalias i8* @malloc(i64 32840) #11, !dbg !3072
  store i8* %call, i8** %buffer, align 8, !dbg !3071
  %0 = load i8*, i8** %buffer, align 8, !dbg !3073
  %tobool = icmp ne i8* %0, null, !dbg !3073
  br i1 %tobool, label %if.end, label %if.then, !dbg !3075

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, !dbg !3076
  br label %return, !dbg !3076

if.end:                                           ; preds = %entry
  call void @sha384_init_ctx(%struct.sha512_ctx* %ctx), !dbg !3077
  br label %while.body, !dbg !3078

while.body:                                       ; preds = %while.end, %if.end
  call void @llvm.dbg.declare(metadata i64* %n, metadata !3079, metadata !DIExpression()), !dbg !3081
  store i64 0, i64* %sum, align 8, !dbg !3082
  br label %while.body.2, !dbg !3083

while.body.2:                                     ; preds = %if.end.16, %while.body
  %1 = load i8*, i8** %buffer, align 8, !dbg !3084
  %2 = load i64, i64* %sum, align 8, !dbg !3084
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %2, !dbg !3084
  %3 = load i64, i64* %sum, align 8, !dbg !3084
  %sub = sub i64 32768, %3, !dbg !3084
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !3084
  %call3 = call i64 @fread_unlocked(i8* %add.ptr, i64 1, i64 %sub, %struct._IO_FILE* %4), !dbg !3084
  store i64 %call3, i64* %n, align 8, !dbg !3086
  %5 = load i64, i64* %n, align 8, !dbg !3087
  %6 = load i64, i64* %sum, align 8, !dbg !3088
  %add = add i64 %6, %5, !dbg !3088
  store i64 %add, i64* %sum, align 8, !dbg !3088
  %7 = load i64, i64* %sum, align 8, !dbg !3089
  %cmp = icmp eq i64 %7, 32768, !dbg !3091
  br i1 %cmp, label %if.then.4, label %if.end.5, !dbg !3092

if.then.4:                                        ; preds = %while.body.2
  br label %while.end, !dbg !3093

if.end.5:                                         ; preds = %while.body.2
  %8 = load i64, i64* %n, align 8, !dbg !3094
  %cmp6 = icmp eq i64 %8, 0, !dbg !3096
  br i1 %cmp6, label %if.then.7, label %if.end.12, !dbg !3097

if.then.7:                                        ; preds = %if.end.5
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !3098
  %call8 = call i32 @ferror_unlocked(%struct._IO_FILE* %9) #11, !dbg !3098
  %tobool9 = icmp ne i32 %call8, 0, !dbg !3098
  br i1 %tobool9, label %if.then.10, label %if.end.11, !dbg !3101

if.then.10:                                       ; preds = %if.then.7
  %10 = load i8*, i8** %buffer, align 8, !dbg !3102
  call void @free(i8* %10) #11, !dbg !3104
  store i32 1, i32* %retval, !dbg !3105
  br label %return, !dbg !3105

if.end.11:                                        ; preds = %if.then.7
  br label %process_partial_block, !dbg !3106

if.end.12:                                        ; preds = %if.end.5
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !3107
  %call13 = call i32 @feof_unlocked(%struct._IO_FILE* %11) #11, !dbg !3107
  %tobool14 = icmp ne i32 %call13, 0, !dbg !3107
  br i1 %tobool14, label %if.then.15, label %if.end.16, !dbg !3109

if.then.15:                                       ; preds = %if.end.12
  br label %process_partial_block, !dbg !3110

if.end.16:                                        ; preds = %if.end.12
  br label %while.body.2, !dbg !3083

while.end:                                        ; preds = %if.then.4
  %12 = load i8*, i8** %buffer, align 8, !dbg !3111
  call void @sha512_process_block(i8* %12, i64 32768, %struct.sha512_ctx* %ctx), !dbg !3112
  br label %while.body, !dbg !3078

process_partial_block:                            ; preds = %if.then.15, %if.end.11
  %13 = load i64, i64* %sum, align 8, !dbg !3113
  %cmp17 = icmp ugt i64 %13, 0, !dbg !3115
  br i1 %cmp17, label %if.then.18, label %if.end.19, !dbg !3116

if.then.18:                                       ; preds = %process_partial_block
  %14 = load i8*, i8** %buffer, align 8, !dbg !3117
  %15 = load i64, i64* %sum, align 8, !dbg !3118
  call void @sha512_process_bytes(i8* %14, i64 %15, %struct.sha512_ctx* %ctx), !dbg !3119
  br label %if.end.19, !dbg !3119

if.end.19:                                        ; preds = %if.then.18, %process_partial_block
  %16 = load i8*, i8** %resblock.addr, align 8, !dbg !3120
  %call20 = call i8* @sha384_finish_ctx(%struct.sha512_ctx* %ctx, i8* %16), !dbg !3121
  %17 = load i8*, i8** %buffer, align 8, !dbg !3122
  call void @free(i8* %17) #11, !dbg !3123
  store i32 0, i32* %retval, !dbg !3124
  br label %return, !dbg !3124

return:                                           ; preds = %if.end.19, %if.then.10, %if.then
  %18 = load i32, i32* %retval, !dbg !3125
  ret i32 %18, !dbg !3125
}

; Function Attrs: nounwind uwtable
define internal i8* @sha512_buffer(i8* %buffer, i64 %len, i8* %resblock) #5 !dbg !3126 {
entry:
  %buffer.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  %resblock.addr = alloca i8*, align 8
  %ctx = alloca %struct.sha512_ctx, align 8
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !3129, metadata !DIExpression()), !dbg !3130
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !3131, metadata !DIExpression()), !dbg !3132
  store i8* %resblock, i8** %resblock.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %resblock.addr, metadata !3133, metadata !DIExpression()), !dbg !3134
  call void @llvm.dbg.declare(metadata %struct.sha512_ctx* %ctx, metadata !3135, metadata !DIExpression()), !dbg !3136
  call void @sha512_init_ctx(%struct.sha512_ctx* %ctx), !dbg !3137
  %0 = load i8*, i8** %buffer.addr, align 8, !dbg !3138
  %1 = load i64, i64* %len.addr, align 8, !dbg !3139
  call void @sha512_process_bytes(i8* %0, i64 %1, %struct.sha512_ctx* %ctx), !dbg !3140
  %2 = load i8*, i8** %resblock.addr, align 8, !dbg !3141
  %call = call i8* @sha512_finish_ctx(%struct.sha512_ctx* %ctx, i8* %2), !dbg !3142
  ret i8* %call, !dbg !3143
}

; Function Attrs: nounwind uwtable
define internal i8* @sha384_buffer(i8* %buffer, i64 %len, i8* %resblock) #5 !dbg !3144 {
entry:
  %buffer.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  %resblock.addr = alloca i8*, align 8
  %ctx = alloca %struct.sha512_ctx, align 8
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !3145, metadata !DIExpression()), !dbg !3146
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !3147, metadata !DIExpression()), !dbg !3148
  store i8* %resblock, i8** %resblock.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %resblock.addr, metadata !3149, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.declare(metadata %struct.sha512_ctx* %ctx, metadata !3151, metadata !DIExpression()), !dbg !3152
  call void @sha384_init_ctx(%struct.sha512_ctx* %ctx), !dbg !3153
  %0 = load i8*, i8** %buffer.addr, align 8, !dbg !3154
  %1 = load i64, i64* %len.addr, align 8, !dbg !3155
  call void @sha512_process_bytes(i8* %0, i64 %1, %struct.sha512_ctx* %ctx), !dbg !3156
  %2 = load i8*, i8** %resblock.addr, align 8, !dbg !3157
  %call = call i8* @sha384_finish_ctx(%struct.sha512_ctx* %ctx, i8* %2), !dbg !3158
  ret i8* %call, !dbg !3159
}

; Function Attrs: nounwind uwtable
define internal void @set_uint64(i8* %cp, i64 %v) #5 !dbg !3160 {
entry:
  %cp.addr = alloca i8*, align 8
  %v.addr = alloca i64, align 8
  store i8* %cp, i8** %cp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cp.addr, metadata !3163, metadata !DIExpression()), !dbg !3164
  store i64 %v, i64* %v.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %v.addr, metadata !3165, metadata !DIExpression()), !dbg !3166
  %0 = load i8*, i8** %cp.addr, align 8, !dbg !3167
  %1 = bitcast i64* %v.addr to i8*, !dbg !3168
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %1, i64 8, i1 false), !dbg !3168
  ret void, !dbg !3169
}

; Function Attrs: nounwind uwtable
define internal void @sha512_conclude_ctx(%struct.sha512_ctx* %ctx) #5 !dbg !3170 {
entry:
  %ctx.addr = alloca %struct.sha512_ctx*, align 8
  %bytes = alloca i64, align 8
  %size = alloca i64, align 8
  store %struct.sha512_ctx* %ctx, %struct.sha512_ctx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sha512_ctx** %ctx.addr, metadata !3171, metadata !DIExpression()), !dbg !3172
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !3173, metadata !DIExpression()), !dbg !3174
  %0 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !3175
  %buflen = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %0, i32 0, i32 2, !dbg !3176
  %1 = load i64, i64* %buflen, align 8, !dbg !3176
  store i64 %1, i64* %bytes, align 8, !dbg !3174
  call void @llvm.dbg.declare(metadata i64* %size, metadata !3177, metadata !DIExpression()), !dbg !3178
  %2 = load i64, i64* %bytes, align 8, !dbg !3179
  %cmp = icmp ult i64 %2, 112, !dbg !3180
  %cond = select i1 %cmp, i32 16, i32 32, !dbg !3181
  %conv = sext i32 %cond to i64, !dbg !3181
  store i64 %conv, i64* %size, align 8, !dbg !3178
  %3 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !3182
  %total = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %3, i32 0, i32 1, !dbg !3182
  %arrayidx = getelementptr inbounds [2 x i64], [2 x i64]* %total, i32 0, i64 0, !dbg !3182
  %4 = load i64, i64* %arrayidx, align 8, !dbg !3182
  %5 = load i64, i64* %bytes, align 8, !dbg !3182
  %add = add i64 %4, %5, !dbg !3182
  %6 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !3183
  %total1 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %6, i32 0, i32 1, !dbg !3184
  %arrayidx2 = getelementptr inbounds [2 x i64], [2 x i64]* %total1, i32 0, i64 0, !dbg !3183
  store i64 %add, i64* %arrayidx2, align 8, !dbg !3185
  %7 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !3186
  %total3 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %7, i32 0, i32 1, !dbg !3186
  %arrayidx4 = getelementptr inbounds [2 x i64], [2 x i64]* %total3, i32 0, i64 0, !dbg !3186
  %8 = load i64, i64* %arrayidx4, align 8, !dbg !3186
  %9 = load i64, i64* %bytes, align 8, !dbg !3186
  %cmp5 = icmp ult i64 %8, %9, !dbg !3186
  br i1 %cmp5, label %if.then, label %if.end, !dbg !3188

if.then:                                          ; preds = %entry
  %10 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !3189
  %total7 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %10, i32 0, i32 1, !dbg !3189
  %arrayidx8 = getelementptr inbounds [2 x i64], [2 x i64]* %total7, i32 0, i64 1, !dbg !3189
  %11 = load i64, i64* %arrayidx8, align 8, !dbg !3189
  %add9 = add i64 %11, 1, !dbg !3189
  %12 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !3190
  %total10 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %12, i32 0, i32 1, !dbg !3191
  %arrayidx11 = getelementptr inbounds [2 x i64], [2 x i64]* %total10, i32 0, i64 1, !dbg !3190
  store i64 %add9, i64* %arrayidx11, align 8, !dbg !3192
  br label %if.end, !dbg !3190

if.end:                                           ; preds = %if.then, %entry
  %13 = load i64, i64* %size, align 8, !dbg !3193
  %sub = sub i64 %13, 2, !dbg !3194
  %14 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !3195
  %buffer = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %14, i32 0, i32 3, !dbg !3196
  %arrayidx12 = getelementptr inbounds [32 x i64], [32 x i64]* %buffer, i32 0, i64 %sub, !dbg !3195
  %15 = bitcast i64* %arrayidx12 to i8*, !dbg !3197
  %16 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !3198
  %total13 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %16, i32 0, i32 1, !dbg !3198
  %arrayidx14 = getelementptr inbounds [2 x i64], [2 x i64]* %total13, i32 0, i64 1, !dbg !3198
  %17 = load i64, i64* %arrayidx14, align 8, !dbg !3198
  %shl = shl i64 %17, 3, !dbg !3198
  %18 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !3198
  %total15 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %18, i32 0, i32 1, !dbg !3198
  %arrayidx16 = getelementptr inbounds [2 x i64], [2 x i64]* %total15, i32 0, i64 0, !dbg !3198
  %19 = load i64, i64* %arrayidx16, align 8, !dbg !3198
  %shr = lshr i64 %19, 61, !dbg !3198
  %or = or i64 %shl, %shr, !dbg !3198
  %shl17 = shl i64 %or, 56, !dbg !3198
  %20 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !3198
  %total18 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %20, i32 0, i32 1, !dbg !3198
  %arrayidx19 = getelementptr inbounds [2 x i64], [2 x i64]* %total18, i32 0, i64 1, !dbg !3198
  %21 = load i64, i64* %arrayidx19, align 8, !dbg !3198
  %shl20 = shl i64 %21, 3, !dbg !3198
  %22 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !3198
  %total21 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %22, i32 0, i32 1, !dbg !3198
  %arrayidx22 = getelementptr inbounds [2 x i64], [2 x i64]* %total21, i32 0, i64 0, !dbg !3198
  %23 = load i64, i64* %arrayidx22, align 8, !dbg !3198
  %shr23 = lshr i64 %23, 61, !dbg !3198
  %or24 = or i64 %shl20, %shr23, !dbg !3198
  %and = and i64 %or24, 65280, !dbg !3198
  %shl25 = shl i64 %and, 40, !dbg !3198
  %or26 = or i64 %shl17, %shl25, !dbg !3198
  %24 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !3198
  %total27 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %24, i32 0, i32 1, !dbg !3198
  %arrayidx28 = getelementptr inbounds [2 x i64], [2 x i64]* %total27, i32 0, i64 1, !dbg !3198
  %25 = load i64, i64* %arrayidx28, align 8, !dbg !3198
  %shl29 = shl i64 %25, 3, !dbg !3198
  %26 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !3198
  %total30 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %26, i32 0, i32 1, !dbg !3198
  %arrayidx31 = getelementptr inbounds [2 x i64], [2 x i64]* %total30, i32 0, i64 0, !dbg !3198
  %27 = load i64, i64* %arrayidx31, align 8, !dbg !3198
  %shr32 = lshr i64 %27, 61, !dbg !3198
  %or33 = or i64 %shl29, %shr32, !dbg !3198
  %and34 = and i64 %or33, 16711680, !dbg !3198
  %shl35 = shl i64 %and34, 24, !dbg !3198
  %28 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !3198
  %total36 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %28, i32 0, i32 1, !dbg !3198
  %arrayidx37 = getelementptr inbounds [2 x i64], [2 x i64]* %total36, i32 0, i64 1, !dbg !3198
  %29 = load i64, i64* %arrayidx37, align 8, !dbg !3198
  %shl38 = shl i64 %29, 3, !dbg !3198
  %30 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !3198
  %total39 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %30, i32 0, i32 1, !dbg !3198
  %arrayidx40 = getelementptr inbounds [2 x i64], [2 x i64]* %total39, i32 0, i64 0, !dbg !3198
  %31 = load i64, i64* %arrayidx40, align 8, !dbg !3198
  %shr41 = lshr i64 %31, 61, !dbg !3198
  %or42 = or i64 %shl38, %shr41, !dbg !3198
  %and43 = and i64 %or42, 4278190080, !dbg !3198
  %shl44 = shl i64 %and43, 8, !dbg !3198
  %or45 = or i64 %shl35, %shl44, !dbg !3198
  %or46 = or i64 %or26, %or45, !dbg !3198
  %32 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !3198
  %total47 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %32, i32 0, i32 1, !dbg !3198
  %arrayidx48 = getelementptr inbounds [2 x i64], [2 x i64]* %total47, i32 0, i64 1, !dbg !3198
  %33 = load i64, i64* %arrayidx48, align 8, !dbg !3198
  %shl49 = shl i64 %33, 3, !dbg !3198
  %34 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !3198
  %total50 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %34, i32 0, i32 1, !dbg !3198
  %arrayidx51 = getelementptr inbounds [2 x i64], [2 x i64]* %total50, i32 0, i64 0, !dbg !3198
  %35 = load i64, i64* %arrayidx51, align 8, !dbg !3198
  %shr52 = lshr i64 %35, 61, !dbg !3198
  %or53 = or i64 %shl49, %shr52, !dbg !3198
  %shr54 = lshr i64 %or53, 8, !dbg !3198
  %and55 = and i64 %shr54, 4278190080, !dbg !3198
  %36 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !3198
  %total56 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %36, i32 0, i32 1, !dbg !3198
  %arrayidx57 = getelementptr inbounds [2 x i64], [2 x i64]* %total56, i32 0, i64 1, !dbg !3198
  %37 = load i64, i64* %arrayidx57, align 8, !dbg !3198
  %shl58 = shl i64 %37, 3, !dbg !3198
  %38 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !3198
  %total59 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %38, i32 0, i32 1, !dbg !3198
  %arrayidx60 = getelementptr inbounds [2 x i64], [2 x i64]* %total59, i32 0, i64 0, !dbg !3198
  %39 = load i64, i64* %arrayidx60, align 8, !dbg !3198
  %shr61 = lshr i64 %39, 61, !dbg !3198
  %or62 = or i64 %shl58, %shr61, !dbg !3198
  %shr63 = lshr i64 %or62, 24, !dbg !3198
  %and64 = and i64 %shr63, 16711680, !dbg !3198
  %or65 = or i64 %and55, %and64, !dbg !3198
  %40 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !3198
  %total66 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %40, i32 0, i32 1, !dbg !3198
  %arrayidx67 = getelementptr inbounds [2 x i64], [2 x i64]* %total66, i32 0, i64 1, !dbg !3198
  %41 = load i64, i64* %arrayidx67, align 8, !dbg !3198
  %shl68 = shl i64 %41, 3, !dbg !3198
  %42 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !3198
  %total69 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %42, i32 0, i32 1, !dbg !3198
  %arrayidx70 = getelementptr inbounds [2 x i64], [2 x i64]* %total69, i32 0, i64 0, !dbg !3198
  %43 = load i64, i64* %arrayidx70, align 8, !dbg !3198
  %shr71 = lshr i64 %43, 61, !dbg !3198
  %or72 = or i64 %shl68, %shr71, !dbg !3198
  %shr73 = lshr i64 %or72, 40, !dbg !3198
  %and74 = and i64 %shr73, 65280, !dbg !3198
  %44 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !3198
  %total75 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %44, i32 0, i32 1, !dbg !3198
  %arrayidx76 = getelementptr inbounds [2 x i64], [2 x i64]* %total75, i32 0, i64 1, !dbg !3198
  %45 = load i64, i64* %arrayidx76, align 8, !dbg !3198
  %shl77 = shl i64 %45, 3, !dbg !3198
  %46 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !3198
  %total78 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %46, i32 0, i32 1, !dbg !3198
  %arrayidx79 = getelementptr inbounds [2 x i64], [2 x i64]* %total78, i32 0, i64 0, !dbg !3198
  %47 = load i64, i64* %arrayidx79, align 8, !dbg !3198
  %shr80 = lshr i64 %47, 61, !dbg !3198
  %or81 = or i64 %shl77, %shr80, !dbg !3198
  %shr82 = lshr i64 %or81, 56, !dbg !3198
  %or83 = or i64 %and74, %shr82, !dbg !3198
  %or84 = or i64 %or65, %or83, !dbg !3198
  %or85 = or i64 %or46, %or84, !dbg !3198
  call void @set_uint64(i8* %15, i64 %or85), !dbg !3199
  %48 = load i64, i64* %size, align 8, !dbg !3200
  %sub86 = sub i64 %48, 1, !dbg !3201
  %49 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !3202
  %buffer87 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %49, i32 0, i32 3, !dbg !3203
  %arrayidx88 = getelementptr inbounds [32 x i64], [32 x i64]* %buffer87, i32 0, i64 %sub86, !dbg !3202
  %50 = bitcast i64* %arrayidx88 to i8*, !dbg !3204
  %51 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !3205
  %total89 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %51, i32 0, i32 1, !dbg !3205
  %arrayidx90 = getelementptr inbounds [2 x i64], [2 x i64]* %total89, i32 0, i64 0, !dbg !3205
  %52 = load i64, i64* %arrayidx90, align 8, !dbg !3205
  %shl91 = shl i64 %52, 3, !dbg !3205
  %shl92 = shl i64 %shl91, 56, !dbg !3205
  %53 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !3205
  %total93 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %53, i32 0, i32 1, !dbg !3205
  %arrayidx94 = getelementptr inbounds [2 x i64], [2 x i64]* %total93, i32 0, i64 0, !dbg !3205
  %54 = load i64, i64* %arrayidx94, align 8, !dbg !3205
  %shl95 = shl i64 %54, 3, !dbg !3205
  %and96 = and i64 %shl95, 65280, !dbg !3205
  %shl97 = shl i64 %and96, 40, !dbg !3205
  %or98 = or i64 %shl92, %shl97, !dbg !3205
  %55 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !3205
  %total99 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %55, i32 0, i32 1, !dbg !3205
  %arrayidx100 = getelementptr inbounds [2 x i64], [2 x i64]* %total99, i32 0, i64 0, !dbg !3205
  %56 = load i64, i64* %arrayidx100, align 8, !dbg !3205
  %shl101 = shl i64 %56, 3, !dbg !3205
  %and102 = and i64 %shl101, 16711680, !dbg !3205
  %shl103 = shl i64 %and102, 24, !dbg !3205
  %57 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !3205
  %total104 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %57, i32 0, i32 1, !dbg !3205
  %arrayidx105 = getelementptr inbounds [2 x i64], [2 x i64]* %total104, i32 0, i64 0, !dbg !3205
  %58 = load i64, i64* %arrayidx105, align 8, !dbg !3205
  %shl106 = shl i64 %58, 3, !dbg !3205
  %and107 = and i64 %shl106, 4278190080, !dbg !3205
  %shl108 = shl i64 %and107, 8, !dbg !3205
  %or109 = or i64 %shl103, %shl108, !dbg !3205
  %or110 = or i64 %or98, %or109, !dbg !3205
  %59 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !3205
  %total111 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %59, i32 0, i32 1, !dbg !3205
  %arrayidx112 = getelementptr inbounds [2 x i64], [2 x i64]* %total111, i32 0, i64 0, !dbg !3205
  %60 = load i64, i64* %arrayidx112, align 8, !dbg !3205
  %shl113 = shl i64 %60, 3, !dbg !3205
  %shr114 = lshr i64 %shl113, 8, !dbg !3205
  %and115 = and i64 %shr114, 4278190080, !dbg !3205
  %61 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !3205
  %total116 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %61, i32 0, i32 1, !dbg !3205
  %arrayidx117 = getelementptr inbounds [2 x i64], [2 x i64]* %total116, i32 0, i64 0, !dbg !3205
  %62 = load i64, i64* %arrayidx117, align 8, !dbg !3205
  %shl118 = shl i64 %62, 3, !dbg !3205
  %shr119 = lshr i64 %shl118, 24, !dbg !3205
  %and120 = and i64 %shr119, 16711680, !dbg !3205
  %or121 = or i64 %and115, %and120, !dbg !3205
  %63 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !3205
  %total122 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %63, i32 0, i32 1, !dbg !3205
  %arrayidx123 = getelementptr inbounds [2 x i64], [2 x i64]* %total122, i32 0, i64 0, !dbg !3205
  %64 = load i64, i64* %arrayidx123, align 8, !dbg !3205
  %shl124 = shl i64 %64, 3, !dbg !3205
  %shr125 = lshr i64 %shl124, 40, !dbg !3205
  %and126 = and i64 %shr125, 65280, !dbg !3205
  %65 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !3205
  %total127 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %65, i32 0, i32 1, !dbg !3205
  %arrayidx128 = getelementptr inbounds [2 x i64], [2 x i64]* %total127, i32 0, i64 0, !dbg !3205
  %66 = load i64, i64* %arrayidx128, align 8, !dbg !3205
  %shl129 = shl i64 %66, 3, !dbg !3205
  %shr130 = lshr i64 %shl129, 56, !dbg !3205
  %or131 = or i64 %and126, %shr130, !dbg !3205
  %or132 = or i64 %or121, %or131, !dbg !3205
  %or133 = or i64 %or110, %or132, !dbg !3205
  call void @set_uint64(i8* %50, i64 %or133), !dbg !3206
  %67 = load i64, i64* %bytes, align 8, !dbg !3207
  %68 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !3208
  %buffer134 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %68, i32 0, i32 3, !dbg !3209
  %arraydecay = getelementptr inbounds [32 x i64], [32 x i64]* %buffer134, i32 0, i32 0, !dbg !3208
  %69 = bitcast i64* %arraydecay to i8*, !dbg !3210
  %arrayidx135 = getelementptr inbounds i8, i8* %69, i64 %67, !dbg !3211
  %70 = load i64, i64* %size, align 8, !dbg !3212
  %sub136 = sub i64 %70, 2, !dbg !3213
  %mul = mul i64 %sub136, 8, !dbg !3214
  %71 = load i64, i64* %bytes, align 8, !dbg !3215
  %sub137 = sub i64 %mul, %71, !dbg !3216
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arrayidx135, i8* align 1 getelementptr inbounds ([128 x i8], [128 x i8]* @fillbuf, i32 0, i32 0), i64 %sub137, i1 false), !dbg !3217
  %72 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !3218
  %buffer138 = getelementptr inbounds %struct.sha512_ctx, %struct.sha512_ctx* %72, i32 0, i32 3, !dbg !3219
  %arraydecay139 = getelementptr inbounds [32 x i64], [32 x i64]* %buffer138, i32 0, i32 0, !dbg !3218
  %73 = bitcast i64* %arraydecay139 to i8*, !dbg !3218
  %74 = load i64, i64* %size, align 8, !dbg !3220
  %mul140 = mul i64 %74, 8, !dbg !3221
  %75 = load %struct.sha512_ctx*, %struct.sha512_ctx** %ctx.addr, align 8, !dbg !3222
  call void @sha512_process_block(i8* %73, i64 %mul140, %struct.sha512_ctx* %75), !dbg !3223
  ret void, !dbg !3224
}

; Function Attrs: nounwind uwtable
define internal void @fdadvise(i32 %fd, i64 %offset, i64 %len, i32 %advice) #5 !dbg !3225 {
entry:
  %fd.addr = alloca i32, align 4
  %offset.addr = alloca i64, align 8
  %len.addr = alloca i64, align 8
  %advice.addr = alloca i32, align 4
  %__x = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !3230, metadata !DIExpression()), !dbg !3231
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !3232, metadata !DIExpression()), !dbg !3233
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !3234, metadata !DIExpression()), !dbg !3235
  store i32 %advice, i32* %advice.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %advice.addr, metadata !3236, metadata !DIExpression()), !dbg !3237
  call void @llvm.dbg.declare(metadata i32* %__x, metadata !3238, metadata !DIExpression()), !dbg !3240
  %0 = load i32, i32* %fd.addr, align 4, !dbg !3240
  %1 = load i64, i64* %offset.addr, align 8, !dbg !3240
  %2 = load i64, i64* %len.addr, align 8, !dbg !3240
  %3 = load i32, i32* %advice.addr, align 4, !dbg !3240
  %call = call i32 @posix_fadvise(i32 %0, i64 %1, i64 %2, i32 %3) #11, !dbg !3240
  store i32 %call, i32* %__x, align 4, !dbg !3240
  %4 = load i32, i32* %__x, align 4, !dbg !3240
  ret void, !dbg !3241
}

; Function Attrs: nounwind
declare i32 @posix_fadvise(i32, i64, i64, i32) #3

; Function Attrs: nounwind uwtable
define internal void @fadvise(%struct._IO_FILE* %fp, i32 %advice) #5 !dbg !3242 {
entry:
  %fp.addr = alloca %struct._IO_FILE*, align 8
  %advice.addr = alloca i32, align 4
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !3285, metadata !DIExpression()), !dbg !3286
  store i32 %advice, i32* %advice.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %advice.addr, metadata !3287, metadata !DIExpression()), !dbg !3288
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !3289
  %tobool = icmp ne %struct._IO_FILE* %0, null, !dbg !3289
  br i1 %tobool, label %if.then, label %if.end, !dbg !3291

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !3292
  %call = call i32 @fileno(%struct._IO_FILE* %1) #11, !dbg !3293
  %2 = load i32, i32* %advice.addr, align 4, !dbg !3294
  call void @fdadvise(i32 %call, i64 0, i64 0, i32 %2), !dbg !3295
  br label %if.end, !dbg !3295

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !3296
}

; Function Attrs: nounwind
declare i32 @fileno(%struct._IO_FILE*) #3

; Function Attrs: nounwind uwtable
define internal %struct._IO_FILE* @fopen_safer(i8* %file, i8* %mode) #5 !dbg !3297 {
entry:
  %retval = alloca %struct._IO_FILE*, align 8
  %file.addr = alloca i8*, align 8
  %mode.addr = alloca i8*, align 8
  %fp = alloca %struct._IO_FILE*, align 8
  %fd = alloca i32, align 4
  %f = alloca i32, align 4
  %e = alloca i32, align 4
  %e15 = alloca i32, align 4
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !3340, metadata !DIExpression()), !dbg !3341
  store i8* %mode, i8** %mode.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mode.addr, metadata !3342, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp, metadata !3344, metadata !DIExpression()), !dbg !3345
  %0 = load i8*, i8** %file.addr, align 8, !dbg !3346
  %1 = load i8*, i8** %mode.addr, align 8, !dbg !3347
  %call = call %struct._IO_FILE* @fopen(i8* %0, i8* %1), !dbg !3348
  store %struct._IO_FILE* %call, %struct._IO_FILE** %fp, align 8, !dbg !3345
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !3349
  %tobool = icmp ne %struct._IO_FILE* %2, null, !dbg !3349
  br i1 %tobool, label %if.then, label %if.end.21, !dbg !3351

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !3352, metadata !DIExpression()), !dbg !3354
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !3355
  %call1 = call i32 @fileno(%struct._IO_FILE* %3) #11, !dbg !3356
  store i32 %call1, i32* %fd, align 4, !dbg !3354
  %4 = load i32, i32* %fd, align 4, !dbg !3357
  %cmp = icmp sle i32 0, %4, !dbg !3359
  br i1 %cmp, label %land.lhs.true, label %if.end.20, !dbg !3360

land.lhs.true:                                    ; preds = %if.then
  %5 = load i32, i32* %fd, align 4, !dbg !3361
  %cmp2 = icmp sle i32 %5, 2, !dbg !3363
  br i1 %cmp2, label %if.then.3, label %if.end.20, !dbg !3364

if.then.3:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %f, metadata !3365, metadata !DIExpression()), !dbg !3367
  %6 = load i32, i32* %fd, align 4, !dbg !3368
  %call4 = call i32 @dup_safer(i32 %6), !dbg !3369
  store i32 %call4, i32* %f, align 4, !dbg !3367
  %7 = load i32, i32* %f, align 4, !dbg !3370
  %cmp5 = icmp slt i32 %7, 0, !dbg !3372
  br i1 %cmp5, label %if.then.6, label %if.end, !dbg !3373

if.then.6:                                        ; preds = %if.then.3
  call void @llvm.dbg.declare(metadata i32* %e, metadata !3374, metadata !DIExpression()), !dbg !3376
  %call7 = call i32* @__errno_location() #17, !dbg !3377
  %8 = load i32, i32* %call7, align 4, !dbg !3377
  store i32 %8, i32* %e, align 4, !dbg !3376
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !3378
  %call8 = call i32 @rpl_fclose(%struct._IO_FILE* %9), !dbg !3379
  %10 = load i32, i32* %e, align 4, !dbg !3380
  %call9 = call i32* @__errno_location() #17, !dbg !3381
  store i32 %10, i32* %call9, align 4, !dbg !3382
  store %struct._IO_FILE* null, %struct._IO_FILE** %retval, !dbg !3383
  br label %return, !dbg !3383

if.end:                                           ; preds = %if.then.3
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !3384
  %call10 = call i32 @rpl_fclose(%struct._IO_FILE* %11), !dbg !3386
  %cmp11 = icmp ne i32 %call10, 0, !dbg !3387
  br i1 %cmp11, label %if.then.14, label %lor.lhs.false, !dbg !3388

lor.lhs.false:                                    ; preds = %if.end
  %12 = load i32, i32* %f, align 4, !dbg !3389
  %13 = load i8*, i8** %mode.addr, align 8, !dbg !3391
  %call12 = call %struct._IO_FILE* @fdopen(i32 %12, i8* %13) #11, !dbg !3392
  store %struct._IO_FILE* %call12, %struct._IO_FILE** %fp, align 8, !dbg !3393
  %tobool13 = icmp ne %struct._IO_FILE* %call12, null, !dbg !3393
  br i1 %tobool13, label %if.end.19, label %if.then.14, !dbg !3394

if.then.14:                                       ; preds = %lor.lhs.false, %if.end
  call void @llvm.dbg.declare(metadata i32* %e15, metadata !3395, metadata !DIExpression()), !dbg !3397
  %call16 = call i32* @__errno_location() #17, !dbg !3398
  %14 = load i32, i32* %call16, align 4, !dbg !3398
  store i32 %14, i32* %e15, align 4, !dbg !3397
  %15 = load i32, i32* %f, align 4, !dbg !3399
  %call17 = call i32 @close(i32 %15), !dbg !3400
  %16 = load i32, i32* %e15, align 4, !dbg !3401
  %call18 = call i32* @__errno_location() #17, !dbg !3402
  store i32 %16, i32* %call18, align 4, !dbg !3403
  store %struct._IO_FILE* null, %struct._IO_FILE** %retval, !dbg !3404
  br label %return, !dbg !3404

if.end.19:                                        ; preds = %lor.lhs.false
  br label %if.end.20, !dbg !3405

if.end.20:                                        ; preds = %if.end.19, %land.lhs.true, %if.then
  br label %if.end.21, !dbg !3406

if.end.21:                                        ; preds = %if.end.20, %entry
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !3407
  store %struct._IO_FILE* %17, %struct._IO_FILE** %retval, !dbg !3408
  br label %return, !dbg !3408

return:                                           ; preds = %if.end.21, %if.then.14, %if.then.6
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** %retval, !dbg !3409
  ret %struct._IO_FILE* %18, !dbg !3409
}

declare %struct._IO_FILE* @fopen(i8*, i8*) #2

; Function Attrs: nounwind
declare %struct._IO_FILE* @fdopen(i32, i8*) #3

declare i32 @close(i32) #2

; Function Attrs: nounwind uwtable
define internal void @set_program_name(i8* %argv0) #5 !dbg !3410 {
entry:
  %argv0.addr = alloca i8*, align 8
  %slash = alloca i8*, align 8
  %base = alloca i8*, align 8
  store i8* %argv0, i8** %argv0.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %argv0.addr, metadata !3411, metadata !DIExpression()), !dbg !3412
  call void @llvm.dbg.declare(metadata i8** %slash, metadata !3413, metadata !DIExpression()), !dbg !3414
  call void @llvm.dbg.declare(metadata i8** %base, metadata !3415, metadata !DIExpression()), !dbg !3416
  %0 = load i8*, i8** %argv0.addr, align 8, !dbg !3417
  %cmp = icmp eq i8* %0, null, !dbg !3419
  br i1 %cmp, label %if.then, label %if.end, !dbg !3420

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3421
  %call = call i32 @fputs(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.94, i32 0, i32 0), %struct._IO_FILE* %1), !dbg !3423
  call void @abort() #14, !dbg !3424
  unreachable, !dbg !3424

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %argv0.addr, align 8, !dbg !3425
  %call1 = call i8* @strrchr(i8* %2, i32 47) #16, !dbg !3426
  store i8* %call1, i8** %slash, align 8, !dbg !3427
  %3 = load i8*, i8** %slash, align 8, !dbg !3428
  %cmp2 = icmp ne i8* %3, null, !dbg !3429
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !3428

cond.true:                                        ; preds = %if.end
  %4 = load i8*, i8** %slash, align 8, !dbg !3430
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 1, !dbg !3432
  br label %cond.end, !dbg !3428

cond.false:                                       ; preds = %if.end
  %5 = load i8*, i8** %argv0.addr, align 8, !dbg !3433
  br label %cond.end, !dbg !3428

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %add.ptr, %cond.true ], [ %5, %cond.false ], !dbg !3428
  store i8* %cond, i8** %base, align 8, !dbg !3435
  %6 = load i8*, i8** %base, align 8, !dbg !3438
  %7 = load i8*, i8** %argv0.addr, align 8, !dbg !3440
  %sub.ptr.lhs.cast = ptrtoint i8* %6 to i64, !dbg !3441
  %sub.ptr.rhs.cast = ptrtoint i8* %7 to i64, !dbg !3441
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3441
  %cmp3 = icmp sge i64 %sub.ptr.sub, 7, !dbg !3442
  br i1 %cmp3, label %land.lhs.true, label %if.end.13, !dbg !3443

land.lhs.true:                                    ; preds = %cond.end
  %8 = load i8*, i8** %base, align 8, !dbg !3444
  %add.ptr4 = getelementptr inbounds i8, i8* %8, i64 -7, !dbg !3446
  %call5 = call i32 @strncmp(i8* %add.ptr4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.95, i32 0, i32 0), i64 7) #16, !dbg !3447
  %cmp6 = icmp eq i32 %call5, 0, !dbg !3448
  br i1 %cmp6, label %if.then.7, label %if.end.13, !dbg !3449

if.then.7:                                        ; preds = %land.lhs.true
  %9 = load i8*, i8** %base, align 8, !dbg !3450
  store i8* %9, i8** %argv0.addr, align 8, !dbg !3452
  %10 = load i8*, i8** %base, align 8, !dbg !3453
  %call8 = call i32 @strncmp(i8* %10, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.96, i32 0, i32 0), i64 3) #16, !dbg !3455
  %cmp9 = icmp eq i32 %call8, 0, !dbg !3456
  br i1 %cmp9, label %if.then.10, label %if.end.12, !dbg !3457

if.then.10:                                       ; preds = %if.then.7
  %11 = load i8*, i8** %base, align 8, !dbg !3458
  %add.ptr11 = getelementptr inbounds i8, i8* %11, i64 3, !dbg !3460
  store i8* %add.ptr11, i8** %argv0.addr, align 8, !dbg !3461
  %12 = load i8*, i8** %argv0.addr, align 8, !dbg !3462
  store i8* %12, i8** @program_invocation_short_name, align 8, !dbg !3463
  br label %if.end.12, !dbg !3464

if.end.12:                                        ; preds = %if.then.10, %if.then.7
  br label %if.end.13, !dbg !3465

if.end.13:                                        ; preds = %if.end.12, %land.lhs.true, %cond.end
  %13 = load i8*, i8** %argv0.addr, align 8, !dbg !3466
  store i8* %13, i8** @program_name, align 8, !dbg !3467
  %14 = load i8*, i8** %argv0.addr, align 8, !dbg !3468
  store i8* %14, i8** @program_invocation_name, align 8, !dbg !3469
  ret void, !dbg !3470
}

declare i32 @fputs(i8*, %struct._IO_FILE*) #2

; Function Attrs: noreturn nounwind
declare void @abort() #4

; Function Attrs: nounwind readonly
declare i8* @strrchr(i8*, i32) #6

; Function Attrs: nounwind uwtable
define internal %struct.quoting_options* @clone_quoting_options(%struct.quoting_options* %o) #5 !dbg !3471 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %e = alloca i32, align 4
  %p = alloca %struct.quoting_options*, align 8
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !3475, metadata !DIExpression()), !dbg !3476
  call void @llvm.dbg.declare(metadata i32* %e, metadata !3477, metadata !DIExpression()), !dbg !3478
  %call = call i32* @__errno_location() #17, !dbg !3479
  %0 = load i32, i32* %call, align 4, !dbg !3479
  store i32 %0, i32* %e, align 4, !dbg !3478
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %p, metadata !3480, metadata !DIExpression()), !dbg !3481
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !3482
  %tobool = icmp ne %struct.quoting_options* %1, null, !dbg !3482
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !3482

cond.true:                                        ; preds = %entry
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !3483
  br label %cond.end, !dbg !3482

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !3485

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %2, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !3482
  %3 = bitcast %struct.quoting_options* %cond to i8*, !dbg !3487
  %call1 = call i8* @xmemdup(i8* %3, i64 56), !dbg !3490
  %4 = bitcast i8* %call1 to %struct.quoting_options*, !dbg !3490
  store %struct.quoting_options* %4, %struct.quoting_options** %p, align 8, !dbg !3481
  %5 = load i32, i32* %e, align 4, !dbg !3491
  %call2 = call i32* @__errno_location() #17, !dbg !3492
  store i32 %5, i32* %call2, align 4, !dbg !3493
  %6 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !3494
  ret %struct.quoting_options* %6, !dbg !3495
}

; Function Attrs: nounwind uwtable
define internal i32 @get_quoting_style(%struct.quoting_options* %o) #5 !dbg !3496 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !3499, metadata !DIExpression()), !dbg !3500
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !3501
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !3501
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !3501

cond.true:                                        ; preds = %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !3502
  br label %cond.end, !dbg !3501

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !3504

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %1, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !3501
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %cond, i32 0, i32 0, !dbg !3506
  %2 = load i32, i32* %style, align 4, !dbg !3506
  ret i32 %2, !dbg !3509
}

; Function Attrs: nounwind uwtable
define internal void @set_quoting_style(%struct.quoting_options* %o, i32 %s) #5 !dbg !3510 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %s.addr = alloca i32, align 4
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !3513, metadata !DIExpression()), !dbg !3514
  store i32 %s, i32* %s.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !3515, metadata !DIExpression()), !dbg !3516
  %0 = load i32, i32* %s.addr, align 4, !dbg !3517
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !3518
  %tobool = icmp ne %struct.quoting_options* %1, null, !dbg !3518
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !3518

cond.true:                                        ; preds = %entry
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !3519
  br label %cond.end, !dbg !3518

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !3521

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %2, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !3518
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %cond, i32 0, i32 0, !dbg !3523
  store i32 %0, i32* %style, align 4, !dbg !3526
  ret void, !dbg !3527
}

; Function Attrs: nounwind uwtable
define internal i32 @set_char_quoting(%struct.quoting_options* %o, i8 signext %c, i32 %i) #5 !dbg !3528 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %c.addr = alloca i8, align 1
  %i.addr = alloca i32, align 4
  %uc = alloca i8, align 1
  %p = alloca i32*, align 8
  %shift = alloca i32, align 4
  %r = alloca i32, align 4
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !3531, metadata !DIExpression()), !dbg !3532
  store i8 %c, i8* %c.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %c.addr, metadata !3533, metadata !DIExpression()), !dbg !3534
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !3535, metadata !DIExpression()), !dbg !3536
  call void @llvm.dbg.declare(metadata i8* %uc, metadata !3537, metadata !DIExpression()), !dbg !3538
  %0 = load i8, i8* %c.addr, align 1, !dbg !3539
  store i8 %0, i8* %uc, align 1, !dbg !3538
  call void @llvm.dbg.declare(metadata i32** %p, metadata !3540, metadata !DIExpression()), !dbg !3542
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !3543
  %tobool = icmp ne %struct.quoting_options* %1, null, !dbg !3543
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !3543

cond.true:                                        ; preds = %entry
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !3544
  br label %cond.end, !dbg !3543

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !3546

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %2, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !3543
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %cond, i32 0, i32 2, !dbg !3548
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i32 0, i32 0, !dbg !3551
  %3 = load i8, i8* %uc, align 1, !dbg !3552
  %conv = zext i8 %3 to i64, !dbg !3552
  %div = udiv i64 %conv, 32, !dbg !3553
  %add.ptr = getelementptr inbounds i32, i32* %arraydecay, i64 %div, !dbg !3554
  store i32* %add.ptr, i32** %p, align 8, !dbg !3542
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !3555, metadata !DIExpression()), !dbg !3556
  %4 = load i8, i8* %uc, align 1, !dbg !3557
  %conv1 = zext i8 %4 to i64, !dbg !3557
  %rem = urem i64 %conv1, 32, !dbg !3558
  %conv2 = trunc i64 %rem to i32, !dbg !3557
  store i32 %conv2, i32* %shift, align 4, !dbg !3556
  call void @llvm.dbg.declare(metadata i32* %r, metadata !3559, metadata !DIExpression()), !dbg !3560
  %5 = load i32*, i32** %p, align 8, !dbg !3561
  %6 = load i32, i32* %5, align 4, !dbg !3562
  %7 = load i32, i32* %shift, align 4, !dbg !3563
  %shr = lshr i32 %6, %7, !dbg !3564
  %and = and i32 %shr, 1, !dbg !3565
  store i32 %and, i32* %r, align 4, !dbg !3560
  %8 = load i32, i32* %i.addr, align 4, !dbg !3566
  %and3 = and i32 %8, 1, !dbg !3567
  %9 = load i32, i32* %r, align 4, !dbg !3568
  %xor = xor i32 %and3, %9, !dbg !3569
  %10 = load i32, i32* %shift, align 4, !dbg !3570
  %shl = shl i32 %xor, %10, !dbg !3571
  %11 = load i32*, i32** %p, align 8, !dbg !3572
  %12 = load i32, i32* %11, align 4, !dbg !3573
  %xor4 = xor i32 %12, %shl, !dbg !3573
  store i32 %xor4, i32* %11, align 4, !dbg !3573
  %13 = load i32, i32* %r, align 4, !dbg !3574
  ret i32 %13, !dbg !3575
}

; Function Attrs: nounwind uwtable
define internal i32 @set_quoting_flags(%struct.quoting_options* %o, i32 %i) #5 !dbg !3576 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %i.addr = alloca i32, align 4
  %r = alloca i32, align 4
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !3579, metadata !DIExpression()), !dbg !3580
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !3581, metadata !DIExpression()), !dbg !3582
  call void @llvm.dbg.declare(metadata i32* %r, metadata !3583, metadata !DIExpression()), !dbg !3584
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !3585
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !3585
  br i1 %tobool, label %if.end, label %if.then, !dbg !3587

if.then:                                          ; preds = %entry
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %o.addr, align 8, !dbg !3588
  br label %if.end, !dbg !3589

if.end:                                           ; preds = %if.then, %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !3590
  %flags = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %1, i32 0, i32 1, !dbg !3591
  %2 = load i32, i32* %flags, align 4, !dbg !3591
  store i32 %2, i32* %r, align 4, !dbg !3592
  %3 = load i32, i32* %i.addr, align 4, !dbg !3593
  %4 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !3594
  %flags1 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %4, i32 0, i32 1, !dbg !3595
  store i32 %3, i32* %flags1, align 4, !dbg !3596
  %5 = load i32, i32* %r, align 4, !dbg !3597
  ret i32 %5, !dbg !3598
}

; Function Attrs: nounwind uwtable
define internal void @set_custom_quoting(%struct.quoting_options* %o, i8* %left_quote, i8* %right_quote) #5 !dbg !3599 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !3602, metadata !DIExpression()), !dbg !3603
  store i8* %left_quote, i8** %left_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !3604, metadata !DIExpression()), !dbg !3605
  store i8* %right_quote, i8** %right_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !3606, metadata !DIExpression()), !dbg !3607
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !3608
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !3608
  br i1 %tobool, label %if.end, label %if.then, !dbg !3610

if.then:                                          ; preds = %entry
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %o.addr, align 8, !dbg !3611
  br label %if.end, !dbg !3612

if.end:                                           ; preds = %if.then, %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !3613
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %1, i32 0, i32 0, !dbg !3614
  store i32 8, i32* %style, align 4, !dbg !3615
  %2 = load i8*, i8** %left_quote.addr, align 8, !dbg !3616
  %tobool1 = icmp ne i8* %2, null, !dbg !3616
  br i1 %tobool1, label %lor.lhs.false, label %if.then.3, !dbg !3618

lor.lhs.false:                                    ; preds = %if.end
  %3 = load i8*, i8** %right_quote.addr, align 8, !dbg !3619
  %tobool2 = icmp ne i8* %3, null, !dbg !3619
  br i1 %tobool2, label %if.end.4, label %if.then.3, !dbg !3621

if.then.3:                                        ; preds = %lor.lhs.false, %if.end
  call void @abort() #14, !dbg !3622
  unreachable, !dbg !3622

if.end.4:                                         ; preds = %lor.lhs.false
  %4 = load i8*, i8** %left_quote.addr, align 8, !dbg !3623
  %5 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !3624
  %left_quote5 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %5, i32 0, i32 3, !dbg !3625
  store i8* %4, i8** %left_quote5, align 8, !dbg !3626
  %6 = load i8*, i8** %right_quote.addr, align 8, !dbg !3627
  %7 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !3628
  %right_quote6 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %7, i32 0, i32 4, !dbg !3629
  store i8* %6, i8** %right_quote6, align 8, !dbg !3630
  ret void, !dbg !3631
}

; Function Attrs: nounwind uwtable
define internal i64 @quotearg_buffer(i8* %buffer, i64 %buffersize, i8* %arg, i64 %argsize, %struct.quoting_options* %o) #5 !dbg !3632 {
entry:
  %buffer.addr = alloca i8*, align 8
  %buffersize.addr = alloca i64, align 8
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %o.addr = alloca %struct.quoting_options*, align 8
  %p = alloca %struct.quoting_options*, align 8
  %e = alloca i32, align 4
  %r = alloca i64, align 8
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !3637, metadata !DIExpression()), !dbg !3638
  store i64 %buffersize, i64* %buffersize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %buffersize.addr, metadata !3639, metadata !DIExpression()), !dbg !3640
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !3641, metadata !DIExpression()), !dbg !3642
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !3643, metadata !DIExpression()), !dbg !3644
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !3645, metadata !DIExpression()), !dbg !3646
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %p, metadata !3647, metadata !DIExpression()), !dbg !3648
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !3649
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !3649
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !3649

cond.true:                                        ; preds = %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !3650
  br label %cond.end, !dbg !3649

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !3652

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %1, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !3649
  store %struct.quoting_options* %cond, %struct.quoting_options** %p, align 8, !dbg !3654
  call void @llvm.dbg.declare(metadata i32* %e, metadata !3657, metadata !DIExpression()), !dbg !3658
  %call = call i32* @__errno_location() #17, !dbg !3659
  %2 = load i32, i32* %call, align 4, !dbg !3659
  store i32 %2, i32* %e, align 4, !dbg !3658
  call void @llvm.dbg.declare(metadata i64* %r, metadata !3660, metadata !DIExpression()), !dbg !3661
  %3 = load i8*, i8** %buffer.addr, align 8, !dbg !3662
  %4 = load i64, i64* %buffersize.addr, align 8, !dbg !3663
  %5 = load i8*, i8** %arg.addr, align 8, !dbg !3664
  %6 = load i64, i64* %argsize.addr, align 8, !dbg !3665
  %7 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !3666
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %7, i32 0, i32 0, !dbg !3667
  %8 = load i32, i32* %style, align 4, !dbg !3667
  %9 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !3668
  %flags = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %9, i32 0, i32 1, !dbg !3669
  %10 = load i32, i32* %flags, align 4, !dbg !3669
  %11 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !3670
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %11, i32 0, i32 2, !dbg !3671
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i32 0, i32 0, !dbg !3670
  %12 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !3672
  %left_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %12, i32 0, i32 3, !dbg !3673
  %13 = load i8*, i8** %left_quote, align 8, !dbg !3673
  %14 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !3674
  %right_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %14, i32 0, i32 4, !dbg !3675
  %15 = load i8*, i8** %right_quote, align 8, !dbg !3675
  %call1 = call i64 @quotearg_buffer_restyled(i8* %3, i64 %4, i8* %5, i64 %6, i32 %8, i32 %10, i32* %arraydecay, i8* %13, i8* %15), !dbg !3676
  store i64 %call1, i64* %r, align 8, !dbg !3661
  %16 = load i32, i32* %e, align 4, !dbg !3677
  %call2 = call i32* @__errno_location() #17, !dbg !3678
  store i32 %16, i32* %call2, align 4, !dbg !3679
  %17 = load i64, i64* %r, align 8, !dbg !3680
  ret i64 %17, !dbg !3681
}

; Function Attrs: nounwind uwtable
define internal i8* @quotearg_alloc(i8* %arg, i64 %argsize, %struct.quoting_options* %o) #5 !dbg !3682 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %o.addr = alloca %struct.quoting_options*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !3685, metadata !DIExpression()), !dbg !3686
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !3687, metadata !DIExpression()), !dbg !3688
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !3689, metadata !DIExpression()), !dbg !3690
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !3691
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !3692
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !3693
  %call = call i8* @quotearg_alloc_mem(i8* %0, i64 %1, i64* null, %struct.quoting_options* %2), !dbg !3694
  ret i8* %call, !dbg !3695
}

; Function Attrs: nounwind uwtable
define internal i8* @quotearg_alloc_mem(i8* %arg, i64 %argsize, i64* %size, %struct.quoting_options* %o) #5 !dbg !3696 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %size.addr = alloca i64*, align 8
  %o.addr = alloca %struct.quoting_options*, align 8
  %p = alloca %struct.quoting_options*, align 8
  %e = alloca i32, align 4
  %flags = alloca i32, align 4
  %bufsize = alloca i64, align 8
  %buf = alloca i8*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !3699, metadata !DIExpression()), !dbg !3700
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !3701, metadata !DIExpression()), !dbg !3702
  store i64* %size, i64** %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %size.addr, metadata !3703, metadata !DIExpression()), !dbg !3704
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !3705, metadata !DIExpression()), !dbg !3706
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %p, metadata !3707, metadata !DIExpression()), !dbg !3708
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !3709
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !3709
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !3709

cond.true:                                        ; preds = %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !3710
  br label %cond.end, !dbg !3709

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !3712

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %1, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !3709
  store %struct.quoting_options* %cond, %struct.quoting_options** %p, align 8, !dbg !3714
  call void @llvm.dbg.declare(metadata i32* %e, metadata !3717, metadata !DIExpression()), !dbg !3718
  %call = call i32* @__errno_location() #17, !dbg !3719
  %2 = load i32, i32* %call, align 4, !dbg !3719
  store i32 %2, i32* %e, align 4, !dbg !3718
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !3720, metadata !DIExpression()), !dbg !3721
  %3 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !3722
  %flags1 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %3, i32 0, i32 1, !dbg !3723
  %4 = load i32, i32* %flags1, align 4, !dbg !3723
  %5 = load i64*, i64** %size.addr, align 8, !dbg !3724
  %tobool2 = icmp ne i64* %5, null, !dbg !3724
  %cond3 = select i1 %tobool2, i32 0, i32 1, !dbg !3724
  %or = or i32 %4, %cond3, !dbg !3725
  store i32 %or, i32* %flags, align 4, !dbg !3721
  call void @llvm.dbg.declare(metadata i64* %bufsize, metadata !3726, metadata !DIExpression()), !dbg !3727
  %6 = load i8*, i8** %arg.addr, align 8, !dbg !3728
  %7 = load i64, i64* %argsize.addr, align 8, !dbg !3729
  %8 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !3730
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %8, i32 0, i32 0, !dbg !3731
  %9 = load i32, i32* %style, align 4, !dbg !3731
  %10 = load i32, i32* %flags, align 4, !dbg !3732
  %11 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !3733
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %11, i32 0, i32 2, !dbg !3734
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i32 0, i32 0, !dbg !3733
  %12 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !3735
  %left_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %12, i32 0, i32 3, !dbg !3736
  %13 = load i8*, i8** %left_quote, align 8, !dbg !3736
  %14 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !3737
  %right_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %14, i32 0, i32 4, !dbg !3738
  %15 = load i8*, i8** %right_quote, align 8, !dbg !3738
  %call4 = call i64 @quotearg_buffer_restyled(i8* null, i64 0, i8* %6, i64 %7, i32 %9, i32 %10, i32* %arraydecay, i8* %13, i8* %15), !dbg !3739
  %add = add i64 %call4, 1, !dbg !3740
  store i64 %add, i64* %bufsize, align 8, !dbg !3727
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !3741, metadata !DIExpression()), !dbg !3742
  %16 = load i64, i64* %bufsize, align 8, !dbg !3743
  %call5 = call noalias i8* @xcharalloc(i64 %16), !dbg !3744
  store i8* %call5, i8** %buf, align 8, !dbg !3742
  %17 = load i8*, i8** %buf, align 8, !dbg !3745
  %18 = load i64, i64* %bufsize, align 8, !dbg !3746
  %19 = load i8*, i8** %arg.addr, align 8, !dbg !3747
  %20 = load i64, i64* %argsize.addr, align 8, !dbg !3748
  %21 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !3749
  %style6 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %21, i32 0, i32 0, !dbg !3750
  %22 = load i32, i32* %style6, align 4, !dbg !3750
  %23 = load i32, i32* %flags, align 4, !dbg !3751
  %24 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !3752
  %quote_these_too7 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %24, i32 0, i32 2, !dbg !3753
  %arraydecay8 = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too7, i32 0, i32 0, !dbg !3752
  %25 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !3754
  %left_quote9 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %25, i32 0, i32 3, !dbg !3755
  %26 = load i8*, i8** %left_quote9, align 8, !dbg !3755
  %27 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !3756
  %right_quote10 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %27, i32 0, i32 4, !dbg !3757
  %28 = load i8*, i8** %right_quote10, align 8, !dbg !3757
  %call11 = call i64 @quotearg_buffer_restyled(i8* %17, i64 %18, i8* %19, i64 %20, i32 %22, i32 %23, i32* %arraydecay8, i8* %26, i8* %28), !dbg !3758
  %29 = load i32, i32* %e, align 4, !dbg !3759
  %call12 = call i32* @__errno_location() #17, !dbg !3760
  store i32 %29, i32* %call12, align 4, !dbg !3761
  %30 = load i64*, i64** %size.addr, align 8, !dbg !3762
  %tobool13 = icmp ne i64* %30, null, !dbg !3762
  br i1 %tobool13, label %if.then, label %if.end, !dbg !3764

if.then:                                          ; preds = %cond.end
  %31 = load i64, i64* %bufsize, align 8, !dbg !3765
  %sub = sub i64 %31, 1, !dbg !3766
  %32 = load i64*, i64** %size.addr, align 8, !dbg !3767
  store i64 %sub, i64* %32, align 8, !dbg !3768
  br label %if.end, !dbg !3769

if.end:                                           ; preds = %if.then, %cond.end
  %33 = load i8*, i8** %buf, align 8, !dbg !3770
  ret i8* %33, !dbg !3771
}

; Function Attrs: nounwind uwtable
define internal void @quotearg_free() #5 !dbg !3772 {
entry:
  %sv = alloca %struct.slotvec*, align 8
  %i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata %struct.slotvec** %sv, metadata !3773, metadata !DIExpression()), !dbg !3774
  %0 = load %struct.slotvec*, %struct.slotvec** @slotvec, align 8, !dbg !3775
  store %struct.slotvec* %0, %struct.slotvec** %sv, align 8, !dbg !3774
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3776, metadata !DIExpression()), !dbg !3777
  store i32 1, i32* %i, align 4, !dbg !3778
  br label %for.cond, !dbg !3780

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !3781
  %2 = load i32, i32* @nslots, align 4, !dbg !3785
  %cmp = icmp ult i32 %1, %2, !dbg !3786
  br i1 %cmp, label %for.body, label %for.end, !dbg !3787

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4, !dbg !3788
  %idxprom = zext i32 %3 to i64, !dbg !3789
  %4 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !3789
  %arrayidx = getelementptr inbounds %struct.slotvec, %struct.slotvec* %4, i64 %idxprom, !dbg !3789
  %val = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx, i32 0, i32 1, !dbg !3790
  %5 = load i8*, i8** %val, align 8, !dbg !3790
  call void @free(i8* %5) #11, !dbg !3791
  br label %for.inc, !dbg !3791

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !3792
  %inc = add i32 %6, 1, !dbg !3792
  store i32 %inc, i32* %i, align 4, !dbg !3792
  br label %for.cond, !dbg !3793

for.end:                                          ; preds = %for.cond
  %7 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !3794
  %arrayidx1 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %7, i64 0, !dbg !3794
  %val2 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx1, i32 0, i32 1, !dbg !3796
  %8 = load i8*, i8** %val2, align 8, !dbg !3796
  %cmp3 = icmp ne i8* %8, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i32 0, i32 0), !dbg !3797
  br i1 %cmp3, label %if.then, label %if.end, !dbg !3798

if.then:                                          ; preds = %for.end
  %9 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !3799
  %arrayidx4 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %9, i64 0, !dbg !3799
  %val5 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx4, i32 0, i32 1, !dbg !3801
  %10 = load i8*, i8** %val5, align 8, !dbg !3801
  call void @free(i8* %10) #11, !dbg !3802
  store i64 256, i64* getelementptr inbounds (%struct.slotvec, %struct.slotvec* @slotvec0, i32 0, i32 0), align 8, !dbg !3803
  store i8* getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i32 0, i32 0), i8** getelementptr inbounds (%struct.slotvec, %struct.slotvec* @slotvec0, i32 0, i32 1), align 8, !dbg !3804
  br label %if.end, !dbg !3805

if.end:                                           ; preds = %if.then, %for.end
  %11 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !3806
  %cmp6 = icmp ne %struct.slotvec* %11, @slotvec0, !dbg !3808
  br i1 %cmp6, label %if.then.7, label %if.end.8, !dbg !3809

if.then.7:                                        ; preds = %if.end
  %12 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !3810
  %13 = bitcast %struct.slotvec* %12 to i8*, !dbg !3810
  call void @free(i8* %13) #11, !dbg !3812
  store %struct.slotvec* @slotvec0, %struct.slotvec** @slotvec, align 8, !dbg !3813
  br label %if.end.8, !dbg !3814

if.end.8:                                         ; preds = %if.then.7, %if.end
  store i32 1, i32* @nslots, align 4, !dbg !3815
  ret void, !dbg !3816
}

; Function Attrs: nounwind uwtable
define internal i8* @quotearg_n(i32 %n, i8* %arg) #5 !dbg !3817 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !3820, metadata !DIExpression()), !dbg !3821
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !3822, metadata !DIExpression()), !dbg !3823
  %0 = load i32, i32* %n.addr, align 4, !dbg !3824
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !3825
  %call = call i8* @quotearg_n_options(i32 %0, i8* %1, i64 -1, %struct.quoting_options* @default_quoting_options), !dbg !3826
  ret i8* %call, !dbg !3827
}

; Function Attrs: nounwind uwtable
define internal i8* @quotearg_n_mem(i32 %n, i8* %arg, i64 %argsize) #5 !dbg !3828 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !3831, metadata !DIExpression()), !dbg !3832
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !3833, metadata !DIExpression()), !dbg !3834
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !3835, metadata !DIExpression()), !dbg !3836
  %0 = load i32, i32* %n.addr, align 4, !dbg !3837
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !3838
  %2 = load i64, i64* %argsize.addr, align 8, !dbg !3839
  %call = call i8* @quotearg_n_options(i32 %0, i8* %1, i64 %2, %struct.quoting_options* @default_quoting_options), !dbg !3840
  ret i8* %call, !dbg !3841
}

; Function Attrs: nounwind uwtable
define internal i8* @quotearg(i8* %arg) #5 !dbg !3842 {
entry:
  %arg.addr = alloca i8*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !3843, metadata !DIExpression()), !dbg !3844
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !3845
  %call = call i8* @quotearg_n(i32 0, i8* %0), !dbg !3846
  ret i8* %call, !dbg !3847
}

; Function Attrs: nounwind uwtable
define internal i8* @quotearg_mem(i8* %arg, i64 %argsize) #5 !dbg !3848 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !3851, metadata !DIExpression()), !dbg !3852
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !3853, metadata !DIExpression()), !dbg !3854
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !3855
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !3856
  %call = call i8* @quotearg_n_mem(i32 0, i8* %0, i64 %1), !dbg !3857
  ret i8* %call, !dbg !3858
}

; Function Attrs: nounwind uwtable
define internal i8* @quotearg_n_style(i32 %n, i32 %s, i8* %arg) #5 !dbg !3859 {
entry:
  %n.addr = alloca i32, align 4
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %o = alloca %struct.quoting_options, align 8
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !3862, metadata !DIExpression()), !dbg !3863
  store i32 %s, i32* %s.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !3864, metadata !DIExpression()), !dbg !3865
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !3866, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %o, metadata !3868, metadata !DIExpression()), !dbg !3869
  %0 = load i32, i32* %s.addr, align 4, !dbg !3870
  call void @quoting_options_from_style(%struct.quoting_options* sret %o, i32 %0), !dbg !3871
  %1 = load i32, i32* %n.addr, align 4, !dbg !3872
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !3873
  %call = call i8* @quotearg_n_options(i32 %1, i8* %2, i64 -1, %struct.quoting_options* %o), !dbg !3874
  ret i8* %call, !dbg !3875
}

; Function Attrs: nounwind uwtable
define internal i8* @quotearg_n_style_mem(i32 %n, i32 %s, i8* %arg, i64 %argsize) #5 !dbg !3876 {
entry:
  %n.addr = alloca i32, align 4
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %o = alloca %struct.quoting_options, align 8
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !3879, metadata !DIExpression()), !dbg !3880
  store i32 %s, i32* %s.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !3881, metadata !DIExpression()), !dbg !3882
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !3883, metadata !DIExpression()), !dbg !3884
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !3885, metadata !DIExpression()), !dbg !3886
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %o, metadata !3887, metadata !DIExpression()), !dbg !3888
  %0 = load i32, i32* %s.addr, align 4, !dbg !3889
  call void @quoting_options_from_style(%struct.quoting_options* sret %o, i32 %0), !dbg !3890
  %1 = load i32, i32* %n.addr, align 4, !dbg !3891
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !3892
  %3 = load i64, i64* %argsize.addr, align 8, !dbg !3893
  %call = call i8* @quotearg_n_options(i32 %1, i8* %2, i64 %3, %struct.quoting_options* %o), !dbg !3894
  ret i8* %call, !dbg !3895
}

; Function Attrs: nounwind uwtable
define internal i8* @quotearg_style(i32 %s, i8* %arg) #5 !dbg !3896 {
entry:
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  store i32 %s, i32* %s.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !3899, metadata !DIExpression()), !dbg !3900
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !3901, metadata !DIExpression()), !dbg !3902
  %0 = load i32, i32* %s.addr, align 4, !dbg !3903
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !3904
  %call = call i8* @quotearg_n_style(i32 0, i32 %0, i8* %1), !dbg !3905
  ret i8* %call, !dbg !3906
}

; Function Attrs: nounwind uwtable
define internal i8* @quotearg_style_mem(i32 %s, i8* %arg, i64 %argsize) #5 !dbg !3907 {
entry:
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i32 %s, i32* %s.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !3910, metadata !DIExpression()), !dbg !3911
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !3912, metadata !DIExpression()), !dbg !3913
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !3914, metadata !DIExpression()), !dbg !3915
  %0 = load i32, i32* %s.addr, align 4, !dbg !3916
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !3917
  %2 = load i64, i64* %argsize.addr, align 8, !dbg !3918
  %call = call i8* @quotearg_n_style_mem(i32 0, i32 %0, i8* %1, i64 %2), !dbg !3919
  ret i8* %call, !dbg !3920
}

; Function Attrs: nounwind uwtable
define internal i8* @quotearg_char_mem(i8* %arg, i64 %argsize, i8 signext %ch) #5 !dbg !3921 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %ch.addr = alloca i8, align 1
  %options = alloca %struct.quoting_options, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !3924, metadata !DIExpression()), !dbg !3925
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !3926, metadata !DIExpression()), !dbg !3927
  store i8 %ch, i8* %ch.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !3928, metadata !DIExpression()), !dbg !3929
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %options, metadata !3930, metadata !DIExpression()), !dbg !3931
  %0 = bitcast %struct.quoting_options* %options to i8*, !dbg !3932
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i1 false), !dbg !3932
  %1 = load i8, i8* %ch.addr, align 1, !dbg !3933
  %call = call i32 @set_char_quoting(%struct.quoting_options* %options, i8 signext %1, i32 1), !dbg !3934
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !3935
  %3 = load i64, i64* %argsize.addr, align 8, !dbg !3936
  %call1 = call i8* @quotearg_n_options(i32 0, i8* %2, i64 %3, %struct.quoting_options* %options), !dbg !3937
  ret i8* %call1, !dbg !3938
}

; Function Attrs: nounwind uwtable
define internal i8* @quotearg_char(i8* %arg, i8 signext %ch) #5 !dbg !3939 {
entry:
  %arg.addr = alloca i8*, align 8
  %ch.addr = alloca i8, align 1
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !3942, metadata !DIExpression()), !dbg !3943
  store i8 %ch, i8* %ch.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !3944, metadata !DIExpression()), !dbg !3945
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !3946
  %1 = load i8, i8* %ch.addr, align 1, !dbg !3947
  %call = call i8* @quotearg_char_mem(i8* %0, i64 -1, i8 signext %1), !dbg !3948
  ret i8* %call, !dbg !3949
}

; Function Attrs: nounwind uwtable
define internal i8* @quotearg_colon(i8* %arg) #5 !dbg !3950 {
entry:
  %arg.addr = alloca i8*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !3951, metadata !DIExpression()), !dbg !3952
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !3953
  %call = call i8* @quotearg_char(i8* %0, i8 signext 58), !dbg !3954
  ret i8* %call, !dbg !3955
}

; Function Attrs: nounwind uwtable
define internal i8* @quotearg_colon_mem(i8* %arg, i64 %argsize) #5 !dbg !3956 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !3957, metadata !DIExpression()), !dbg !3958
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !3959, metadata !DIExpression()), !dbg !3960
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !3961
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !3962
  %call = call i8* @quotearg_char_mem(i8* %0, i64 %1, i8 signext 58), !dbg !3963
  ret i8* %call, !dbg !3964
}

; Function Attrs: nounwind uwtable
define internal i8* @quotearg_n_custom(i32 %n, i8* %left_quote, i8* %right_quote, i8* %arg) #5 !dbg !3965 {
entry:
  %n.addr = alloca i32, align 4
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !3968, metadata !DIExpression()), !dbg !3969
  store i8* %left_quote, i8** %left_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !3970, metadata !DIExpression()), !dbg !3971
  store i8* %right_quote, i8** %right_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !3972, metadata !DIExpression()), !dbg !3973
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !3974, metadata !DIExpression()), !dbg !3975
  %0 = load i32, i32* %n.addr, align 4, !dbg !3976
  %1 = load i8*, i8** %left_quote.addr, align 8, !dbg !3977
  %2 = load i8*, i8** %right_quote.addr, align 8, !dbg !3978
  %3 = load i8*, i8** %arg.addr, align 8, !dbg !3979
  %call = call i8* @quotearg_n_custom_mem(i32 %0, i8* %1, i8* %2, i8* %3, i64 -1), !dbg !3980
  ret i8* %call, !dbg !3981
}

; Function Attrs: nounwind uwtable
define internal i8* @quotearg_n_custom_mem(i32 %n, i8* %left_quote, i8* %right_quote, i8* %arg, i64 %argsize) #5 !dbg !3982 {
entry:
  %n.addr = alloca i32, align 4
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %o = alloca %struct.quoting_options, align 8
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !3985, metadata !DIExpression()), !dbg !3986
  store i8* %left_quote, i8** %left_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !3987, metadata !DIExpression()), !dbg !3988
  store i8* %right_quote, i8** %right_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !3989, metadata !DIExpression()), !dbg !3990
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !3991, metadata !DIExpression()), !dbg !3992
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !3993, metadata !DIExpression()), !dbg !3994
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %o, metadata !3995, metadata !DIExpression()), !dbg !3996
  %0 = bitcast %struct.quoting_options* %o to i8*, !dbg !3997
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i1 false), !dbg !3997
  %1 = load i8*, i8** %left_quote.addr, align 8, !dbg !3998
  %2 = load i8*, i8** %right_quote.addr, align 8, !dbg !3999
  call void @set_custom_quoting(%struct.quoting_options* %o, i8* %1, i8* %2), !dbg !4000
  %3 = load i32, i32* %n.addr, align 4, !dbg !4001
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !4002
  %5 = load i64, i64* %argsize.addr, align 8, !dbg !4003
  %call = call i8* @quotearg_n_options(i32 %3, i8* %4, i64 %5, %struct.quoting_options* %o), !dbg !4004
  ret i8* %call, !dbg !4005
}

; Function Attrs: nounwind uwtable
define internal i8* @quotearg_custom(i8* %left_quote, i8* %right_quote, i8* %arg) #5 !dbg !4006 {
entry:
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  store i8* %left_quote, i8** %left_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !4009, metadata !DIExpression()), !dbg !4010
  store i8* %right_quote, i8** %right_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !4011, metadata !DIExpression()), !dbg !4012
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !4013, metadata !DIExpression()), !dbg !4014
  %0 = load i8*, i8** %left_quote.addr, align 8, !dbg !4015
  %1 = load i8*, i8** %right_quote.addr, align 8, !dbg !4016
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !4017
  %call = call i8* @quotearg_n_custom(i32 0, i8* %0, i8* %1, i8* %2), !dbg !4018
  ret i8* %call, !dbg !4019
}

; Function Attrs: nounwind uwtable
define internal i8* @quotearg_custom_mem(i8* %left_quote, i8* %right_quote, i8* %arg, i64 %argsize) #5 !dbg !4020 {
entry:
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i8* %left_quote, i8** %left_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !4023, metadata !DIExpression()), !dbg !4024
  store i8* %right_quote, i8** %right_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !4025, metadata !DIExpression()), !dbg !4026
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !4027, metadata !DIExpression()), !dbg !4028
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !4029, metadata !DIExpression()), !dbg !4030
  %0 = load i8*, i8** %left_quote.addr, align 8, !dbg !4031
  %1 = load i8*, i8** %right_quote.addr, align 8, !dbg !4032
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !4033
  %3 = load i64, i64* %argsize.addr, align 8, !dbg !4034
  %call = call i8* @quotearg_n_custom_mem(i32 0, i8* %0, i8* %1, i8* %2, i64 %3), !dbg !4035
  ret i8* %call, !dbg !4036
}

; Function Attrs: nounwind uwtable
define internal i8* @quote_n_mem(i32 %n, i8* %arg, i64 %argsize) #5 !dbg !4037 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !4040, metadata !DIExpression()), !dbg !4041
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !4042, metadata !DIExpression()), !dbg !4043
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !4044, metadata !DIExpression()), !dbg !4045
  %0 = load i32, i32* %n.addr, align 4, !dbg !4046
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !4047
  %2 = load i64, i64* %argsize.addr, align 8, !dbg !4048
  %call = call i8* @quotearg_n_options(i32 %0, i8* %1, i64 %2, %struct.quoting_options* @quote_quoting_options), !dbg !4049
  ret i8* %call, !dbg !4050
}

; Function Attrs: nounwind uwtable
define internal i8* @quote_mem(i8* %arg, i64 %argsize) #5 !dbg !4051 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !4054, metadata !DIExpression()), !dbg !4055
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !4056, metadata !DIExpression()), !dbg !4057
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !4058
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !4059
  %call = call i8* @quote_n_mem(i32 0, i8* %0, i64 %1), !dbg !4060
  ret i8* %call, !dbg !4061
}

; Function Attrs: nounwind uwtable
define internal i8* @quote_n(i32 %n, i8* %arg) #5 !dbg !4062 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !4065, metadata !DIExpression()), !dbg !4066
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !4067, metadata !DIExpression()), !dbg !4068
  %0 = load i32, i32* %n.addr, align 4, !dbg !4069
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !4070
  %call = call i8* @quote_n_mem(i32 %0, i8* %1, i64 -1), !dbg !4071
  ret i8* %call, !dbg !4072
}

; Function Attrs: nounwind uwtable
define internal i8* @quote(i8* %arg) #5 !dbg !4073 {
entry:
  %arg.addr = alloca i8*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !4076, metadata !DIExpression()), !dbg !4077
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !4078
  %call = call i8* @quote_n(i32 0, i8* %0), !dbg !4079
  ret i8* %call, !dbg !4080
}

; Function Attrs: nounwind
declare i64 @__ctype_get_mb_cur_max() #3

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #6

; Function Attrs: nounwind readonly
declare i32 @memcmp(i8*, i8*, i64) #6

; Function Attrs: nounwind
declare i32 @iswprint(i32) #3

; Function Attrs: nounwind readonly
declare i32 @mbsinit(%struct.__mbstate_t*) #6

; Function Attrs: nounwind uwtable
define internal i64 @quotearg_buffer_restyled(i8* %buffer, i64 %buffersize, i8* %arg, i64 %argsize, i32 %quoting_style, i32 %flags, i32* %quote_these_too, i8* %left_quote, i8* %right_quote) #5 !dbg !4081 {
entry:
  %retval = alloca i64, align 8
  %buffer.addr = alloca i8*, align 8
  %buffersize.addr = alloca i64, align 8
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %quoting_style.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %quote_these_too.addr = alloca i32*, align 8
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %i = alloca i64, align 8
  %len = alloca i64, align 8
  %quote_string = alloca i8*, align 8
  %quote_string_len = alloca i64, align 8
  %backslash_escapes = alloca i8, align 1
  %unibyte_locale = alloca i8, align 1
  %elide_outer_quotes = alloca i8, align 1
  %c = alloca i8, align 1
  %esc = alloca i8, align 1
  %is_right_quote = alloca i8, align 1
  %m = alloca i64, align 8
  %printable = alloca i8, align 1
  %mbstate = alloca %struct.__mbstate_t, align 4
  %w = alloca i32, align 4
  %bytes = alloca i64, align 8
  %j = alloca i64, align 8
  %ilim = alloca i64, align 8
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !4086, metadata !DIExpression()), !dbg !4087
  store i64 %buffersize, i64* %buffersize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %buffersize.addr, metadata !4088, metadata !DIExpression()), !dbg !4089
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !4090, metadata !DIExpression()), !dbg !4091
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !4092, metadata !DIExpression()), !dbg !4093
  store i32 %quoting_style, i32* %quoting_style.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %quoting_style.addr, metadata !4094, metadata !DIExpression()), !dbg !4095
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !4096, metadata !DIExpression()), !dbg !4097
  store i32* %quote_these_too, i32** %quote_these_too.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %quote_these_too.addr, metadata !4098, metadata !DIExpression()), !dbg !4099
  store i8* %left_quote, i8** %left_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !4100, metadata !DIExpression()), !dbg !4101
  store i8* %right_quote, i8** %right_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !4102, metadata !DIExpression()), !dbg !4103
  call void @llvm.dbg.declare(metadata i64* %i, metadata !4104, metadata !DIExpression()), !dbg !4105
  call void @llvm.dbg.declare(metadata i64* %len, metadata !4106, metadata !DIExpression()), !dbg !4107
  store i64 0, i64* %len, align 8, !dbg !4107
  call void @llvm.dbg.declare(metadata i8** %quote_string, metadata !4108, metadata !DIExpression()), !dbg !4109
  store i8* null, i8** %quote_string, align 8, !dbg !4109
  call void @llvm.dbg.declare(metadata i64* %quote_string_len, metadata !4110, metadata !DIExpression()), !dbg !4111
  store i64 0, i64* %quote_string_len, align 8, !dbg !4111
  call void @llvm.dbg.declare(metadata i8* %backslash_escapes, metadata !4112, metadata !DIExpression()), !dbg !4113
  store i8 0, i8* %backslash_escapes, align 1, !dbg !4113
  call void @llvm.dbg.declare(metadata i8* %unibyte_locale, metadata !4114, metadata !DIExpression()), !dbg !4115
  %call = call i64 @__ctype_get_mb_cur_max() #11, !dbg !4116
  %cmp = icmp eq i64 %call, 1, !dbg !4117
  %frombool = zext i1 %cmp to i8, !dbg !4115
  store i8 %frombool, i8* %unibyte_locale, align 1, !dbg !4115
  call void @llvm.dbg.declare(metadata i8* %elide_outer_quotes, metadata !4118, metadata !DIExpression()), !dbg !4119
  %0 = load i32, i32* %flags.addr, align 4, !dbg !4120
  %and = and i32 %0, 2, !dbg !4121
  %cmp1 = icmp ne i32 %and, 0, !dbg !4122
  %frombool2 = zext i1 %cmp1 to i8, !dbg !4119
  store i8 %frombool2, i8* %elide_outer_quotes, align 1, !dbg !4119
  %1 = load i32, i32* %quoting_style.addr, align 4, !dbg !4123
  switch i32 %1, label %sw.default [
    i32 4, label %sw.bb
    i32 3, label %sw.bb.3
    i32 5, label %sw.bb.7
    i32 6, label %sw.bb.8
    i32 7, label %sw.bb.8
    i32 8, label %sw.bb.8
    i32 1, label %sw.bb.26
    i32 2, label %sw.bb.27
    i32 0, label %sw.bb.38
  ], !dbg !4124

sw.bb:                                            ; preds = %entry
  store i32 3, i32* %quoting_style.addr, align 4, !dbg !4125
  store i8 1, i8* %elide_outer_quotes, align 1, !dbg !4127
  br label %sw.bb.3, !dbg !4128

sw.bb.3:                                          ; preds = %sw.bb, %entry
  %2 = load i8, i8* %elide_outer_quotes, align 1, !dbg !4129
  %tobool = trunc i8 %2 to i1, !dbg !4129
  br i1 %tobool, label %if.end.6, label %if.then, !dbg !4131

if.then:                                          ; preds = %sw.bb.3
  br label %do.body, !dbg !4132

do.body:                                          ; preds = %if.then
  %3 = load i64, i64* %len, align 8, !dbg !4133
  %4 = load i64, i64* %buffersize.addr, align 8, !dbg !4133
  %cmp4 = icmp ult i64 %3, %4, !dbg !4133
  br i1 %cmp4, label %if.then.5, label %if.end, !dbg !4137

if.then.5:                                        ; preds = %do.body
  %5 = load i64, i64* %len, align 8, !dbg !4138
  %6 = load i8*, i8** %buffer.addr, align 8, !dbg !4138
  %arrayidx = getelementptr inbounds i8, i8* %6, i64 %5, !dbg !4138
  store i8 34, i8* %arrayidx, align 1, !dbg !4138
  br label %if.end, !dbg !4138

if.end:                                           ; preds = %if.then.5, %do.body
  %7 = load i64, i64* %len, align 8, !dbg !4140
  %inc = add i64 %7, 1, !dbg !4140
  store i64 %inc, i64* %len, align 8, !dbg !4140
  br label %do.end, !dbg !4140

do.end:                                           ; preds = %if.end
  br label %if.end.6, !dbg !4143

if.end.6:                                         ; preds = %do.end, %sw.bb.3
  store i8 1, i8* %backslash_escapes, align 1, !dbg !4145
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.113, i32 0, i32 0), i8** %quote_string, align 8, !dbg !4146
  store i64 1, i64* %quote_string_len, align 8, !dbg !4147
  br label %sw.epilog, !dbg !4148

sw.bb.7:                                          ; preds = %entry
  store i8 1, i8* %backslash_escapes, align 1, !dbg !4149
  store i8 0, i8* %elide_outer_quotes, align 1, !dbg !4150
  br label %sw.epilog, !dbg !4151

sw.bb.8:                                          ; preds = %entry, %entry, %entry
  %8 = load i32, i32* %quoting_style.addr, align 4, !dbg !4152
  %cmp9 = icmp ne i32 %8, 8, !dbg !4155
  br i1 %cmp9, label %if.then.10, label %if.end.13, !dbg !4156

if.then.10:                                       ; preds = %sw.bb.8
  %9 = load i32, i32* %quoting_style.addr, align 4, !dbg !4157
  %call11 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9.115, i32 0, i32 0), i32 %9), !dbg !4159
  store i8* %call11, i8** %left_quote.addr, align 8, !dbg !4160
  %10 = load i32, i32* %quoting_style.addr, align 4, !dbg !4161
  %call12 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.114, i32 0, i32 0), i32 %10), !dbg !4162
  store i8* %call12, i8** %right_quote.addr, align 8, !dbg !4163
  br label %if.end.13, !dbg !4164

if.end.13:                                        ; preds = %if.then.10, %sw.bb.8
  %11 = load i8, i8* %elide_outer_quotes, align 1, !dbg !4165
  %tobool14 = trunc i8 %11 to i1, !dbg !4165
  br i1 %tobool14, label %if.end.24, label %if.then.15, !dbg !4167

if.then.15:                                       ; preds = %if.end.13
  %12 = load i8*, i8** %left_quote.addr, align 8, !dbg !4168
  store i8* %12, i8** %quote_string, align 8, !dbg !4170
  br label %for.cond, !dbg !4171

for.cond:                                         ; preds = %for.inc, %if.then.15
  %13 = load i8*, i8** %quote_string, align 8, !dbg !4172
  %14 = load i8, i8* %13, align 1, !dbg !4176
  %tobool16 = icmp ne i8 %14, 0, !dbg !4177
  br i1 %tobool16, label %for.body, label %for.end, !dbg !4177

for.body:                                         ; preds = %for.cond
  br label %do.body.17, !dbg !4178

do.body.17:                                       ; preds = %for.body
  %15 = load i64, i64* %len, align 8, !dbg !4179
  %16 = load i64, i64* %buffersize.addr, align 8, !dbg !4179
  %cmp18 = icmp ult i64 %15, %16, !dbg !4179
  br i1 %cmp18, label %if.then.19, label %if.end.21, !dbg !4183

if.then.19:                                       ; preds = %do.body.17
  %17 = load i8*, i8** %quote_string, align 8, !dbg !4184
  %18 = load i8, i8* %17, align 1, !dbg !4184
  %19 = load i64, i64* %len, align 8, !dbg !4184
  %20 = load i8*, i8** %buffer.addr, align 8, !dbg !4184
  %arrayidx20 = getelementptr inbounds i8, i8* %20, i64 %19, !dbg !4184
  store i8 %18, i8* %arrayidx20, align 1, !dbg !4184
  br label %if.end.21, !dbg !4184

if.end.21:                                        ; preds = %if.then.19, %do.body.17
  %21 = load i64, i64* %len, align 8, !dbg !4186
  %inc22 = add i64 %21, 1, !dbg !4186
  store i64 %inc22, i64* %len, align 8, !dbg !4186
  br label %do.end.23, !dbg !4186

do.end.23:                                        ; preds = %if.end.21
  br label %for.inc, !dbg !4189

for.inc:                                          ; preds = %do.end.23
  %22 = load i8*, i8** %quote_string, align 8, !dbg !4191
  %incdec.ptr = getelementptr inbounds i8, i8* %22, i32 1, !dbg !4191
  store i8* %incdec.ptr, i8** %quote_string, align 8, !dbg !4191
  br label %for.cond, !dbg !4192

for.end:                                          ; preds = %for.cond
  br label %if.end.24, !dbg !4193

if.end.24:                                        ; preds = %for.end, %if.end.13
  store i8 1, i8* %backslash_escapes, align 1, !dbg !4194
  %23 = load i8*, i8** %right_quote.addr, align 8, !dbg !4195
  store i8* %23, i8** %quote_string, align 8, !dbg !4196
  %24 = load i8*, i8** %quote_string, align 8, !dbg !4197
  %call25 = call i64 @strlen(i8* %24) #16, !dbg !4198
  store i64 %call25, i64* %quote_string_len, align 8, !dbg !4199
  br label %sw.epilog, !dbg !4200

sw.bb.26:                                         ; preds = %entry
  store i32 2, i32* %quoting_style.addr, align 4, !dbg !4201
  store i8 1, i8* %elide_outer_quotes, align 1, !dbg !4202
  br label %sw.bb.27, !dbg !4203

sw.bb.27:                                         ; preds = %sw.bb.26, %entry
  %25 = load i8, i8* %elide_outer_quotes, align 1, !dbg !4204
  %tobool28 = trunc i8 %25 to i1, !dbg !4204
  br i1 %tobool28, label %if.end.37, label %if.then.29, !dbg !4206

if.then.29:                                       ; preds = %sw.bb.27
  br label %do.body.30, !dbg !4207

do.body.30:                                       ; preds = %if.then.29
  %26 = load i64, i64* %len, align 8, !dbg !4208
  %27 = load i64, i64* %buffersize.addr, align 8, !dbg !4208
  %cmp31 = icmp ult i64 %26, %27, !dbg !4208
  br i1 %cmp31, label %if.then.32, label %if.end.34, !dbg !4212

if.then.32:                                       ; preds = %do.body.30
  %28 = load i64, i64* %len, align 8, !dbg !4213
  %29 = load i8*, i8** %buffer.addr, align 8, !dbg !4213
  %arrayidx33 = getelementptr inbounds i8, i8* %29, i64 %28, !dbg !4213
  store i8 39, i8* %arrayidx33, align 1, !dbg !4213
  br label %if.end.34, !dbg !4213

if.end.34:                                        ; preds = %if.then.32, %do.body.30
  %30 = load i64, i64* %len, align 8, !dbg !4215
  %inc35 = add i64 %30, 1, !dbg !4215
  store i64 %inc35, i64* %len, align 8, !dbg !4215
  br label %do.end.36, !dbg !4215

do.end.36:                                        ; preds = %if.end.34
  br label %if.end.37, !dbg !4218

if.end.37:                                        ; preds = %do.end.36, %sw.bb.27
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.114, i32 0, i32 0), i8** %quote_string, align 8, !dbg !4220
  store i64 1, i64* %quote_string_len, align 8, !dbg !4221
  br label %sw.epilog, !dbg !4222

sw.bb.38:                                         ; preds = %entry
  store i8 0, i8* %elide_outer_quotes, align 1, !dbg !4223
  br label %sw.epilog, !dbg !4224

sw.default:                                       ; preds = %entry
  call void @abort() #14, !dbg !4225
  unreachable, !dbg !4225

sw.epilog:                                        ; preds = %sw.bb.38, %if.end.37, %if.end.24, %sw.bb.7, %if.end.6
  store i64 0, i64* %i, align 8, !dbg !4226
  br label %for.cond.39, !dbg !4228

for.cond.39:                                      ; preds = %for.inc.483, %sw.epilog
  %31 = load i64, i64* %argsize.addr, align 8, !dbg !4229
  %cmp40 = icmp eq i64 %31, -1, !dbg !4233
  br i1 %cmp40, label %cond.true, label %cond.false, !dbg !4234

cond.true:                                        ; preds = %for.cond.39
  %32 = load i64, i64* %i, align 8, !dbg !4235
  %33 = load i8*, i8** %arg.addr, align 8, !dbg !4237
  %arrayidx41 = getelementptr inbounds i8, i8* %33, i64 %32, !dbg !4237
  %34 = load i8, i8* %arrayidx41, align 1, !dbg !4237
  %conv = sext i8 %34 to i32, !dbg !4237
  %cmp42 = icmp eq i32 %conv, 0, !dbg !4238
  %conv43 = zext i1 %cmp42 to i32, !dbg !4238
  br label %cond.end, !dbg !4234

cond.false:                                       ; preds = %for.cond.39
  %35 = load i64, i64* %i, align 8, !dbg !4239
  %36 = load i64, i64* %argsize.addr, align 8, !dbg !4241
  %cmp44 = icmp eq i64 %35, %36, !dbg !4242
  %conv45 = zext i1 %cmp44 to i32, !dbg !4242
  br label %cond.end, !dbg !4234

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv43, %cond.true ], [ %conv45, %cond.false ], !dbg !4234
  %tobool46 = icmp ne i32 %cond, 0, !dbg !4243
  %lnot = xor i1 %tobool46, true, !dbg !4243
  br i1 %lnot, label %for.body.47, label %for.end.485, !dbg !4246

for.body.47:                                      ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i8* %c, metadata !4247, metadata !DIExpression()), !dbg !4249
  call void @llvm.dbg.declare(metadata i8* %esc, metadata !4250, metadata !DIExpression()), !dbg !4251
  call void @llvm.dbg.declare(metadata i8* %is_right_quote, metadata !4252, metadata !DIExpression()), !dbg !4253
  store i8 0, i8* %is_right_quote, align 1, !dbg !4253
  %37 = load i8, i8* %backslash_escapes, align 1, !dbg !4254
  %tobool48 = trunc i8 %37 to i1, !dbg !4254
  br i1 %tobool48, label %land.lhs.true, label %if.end.72, !dbg !4256

land.lhs.true:                                    ; preds = %for.body.47
  %38 = load i64, i64* %quote_string_len, align 8, !dbg !4257
  %tobool50 = icmp ne i64 %38, 0, !dbg !4257
  br i1 %tobool50, label %land.lhs.true.51, label %if.end.72, !dbg !4259

land.lhs.true.51:                                 ; preds = %land.lhs.true
  %39 = load i64, i64* %i, align 8, !dbg !4260
  %40 = load i64, i64* %quote_string_len, align 8, !dbg !4261
  %add = add i64 %39, %40, !dbg !4262
  %41 = load i64, i64* %argsize.addr, align 8, !dbg !4263
  %cmp52 = icmp eq i64 %41, -1, !dbg !4264
  br i1 %cmp52, label %land.lhs.true.54, label %cond.false.59, !dbg !4265

land.lhs.true.54:                                 ; preds = %land.lhs.true.51
  %42 = load i64, i64* %quote_string_len, align 8, !dbg !4266
  %cmp55 = icmp ult i64 1, %42, !dbg !4267
  br i1 %cmp55, label %cond.true.57, label %cond.false.59, !dbg !4263

cond.true.57:                                     ; preds = %land.lhs.true.54
  %43 = load i8*, i8** %arg.addr, align 8, !dbg !4268
  %call58 = call i64 @strlen(i8* %43) #16, !dbg !4269
  store i64 %call58, i64* %argsize.addr, align 8, !dbg !4270
  br label %cond.end.60, !dbg !4263

cond.false.59:                                    ; preds = %land.lhs.true.54, %land.lhs.true.51
  %44 = load i64, i64* %argsize.addr, align 8, !dbg !4271
  br label %cond.end.60, !dbg !4263

cond.end.60:                                      ; preds = %cond.false.59, %cond.true.57
  %cond61 = phi i64 [ %call58, %cond.true.57 ], [ %44, %cond.false.59 ], !dbg !4263
  %cmp62 = icmp ule i64 %add, %cond61, !dbg !4272
  br i1 %cmp62, label %land.lhs.true.64, label %if.end.72, !dbg !4275

land.lhs.true.64:                                 ; preds = %cond.end.60
  %45 = load i8*, i8** %arg.addr, align 8, !dbg !4276
  %46 = load i64, i64* %i, align 8, !dbg !4277
  %add.ptr = getelementptr inbounds i8, i8* %45, i64 %46, !dbg !4278
  %47 = load i8*, i8** %quote_string, align 8, !dbg !4279
  %48 = load i64, i64* %quote_string_len, align 8, !dbg !4280
  %call65 = call i32 @memcmp(i8* %add.ptr, i8* %47, i64 %48) #16, !dbg !4281
  %cmp66 = icmp eq i32 %call65, 0, !dbg !4282
  br i1 %cmp66, label %if.then.68, label %if.end.72, !dbg !4283

if.then.68:                                       ; preds = %land.lhs.true.64
  %49 = load i8, i8* %elide_outer_quotes, align 1, !dbg !4284
  %tobool69 = trunc i8 %49 to i1, !dbg !4284
  br i1 %tobool69, label %if.then.70, label %if.end.71, !dbg !4287

if.then.70:                                       ; preds = %if.then.68
  br label %force_outer_quoting_style, !dbg !4288

if.end.71:                                        ; preds = %if.then.68
  store i8 1, i8* %is_right_quote, align 1, !dbg !4289
  br label %if.end.72, !dbg !4290

if.end.72:                                        ; preds = %if.end.71, %land.lhs.true.64, %cond.end.60, %land.lhs.true, %for.body.47
  %50 = load i64, i64* %i, align 8, !dbg !4291
  %51 = load i8*, i8** %arg.addr, align 8, !dbg !4292
  %arrayidx73 = getelementptr inbounds i8, i8* %51, i64 %50, !dbg !4292
  %52 = load i8, i8* %arrayidx73, align 1, !dbg !4292
  store i8 %52, i8* %c, align 1, !dbg !4293
  %53 = load i8, i8* %c, align 1, !dbg !4294
  %conv74 = zext i8 %53 to i32, !dbg !4294
  switch i32 %conv74, label %sw.default.279 [
    i32 0, label %sw.bb.75
    i32 63, label %sw.bb.127
    i32 7, label %sw.bb.193
    i32 8, label %sw.bb.194
    i32 12, label %sw.bb.195
    i32 10, label %sw.bb.196
    i32 13, label %sw.bb.197
    i32 9, label %sw.bb.198
    i32 11, label %sw.bb.199
    i32 92, label %sw.bb.200
    i32 123, label %sw.bb.220
    i32 125, label %sw.bb.220
    i32 35, label %sw.bb.233
    i32 126, label %sw.bb.233
    i32 32, label %sw.bb.238
    i32 33, label %sw.bb.238
    i32 34, label %sw.bb.238
    i32 36, label %sw.bb.238
    i32 38, label %sw.bb.238
    i32 40, label %sw.bb.238
    i32 41, label %sw.bb.238
    i32 42, label %sw.bb.238
    i32 59, label %sw.bb.238
    i32 60, label %sw.bb.238
    i32 61, label %sw.bb.238
    i32 62, label %sw.bb.238
    i32 91, label %sw.bb.238
    i32 94, label %sw.bb.238
    i32 96, label %sw.bb.238
    i32 124, label %sw.bb.238
    i32 39, label %sw.bb.246
    i32 37, label %sw.bb.278
    i32 43, label %sw.bb.278
    i32 44, label %sw.bb.278
    i32 45, label %sw.bb.278
    i32 46, label %sw.bb.278
    i32 47, label %sw.bb.278
    i32 48, label %sw.bb.278
    i32 49, label %sw.bb.278
    i32 50, label %sw.bb.278
    i32 51, label %sw.bb.278
    i32 52, label %sw.bb.278
    i32 53, label %sw.bb.278
    i32 54, label %sw.bb.278
    i32 55, label %sw.bb.278
    i32 56, label %sw.bb.278
    i32 57, label %sw.bb.278
    i32 58, label %sw.bb.278
    i32 65, label %sw.bb.278
    i32 66, label %sw.bb.278
    i32 67, label %sw.bb.278
    i32 68, label %sw.bb.278
    i32 69, label %sw.bb.278
    i32 70, label %sw.bb.278
    i32 71, label %sw.bb.278
    i32 72, label %sw.bb.278
    i32 73, label %sw.bb.278
    i32 74, label %sw.bb.278
    i32 75, label %sw.bb.278
    i32 76, label %sw.bb.278
    i32 77, label %sw.bb.278
    i32 78, label %sw.bb.278
    i32 79, label %sw.bb.278
    i32 80, label %sw.bb.278
    i32 81, label %sw.bb.278
    i32 82, label %sw.bb.278
    i32 83, label %sw.bb.278
    i32 84, label %sw.bb.278
    i32 85, label %sw.bb.278
    i32 86, label %sw.bb.278
    i32 87, label %sw.bb.278
    i32 88, label %sw.bb.278
    i32 89, label %sw.bb.278
    i32 90, label %sw.bb.278
    i32 93, label %sw.bb.278
    i32 95, label %sw.bb.278
    i32 97, label %sw.bb.278
    i32 98, label %sw.bb.278
    i32 99, label %sw.bb.278
    i32 100, label %sw.bb.278
    i32 101, label %sw.bb.278
    i32 102, label %sw.bb.278
    i32 103, label %sw.bb.278
    i32 104, label %sw.bb.278
    i32 105, label %sw.bb.278
    i32 106, label %sw.bb.278
    i32 107, label %sw.bb.278
    i32 108, label %sw.bb.278
    i32 109, label %sw.bb.278
    i32 110, label %sw.bb.278
    i32 111, label %sw.bb.278
    i32 112, label %sw.bb.278
    i32 113, label %sw.bb.278
    i32 114, label %sw.bb.278
    i32 115, label %sw.bb.278
    i32 116, label %sw.bb.278
    i32 117, label %sw.bb.278
    i32 118, label %sw.bb.278
    i32 119, label %sw.bb.278
    i32 120, label %sw.bb.278
    i32 121, label %sw.bb.278
    i32 122, label %sw.bb.278
  ], !dbg !4295

sw.bb.75:                                         ; preds = %if.end.72
  %54 = load i8, i8* %backslash_escapes, align 1, !dbg !4296
  %tobool76 = trunc i8 %54 to i1, !dbg !4296
  br i1 %tobool76, label %if.then.77, label %if.else, !dbg !4299

if.then.77:                                       ; preds = %sw.bb.75
  %55 = load i8, i8* %elide_outer_quotes, align 1, !dbg !4300
  %tobool78 = trunc i8 %55 to i1, !dbg !4300
  br i1 %tobool78, label %if.then.79, label %if.end.80, !dbg !4303

if.then.79:                                       ; preds = %if.then.77
  br label %force_outer_quoting_style, !dbg !4304

if.end.80:                                        ; preds = %if.then.77
  br label %do.body.81, !dbg !4305

do.body.81:                                       ; preds = %if.end.80
  %56 = load i64, i64* %len, align 8, !dbg !4306
  %57 = load i64, i64* %buffersize.addr, align 8, !dbg !4306
  %cmp82 = icmp ult i64 %56, %57, !dbg !4306
  br i1 %cmp82, label %if.then.84, label %if.end.86, !dbg !4310

if.then.84:                                       ; preds = %do.body.81
  %58 = load i64, i64* %len, align 8, !dbg !4311
  %59 = load i8*, i8** %buffer.addr, align 8, !dbg !4311
  %arrayidx85 = getelementptr inbounds i8, i8* %59, i64 %58, !dbg !4311
  store i8 92, i8* %arrayidx85, align 1, !dbg !4311
  br label %if.end.86, !dbg !4311

if.end.86:                                        ; preds = %if.then.84, %do.body.81
  %60 = load i64, i64* %len, align 8, !dbg !4313
  %inc87 = add i64 %60, 1, !dbg !4313
  store i64 %inc87, i64* %len, align 8, !dbg !4313
  br label %do.end.88, !dbg !4313

do.end.88:                                        ; preds = %if.end.86
  %61 = load i64, i64* %i, align 8, !dbg !4316
  %add89 = add i64 %61, 1, !dbg !4318
  %62 = load i64, i64* %argsize.addr, align 8, !dbg !4319
  %cmp90 = icmp ult i64 %add89, %62, !dbg !4320
  br i1 %cmp90, label %land.lhs.true.92, label %if.end.121, !dbg !4321

land.lhs.true.92:                                 ; preds = %do.end.88
  %63 = load i64, i64* %i, align 8, !dbg !4322
  %add93 = add i64 %63, 1, !dbg !4324
  %64 = load i8*, i8** %arg.addr, align 8, !dbg !4325
  %arrayidx94 = getelementptr inbounds i8, i8* %64, i64 %add93, !dbg !4325
  %65 = load i8, i8* %arrayidx94, align 1, !dbg !4325
  %conv95 = sext i8 %65 to i32, !dbg !4325
  %cmp96 = icmp sle i32 48, %conv95, !dbg !4326
  br i1 %cmp96, label %land.lhs.true.98, label %if.end.121, !dbg !4327

land.lhs.true.98:                                 ; preds = %land.lhs.true.92
  %66 = load i64, i64* %i, align 8, !dbg !4328
  %add99 = add i64 %66, 1, !dbg !4330
  %67 = load i8*, i8** %arg.addr, align 8, !dbg !4331
  %arrayidx100 = getelementptr inbounds i8, i8* %67, i64 %add99, !dbg !4331
  %68 = load i8, i8* %arrayidx100, align 1, !dbg !4331
  %conv101 = sext i8 %68 to i32, !dbg !4331
  %cmp102 = icmp sle i32 %conv101, 57, !dbg !4332
  br i1 %cmp102, label %if.then.104, label %if.end.121, !dbg !4333

if.then.104:                                      ; preds = %land.lhs.true.98
  br label %do.body.105, !dbg !4334

do.body.105:                                      ; preds = %if.then.104
  %69 = load i64, i64* %len, align 8, !dbg !4336
  %70 = load i64, i64* %buffersize.addr, align 8, !dbg !4336
  %cmp106 = icmp ult i64 %69, %70, !dbg !4336
  br i1 %cmp106, label %if.then.108, label %if.end.110, !dbg !4340

if.then.108:                                      ; preds = %do.body.105
  %71 = load i64, i64* %len, align 8, !dbg !4341
  %72 = load i8*, i8** %buffer.addr, align 8, !dbg !4341
  %arrayidx109 = getelementptr inbounds i8, i8* %72, i64 %71, !dbg !4341
  store i8 48, i8* %arrayidx109, align 1, !dbg !4341
  br label %if.end.110, !dbg !4341

if.end.110:                                       ; preds = %if.then.108, %do.body.105
  %73 = load i64, i64* %len, align 8, !dbg !4343
  %inc111 = add i64 %73, 1, !dbg !4343
  store i64 %inc111, i64* %len, align 8, !dbg !4343
  br label %do.end.112, !dbg !4343

do.end.112:                                       ; preds = %if.end.110
  br label %do.body.113, !dbg !4346

do.body.113:                                      ; preds = %do.end.112
  %74 = load i64, i64* %len, align 8, !dbg !4347
  %75 = load i64, i64* %buffersize.addr, align 8, !dbg !4347
  %cmp114 = icmp ult i64 %74, %75, !dbg !4347
  br i1 %cmp114, label %if.then.116, label %if.end.118, !dbg !4351

if.then.116:                                      ; preds = %do.body.113
  %76 = load i64, i64* %len, align 8, !dbg !4352
  %77 = load i8*, i8** %buffer.addr, align 8, !dbg !4352
  %arrayidx117 = getelementptr inbounds i8, i8* %77, i64 %76, !dbg !4352
  store i8 48, i8* %arrayidx117, align 1, !dbg !4352
  br label %if.end.118, !dbg !4352

if.end.118:                                       ; preds = %if.then.116, %do.body.113
  %78 = load i64, i64* %len, align 8, !dbg !4354
  %inc119 = add i64 %78, 1, !dbg !4354
  store i64 %inc119, i64* %len, align 8, !dbg !4354
  br label %do.end.120, !dbg !4354

do.end.120:                                       ; preds = %if.end.118
  br label %if.end.121, !dbg !4357

if.end.121:                                       ; preds = %do.end.120, %land.lhs.true.98, %land.lhs.true.92, %do.end.88
  store i8 48, i8* %c, align 1, !dbg !4358
  br label %if.end.126, !dbg !4359

if.else:                                          ; preds = %sw.bb.75
  %79 = load i32, i32* %flags.addr, align 4, !dbg !4360
  %and122 = and i32 %79, 1, !dbg !4362
  %tobool123 = icmp ne i32 %and122, 0, !dbg !4362
  br i1 %tobool123, label %if.then.124, label %if.end.125, !dbg !4363

if.then.124:                                      ; preds = %if.else
  br label %for.inc.483, !dbg !4364

if.end.125:                                       ; preds = %if.else
  br label %if.end.126

if.end.126:                                       ; preds = %if.end.125, %if.end.121
  br label %sw.epilog.443, !dbg !4365

sw.bb.127:                                        ; preds = %if.end.72
  %80 = load i32, i32* %quoting_style.addr, align 4, !dbg !4366
  switch i32 %80, label %sw.default.191 [
    i32 2, label %sw.bb.128
    i32 3, label %sw.bb.132
  ], !dbg !4367

sw.bb.128:                                        ; preds = %sw.bb.127
  %81 = load i8, i8* %elide_outer_quotes, align 1, !dbg !4368
  %tobool129 = trunc i8 %81 to i1, !dbg !4368
  br i1 %tobool129, label %if.then.130, label %if.end.131, !dbg !4371

if.then.130:                                      ; preds = %sw.bb.128
  br label %force_outer_quoting_style, !dbg !4372

if.end.131:                                       ; preds = %sw.bb.128
  br label %sw.epilog.192, !dbg !4373

sw.bb.132:                                        ; preds = %sw.bb.127
  %82 = load i32, i32* %flags.addr, align 4, !dbg !4374
  %and133 = and i32 %82, 4, !dbg !4376
  %tobool134 = icmp ne i32 %and133, 0, !dbg !4376
  br i1 %tobool134, label %land.lhs.true.135, label %if.end.190, !dbg !4377

land.lhs.true.135:                                ; preds = %sw.bb.132
  %83 = load i64, i64* %i, align 8, !dbg !4378
  %add136 = add i64 %83, 2, !dbg !4380
  %84 = load i64, i64* %argsize.addr, align 8, !dbg !4381
  %cmp137 = icmp ult i64 %add136, %84, !dbg !4382
  br i1 %cmp137, label %land.lhs.true.139, label %if.end.190, !dbg !4383

land.lhs.true.139:                                ; preds = %land.lhs.true.135
  %85 = load i64, i64* %i, align 8, !dbg !4384
  %add140 = add i64 %85, 1, !dbg !4386
  %86 = load i8*, i8** %arg.addr, align 8, !dbg !4387
  %arrayidx141 = getelementptr inbounds i8, i8* %86, i64 %add140, !dbg !4387
  %87 = load i8, i8* %arrayidx141, align 1, !dbg !4387
  %conv142 = sext i8 %87 to i32, !dbg !4387
  %cmp143 = icmp eq i32 %conv142, 63, !dbg !4388
  br i1 %cmp143, label %if.then.145, label %if.end.190, !dbg !4389

if.then.145:                                      ; preds = %land.lhs.true.139
  %88 = load i64, i64* %i, align 8, !dbg !4390
  %add146 = add i64 %88, 2, !dbg !4391
  %89 = load i8*, i8** %arg.addr, align 8, !dbg !4392
  %arrayidx147 = getelementptr inbounds i8, i8* %89, i64 %add146, !dbg !4392
  %90 = load i8, i8* %arrayidx147, align 1, !dbg !4392
  %conv148 = sext i8 %90 to i32, !dbg !4392
  switch i32 %conv148, label %sw.default.188 [
    i32 33, label %sw.bb.149
    i32 39, label %sw.bb.149
    i32 40, label %sw.bb.149
    i32 41, label %sw.bb.149
    i32 45, label %sw.bb.149
    i32 47, label %sw.bb.149
    i32 60, label %sw.bb.149
    i32 61, label %sw.bb.149
    i32 62, label %sw.bb.149
  ], !dbg !4393

sw.bb.149:                                        ; preds = %if.then.145, %if.then.145, %if.then.145, %if.then.145, %if.then.145, %if.then.145, %if.then.145, %if.then.145, %if.then.145
  %91 = load i8, i8* %elide_outer_quotes, align 1, !dbg !4394
  %tobool150 = trunc i8 %91 to i1, !dbg !4394
  br i1 %tobool150, label %if.then.151, label %if.end.152, !dbg !4397

if.then.151:                                      ; preds = %sw.bb.149
  br label %force_outer_quoting_style, !dbg !4398

if.end.152:                                       ; preds = %sw.bb.149
  %92 = load i64, i64* %i, align 8, !dbg !4399
  %add153 = add i64 %92, 2, !dbg !4400
  %93 = load i8*, i8** %arg.addr, align 8, !dbg !4401
  %arrayidx154 = getelementptr inbounds i8, i8* %93, i64 %add153, !dbg !4401
  %94 = load i8, i8* %arrayidx154, align 1, !dbg !4401
  store i8 %94, i8* %c, align 1, !dbg !4402
  %95 = load i64, i64* %i, align 8, !dbg !4403
  %add155 = add i64 %95, 2, !dbg !4403
  store i64 %add155, i64* %i, align 8, !dbg !4403
  br label %do.body.156, !dbg !4404

do.body.156:                                      ; preds = %if.end.152
  %96 = load i64, i64* %len, align 8, !dbg !4405
  %97 = load i64, i64* %buffersize.addr, align 8, !dbg !4405
  %cmp157 = icmp ult i64 %96, %97, !dbg !4405
  br i1 %cmp157, label %if.then.159, label %if.end.161, !dbg !4409

if.then.159:                                      ; preds = %do.body.156
  %98 = load i64, i64* %len, align 8, !dbg !4410
  %99 = load i8*, i8** %buffer.addr, align 8, !dbg !4410
  %arrayidx160 = getelementptr inbounds i8, i8* %99, i64 %98, !dbg !4410
  store i8 63, i8* %arrayidx160, align 1, !dbg !4410
  br label %if.end.161, !dbg !4410

if.end.161:                                       ; preds = %if.then.159, %do.body.156
  %100 = load i64, i64* %len, align 8, !dbg !4412
  %inc162 = add i64 %100, 1, !dbg !4412
  store i64 %inc162, i64* %len, align 8, !dbg !4412
  br label %do.end.163, !dbg !4412

do.end.163:                                       ; preds = %if.end.161
  br label %do.body.164, !dbg !4415

do.body.164:                                      ; preds = %do.end.163
  %101 = load i64, i64* %len, align 8, !dbg !4416
  %102 = load i64, i64* %buffersize.addr, align 8, !dbg !4416
  %cmp165 = icmp ult i64 %101, %102, !dbg !4416
  br i1 %cmp165, label %if.then.167, label %if.end.169, !dbg !4420

if.then.167:                                      ; preds = %do.body.164
  %103 = load i64, i64* %len, align 8, !dbg !4421
  %104 = load i8*, i8** %buffer.addr, align 8, !dbg !4421
  %arrayidx168 = getelementptr inbounds i8, i8* %104, i64 %103, !dbg !4421
  store i8 34, i8* %arrayidx168, align 1, !dbg !4421
  br label %if.end.169, !dbg !4421

if.end.169:                                       ; preds = %if.then.167, %do.body.164
  %105 = load i64, i64* %len, align 8, !dbg !4423
  %inc170 = add i64 %105, 1, !dbg !4423
  store i64 %inc170, i64* %len, align 8, !dbg !4423
  br label %do.end.171, !dbg !4423

do.end.171:                                       ; preds = %if.end.169
  br label %do.body.172, !dbg !4426

do.body.172:                                      ; preds = %do.end.171
  %106 = load i64, i64* %len, align 8, !dbg !4427
  %107 = load i64, i64* %buffersize.addr, align 8, !dbg !4427
  %cmp173 = icmp ult i64 %106, %107, !dbg !4427
  br i1 %cmp173, label %if.then.175, label %if.end.177, !dbg !4431

if.then.175:                                      ; preds = %do.body.172
  %108 = load i64, i64* %len, align 8, !dbg !4432
  %109 = load i8*, i8** %buffer.addr, align 8, !dbg !4432
  %arrayidx176 = getelementptr inbounds i8, i8* %109, i64 %108, !dbg !4432
  store i8 34, i8* %arrayidx176, align 1, !dbg !4432
  br label %if.end.177, !dbg !4432

if.end.177:                                       ; preds = %if.then.175, %do.body.172
  %110 = load i64, i64* %len, align 8, !dbg !4434
  %inc178 = add i64 %110, 1, !dbg !4434
  store i64 %inc178, i64* %len, align 8, !dbg !4434
  br label %do.end.179, !dbg !4434

do.end.179:                                       ; preds = %if.end.177
  br label %do.body.180, !dbg !4437

do.body.180:                                      ; preds = %do.end.179
  %111 = load i64, i64* %len, align 8, !dbg !4438
  %112 = load i64, i64* %buffersize.addr, align 8, !dbg !4438
  %cmp181 = icmp ult i64 %111, %112, !dbg !4438
  br i1 %cmp181, label %if.then.183, label %if.end.185, !dbg !4442

if.then.183:                                      ; preds = %do.body.180
  %113 = load i64, i64* %len, align 8, !dbg !4443
  %114 = load i8*, i8** %buffer.addr, align 8, !dbg !4443
  %arrayidx184 = getelementptr inbounds i8, i8* %114, i64 %113, !dbg !4443
  store i8 63, i8* %arrayidx184, align 1, !dbg !4443
  br label %if.end.185, !dbg !4443

if.end.185:                                       ; preds = %if.then.183, %do.body.180
  %115 = load i64, i64* %len, align 8, !dbg !4445
  %inc186 = add i64 %115, 1, !dbg !4445
  store i64 %inc186, i64* %len, align 8, !dbg !4445
  br label %do.end.187, !dbg !4445

do.end.187:                                       ; preds = %if.end.185
  br label %sw.epilog.189, !dbg !4448

sw.default.188:                                   ; preds = %if.then.145
  br label %sw.epilog.189, !dbg !4449

sw.epilog.189:                                    ; preds = %sw.default.188, %do.end.187
  br label %if.end.190, !dbg !4450

if.end.190:                                       ; preds = %sw.epilog.189, %land.lhs.true.139, %land.lhs.true.135, %sw.bb.132
  br label %sw.epilog.192, !dbg !4451

sw.default.191:                                   ; preds = %sw.bb.127
  br label %sw.epilog.192, !dbg !4452

sw.epilog.192:                                    ; preds = %sw.default.191, %if.end.190, %if.end.131
  br label %sw.epilog.443, !dbg !4453

sw.bb.193:                                        ; preds = %if.end.72
  store i8 97, i8* %esc, align 1, !dbg !4454
  br label %c_escape, !dbg !4455

sw.bb.194:                                        ; preds = %if.end.72
  store i8 98, i8* %esc, align 1, !dbg !4456
  br label %c_escape, !dbg !4457

sw.bb.195:                                        ; preds = %if.end.72
  store i8 102, i8* %esc, align 1, !dbg !4458
  br label %c_escape, !dbg !4459

sw.bb.196:                                        ; preds = %if.end.72
  store i8 110, i8* %esc, align 1, !dbg !4460
  br label %c_and_shell_escape, !dbg !4461

sw.bb.197:                                        ; preds = %if.end.72
  store i8 114, i8* %esc, align 1, !dbg !4462
  br label %c_and_shell_escape, !dbg !4463

sw.bb.198:                                        ; preds = %if.end.72
  store i8 116, i8* %esc, align 1, !dbg !4464
  br label %c_and_shell_escape, !dbg !4465

sw.bb.199:                                        ; preds = %if.end.72
  store i8 118, i8* %esc, align 1, !dbg !4466
  br label %c_escape, !dbg !4467

sw.bb.200:                                        ; preds = %if.end.72
  %116 = load i8, i8* %c, align 1, !dbg !4468
  store i8 %116, i8* %esc, align 1, !dbg !4469
  %117 = load i8, i8* %backslash_escapes, align 1, !dbg !4470
  %tobool201 = trunc i8 %117 to i1, !dbg !4470
  br i1 %tobool201, label %land.lhs.true.203, label %if.end.209, !dbg !4472

land.lhs.true.203:                                ; preds = %sw.bb.200
  %118 = load i8, i8* %elide_outer_quotes, align 1, !dbg !4473
  %tobool204 = trunc i8 %118 to i1, !dbg !4473
  br i1 %tobool204, label %land.lhs.true.206, label %if.end.209, !dbg !4475

land.lhs.true.206:                                ; preds = %land.lhs.true.203
  %119 = load i64, i64* %quote_string_len, align 8, !dbg !4476
  %tobool207 = icmp ne i64 %119, 0, !dbg !4476
  br i1 %tobool207, label %if.then.208, label %if.end.209, !dbg !4478

if.then.208:                                      ; preds = %land.lhs.true.206
  br label %store_c, !dbg !4479

if.end.209:                                       ; preds = %land.lhs.true.206, %land.lhs.true.203, %sw.bb.200
  br label %c_and_shell_escape, !dbg !4480

c_and_shell_escape:                               ; preds = %if.end.209, %sw.bb.198, %sw.bb.197, %sw.bb.196
  %120 = load i32, i32* %quoting_style.addr, align 4, !dbg !4484
  %cmp210 = icmp eq i32 %120, 2, !dbg !4486
  br i1 %cmp210, label %land.lhs.true.212, label %if.end.216, !dbg !4487

land.lhs.true.212:                                ; preds = %c_and_shell_escape
  %121 = load i8, i8* %elide_outer_quotes, align 1, !dbg !4488
  %tobool213 = trunc i8 %121 to i1, !dbg !4488
  br i1 %tobool213, label %if.then.215, label %if.end.216, !dbg !4490

if.then.215:                                      ; preds = %land.lhs.true.212
  br label %force_outer_quoting_style, !dbg !4491

if.end.216:                                       ; preds = %land.lhs.true.212, %c_and_shell_escape
  br label %c_escape, !dbg !4492

c_escape:                                         ; preds = %if.end.216, %sw.bb.199, %sw.bb.195, %sw.bb.194, %sw.bb.193
  %122 = load i8, i8* %backslash_escapes, align 1, !dbg !4494
  %tobool217 = trunc i8 %122 to i1, !dbg !4494
  br i1 %tobool217, label %if.then.218, label %if.end.219, !dbg !4496

if.then.218:                                      ; preds = %c_escape
  %123 = load i8, i8* %esc, align 1, !dbg !4497
  store i8 %123, i8* %c, align 1, !dbg !4499
  br label %store_escape, !dbg !4500

if.end.219:                                       ; preds = %c_escape
  br label %sw.epilog.443, !dbg !4501

sw.bb.220:                                        ; preds = %if.end.72, %if.end.72
  %124 = load i64, i64* %argsize.addr, align 8, !dbg !4502
  %cmp221 = icmp eq i64 %124, -1, !dbg !4504
  br i1 %cmp221, label %cond.true.223, label %cond.false.228, !dbg !4505

cond.true.223:                                    ; preds = %sw.bb.220
  %125 = load i8*, i8** %arg.addr, align 8, !dbg !4506
  %arrayidx224 = getelementptr inbounds i8, i8* %125, i64 1, !dbg !4506
  %126 = load i8, i8* %arrayidx224, align 1, !dbg !4506
  %conv225 = sext i8 %126 to i32, !dbg !4506
  %cmp226 = icmp eq i32 %conv225, 0, !dbg !4508
  br i1 %cmp226, label %if.end.232, label %if.then.231, !dbg !4502

cond.false.228:                                   ; preds = %sw.bb.220
  %127 = load i64, i64* %argsize.addr, align 8, !dbg !4509
  %cmp229 = icmp eq i64 %127, 1, !dbg !4511
  br i1 %cmp229, label %if.end.232, label %if.then.231, !dbg !4505

if.then.231:                                      ; preds = %cond.false.228, %cond.true.223
  br label %sw.epilog.443, !dbg !4512

if.end.232:                                       ; preds = %cond.false.228, %cond.true.223
  br label %sw.bb.233, !dbg !4513

sw.bb.233:                                        ; preds = %if.end.232, %if.end.72, %if.end.72
  %128 = load i64, i64* %i, align 8, !dbg !4516
  %cmp234 = icmp ne i64 %128, 0, !dbg !4518
  br i1 %cmp234, label %if.then.236, label %if.end.237, !dbg !4519

if.then.236:                                      ; preds = %sw.bb.233
  br label %sw.epilog.443, !dbg !4520

if.end.237:                                       ; preds = %sw.bb.233
  br label %sw.bb.238, !dbg !4521

sw.bb.238:                                        ; preds = %if.end.237, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72
  %129 = load i32, i32* %quoting_style.addr, align 4, !dbg !4523
  %cmp239 = icmp eq i32 %129, 2, !dbg !4525
  br i1 %cmp239, label %land.lhs.true.241, label %if.end.245, !dbg !4526

land.lhs.true.241:                                ; preds = %sw.bb.238
  %130 = load i8, i8* %elide_outer_quotes, align 1, !dbg !4527
  %tobool242 = trunc i8 %130 to i1, !dbg !4527
  br i1 %tobool242, label %if.then.244, label %if.end.245, !dbg !4529

if.then.244:                                      ; preds = %land.lhs.true.241
  br label %force_outer_quoting_style, !dbg !4530

if.end.245:                                       ; preds = %land.lhs.true.241, %sw.bb.238
  br label %sw.epilog.443, !dbg !4531

sw.bb.246:                                        ; preds = %if.end.72
  %131 = load i32, i32* %quoting_style.addr, align 4, !dbg !4532
  %cmp247 = icmp eq i32 %131, 2, !dbg !4534
  br i1 %cmp247, label %if.then.249, label %if.end.277, !dbg !4535

if.then.249:                                      ; preds = %sw.bb.246
  %132 = load i8, i8* %elide_outer_quotes, align 1, !dbg !4536
  %tobool250 = trunc i8 %132 to i1, !dbg !4536
  br i1 %tobool250, label %if.then.251, label %if.end.252, !dbg !4539

if.then.251:                                      ; preds = %if.then.249
  br label %force_outer_quoting_style, !dbg !4540

if.end.252:                                       ; preds = %if.then.249
  br label %do.body.253, !dbg !4541

do.body.253:                                      ; preds = %if.end.252
  %133 = load i64, i64* %len, align 8, !dbg !4542
  %134 = load i64, i64* %buffersize.addr, align 8, !dbg !4542
  %cmp254 = icmp ult i64 %133, %134, !dbg !4542
  br i1 %cmp254, label %if.then.256, label %if.end.258, !dbg !4546

if.then.256:                                      ; preds = %do.body.253
  %135 = load i64, i64* %len, align 8, !dbg !4547
  %136 = load i8*, i8** %buffer.addr, align 8, !dbg !4547
  %arrayidx257 = getelementptr inbounds i8, i8* %136, i64 %135, !dbg !4547
  store i8 39, i8* %arrayidx257, align 1, !dbg !4547
  br label %if.end.258, !dbg !4547

if.end.258:                                       ; preds = %if.then.256, %do.body.253
  %137 = load i64, i64* %len, align 8, !dbg !4549
  %inc259 = add i64 %137, 1, !dbg !4549
  store i64 %inc259, i64* %len, align 8, !dbg !4549
  br label %do.end.260, !dbg !4549

do.end.260:                                       ; preds = %if.end.258
  br label %do.body.261, !dbg !4552

do.body.261:                                      ; preds = %do.end.260
  %138 = load i64, i64* %len, align 8, !dbg !4553
  %139 = load i64, i64* %buffersize.addr, align 8, !dbg !4553
  %cmp262 = icmp ult i64 %138, %139, !dbg !4553
  br i1 %cmp262, label %if.then.264, label %if.end.266, !dbg !4557

if.then.264:                                      ; preds = %do.body.261
  %140 = load i64, i64* %len, align 8, !dbg !4558
  %141 = load i8*, i8** %buffer.addr, align 8, !dbg !4558
  %arrayidx265 = getelementptr inbounds i8, i8* %141, i64 %140, !dbg !4558
  store i8 92, i8* %arrayidx265, align 1, !dbg !4558
  br label %if.end.266, !dbg !4558

if.end.266:                                       ; preds = %if.then.264, %do.body.261
  %142 = load i64, i64* %len, align 8, !dbg !4560
  %inc267 = add i64 %142, 1, !dbg !4560
  store i64 %inc267, i64* %len, align 8, !dbg !4560
  br label %do.end.268, !dbg !4560

do.end.268:                                       ; preds = %if.end.266
  br label %do.body.269, !dbg !4563

do.body.269:                                      ; preds = %do.end.268
  %143 = load i64, i64* %len, align 8, !dbg !4564
  %144 = load i64, i64* %buffersize.addr, align 8, !dbg !4564
  %cmp270 = icmp ult i64 %143, %144, !dbg !4564
  br i1 %cmp270, label %if.then.272, label %if.end.274, !dbg !4568

if.then.272:                                      ; preds = %do.body.269
  %145 = load i64, i64* %len, align 8, !dbg !4569
  %146 = load i8*, i8** %buffer.addr, align 8, !dbg !4569
  %arrayidx273 = getelementptr inbounds i8, i8* %146, i64 %145, !dbg !4569
  store i8 39, i8* %arrayidx273, align 1, !dbg !4569
  br label %if.end.274, !dbg !4569

if.end.274:                                       ; preds = %if.then.272, %do.body.269
  %147 = load i64, i64* %len, align 8, !dbg !4571
  %inc275 = add i64 %147, 1, !dbg !4571
  store i64 %inc275, i64* %len, align 8, !dbg !4571
  br label %do.end.276, !dbg !4571

do.end.276:                                       ; preds = %if.end.274
  br label %if.end.277, !dbg !4574

if.end.277:                                       ; preds = %do.end.276, %sw.bb.246
  br label %sw.epilog.443, !dbg !4575

sw.bb.278:                                        ; preds = %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72, %if.end.72
  br label %sw.epilog.443, !dbg !4576

sw.default.279:                                   ; preds = %if.end.72
  call void @llvm.dbg.declare(metadata i64* %m, metadata !4577, metadata !DIExpression()), !dbg !4579
  call void @llvm.dbg.declare(metadata i8* %printable, metadata !4580, metadata !DIExpression()), !dbg !4581
  %148 = load i8, i8* %unibyte_locale, align 1, !dbg !4582
  %tobool280 = trunc i8 %148 to i1, !dbg !4582
  br i1 %tobool280, label %if.then.281, label %if.else.290, !dbg !4584

if.then.281:                                      ; preds = %sw.default.279
  store i64 1, i64* %m, align 8, !dbg !4585
  %149 = load i8, i8* %c, align 1, !dbg !4587
  %conv282 = zext i8 %149 to i32, !dbg !4587
  %idxprom = sext i32 %conv282 to i64, !dbg !4587
  %call283 = call i16** @__ctype_b_loc() #17, !dbg !4587
  %150 = load i16*, i16** %call283, align 8, !dbg !4587
  %arrayidx284 = getelementptr inbounds i16, i16* %150, i64 %idxprom, !dbg !4587
  %151 = load i16, i16* %arrayidx284, align 2, !dbg !4587
  %conv285 = zext i16 %151 to i32, !dbg !4587
  %and286 = and i32 %conv285, 16384, !dbg !4587
  %cmp287 = icmp ne i32 %and286, 0, !dbg !4588
  %frombool289 = zext i1 %cmp287 to i8, !dbg !4589
  store i8 %frombool289, i8* %printable, align 1, !dbg !4589
  br label %if.end.354, !dbg !4590

if.else.290:                                      ; preds = %sw.default.279
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t* %mbstate, metadata !4591, metadata !DIExpression()), !dbg !4607
  %152 = bitcast %struct.__mbstate_t* %mbstate to i8*, !dbg !4608
  call void @llvm.memset.p0i8.i64(i8* align 4 %152, i8 0, i64 8, i1 false), !dbg !4608
  store i64 0, i64* %m, align 8, !dbg !4609
  store i8 1, i8* %printable, align 1, !dbg !4610
  %153 = load i64, i64* %argsize.addr, align 8, !dbg !4611
  %cmp291 = icmp eq i64 %153, -1, !dbg !4613
  br i1 %cmp291, label %if.then.293, label %if.end.295, !dbg !4614

if.then.293:                                      ; preds = %if.else.290
  %154 = load i8*, i8** %arg.addr, align 8, !dbg !4615
  %call294 = call i64 @strlen(i8* %154) #16, !dbg !4616
  store i64 %call294, i64* %argsize.addr, align 8, !dbg !4617
  br label %if.end.295, !dbg !4618

if.end.295:                                       ; preds = %if.then.293, %if.else.290
  br label %do.body.296, !dbg !4619

do.body.296:                                      ; preds = %do.cond, %if.end.295
  call void @llvm.dbg.declare(metadata i32* %w, metadata !4620, metadata !DIExpression()), !dbg !4623
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !4624, metadata !DIExpression()), !dbg !4625
  %155 = load i64, i64* %i, align 8, !dbg !4626
  %156 = load i64, i64* %m, align 8, !dbg !4627
  %add297 = add i64 %155, %156, !dbg !4628
  %157 = load i8*, i8** %arg.addr, align 8, !dbg !4629
  %arrayidx298 = getelementptr inbounds i8, i8* %157, i64 %add297, !dbg !4629
  %158 = load i64, i64* %argsize.addr, align 8, !dbg !4630
  %159 = load i64, i64* %i, align 8, !dbg !4631
  %160 = load i64, i64* %m, align 8, !dbg !4632
  %add299 = add i64 %159, %160, !dbg !4633
  %sub = sub i64 %158, %add299, !dbg !4634
  %call300 = call i64 @rpl_mbrtowc(i32* %w, i8* %arrayidx298, i64 %sub, %struct.__mbstate_t* %mbstate), !dbg !4635
  store i64 %call300, i64* %bytes, align 8, !dbg !4625
  %161 = load i64, i64* %bytes, align 8, !dbg !4636
  %cmp301 = icmp eq i64 %161, 0, !dbg !4638
  br i1 %cmp301, label %if.then.303, label %if.else.304, !dbg !4639

if.then.303:                                      ; preds = %do.body.296
  br label %do.end.353, !dbg !4640

if.else.304:                                      ; preds = %do.body.296
  %162 = load i64, i64* %bytes, align 8, !dbg !4641
  %cmp305 = icmp eq i64 %162, -1, !dbg !4643
  br i1 %cmp305, label %if.then.307, label %if.else.308, !dbg !4644

if.then.307:                                      ; preds = %if.else.304
  store i8 0, i8* %printable, align 1, !dbg !4645
  br label %do.end.353, !dbg !4647

if.else.308:                                      ; preds = %if.else.304
  %163 = load i64, i64* %bytes, align 8, !dbg !4648
  %cmp309 = icmp eq i64 %163, -2, !dbg !4650
  br i1 %cmp309, label %if.then.311, label %if.else.320, !dbg !4651

if.then.311:                                      ; preds = %if.else.308
  store i8 0, i8* %printable, align 1, !dbg !4652
  br label %while.cond, !dbg !4654

while.cond:                                       ; preds = %while.body, %if.then.311
  %164 = load i64, i64* %i, align 8, !dbg !4655
  %165 = load i64, i64* %m, align 8, !dbg !4658
  %add312 = add i64 %164, %165, !dbg !4659
  %166 = load i64, i64* %argsize.addr, align 8, !dbg !4660
  %cmp313 = icmp ult i64 %add312, %166, !dbg !4661
  br i1 %cmp313, label %land.rhs, label %land.end, !dbg !4662

land.rhs:                                         ; preds = %while.cond
  %167 = load i64, i64* %i, align 8, !dbg !4663
  %168 = load i64, i64* %m, align 8, !dbg !4665
  %add315 = add i64 %167, %168, !dbg !4666
  %169 = load i8*, i8** %arg.addr, align 8, !dbg !4667
  %arrayidx316 = getelementptr inbounds i8, i8* %169, i64 %add315, !dbg !4667
  %170 = load i8, i8* %arrayidx316, align 1, !dbg !4667
  %conv317 = sext i8 %170 to i32, !dbg !4667
  %tobool318 = icmp ne i32 %conv317, 0, !dbg !4662
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %171 = phi i1 [ false, %while.cond ], [ %tobool318, %land.rhs ]
  br i1 %171, label %while.body, label %while.end, !dbg !4668

while.body:                                       ; preds = %land.end
  %172 = load i64, i64* %m, align 8, !dbg !4670
  %inc319 = add i64 %172, 1, !dbg !4670
  store i64 %inc319, i64* %m, align 8, !dbg !4670
  br label %while.cond, !dbg !4654

while.end:                                        ; preds = %land.end
  br label %do.end.353, !dbg !4671

if.else.320:                                      ; preds = %if.else.308
  %173 = load i8, i8* %elide_outer_quotes, align 1, !dbg !4672
  %tobool321 = trunc i8 %173 to i1, !dbg !4672
  br i1 %tobool321, label %land.lhs.true.323, label %if.end.341, !dbg !4675

land.lhs.true.323:                                ; preds = %if.else.320
  %174 = load i32, i32* %quoting_style.addr, align 4, !dbg !4676
  %cmp324 = icmp eq i32 %174, 2, !dbg !4678
  br i1 %cmp324, label %if.then.326, label %if.end.341, !dbg !4679

if.then.326:                                      ; preds = %land.lhs.true.323
  call void @llvm.dbg.declare(metadata i64* %j, metadata !4680, metadata !DIExpression()), !dbg !4682
  store i64 1, i64* %j, align 8, !dbg !4683
  br label %for.cond.327, !dbg !4685

for.cond.327:                                     ; preds = %for.inc.338, %if.then.326
  %175 = load i64, i64* %j, align 8, !dbg !4686
  %176 = load i64, i64* %bytes, align 8, !dbg !4690
  %cmp328 = icmp ult i64 %175, %176, !dbg !4691
  br i1 %cmp328, label %for.body.330, label %for.end.340, !dbg !4692

for.body.330:                                     ; preds = %for.cond.327
  %177 = load i64, i64* %i, align 8, !dbg !4693
  %178 = load i64, i64* %m, align 8, !dbg !4694
  %add331 = add i64 %177, %178, !dbg !4695
  %179 = load i64, i64* %j, align 8, !dbg !4696
  %add332 = add i64 %add331, %179, !dbg !4697
  %180 = load i8*, i8** %arg.addr, align 8, !dbg !4698
  %arrayidx333 = getelementptr inbounds i8, i8* %180, i64 %add332, !dbg !4698
  %181 = load i8, i8* %arrayidx333, align 1, !dbg !4698
  %conv334 = sext i8 %181 to i32, !dbg !4698
  switch i32 %conv334, label %sw.default.336 [
    i32 91, label %sw.bb.335
    i32 92, label %sw.bb.335
    i32 94, label %sw.bb.335
    i32 96, label %sw.bb.335
    i32 124, label %sw.bb.335
  ], !dbg !4699

sw.bb.335:                                        ; preds = %for.body.330, %for.body.330, %for.body.330, %for.body.330, %for.body.330
  br label %force_outer_quoting_style, !dbg !4700

sw.default.336:                                   ; preds = %for.body.330
  br label %sw.epilog.337, !dbg !4702

sw.epilog.337:                                    ; preds = %sw.default.336
  br label %for.inc.338, !dbg !4703

for.inc.338:                                      ; preds = %sw.epilog.337
  %182 = load i64, i64* %j, align 8, !dbg !4704
  %inc339 = add i64 %182, 1, !dbg !4704
  store i64 %inc339, i64* %j, align 8, !dbg !4704
  br label %for.cond.327, !dbg !4705

for.end.340:                                      ; preds = %for.cond.327
  br label %if.end.341, !dbg !4706

if.end.341:                                       ; preds = %for.end.340, %land.lhs.true.323, %if.else.320
  %183 = load i32, i32* %w, align 4, !dbg !4707
  %call342 = call i32 @iswprint(i32 %183) #11, !dbg !4709
  %tobool343 = icmp ne i32 %call342, 0, !dbg !4709
  br i1 %tobool343, label %if.end.345, label %if.then.344, !dbg !4710

if.then.344:                                      ; preds = %if.end.341
  store i8 0, i8* %printable, align 1, !dbg !4711
  br label %if.end.345, !dbg !4712

if.end.345:                                       ; preds = %if.then.344, %if.end.341
  %184 = load i64, i64* %bytes, align 8, !dbg !4713
  %185 = load i64, i64* %m, align 8, !dbg !4714
  %add346 = add i64 %185, %184, !dbg !4714
  store i64 %add346, i64* %m, align 8, !dbg !4714
  br label %if.end.347

if.end.347:                                       ; preds = %if.end.345
  br label %if.end.348

if.end.348:                                       ; preds = %if.end.347
  br label %if.end.349

if.end.349:                                       ; preds = %if.end.348
  br label %do.cond, !dbg !4715

do.cond:                                          ; preds = %if.end.349
  %call350 = call i32 @mbsinit(%struct.__mbstate_t* %mbstate) #16, !dbg !4716
  %tobool351 = icmp ne i32 %call350, 0, !dbg !4717
  %lnot352 = xor i1 %tobool351, true, !dbg !4717
  br i1 %lnot352, label %do.body.296, label %do.end.353, !dbg !4715

do.end.353:                                       ; preds = %do.cond, %while.end, %if.then.307, %if.then.303
  br label %if.end.354

if.end.354:                                       ; preds = %do.end.353, %if.then.281
  %186 = load i64, i64* %m, align 8, !dbg !4718
  %cmp355 = icmp ult i64 1, %186, !dbg !4720
  br i1 %cmp355, label %if.then.361, label %lor.lhs.false, !dbg !4721

lor.lhs.false:                                    ; preds = %if.end.354
  %187 = load i8, i8* %backslash_escapes, align 1, !dbg !4722
  %tobool357 = trunc i8 %187 to i1, !dbg !4722
  br i1 %tobool357, label %land.lhs.true.359, label %if.end.442, !dbg !4724

land.lhs.true.359:                                ; preds = %lor.lhs.false
  %188 = load i8, i8* %printable, align 1, !dbg !4725
  %tobool360 = trunc i8 %188 to i1, !dbg !4725
  br i1 %tobool360, label %if.end.442, label %if.then.361, !dbg !4727

if.then.361:                                      ; preds = %land.lhs.true.359, %if.end.354
  call void @llvm.dbg.declare(metadata i64* %ilim, metadata !4728, metadata !DIExpression()), !dbg !4730
  %189 = load i64, i64* %i, align 8, !dbg !4731
  %190 = load i64, i64* %m, align 8, !dbg !4732
  %add362 = add i64 %189, %190, !dbg !4733
  store i64 %add362, i64* %ilim, align 8, !dbg !4730
  br label %for.cond.363, !dbg !4734

for.cond.363:                                     ; preds = %do.end.438, %if.then.361
  %191 = load i8, i8* %backslash_escapes, align 1, !dbg !4735
  %tobool364 = trunc i8 %191 to i1, !dbg !4735
  br i1 %tobool364, label %land.lhs.true.366, label %if.else.411, !dbg !4740

land.lhs.true.366:                                ; preds = %for.cond.363
  %192 = load i8, i8* %printable, align 1, !dbg !4741
  %tobool367 = trunc i8 %192 to i1, !dbg !4741
  br i1 %tobool367, label %if.else.411, label %if.then.368, !dbg !4743

if.then.368:                                      ; preds = %land.lhs.true.366
  %193 = load i8, i8* %elide_outer_quotes, align 1, !dbg !4744
  %tobool369 = trunc i8 %193 to i1, !dbg !4744
  br i1 %tobool369, label %if.then.370, label %if.end.371, !dbg !4747

if.then.370:                                      ; preds = %if.then.368
  br label %force_outer_quoting_style, !dbg !4748

if.end.371:                                       ; preds = %if.then.368
  br label %do.body.372, !dbg !4749

do.body.372:                                      ; preds = %if.end.371
  %194 = load i64, i64* %len, align 8, !dbg !4750
  %195 = load i64, i64* %buffersize.addr, align 8, !dbg !4750
  %cmp373 = icmp ult i64 %194, %195, !dbg !4750
  br i1 %cmp373, label %if.then.375, label %if.end.377, !dbg !4754

if.then.375:                                      ; preds = %do.body.372
  %196 = load i64, i64* %len, align 8, !dbg !4755
  %197 = load i8*, i8** %buffer.addr, align 8, !dbg !4755
  %arrayidx376 = getelementptr inbounds i8, i8* %197, i64 %196, !dbg !4755
  store i8 92, i8* %arrayidx376, align 1, !dbg !4755
  br label %if.end.377, !dbg !4755

if.end.377:                                       ; preds = %if.then.375, %do.body.372
  %198 = load i64, i64* %len, align 8, !dbg !4757
  %inc378 = add i64 %198, 1, !dbg !4757
  store i64 %inc378, i64* %len, align 8, !dbg !4757
  br label %do.end.380, !dbg !4757

do.end.380:                                       ; preds = %if.end.377
  br label %do.body.381, !dbg !4760

do.body.381:                                      ; preds = %do.end.380
  %199 = load i64, i64* %len, align 8, !dbg !4761
  %200 = load i64, i64* %buffersize.addr, align 8, !dbg !4761
  %cmp382 = icmp ult i64 %199, %200, !dbg !4761
  br i1 %cmp382, label %if.then.384, label %if.end.389, !dbg !4765

if.then.384:                                      ; preds = %do.body.381
  %201 = load i8, i8* %c, align 1, !dbg !4766
  %conv385 = zext i8 %201 to i32, !dbg !4766
  %shr = ashr i32 %conv385, 6, !dbg !4766
  %add386 = add nsw i32 48, %shr, !dbg !4766
  %conv387 = trunc i32 %add386 to i8, !dbg !4766
  %202 = load i64, i64* %len, align 8, !dbg !4766
  %203 = load i8*, i8** %buffer.addr, align 8, !dbg !4766
  %arrayidx388 = getelementptr inbounds i8, i8* %203, i64 %202, !dbg !4766
  store i8 %conv387, i8* %arrayidx388, align 1, !dbg !4766
  br label %if.end.389, !dbg !4766

if.end.389:                                       ; preds = %if.then.384, %do.body.381
  %204 = load i64, i64* %len, align 8, !dbg !4768
  %inc390 = add i64 %204, 1, !dbg !4768
  store i64 %inc390, i64* %len, align 8, !dbg !4768
  br label %do.end.392, !dbg !4768

do.end.392:                                       ; preds = %if.end.389
  br label %do.body.393, !dbg !4771

do.body.393:                                      ; preds = %do.end.392
  %205 = load i64, i64* %len, align 8, !dbg !4772
  %206 = load i64, i64* %buffersize.addr, align 8, !dbg !4772
  %cmp394 = icmp ult i64 %205, %206, !dbg !4772
  br i1 %cmp394, label %if.then.396, label %if.end.403, !dbg !4776

if.then.396:                                      ; preds = %do.body.393
  %207 = load i8, i8* %c, align 1, !dbg !4777
  %conv397 = zext i8 %207 to i32, !dbg !4777
  %shr398 = ashr i32 %conv397, 3, !dbg !4777
  %and399 = and i32 %shr398, 7, !dbg !4777
  %add400 = add nsw i32 48, %and399, !dbg !4777
  %conv401 = trunc i32 %add400 to i8, !dbg !4777
  %208 = load i64, i64* %len, align 8, !dbg !4777
  %209 = load i8*, i8** %buffer.addr, align 8, !dbg !4777
  %arrayidx402 = getelementptr inbounds i8, i8* %209, i64 %208, !dbg !4777
  store i8 %conv401, i8* %arrayidx402, align 1, !dbg !4777
  br label %if.end.403, !dbg !4777

if.end.403:                                       ; preds = %if.then.396, %do.body.393
  %210 = load i64, i64* %len, align 8, !dbg !4779
  %inc404 = add i64 %210, 1, !dbg !4779
  store i64 %inc404, i64* %len, align 8, !dbg !4779
  br label %do.end.406, !dbg !4779

do.end.406:                                       ; preds = %if.end.403
  %211 = load i8, i8* %c, align 1, !dbg !4782
  %conv407 = zext i8 %211 to i32, !dbg !4782
  %and408 = and i32 %conv407, 7, !dbg !4783
  %add409 = add nsw i32 48, %and408, !dbg !4784
  %conv410 = trunc i32 %add409 to i8, !dbg !4785
  store i8 %conv410, i8* %c, align 1, !dbg !4786
  br label %if.end.424, !dbg !4787

if.else.411:                                      ; preds = %land.lhs.true.366, %for.cond.363
  %212 = load i8, i8* %is_right_quote, align 1, !dbg !4788
  %tobool412 = trunc i8 %212 to i1, !dbg !4788
  br i1 %tobool412, label %if.then.413, label %if.end.423, !dbg !4790

if.then.413:                                      ; preds = %if.else.411
  br label %do.body.414, !dbg !4791

do.body.414:                                      ; preds = %if.then.413
  %213 = load i64, i64* %len, align 8, !dbg !4793
  %214 = load i64, i64* %buffersize.addr, align 8, !dbg !4793
  %cmp415 = icmp ult i64 %213, %214, !dbg !4793
  br i1 %cmp415, label %if.then.417, label %if.end.419, !dbg !4797

if.then.417:                                      ; preds = %do.body.414
  %215 = load i64, i64* %len, align 8, !dbg !4798
  %216 = load i8*, i8** %buffer.addr, align 8, !dbg !4798
  %arrayidx418 = getelementptr inbounds i8, i8* %216, i64 %215, !dbg !4798
  store i8 92, i8* %arrayidx418, align 1, !dbg !4798
  br label %if.end.419, !dbg !4798

if.end.419:                                       ; preds = %if.then.417, %do.body.414
  %217 = load i64, i64* %len, align 8, !dbg !4800
  %inc420 = add i64 %217, 1, !dbg !4800
  store i64 %inc420, i64* %len, align 8, !dbg !4800
  br label %do.end.422, !dbg !4800

do.end.422:                                       ; preds = %if.end.419
  store i8 0, i8* %is_right_quote, align 1, !dbg !4803
  br label %if.end.423, !dbg !4804

if.end.423:                                       ; preds = %do.end.422, %if.else.411
  br label %if.end.424

if.end.424:                                       ; preds = %if.end.423, %do.end.406
  %218 = load i64, i64* %ilim, align 8, !dbg !4805
  %219 = load i64, i64* %i, align 8, !dbg !4807
  %add425 = add i64 %219, 1, !dbg !4808
  %cmp426 = icmp ule i64 %218, %add425, !dbg !4809
  br i1 %cmp426, label %if.then.428, label %if.end.429, !dbg !4810

if.then.428:                                      ; preds = %if.end.424
  br label %for.end.441, !dbg !4811

if.end.429:                                       ; preds = %if.end.424
  br label %do.body.430, !dbg !4812

do.body.430:                                      ; preds = %if.end.429
  %220 = load i64, i64* %len, align 8, !dbg !4813
  %221 = load i64, i64* %buffersize.addr, align 8, !dbg !4813
  %cmp431 = icmp ult i64 %220, %221, !dbg !4813
  br i1 %cmp431, label %if.then.433, label %if.end.435, !dbg !4817

if.then.433:                                      ; preds = %do.body.430
  %222 = load i8, i8* %c, align 1, !dbg !4818
  %223 = load i64, i64* %len, align 8, !dbg !4818
  %224 = load i8*, i8** %buffer.addr, align 8, !dbg !4818
  %arrayidx434 = getelementptr inbounds i8, i8* %224, i64 %223, !dbg !4818
  store i8 %222, i8* %arrayidx434, align 1, !dbg !4818
  br label %if.end.435, !dbg !4818

if.end.435:                                       ; preds = %if.then.433, %do.body.430
  %225 = load i64, i64* %len, align 8, !dbg !4820
  %inc436 = add i64 %225, 1, !dbg !4820
  store i64 %inc436, i64* %len, align 8, !dbg !4820
  br label %do.end.438, !dbg !4820

do.end.438:                                       ; preds = %if.end.435
  %226 = load i64, i64* %i, align 8, !dbg !4823
  %inc439 = add i64 %226, 1, !dbg !4823
  store i64 %inc439, i64* %i, align 8, !dbg !4823
  %227 = load i8*, i8** %arg.addr, align 8, !dbg !4824
  %arrayidx440 = getelementptr inbounds i8, i8* %227, i64 %inc439, !dbg !4824
  %228 = load i8, i8* %arrayidx440, align 1, !dbg !4824
  store i8 %228, i8* %c, align 1, !dbg !4825
  br label %for.cond.363, !dbg !4826

for.end.441:                                      ; preds = %if.then.428
  br label %store_c, !dbg !4827

if.end.442:                                       ; preds = %land.lhs.true.359, %lor.lhs.false
  br label %sw.epilog.443, !dbg !4828

sw.epilog.443:                                    ; preds = %if.end.442, %sw.bb.278, %if.end.277, %if.end.245, %if.then.236, %if.then.231, %if.end.219, %sw.epilog.192, %if.end.126
  %229 = load i8, i8* %backslash_escapes, align 1, !dbg !4829
  %tobool444 = trunc i8 %229 to i1, !dbg !4829
  br i1 %tobool444, label %land.lhs.true.449, label %lor.lhs.false.446, !dbg !4831

lor.lhs.false.446:                                ; preds = %sw.epilog.443
  %230 = load i8, i8* %elide_outer_quotes, align 1, !dbg !4832
  %tobool447 = trunc i8 %230 to i1, !dbg !4832
  br i1 %tobool447, label %land.lhs.true.449, label %land.lhs.true.458, !dbg !4834

land.lhs.true.449:                                ; preds = %lor.lhs.false.446, %sw.epilog.443
  %231 = load i32*, i32** %quote_these_too.addr, align 8, !dbg !4835
  %tobool450 = icmp ne i32* %231, null, !dbg !4835
  br i1 %tobool450, label %land.lhs.true.451, label %land.lhs.true.458, !dbg !4836

land.lhs.true.451:                                ; preds = %land.lhs.true.449
  %232 = load i8, i8* %c, align 1, !dbg !4837
  %conv452 = zext i8 %232 to i64, !dbg !4837
  %div = udiv i64 %conv452, 32, !dbg !4838
  %233 = load i32*, i32** %quote_these_too.addr, align 8, !dbg !4839
  %arrayidx453 = getelementptr inbounds i32, i32* %233, i64 %div, !dbg !4839
  %234 = load i32, i32* %arrayidx453, align 4, !dbg !4839
  %235 = load i8, i8* %c, align 1, !dbg !4840
  %conv454 = zext i8 %235 to i64, !dbg !4840
  %rem = urem i64 %conv454, 32, !dbg !4841
  %sh_prom = trunc i64 %rem to i32, !dbg !4842
  %shr455 = lshr i32 %234, %sh_prom, !dbg !4842
  %and456 = and i32 %shr455, 1, !dbg !4843
  %tobool457 = icmp ne i32 %and456, 0, !dbg !4843
  br i1 %tobool457, label %if.end.461, label %land.lhs.true.458, !dbg !4844

land.lhs.true.458:                                ; preds = %land.lhs.true.451, %land.lhs.true.449, %lor.lhs.false.446
  %236 = load i8, i8* %is_right_quote, align 1, !dbg !4845
  %tobool459 = trunc i8 %236 to i1, !dbg !4845
  br i1 %tobool459, label %if.end.461, label %if.then.460, !dbg !4847

if.then.460:                                      ; preds = %land.lhs.true.458
  br label %store_c, !dbg !4848

if.end.461:                                       ; preds = %land.lhs.true.458, %land.lhs.true.451
  br label %store_escape, !dbg !4849

store_escape:                                     ; preds = %if.end.461, %if.then.218
  %237 = load i8, i8* %elide_outer_quotes, align 1, !dbg !4850
  %tobool462 = trunc i8 %237 to i1, !dbg !4850
  br i1 %tobool462, label %if.then.463, label %if.end.464, !dbg !4852

if.then.463:                                      ; preds = %store_escape
  br label %force_outer_quoting_style, !dbg !4853

if.end.464:                                       ; preds = %store_escape
  br label %do.body.465, !dbg !4854

do.body.465:                                      ; preds = %if.end.464
  %238 = load i64, i64* %len, align 8, !dbg !4855
  %239 = load i64, i64* %buffersize.addr, align 8, !dbg !4855
  %cmp466 = icmp ult i64 %238, %239, !dbg !4855
  br i1 %cmp466, label %if.then.468, label %if.end.470, !dbg !4859

if.then.468:                                      ; preds = %do.body.465
  %240 = load i64, i64* %len, align 8, !dbg !4860
  %241 = load i8*, i8** %buffer.addr, align 8, !dbg !4860
  %arrayidx469 = getelementptr inbounds i8, i8* %241, i64 %240, !dbg !4860
  store i8 92, i8* %arrayidx469, align 1, !dbg !4860
  br label %if.end.470, !dbg !4860

if.end.470:                                       ; preds = %if.then.468, %do.body.465
  %242 = load i64, i64* %len, align 8, !dbg !4862
  %inc471 = add i64 %242, 1, !dbg !4862
  store i64 %inc471, i64* %len, align 8, !dbg !4862
  br label %do.end.473, !dbg !4862

do.end.473:                                       ; preds = %if.end.470
  br label %store_c, !dbg !4865

store_c:                                          ; preds = %do.end.473, %if.then.460, %for.end.441, %if.then.208
  br label %do.body.474, !dbg !4867

do.body.474:                                      ; preds = %store_c
  %243 = load i64, i64* %len, align 8, !dbg !4868
  %244 = load i64, i64* %buffersize.addr, align 8, !dbg !4868
  %cmp475 = icmp ult i64 %243, %244, !dbg !4868
  br i1 %cmp475, label %if.then.477, label %if.end.479, !dbg !4872

if.then.477:                                      ; preds = %do.body.474
  %245 = load i8, i8* %c, align 1, !dbg !4873
  %246 = load i64, i64* %len, align 8, !dbg !4873
  %247 = load i8*, i8** %buffer.addr, align 8, !dbg !4873
  %arrayidx478 = getelementptr inbounds i8, i8* %247, i64 %246, !dbg !4873
  store i8 %245, i8* %arrayidx478, align 1, !dbg !4873
  br label %if.end.479, !dbg !4873

if.end.479:                                       ; preds = %if.then.477, %do.body.474
  %248 = load i64, i64* %len, align 8, !dbg !4875
  %inc480 = add i64 %248, 1, !dbg !4875
  store i64 %inc480, i64* %len, align 8, !dbg !4875
  br label %do.end.482, !dbg !4875

do.end.482:                                       ; preds = %if.end.479
  br label %for.inc.483, !dbg !4878

for.inc.483:                                      ; preds = %do.end.482, %if.then.124
  %249 = load i64, i64* %i, align 8, !dbg !4879
  %inc484 = add i64 %249, 1, !dbg !4879
  store i64 %inc484, i64* %i, align 8, !dbg !4879
  br label %for.cond.39, !dbg !4880

for.end.485:                                      ; preds = %cond.end
  %250 = load i64, i64* %len, align 8, !dbg !4881
  %cmp486 = icmp eq i64 %250, 0, !dbg !4883
  br i1 %cmp486, label %land.lhs.true.488, label %if.end.495, !dbg !4884

land.lhs.true.488:                                ; preds = %for.end.485
  %251 = load i32, i32* %quoting_style.addr, align 4, !dbg !4885
  %cmp489 = icmp eq i32 %251, 2, !dbg !4887
  br i1 %cmp489, label %land.lhs.true.491, label %if.end.495, !dbg !4888

land.lhs.true.491:                                ; preds = %land.lhs.true.488
  %252 = load i8, i8* %elide_outer_quotes, align 1, !dbg !4889
  %tobool492 = trunc i8 %252 to i1, !dbg !4889
  br i1 %tobool492, label %if.then.494, label %if.end.495, !dbg !4890

if.then.494:                                      ; preds = %land.lhs.true.491
  br label %force_outer_quoting_style, !dbg !4891

if.end.495:                                       ; preds = %land.lhs.true.491, %land.lhs.true.488, %for.end.485
  %253 = load i8*, i8** %quote_string, align 8, !dbg !4892
  %tobool496 = icmp ne i8* %253, null, !dbg !4892
  br i1 %tobool496, label %land.lhs.true.497, label %if.end.515, !dbg !4894

land.lhs.true.497:                                ; preds = %if.end.495
  %254 = load i8, i8* %elide_outer_quotes, align 1, !dbg !4895
  %tobool498 = trunc i8 %254 to i1, !dbg !4895
  br i1 %tobool498, label %if.end.515, label %if.then.499, !dbg !4897

if.then.499:                                      ; preds = %land.lhs.true.497
  br label %for.cond.500, !dbg !4898

for.cond.500:                                     ; preds = %for.inc.512, %if.then.499
  %255 = load i8*, i8** %quote_string, align 8, !dbg !4899
  %256 = load i8, i8* %255, align 1, !dbg !4904
  %tobool501 = icmp ne i8 %256, 0, !dbg !4905
  br i1 %tobool501, label %for.body.502, label %for.end.514, !dbg !4905

for.body.502:                                     ; preds = %for.cond.500
  br label %do.body.503, !dbg !4906

do.body.503:                                      ; preds = %for.body.502
  %257 = load i64, i64* %len, align 8, !dbg !4907
  %258 = load i64, i64* %buffersize.addr, align 8, !dbg !4907
  %cmp504 = icmp ult i64 %257, %258, !dbg !4907
  br i1 %cmp504, label %if.then.506, label %if.end.508, !dbg !4911

if.then.506:                                      ; preds = %do.body.503
  %259 = load i8*, i8** %quote_string, align 8, !dbg !4912
  %260 = load i8, i8* %259, align 1, !dbg !4912
  %261 = load i64, i64* %len, align 8, !dbg !4912
  %262 = load i8*, i8** %buffer.addr, align 8, !dbg !4912
  %arrayidx507 = getelementptr inbounds i8, i8* %262, i64 %261, !dbg !4912
  store i8 %260, i8* %arrayidx507, align 1, !dbg !4912
  br label %if.end.508, !dbg !4912

if.end.508:                                       ; preds = %if.then.506, %do.body.503
  %263 = load i64, i64* %len, align 8, !dbg !4914
  %inc509 = add i64 %263, 1, !dbg !4914
  store i64 %inc509, i64* %len, align 8, !dbg !4914
  br label %do.end.511, !dbg !4914

do.end.511:                                       ; preds = %if.end.508
  br label %for.inc.512, !dbg !4917

for.inc.512:                                      ; preds = %do.end.511
  %264 = load i8*, i8** %quote_string, align 8, !dbg !4919
  %incdec.ptr513 = getelementptr inbounds i8, i8* %264, i32 1, !dbg !4919
  store i8* %incdec.ptr513, i8** %quote_string, align 8, !dbg !4919
  br label %for.cond.500, !dbg !4920

for.end.514:                                      ; preds = %for.cond.500
  br label %if.end.515, !dbg !4921

if.end.515:                                       ; preds = %for.end.514, %land.lhs.true.497, %if.end.495
  %265 = load i64, i64* %len, align 8, !dbg !4922
  %266 = load i64, i64* %buffersize.addr, align 8, !dbg !4924
  %cmp516 = icmp ult i64 %265, %266, !dbg !4925
  br i1 %cmp516, label %if.then.518, label %if.end.520, !dbg !4926

if.then.518:                                      ; preds = %if.end.515
  %267 = load i64, i64* %len, align 8, !dbg !4927
  %268 = load i8*, i8** %buffer.addr, align 8, !dbg !4928
  %arrayidx519 = getelementptr inbounds i8, i8* %268, i64 %267, !dbg !4928
  store i8 0, i8* %arrayidx519, align 1, !dbg !4929
  br label %if.end.520, !dbg !4928

if.end.520:                                       ; preds = %if.then.518, %if.end.515
  %269 = load i64, i64* %len, align 8, !dbg !4930
  store i64 %269, i64* %retval, !dbg !4931
  br label %return, !dbg !4931

force_outer_quoting_style:                        ; preds = %if.then.494, %if.then.463, %if.then.370, %sw.bb.335, %if.then.251, %if.then.244, %if.then.215, %if.then.151, %if.then.130, %if.then.79, %if.then.70
  %270 = load i8*, i8** %buffer.addr, align 8, !dbg !4932
  %271 = load i64, i64* %buffersize.addr, align 8, !dbg !4933
  %272 = load i8*, i8** %arg.addr, align 8, !dbg !4934
  %273 = load i64, i64* %argsize.addr, align 8, !dbg !4935
  %274 = load i32, i32* %quoting_style.addr, align 4, !dbg !4936
  %275 = load i32, i32* %flags.addr, align 4, !dbg !4937
  %and521 = and i32 %275, -3, !dbg !4938
  %276 = load i8*, i8** %left_quote.addr, align 8, !dbg !4939
  %277 = load i8*, i8** %right_quote.addr, align 8, !dbg !4940
  %call522 = call i64 @quotearg_buffer_restyled(i8* %270, i64 %271, i8* %272, i64 %273, i32 %274, i32 %and521, i32* null, i8* %276, i8* %277), !dbg !4941
  store i64 %call522, i64* %retval, !dbg !4942
  br label %return, !dbg !4942

return:                                           ; preds = %force_outer_quoting_style, %if.end.520
  %278 = load i64, i64* %retval, !dbg !4943
  ret i64 %278, !dbg !4943
}

; Function Attrs: nounwind uwtable
define internal i8* @quotearg_n_options(i32 %n, i8* %arg, i64 %argsize, %struct.quoting_options* %options) #5 !dbg !4944 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %options.addr = alloca %struct.quoting_options*, align 8
  %e = alloca i32, align 4
  %n0 = alloca i32, align 4
  %sv = alloca %struct.slotvec*, align 8
  %n1 = alloca i64, align 8
  %preallocated = alloca i8, align 1
  %size = alloca i64, align 8
  %val = alloca i8*, align 8
  %flags = alloca i32, align 4
  %qsize = alloca i64, align 8
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !4947, metadata !DIExpression()), !dbg !4948
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !4949, metadata !DIExpression()), !dbg !4950
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !4951, metadata !DIExpression()), !dbg !4952
  store %struct.quoting_options* %options, %struct.quoting_options** %options.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %options.addr, metadata !4953, metadata !DIExpression()), !dbg !4954
  call void @llvm.dbg.declare(metadata i32* %e, metadata !4955, metadata !DIExpression()), !dbg !4956
  %call = call i32* @__errno_location() #17, !dbg !4957
  %0 = load i32, i32* %call, align 4, !dbg !4957
  store i32 %0, i32* %e, align 4, !dbg !4956
  call void @llvm.dbg.declare(metadata i32* %n0, metadata !4958, metadata !DIExpression()), !dbg !4959
  %1 = load i32, i32* %n.addr, align 4, !dbg !4960
  store i32 %1, i32* %n0, align 4, !dbg !4959
  call void @llvm.dbg.declare(metadata %struct.slotvec** %sv, metadata !4961, metadata !DIExpression()), !dbg !4962
  %2 = load %struct.slotvec*, %struct.slotvec** @slotvec, align 8, !dbg !4963
  store %struct.slotvec* %2, %struct.slotvec** %sv, align 8, !dbg !4962
  %3 = load i32, i32* %n.addr, align 4, !dbg !4964
  %cmp = icmp slt i32 %3, 0, !dbg !4966
  br i1 %cmp, label %if.then, label %if.end, !dbg !4967

if.then:                                          ; preds = %entry
  call void @abort() #14, !dbg !4968
  unreachable, !dbg !4968

if.end:                                           ; preds = %entry
  %4 = load i32, i32* @nslots, align 4, !dbg !4969
  %5 = load i32, i32* %n0, align 4, !dbg !4971
  %cmp1 = icmp ule i32 %4, %5, !dbg !4972
  br i1 %cmp1, label %if.then.2, label %if.end.17, !dbg !4973

if.then.2:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i64* %n1, metadata !4974, metadata !DIExpression()), !dbg !4976
  %6 = load i32, i32* %n0, align 4, !dbg !4977
  %add = add i32 %6, 1, !dbg !4978
  %conv = zext i32 %add to i64, !dbg !4977
  store i64 %conv, i64* %n1, align 8, !dbg !4976
  call void @llvm.dbg.declare(metadata i8* %preallocated, metadata !4979, metadata !DIExpression()), !dbg !4980
  %7 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !4981
  %cmp3 = icmp eq %struct.slotvec* %7, @slotvec0, !dbg !4982
  %frombool = zext i1 %cmp3 to i8, !dbg !4980
  store i8 %frombool, i8* %preallocated, align 1, !dbg !4980
  %8 = load i64, i64* %n1, align 8, !dbg !4983
  %cmp5 = icmp ult i64 1152921504606846975, %8, !dbg !4983
  br i1 %cmp5, label %if.then.7, label %if.end.8, !dbg !4985

if.then.7:                                        ; preds = %if.then.2
  call void @xalloc_die() #15, !dbg !4986
  unreachable, !dbg !4986

if.end.8:                                         ; preds = %if.then.2
  %9 = load i8, i8* %preallocated, align 1, !dbg !4987
  %tobool = trunc i8 %9 to i1, !dbg !4987
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !4987

cond.true:                                        ; preds = %if.end.8
  br label %cond.end, !dbg !4988

cond.false:                                       ; preds = %if.end.8
  %10 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !4990
  br label %cond.end, !dbg !4987

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.slotvec* [ null, %cond.true ], [ %10, %cond.false ], !dbg !4987
  %11 = bitcast %struct.slotvec* %cond to i8*, !dbg !4992
  %12 = load i64, i64* %n1, align 8, !dbg !4995
  %mul = mul i64 %12, 16, !dbg !4996
  %call10 = call i8* @xrealloc(i8* %11, i64 %mul), !dbg !4997
  %13 = bitcast i8* %call10 to %struct.slotvec*, !dbg !4997
  store %struct.slotvec* %13, %struct.slotvec** %sv, align 8, !dbg !4998
  store %struct.slotvec* %13, %struct.slotvec** @slotvec, align 8, !dbg !4999
  %14 = load i8, i8* %preallocated, align 1, !dbg !5000
  %tobool11 = trunc i8 %14 to i1, !dbg !5000
  br i1 %tobool11, label %if.then.12, label %if.end.13, !dbg !5002

if.then.12:                                       ; preds = %cond.end
  %15 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !5003
  %16 = bitcast %struct.slotvec* %15 to i8*, !dbg !5004
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 bitcast (%struct.slotvec* @slotvec0 to i8*), i64 16, i1 false), !dbg !5004
  br label %if.end.13, !dbg !5005

if.end.13:                                        ; preds = %if.then.12, %cond.end
  %17 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !5006
  %18 = load i32, i32* @nslots, align 4, !dbg !5007
  %idx.ext = zext i32 %18 to i64, !dbg !5008
  %add.ptr = getelementptr inbounds %struct.slotvec, %struct.slotvec* %17, i64 %idx.ext, !dbg !5008
  %19 = bitcast %struct.slotvec* %add.ptr to i8*, !dbg !5009
  %20 = load i64, i64* %n1, align 8, !dbg !5010
  %21 = load i32, i32* @nslots, align 4, !dbg !5011
  %conv14 = zext i32 %21 to i64, !dbg !5011
  %sub = sub i64 %20, %conv14, !dbg !5012
  %mul15 = mul i64 %sub, 16, !dbg !5013
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 %mul15, i1 false), !dbg !5009
  %22 = load i64, i64* %n1, align 8, !dbg !5014
  %conv16 = trunc i64 %22 to i32, !dbg !5014
  store i32 %conv16, i32* @nslots, align 4, !dbg !5015
  br label %if.end.17, !dbg !5016

if.end.17:                                        ; preds = %if.end.13, %if.end
  call void @llvm.dbg.declare(metadata i64* %size, metadata !5017, metadata !DIExpression()), !dbg !5019
  %23 = load i32, i32* %n.addr, align 4, !dbg !5020
  %idxprom = sext i32 %23 to i64, !dbg !5021
  %24 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !5021
  %arrayidx = getelementptr inbounds %struct.slotvec, %struct.slotvec* %24, i64 %idxprom, !dbg !5021
  %size18 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx, i32 0, i32 0, !dbg !5022
  %25 = load i64, i64* %size18, align 8, !dbg !5022
  store i64 %25, i64* %size, align 8, !dbg !5019
  call void @llvm.dbg.declare(metadata i8** %val, metadata !5023, metadata !DIExpression()), !dbg !5024
  %26 = load i32, i32* %n.addr, align 4, !dbg !5025
  %idxprom19 = sext i32 %26 to i64, !dbg !5026
  %27 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !5026
  %arrayidx20 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %27, i64 %idxprom19, !dbg !5026
  %val21 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx20, i32 0, i32 1, !dbg !5027
  %28 = load i8*, i8** %val21, align 8, !dbg !5027
  store i8* %28, i8** %val, align 8, !dbg !5024
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !5028, metadata !DIExpression()), !dbg !5029
  %29 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !5030
  %flags22 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %29, i32 0, i32 1, !dbg !5031
  %30 = load i32, i32* %flags22, align 4, !dbg !5031
  %or = or i32 %30, 1, !dbg !5032
  store i32 %or, i32* %flags, align 4, !dbg !5029
  call void @llvm.dbg.declare(metadata i64* %qsize, metadata !5033, metadata !DIExpression()), !dbg !5034
  %31 = load i8*, i8** %val, align 8, !dbg !5035
  %32 = load i64, i64* %size, align 8, !dbg !5036
  %33 = load i8*, i8** %arg.addr, align 8, !dbg !5037
  %34 = load i64, i64* %argsize.addr, align 8, !dbg !5038
  %35 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !5039
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %35, i32 0, i32 0, !dbg !5040
  %36 = load i32, i32* %style, align 4, !dbg !5040
  %37 = load i32, i32* %flags, align 4, !dbg !5041
  %38 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !5042
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %38, i32 0, i32 2, !dbg !5043
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i32 0, i32 0, !dbg !5042
  %39 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !5044
  %left_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %39, i32 0, i32 3, !dbg !5045
  %40 = load i8*, i8** %left_quote, align 8, !dbg !5045
  %41 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !5046
  %right_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %41, i32 0, i32 4, !dbg !5047
  %42 = load i8*, i8** %right_quote, align 8, !dbg !5047
  %call23 = call i64 @quotearg_buffer_restyled(i8* %31, i64 %32, i8* %33, i64 %34, i32 %36, i32 %37, i32* %arraydecay, i8* %40, i8* %42), !dbg !5048
  store i64 %call23, i64* %qsize, align 8, !dbg !5034
  %43 = load i64, i64* %size, align 8, !dbg !5049
  %44 = load i64, i64* %qsize, align 8, !dbg !5051
  %cmp24 = icmp ule i64 %43, %44, !dbg !5052
  br i1 %cmp24, label %if.then.26, label %if.end.45, !dbg !5053

if.then.26:                                       ; preds = %if.end.17
  %45 = load i64, i64* %qsize, align 8, !dbg !5054
  %add27 = add i64 %45, 1, !dbg !5056
  store i64 %add27, i64* %size, align 8, !dbg !5057
  %46 = load i32, i32* %n.addr, align 4, !dbg !5058
  %idxprom28 = sext i32 %46 to i64, !dbg !5059
  %47 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !5059
  %arrayidx29 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %47, i64 %idxprom28, !dbg !5059
  %size30 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx29, i32 0, i32 0, !dbg !5060
  store i64 %add27, i64* %size30, align 8, !dbg !5061
  %48 = load i8*, i8** %val, align 8, !dbg !5062
  %cmp31 = icmp ne i8* %48, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i32 0, i32 0), !dbg !5064
  br i1 %cmp31, label %if.then.33, label %if.end.34, !dbg !5065

if.then.33:                                       ; preds = %if.then.26
  %49 = load i8*, i8** %val, align 8, !dbg !5066
  call void @free(i8* %49) #11, !dbg !5067
  br label %if.end.34, !dbg !5067

if.end.34:                                        ; preds = %if.then.33, %if.then.26
  %50 = load i64, i64* %size, align 8, !dbg !5068
  %call35 = call noalias i8* @xcharalloc(i64 %50), !dbg !5069
  store i8* %call35, i8** %val, align 8, !dbg !5070
  %51 = load i32, i32* %n.addr, align 4, !dbg !5071
  %idxprom36 = sext i32 %51 to i64, !dbg !5072
  %52 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !5072
  %arrayidx37 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %52, i64 %idxprom36, !dbg !5072
  %val38 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx37, i32 0, i32 1, !dbg !5073
  store i8* %call35, i8** %val38, align 8, !dbg !5074
  %53 = load i8*, i8** %val, align 8, !dbg !5075
  %54 = load i64, i64* %size, align 8, !dbg !5076
  %55 = load i8*, i8** %arg.addr, align 8, !dbg !5077
  %56 = load i64, i64* %argsize.addr, align 8, !dbg !5078
  %57 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !5079
  %style39 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %57, i32 0, i32 0, !dbg !5080
  %58 = load i32, i32* %style39, align 4, !dbg !5080
  %59 = load i32, i32* %flags, align 4, !dbg !5081
  %60 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !5082
  %quote_these_too40 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %60, i32 0, i32 2, !dbg !5083
  %arraydecay41 = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too40, i32 0, i32 0, !dbg !5082
  %61 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !5084
  %left_quote42 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %61, i32 0, i32 3, !dbg !5085
  %62 = load i8*, i8** %left_quote42, align 8, !dbg !5085
  %63 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !5086
  %right_quote43 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %63, i32 0, i32 4, !dbg !5087
  %64 = load i8*, i8** %right_quote43, align 8, !dbg !5087
  %call44 = call i64 @quotearg_buffer_restyled(i8* %53, i64 %54, i8* %55, i64 %56, i32 %58, i32 %59, i32* %arraydecay41, i8* %62, i8* %64), !dbg !5088
  br label %if.end.45, !dbg !5089

if.end.45:                                        ; preds = %if.end.34, %if.end.17
  %65 = load i32, i32* %e, align 4, !dbg !5090
  %call46 = call i32* @__errno_location() #17, !dbg !5091
  store i32 %65, i32* %call46, align 4, !dbg !5092
  %66 = load i8*, i8** %val, align 8, !dbg !5093
  ret i8* %66, !dbg !5094
}

; Function Attrs: nounwind uwtable
define internal void @quoting_options_from_style(%struct.quoting_options* noalias sret %agg.result, i32 %style) #5 !dbg !5095 {
entry:
  %style.addr = alloca i32, align 4
  %o = alloca %struct.quoting_options, align 8
  store i32 %style, i32* %style.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %style.addr, metadata !5098, metadata !DIExpression()), !dbg !5099
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %o, metadata !5100, metadata !DIExpression()), !dbg !5101
  %0 = bitcast %struct.quoting_options* %o to i8*, !dbg !5101
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 56, i1 false), !dbg !5101
  %1 = load i32, i32* %style.addr, align 4, !dbg !5102
  %cmp = icmp eq i32 %1, 8, !dbg !5104
  br i1 %cmp, label %if.then, label %if.end, !dbg !5105

if.then:                                          ; preds = %entry
  call void @abort() #14, !dbg !5106
  unreachable, !dbg !5106

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %style.addr, align 4, !dbg !5107
  %style1 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %o, i32 0, i32 0, !dbg !5108
  store i32 %2, i32* %style1, align 4, !dbg !5109
  %3 = bitcast %struct.quoting_options* %agg.result to i8*, !dbg !5110
  %4 = bitcast %struct.quoting_options* %o to i8*, !dbg !5110
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 56, i1 false), !dbg !5110
  ret void, !dbg !5111
}

; Function Attrs: nounwind uwtable
define internal i8* @gettext_quote(i8* %msgid, i32 %s) #5 !dbg !5112 {
entry:
  %retval = alloca i8*, align 8
  %msgid.addr = alloca i8*, align 8
  %s.addr = alloca i32, align 4
  %translation = alloca i8*, align 8
  %locale_code = alloca i8*, align 8
  store i8* %msgid, i8** %msgid.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %msgid.addr, metadata !5115, metadata !DIExpression()), !dbg !5116
  store i32 %s, i32* %s.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !5117, metadata !DIExpression()), !dbg !5118
  call void @llvm.dbg.declare(metadata i8** %translation, metadata !5119, metadata !DIExpression()), !dbg !5120
  %0 = load i8*, i8** %msgid.addr, align 8, !dbg !5121
  %call = call i8* @gettext(i8* %0) #11, !dbg !5121
  store i8* %call, i8** %translation, align 8, !dbg !5120
  call void @llvm.dbg.declare(metadata i8** %locale_code, metadata !5122, metadata !DIExpression()), !dbg !5123
  %1 = load i8*, i8** %translation, align 8, !dbg !5124
  %2 = load i8*, i8** %msgid.addr, align 8, !dbg !5126
  %cmp = icmp ne i8* %1, %2, !dbg !5127
  br i1 %cmp, label %if.then, label %if.end, !dbg !5128

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** %translation, align 8, !dbg !5129
  store i8* %3, i8** %retval, !dbg !5130
  br label %return, !dbg !5130

if.end:                                           ; preds = %entry
  %call1 = call i8* @locale_charset(), !dbg !5131
  store i8* %call1, i8** %locale_code, align 8, !dbg !5132
  %4 = load i8*, i8** %locale_code, align 8, !dbg !5133
  %call2 = call i32 @c_strcasecmp(i8* %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11.107, i32 0, i32 0)) #16, !dbg !5133
  %cmp3 = icmp eq i32 %call2, 0, !dbg !5133
  br i1 %cmp3, label %if.then.4, label %if.end.7, !dbg !5135

if.then.4:                                        ; preds = %if.end
  %5 = load i8*, i8** %msgid.addr, align 8, !dbg !5136
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 0, !dbg !5136
  %6 = load i8, i8* %arrayidx, align 1, !dbg !5136
  %conv = sext i8 %6 to i32, !dbg !5136
  %cmp5 = icmp eq i32 %conv, 96, !dbg !5137
  %cond = select i1 %cmp5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12.108, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13.109, i32 0, i32 0), !dbg !5136
  store i8* %cond, i8** %retval, !dbg !5138
  br label %return, !dbg !5138

if.end.7:                                         ; preds = %if.end
  %7 = load i8*, i8** %locale_code, align 8, !dbg !5139
  %call8 = call i32 @c_strcasecmp(i8* %7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14.110, i32 0, i32 0)) #16, !dbg !5139
  %cmp9 = icmp eq i32 %call8, 0, !dbg !5139
  br i1 %cmp9, label %if.then.11, label %if.end.17, !dbg !5141

if.then.11:                                       ; preds = %if.end.7
  %8 = load i8*, i8** %msgid.addr, align 8, !dbg !5142
  %arrayidx12 = getelementptr inbounds i8, i8* %8, i64 0, !dbg !5142
  %9 = load i8, i8* %arrayidx12, align 1, !dbg !5142
  %conv13 = sext i8 %9 to i32, !dbg !5142
  %cmp14 = icmp eq i32 %conv13, 96, !dbg !5143
  %cond16 = select i1 %cmp14, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15.111, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.16.112, i32 0, i32 0), !dbg !5142
  store i8* %cond16, i8** %retval, !dbg !5144
  br label %return, !dbg !5144

if.end.17:                                        ; preds = %if.end.7
  %10 = load i32, i32* %s.addr, align 4, !dbg !5145
  %cmp18 = icmp eq i32 %10, 7, !dbg !5146
  %cond20 = select i1 %cmp18, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.113, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.114, i32 0, i32 0), !dbg !5145
  store i8* %cond20, i8** %retval, !dbg !5147
  br label %return, !dbg !5147

return:                                           ; preds = %if.end.17, %if.then.11, %if.then.4, %if.then
  %11 = load i8*, i8** %retval, !dbg !5148
  ret i8* %11, !dbg !5148
}

; Function Attrs: nounwind uwtable
define internal i32 @dup_safer(i32 %fd) #5 !dbg !5149 {
entry:
  %fd.addr = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !5152, metadata !DIExpression()), !dbg !5153
  %0 = load i32, i32* %fd.addr, align 4, !dbg !5154
  %call = call i32 (i32, i32, ...) @rpl_fcntl(i32 %0, i32 0, i32 3), !dbg !5155
  ret i32 %call, !dbg !5156
}

; Function Attrs: nounwind uwtable
define internal void @version_etc_arn(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, i8** %authors, i64 %n_authors) #5 !dbg !5157 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %command_name.addr = alloca i8*, align 8
  %package.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  %authors.addr = alloca i8**, align 8
  %n_authors.addr = alloca i64, align 8
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !5201, metadata !DIExpression()), !dbg !5202
  store i8* %command_name, i8** %command_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !5203, metadata !DIExpression()), !dbg !5204
  store i8* %package, i8** %package.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !5205, metadata !DIExpression()), !dbg !5206
  store i8* %version, i8** %version.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !5207, metadata !DIExpression()), !dbg !5208
  store i8** %authors, i8*** %authors.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %authors.addr, metadata !5209, metadata !DIExpression()), !dbg !5210
  store i64 %n_authors, i64* %n_authors.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n_authors.addr, metadata !5211, metadata !DIExpression()), !dbg !5212
  %0 = load i8*, i8** %command_name.addr, align 8, !dbg !5213
  %tobool = icmp ne i8* %0, null, !dbg !5213
  br i1 %tobool, label %if.then, label %if.else, !dbg !5215

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !5216
  %2 = load i8*, i8** %command_name.addr, align 8, !dbg !5217
  %3 = load i8*, i8** %package.addr, align 8, !dbg !5218
  %4 = load i8*, i8** %version.addr, align 8, !dbg !5219
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.120, i32 0, i32 0), i8* %2, i8* %3, i8* %4), !dbg !5220
  br label %if.end, !dbg !5220

if.else:                                          ; preds = %entry
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !5221
  %6 = load i8*, i8** %package.addr, align 8, !dbg !5222
  %7 = load i8*, i8** %version.addr, align 8, !dbg !5223
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.121, i32 0, i32 0), i8* %6, i8* %7), !dbg !5224
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !5225
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.122, i32 0, i32 0)) #11, !dbg !5226
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @version_etc_copyright, i32 0, i32 0), i8* %call2, i32 2015), !dbg !5227
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([203 x i8], [203 x i8]* @.str.3.123, i32 0, i32 0)) #11, !dbg !5228
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !5228
  %call5 = call i32 @fputs_unlocked(i8* %call4, %struct._IO_FILE* %9), !dbg !5228
  %10 = load i64, i64* %n_authors.addr, align 8, !dbg !5229
  switch i64 %10, label %sw.default [
    i64 0, label %sw.bb
    i64 1, label %sw.bb.6
    i64 2, label %sw.bb.9
    i64 3, label %sw.bb.14
    i64 4, label %sw.bb.20
    i64 5, label %sw.bb.27
    i64 6, label %sw.bb.35
    i64 7, label %sw.bb.44
    i64 8, label %sw.bb.54
    i64 9, label %sw.bb.65
  ], !dbg !5230

sw.bb:                                            ; preds = %if.end
  call void @abort() #14, !dbg !5231
  unreachable, !dbg !5231

sw.bb.6:                                          ; preds = %if.end
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !5233
  %call7 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4.124, i32 0, i32 0)) #11, !dbg !5234
  %12 = load i8**, i8*** %authors.addr, align 8, !dbg !5235
  %arrayidx = getelementptr inbounds i8*, i8** %12, i64 0, !dbg !5235
  %13 = load i8*, i8** %arrayidx, align 8, !dbg !5235
  %call8 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* %call7, i8* %13), !dbg !5236
  br label %sw.epilog, !dbg !5237

sw.bb.9:                                          ; preds = %if.end
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !5238
  %call10 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5.125, i32 0, i32 0)) #11, !dbg !5239
  %15 = load i8**, i8*** %authors.addr, align 8, !dbg !5240
  %arrayidx11 = getelementptr inbounds i8*, i8** %15, i64 0, !dbg !5240
  %16 = load i8*, i8** %arrayidx11, align 8, !dbg !5240
  %17 = load i8**, i8*** %authors.addr, align 8, !dbg !5241
  %arrayidx12 = getelementptr inbounds i8*, i8** %17, i64 1, !dbg !5241
  %18 = load i8*, i8** %arrayidx12, align 8, !dbg !5241
  %call13 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %14, i8* %call10, i8* %16, i8* %18), !dbg !5242
  br label %sw.epilog, !dbg !5243

sw.bb.14:                                         ; preds = %if.end
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !5244
  %call15 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6.126, i32 0, i32 0)) #11, !dbg !5245
  %20 = load i8**, i8*** %authors.addr, align 8, !dbg !5246
  %arrayidx16 = getelementptr inbounds i8*, i8** %20, i64 0, !dbg !5246
  %21 = load i8*, i8** %arrayidx16, align 8, !dbg !5246
  %22 = load i8**, i8*** %authors.addr, align 8, !dbg !5247
  %arrayidx17 = getelementptr inbounds i8*, i8** %22, i64 1, !dbg !5247
  %23 = load i8*, i8** %arrayidx17, align 8, !dbg !5247
  %24 = load i8**, i8*** %authors.addr, align 8, !dbg !5248
  %arrayidx18 = getelementptr inbounds i8*, i8** %24, i64 2, !dbg !5248
  %25 = load i8*, i8** %arrayidx18, align 8, !dbg !5248
  %call19 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %19, i8* %call15, i8* %21, i8* %23, i8* %25), !dbg !5249
  br label %sw.epilog, !dbg !5250

sw.bb.20:                                         ; preds = %if.end
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !5251
  %call21 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7.127, i32 0, i32 0)) #11, !dbg !5252
  %27 = load i8**, i8*** %authors.addr, align 8, !dbg !5253
  %arrayidx22 = getelementptr inbounds i8*, i8** %27, i64 0, !dbg !5253
  %28 = load i8*, i8** %arrayidx22, align 8, !dbg !5253
  %29 = load i8**, i8*** %authors.addr, align 8, !dbg !5254
  %arrayidx23 = getelementptr inbounds i8*, i8** %29, i64 1, !dbg !5254
  %30 = load i8*, i8** %arrayidx23, align 8, !dbg !5254
  %31 = load i8**, i8*** %authors.addr, align 8, !dbg !5255
  %arrayidx24 = getelementptr inbounds i8*, i8** %31, i64 2, !dbg !5255
  %32 = load i8*, i8** %arrayidx24, align 8, !dbg !5255
  %33 = load i8**, i8*** %authors.addr, align 8, !dbg !5256
  %arrayidx25 = getelementptr inbounds i8*, i8** %33, i64 3, !dbg !5256
  %34 = load i8*, i8** %arrayidx25, align 8, !dbg !5256
  %call26 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %26, i8* %call21, i8* %28, i8* %30, i8* %32, i8* %34), !dbg !5257
  br label %sw.epilog, !dbg !5258

sw.bb.27:                                         ; preds = %if.end
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !5259
  %call28 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.128, i32 0, i32 0)) #11, !dbg !5260
  %36 = load i8**, i8*** %authors.addr, align 8, !dbg !5261
  %arrayidx29 = getelementptr inbounds i8*, i8** %36, i64 0, !dbg !5261
  %37 = load i8*, i8** %arrayidx29, align 8, !dbg !5261
  %38 = load i8**, i8*** %authors.addr, align 8, !dbg !5262
  %arrayidx30 = getelementptr inbounds i8*, i8** %38, i64 1, !dbg !5262
  %39 = load i8*, i8** %arrayidx30, align 8, !dbg !5262
  %40 = load i8**, i8*** %authors.addr, align 8, !dbg !5263
  %arrayidx31 = getelementptr inbounds i8*, i8** %40, i64 2, !dbg !5263
  %41 = load i8*, i8** %arrayidx31, align 8, !dbg !5263
  %42 = load i8**, i8*** %authors.addr, align 8, !dbg !5264
  %arrayidx32 = getelementptr inbounds i8*, i8** %42, i64 3, !dbg !5264
  %43 = load i8*, i8** %arrayidx32, align 8, !dbg !5264
  %44 = load i8**, i8*** %authors.addr, align 8, !dbg !5265
  %arrayidx33 = getelementptr inbounds i8*, i8** %44, i64 4, !dbg !5265
  %45 = load i8*, i8** %arrayidx33, align 8, !dbg !5265
  %call34 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %35, i8* %call28, i8* %37, i8* %39, i8* %41, i8* %43, i8* %45), !dbg !5266
  br label %sw.epilog, !dbg !5267

sw.bb.35:                                         ; preds = %if.end
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !5268
  %call36 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.9.129, i32 0, i32 0)) #11, !dbg !5269
  %47 = load i8**, i8*** %authors.addr, align 8, !dbg !5270
  %arrayidx37 = getelementptr inbounds i8*, i8** %47, i64 0, !dbg !5270
  %48 = load i8*, i8** %arrayidx37, align 8, !dbg !5270
  %49 = load i8**, i8*** %authors.addr, align 8, !dbg !5271
  %arrayidx38 = getelementptr inbounds i8*, i8** %49, i64 1, !dbg !5271
  %50 = load i8*, i8** %arrayidx38, align 8, !dbg !5271
  %51 = load i8**, i8*** %authors.addr, align 8, !dbg !5272
  %arrayidx39 = getelementptr inbounds i8*, i8** %51, i64 2, !dbg !5272
  %52 = load i8*, i8** %arrayidx39, align 8, !dbg !5272
  %53 = load i8**, i8*** %authors.addr, align 8, !dbg !5273
  %arrayidx40 = getelementptr inbounds i8*, i8** %53, i64 3, !dbg !5273
  %54 = load i8*, i8** %arrayidx40, align 8, !dbg !5273
  %55 = load i8**, i8*** %authors.addr, align 8, !dbg !5274
  %arrayidx41 = getelementptr inbounds i8*, i8** %55, i64 4, !dbg !5274
  %56 = load i8*, i8** %arrayidx41, align 8, !dbg !5274
  %57 = load i8**, i8*** %authors.addr, align 8, !dbg !5275
  %arrayidx42 = getelementptr inbounds i8*, i8** %57, i64 5, !dbg !5275
  %58 = load i8*, i8** %arrayidx42, align 8, !dbg !5275
  %call43 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %46, i8* %call36, i8* %48, i8* %50, i8* %52, i8* %54, i8* %56, i8* %58), !dbg !5276
  br label %sw.epilog, !dbg !5277

sw.bb.44:                                         ; preds = %if.end
  %59 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !5278
  %call45 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10.130, i32 0, i32 0)) #11, !dbg !5279
  %60 = load i8**, i8*** %authors.addr, align 8, !dbg !5280
  %arrayidx46 = getelementptr inbounds i8*, i8** %60, i64 0, !dbg !5280
  %61 = load i8*, i8** %arrayidx46, align 8, !dbg !5280
  %62 = load i8**, i8*** %authors.addr, align 8, !dbg !5281
  %arrayidx47 = getelementptr inbounds i8*, i8** %62, i64 1, !dbg !5281
  %63 = load i8*, i8** %arrayidx47, align 8, !dbg !5281
  %64 = load i8**, i8*** %authors.addr, align 8, !dbg !5282
  %arrayidx48 = getelementptr inbounds i8*, i8** %64, i64 2, !dbg !5282
  %65 = load i8*, i8** %arrayidx48, align 8, !dbg !5282
  %66 = load i8**, i8*** %authors.addr, align 8, !dbg !5283
  %arrayidx49 = getelementptr inbounds i8*, i8** %66, i64 3, !dbg !5283
  %67 = load i8*, i8** %arrayidx49, align 8, !dbg !5283
  %68 = load i8**, i8*** %authors.addr, align 8, !dbg !5284
  %arrayidx50 = getelementptr inbounds i8*, i8** %68, i64 4, !dbg !5284
  %69 = load i8*, i8** %arrayidx50, align 8, !dbg !5284
  %70 = load i8**, i8*** %authors.addr, align 8, !dbg !5285
  %arrayidx51 = getelementptr inbounds i8*, i8** %70, i64 5, !dbg !5285
  %71 = load i8*, i8** %arrayidx51, align 8, !dbg !5285
  %72 = load i8**, i8*** %authors.addr, align 8, !dbg !5286
  %arrayidx52 = getelementptr inbounds i8*, i8** %72, i64 6, !dbg !5286
  %73 = load i8*, i8** %arrayidx52, align 8, !dbg !5286
  %call53 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %59, i8* %call45, i8* %61, i8* %63, i8* %65, i8* %67, i8* %69, i8* %71, i8* %73), !dbg !5287
  br label %sw.epilog, !dbg !5288

sw.bb.54:                                         ; preds = %if.end
  %74 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !5289
  %call55 = call i8* @gettext(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.11.131, i32 0, i32 0)) #11, !dbg !5290
  %75 = load i8**, i8*** %authors.addr, align 8, !dbg !5291
  %arrayidx56 = getelementptr inbounds i8*, i8** %75, i64 0, !dbg !5291
  %76 = load i8*, i8** %arrayidx56, align 8, !dbg !5291
  %77 = load i8**, i8*** %authors.addr, align 8, !dbg !5292
  %arrayidx57 = getelementptr inbounds i8*, i8** %77, i64 1, !dbg !5292
  %78 = load i8*, i8** %arrayidx57, align 8, !dbg !5292
  %79 = load i8**, i8*** %authors.addr, align 8, !dbg !5293
  %arrayidx58 = getelementptr inbounds i8*, i8** %79, i64 2, !dbg !5293
  %80 = load i8*, i8** %arrayidx58, align 8, !dbg !5293
  %81 = load i8**, i8*** %authors.addr, align 8, !dbg !5294
  %arrayidx59 = getelementptr inbounds i8*, i8** %81, i64 3, !dbg !5294
  %82 = load i8*, i8** %arrayidx59, align 8, !dbg !5294
  %83 = load i8**, i8*** %authors.addr, align 8, !dbg !5295
  %arrayidx60 = getelementptr inbounds i8*, i8** %83, i64 4, !dbg !5295
  %84 = load i8*, i8** %arrayidx60, align 8, !dbg !5295
  %85 = load i8**, i8*** %authors.addr, align 8, !dbg !5296
  %arrayidx61 = getelementptr inbounds i8*, i8** %85, i64 5, !dbg !5296
  %86 = load i8*, i8** %arrayidx61, align 8, !dbg !5296
  %87 = load i8**, i8*** %authors.addr, align 8, !dbg !5297
  %arrayidx62 = getelementptr inbounds i8*, i8** %87, i64 6, !dbg !5297
  %88 = load i8*, i8** %arrayidx62, align 8, !dbg !5297
  %89 = load i8**, i8*** %authors.addr, align 8, !dbg !5298
  %arrayidx63 = getelementptr inbounds i8*, i8** %89, i64 7, !dbg !5298
  %90 = load i8*, i8** %arrayidx63, align 8, !dbg !5298
  %call64 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %74, i8* %call55, i8* %76, i8* %78, i8* %80, i8* %82, i8* %84, i8* %86, i8* %88, i8* %90), !dbg !5299
  br label %sw.epilog, !dbg !5300

sw.bb.65:                                         ; preds = %if.end
  %91 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !5301
  %call66 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12.132, i32 0, i32 0)) #11, !dbg !5302
  %92 = load i8**, i8*** %authors.addr, align 8, !dbg !5303
  %arrayidx67 = getelementptr inbounds i8*, i8** %92, i64 0, !dbg !5303
  %93 = load i8*, i8** %arrayidx67, align 8, !dbg !5303
  %94 = load i8**, i8*** %authors.addr, align 8, !dbg !5304
  %arrayidx68 = getelementptr inbounds i8*, i8** %94, i64 1, !dbg !5304
  %95 = load i8*, i8** %arrayidx68, align 8, !dbg !5304
  %96 = load i8**, i8*** %authors.addr, align 8, !dbg !5305
  %arrayidx69 = getelementptr inbounds i8*, i8** %96, i64 2, !dbg !5305
  %97 = load i8*, i8** %arrayidx69, align 8, !dbg !5305
  %98 = load i8**, i8*** %authors.addr, align 8, !dbg !5306
  %arrayidx70 = getelementptr inbounds i8*, i8** %98, i64 3, !dbg !5306
  %99 = load i8*, i8** %arrayidx70, align 8, !dbg !5306
  %100 = load i8**, i8*** %authors.addr, align 8, !dbg !5307
  %arrayidx71 = getelementptr inbounds i8*, i8** %100, i64 4, !dbg !5307
  %101 = load i8*, i8** %arrayidx71, align 8, !dbg !5307
  %102 = load i8**, i8*** %authors.addr, align 8, !dbg !5308
  %arrayidx72 = getelementptr inbounds i8*, i8** %102, i64 5, !dbg !5308
  %103 = load i8*, i8** %arrayidx72, align 8, !dbg !5308
  %104 = load i8**, i8*** %authors.addr, align 8, !dbg !5309
  %arrayidx73 = getelementptr inbounds i8*, i8** %104, i64 6, !dbg !5309
  %105 = load i8*, i8** %arrayidx73, align 8, !dbg !5309
  %106 = load i8**, i8*** %authors.addr, align 8, !dbg !5310
  %arrayidx74 = getelementptr inbounds i8*, i8** %106, i64 7, !dbg !5310
  %107 = load i8*, i8** %arrayidx74, align 8, !dbg !5310
  %108 = load i8**, i8*** %authors.addr, align 8, !dbg !5311
  %arrayidx75 = getelementptr inbounds i8*, i8** %108, i64 8, !dbg !5311
  %109 = load i8*, i8** %arrayidx75, align 8, !dbg !5311
  %call76 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %91, i8* %call66, i8* %93, i8* %95, i8* %97, i8* %99, i8* %101, i8* %103, i8* %105, i8* %107, i8* %109), !dbg !5312
  br label %sw.epilog, !dbg !5313

sw.default:                                       ; preds = %if.end
  %110 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !5314
  %call77 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.13.133, i32 0, i32 0)) #11, !dbg !5315
  %111 = load i8**, i8*** %authors.addr, align 8, !dbg !5316
  %arrayidx78 = getelementptr inbounds i8*, i8** %111, i64 0, !dbg !5316
  %112 = load i8*, i8** %arrayidx78, align 8, !dbg !5316
  %113 = load i8**, i8*** %authors.addr, align 8, !dbg !5317
  %arrayidx79 = getelementptr inbounds i8*, i8** %113, i64 1, !dbg !5317
  %114 = load i8*, i8** %arrayidx79, align 8, !dbg !5317
  %115 = load i8**, i8*** %authors.addr, align 8, !dbg !5318
  %arrayidx80 = getelementptr inbounds i8*, i8** %115, i64 2, !dbg !5318
  %116 = load i8*, i8** %arrayidx80, align 8, !dbg !5318
  %117 = load i8**, i8*** %authors.addr, align 8, !dbg !5319
  %arrayidx81 = getelementptr inbounds i8*, i8** %117, i64 3, !dbg !5319
  %118 = load i8*, i8** %arrayidx81, align 8, !dbg !5319
  %119 = load i8**, i8*** %authors.addr, align 8, !dbg !5320
  %arrayidx82 = getelementptr inbounds i8*, i8** %119, i64 4, !dbg !5320
  %120 = load i8*, i8** %arrayidx82, align 8, !dbg !5320
  %121 = load i8**, i8*** %authors.addr, align 8, !dbg !5321
  %arrayidx83 = getelementptr inbounds i8*, i8** %121, i64 5, !dbg !5321
  %122 = load i8*, i8** %arrayidx83, align 8, !dbg !5321
  %123 = load i8**, i8*** %authors.addr, align 8, !dbg !5322
  %arrayidx84 = getelementptr inbounds i8*, i8** %123, i64 6, !dbg !5322
  %124 = load i8*, i8** %arrayidx84, align 8, !dbg !5322
  %125 = load i8**, i8*** %authors.addr, align 8, !dbg !5323
  %arrayidx85 = getelementptr inbounds i8*, i8** %125, i64 7, !dbg !5323
  %126 = load i8*, i8** %arrayidx85, align 8, !dbg !5323
  %127 = load i8**, i8*** %authors.addr, align 8, !dbg !5324
  %arrayidx86 = getelementptr inbounds i8*, i8** %127, i64 8, !dbg !5324
  %128 = load i8*, i8** %arrayidx86, align 8, !dbg !5324
  %call87 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %110, i8* %call77, i8* %112, i8* %114, i8* %116, i8* %118, i8* %120, i8* %122, i8* %124, i8* %126, i8* %128), !dbg !5325
  br label %sw.epilog, !dbg !5326

sw.epilog:                                        ; preds = %sw.default, %sw.bb.65, %sw.bb.54, %sw.bb.44, %sw.bb.35, %sw.bb.27, %sw.bb.20, %sw.bb.14, %sw.bb.9, %sw.bb.6
  ret void, !dbg !5327
}

; Function Attrs: nounwind uwtable
define internal void @version_etc_ar(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, i8** %authors) #5 !dbg !5328 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %command_name.addr = alloca i8*, align 8
  %package.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  %authors.addr = alloca i8**, align 8
  %n_authors = alloca i64, align 8
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !5331, metadata !DIExpression()), !dbg !5332
  store i8* %command_name, i8** %command_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !5333, metadata !DIExpression()), !dbg !5334
  store i8* %package, i8** %package.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !5335, metadata !DIExpression()), !dbg !5336
  store i8* %version, i8** %version.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !5337, metadata !DIExpression()), !dbg !5338
  store i8** %authors, i8*** %authors.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %authors.addr, metadata !5339, metadata !DIExpression()), !dbg !5340
  call void @llvm.dbg.declare(metadata i64* %n_authors, metadata !5341, metadata !DIExpression()), !dbg !5342
  store i64 0, i64* %n_authors, align 8, !dbg !5343
  br label %for.cond, !dbg !5345

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %n_authors, align 8, !dbg !5346
  %1 = load i8**, i8*** %authors.addr, align 8, !dbg !5350
  %arrayidx = getelementptr inbounds i8*, i8** %1, i64 %0, !dbg !5350
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !5350
  %tobool = icmp ne i8* %2, null, !dbg !5351
  br i1 %tobool, label %for.body, label %for.end, !dbg !5351

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !5352

for.inc:                                          ; preds = %for.body
  %3 = load i64, i64* %n_authors, align 8, !dbg !5354
  %inc = add i64 %3, 1, !dbg !5354
  store i64 %inc, i64* %n_authors, align 8, !dbg !5354
  br label %for.cond, !dbg !5356

for.end:                                          ; preds = %for.cond
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !5357
  %5 = load i8*, i8** %command_name.addr, align 8, !dbg !5358
  %6 = load i8*, i8** %package.addr, align 8, !dbg !5359
  %7 = load i8*, i8** %version.addr, align 8, !dbg !5360
  %8 = load i8**, i8*** %authors.addr, align 8, !dbg !5361
  %9 = load i64, i64* %n_authors, align 8, !dbg !5362
  call void @version_etc_arn(%struct._IO_FILE* %4, i8* %5, i8* %6, i8* %7, i8** %8, i64 %9), !dbg !5363
  ret void, !dbg !5364
}

; Function Attrs: nounwind uwtable
define internal void @version_etc_va(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, %struct.__va_list_tag* %authors) #5 !dbg !5365 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %command_name.addr = alloca i8*, align 8
  %package.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  %authors.addr = alloca %struct.__va_list_tag*, align 8
  %n_authors = alloca i64, align 8
  %authtab = alloca [10 x i8*], align 16
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !5376, metadata !DIExpression()), !dbg !5377
  store i8* %command_name, i8** %command_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !5378, metadata !DIExpression()), !dbg !5379
  store i8* %package, i8** %package.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !5380, metadata !DIExpression()), !dbg !5381
  store i8* %version, i8** %version.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !5382, metadata !DIExpression()), !dbg !5383
  store %struct.__va_list_tag* %authors, %struct.__va_list_tag** %authors.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %authors.addr, metadata !5384, metadata !DIExpression()), !dbg !5385
  call void @llvm.dbg.declare(metadata i64* %n_authors, metadata !5386, metadata !DIExpression()), !dbg !5387
  call void @llvm.dbg.declare(metadata [10 x i8*]* %authtab, metadata !5388, metadata !DIExpression()), !dbg !5392
  store i64 0, i64* %n_authors, align 8, !dbg !5393
  br label %for.cond, !dbg !5395

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %n_authors, align 8, !dbg !5396
  %cmp = icmp ult i64 %0, 10, !dbg !5398
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !5399

land.rhs:                                         ; preds = %for.cond
  %1 = load %struct.__va_list_tag*, %struct.__va_list_tag** %authors.addr, align 8, !dbg !5400
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i32 0, i32 0, !dbg !5400
  %gp_offset = load i32, i32* %gp_offset_p, !dbg !5400
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !5400
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !5400

vaarg.in_reg:                                     ; preds = %land.rhs
  %2 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i32 0, i32 3, !dbg !5402
  %reg_save_area = load i8*, i8** %2, !dbg !5402
  %3 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !5402
  %4 = bitcast i8* %3 to i8**, !dbg !5402
  %5 = add i32 %gp_offset, 8, !dbg !5402
  store i32 %5, i32* %gp_offset_p, !dbg !5402
  br label %vaarg.end, !dbg !5402

vaarg.in_mem:                                     ; preds = %land.rhs
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i32 0, i32 2, !dbg !5404
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, !dbg !5404
  %6 = bitcast i8* %overflow_arg_area to i8**, !dbg !5404
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !5404
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, !dbg !5404
  br label %vaarg.end, !dbg !5404

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i8** [ %4, %vaarg.in_reg ], [ %6, %vaarg.in_mem ], !dbg !5406
  %7 = load i8*, i8** %vaarg.addr, !dbg !5407
  %8 = load i64, i64* %n_authors, align 8, !dbg !5410
  %arrayidx = getelementptr inbounds [10 x i8*], [10 x i8*]* %authtab, i32 0, i64 %8, !dbg !5411
  store i8* %7, i8** %arrayidx, align 8, !dbg !5412
  %cmp1 = icmp ne i8* %7, null, !dbg !5413
  br label %land.end

land.end:                                         ; preds = %vaarg.end, %for.cond
  %9 = phi i1 [ false, %for.cond ], [ %cmp1, %vaarg.end ]
  br i1 %9, label %for.body, label %for.end, !dbg !5414

for.body:                                         ; preds = %land.end
  br label %for.inc, !dbg !5415

for.inc:                                          ; preds = %for.body
  %10 = load i64, i64* %n_authors, align 8, !dbg !5417
  %inc = add i64 %10, 1, !dbg !5417
  store i64 %inc, i64* %n_authors, align 8, !dbg !5417
  br label %for.cond, !dbg !5418

for.end:                                          ; preds = %land.end
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !5419
  %12 = load i8*, i8** %command_name.addr, align 8, !dbg !5420
  %13 = load i8*, i8** %package.addr, align 8, !dbg !5421
  %14 = load i8*, i8** %version.addr, align 8, !dbg !5422
  %arraydecay = getelementptr inbounds [10 x i8*], [10 x i8*]* %authtab, i32 0, i32 0, !dbg !5423
  %15 = load i64, i64* %n_authors, align 8, !dbg !5424
  call void @version_etc_arn(%struct._IO_FILE* %11, i8* %12, i8* %13, i8* %14, i8** %arraydecay, i64 %15), !dbg !5425
  ret void, !dbg !5426
}

; Function Attrs: nounwind uwtable
define internal void @version_etc(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, ...) #5 !dbg !5427 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %command_name.addr = alloca i8*, align 8
  %package.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  %authors = alloca [1 x %struct.__va_list_tag], align 16
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !5430, metadata !DIExpression()), !dbg !5431
  store i8* %command_name, i8** %command_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !5432, metadata !DIExpression()), !dbg !5433
  store i8* %package, i8** %package.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !5434, metadata !DIExpression()), !dbg !5435
  store i8* %version, i8** %version.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !5436, metadata !DIExpression()), !dbg !5437
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %authors, metadata !5438, metadata !DIExpression()), !dbg !5444
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %authors, i32 0, i32 0, !dbg !5445
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !5445
  call void @llvm.va_start(i8* %arraydecay1), !dbg !5445
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !5446
  %1 = load i8*, i8** %command_name.addr, align 8, !dbg !5447
  %2 = load i8*, i8** %package.addr, align 8, !dbg !5448
  %3 = load i8*, i8** %version.addr, align 8, !dbg !5449
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %authors, i32 0, i32 0, !dbg !5450
  call void @version_etc_va(%struct._IO_FILE* %0, i8* %1, i8* %2, i8* %3, %struct.__va_list_tag* %arraydecay2), !dbg !5451
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %authors, i32 0, i32 0, !dbg !5452
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !5452
  call void @llvm.va_end(i8* %arraydecay34), !dbg !5452
  ret void, !dbg !5453
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #11

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #11

; Function Attrs: nounwind uwtable
define internal void @emit_bug_reporting_address() #5 !dbg !5454 {
entry:
  %call = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.134, i32 0, i32 0)) #11, !dbg !5455
  %call1 = call i32 (i8*, ...) @printf(i8* %call, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.15.135, i32 0, i32 0)), !dbg !5456
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16.136, i32 0, i32 0)) #11, !dbg !5457
  %call3 = call i32 (i8*, ...) @printf(i8* %call2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17.137, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.18.138, i32 0, i32 0)), !dbg !5458
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.19.139, i32 0, i32 0)) #11, !dbg !5459
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !5459
  %call5 = call i32 @fputs_unlocked(i8* %call4, %struct._IO_FILE* %0), !dbg !5459
  ret void, !dbg !5460
}

; Function Attrs: inlinehint nounwind uwtable
define internal noalias i8* @xnmalloc(i64 %n, i64 %s) #8 !dbg !5461 {
entry:
  %n.addr = alloca i64, align 8
  %s.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !5464, metadata !DIExpression()), !dbg !5465
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !5466, metadata !DIExpression()), !dbg !5467
  %0 = load i64, i64* %s.addr, align 8, !dbg !5468
  %div = udiv i64 -1, %0, !dbg !5468
  %1 = load i64, i64* %n.addr, align 8, !dbg !5468
  %cmp = icmp ult i64 %div, %1, !dbg !5468
  br i1 %cmp, label %if.then, label %if.end, !dbg !5470

if.then:                                          ; preds = %entry
  call void @xalloc_die() #15, !dbg !5471
  unreachable, !dbg !5471

if.end:                                           ; preds = %entry
  %2 = load i64, i64* %n.addr, align 8, !dbg !5472
  %3 = load i64, i64* %s.addr, align 8, !dbg !5473
  %mul = mul i64 %2, %3, !dbg !5474
  %call = call noalias i8* @xmalloc(i64 %mul), !dbg !5475
  ret i8* %call, !dbg !5476
}

; Function Attrs: nounwind uwtable
define internal noalias i8* @xmalloc(i64 %n) #5 !dbg !5477 {
entry:
  %n.addr = alloca i64, align 8
  %p = alloca i8*, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !5479, metadata !DIExpression()), !dbg !5480
  call void @llvm.dbg.declare(metadata i8** %p, metadata !5481, metadata !DIExpression()), !dbg !5482
  %0 = load i64, i64* %n.addr, align 8, !dbg !5483
  %call = call noalias i8* @malloc(i64 %0) #11, !dbg !5484
  store i8* %call, i8** %p, align 8, !dbg !5482
  %1 = load i8*, i8** %p, align 8, !dbg !5485
  %tobool = icmp ne i8* %1, null, !dbg !5485
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !5487

land.lhs.true:                                    ; preds = %entry
  %2 = load i64, i64* %n.addr, align 8, !dbg !5488
  %cmp = icmp ne i64 %2, 0, !dbg !5490
  br i1 %cmp, label %if.then, label %if.end, !dbg !5491

if.then:                                          ; preds = %land.lhs.true
  call void @xalloc_die() #15, !dbg !5492
  unreachable, !dbg !5492

if.end:                                           ; preds = %land.lhs.true, %entry
  %3 = load i8*, i8** %p, align 8, !dbg !5493
  ret i8* %3, !dbg !5494
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @xnrealloc(i8* %p, i64 %n, i64 %s) #8 !dbg !5495 {
entry:
  %p.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %s.addr = alloca i64, align 8
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !5498, metadata !DIExpression()), !dbg !5499
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !5500, metadata !DIExpression()), !dbg !5501
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !5502, metadata !DIExpression()), !dbg !5503
  %0 = load i64, i64* %s.addr, align 8, !dbg !5504
  %div = udiv i64 -1, %0, !dbg !5504
  %1 = load i64, i64* %n.addr, align 8, !dbg !5504
  %cmp = icmp ult i64 %div, %1, !dbg !5504
  br i1 %cmp, label %if.then, label %if.end, !dbg !5506

if.then:                                          ; preds = %entry
  call void @xalloc_die() #15, !dbg !5507
  unreachable, !dbg !5507

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %p.addr, align 8, !dbg !5508
  %3 = load i64, i64* %n.addr, align 8, !dbg !5509
  %4 = load i64, i64* %s.addr, align 8, !dbg !5510
  %mul = mul i64 %3, %4, !dbg !5511
  %call = call i8* @xrealloc(i8* %2, i64 %mul), !dbg !5512
  ret i8* %call, !dbg !5513
}

; Function Attrs: nounwind uwtable
define internal i8* @xrealloc(i8* %p, i64 %n) #5 !dbg !5514 {
entry:
  %retval = alloca i8*, align 8
  %p.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !5517, metadata !DIExpression()), !dbg !5518
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !5519, metadata !DIExpression()), !dbg !5520
  %0 = load i64, i64* %n.addr, align 8, !dbg !5521
  %tobool = icmp ne i64 %0, 0, !dbg !5521
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !5523

land.lhs.true:                                    ; preds = %entry
  %1 = load i8*, i8** %p.addr, align 8, !dbg !5524
  %tobool1 = icmp ne i8* %1, null, !dbg !5524
  br i1 %tobool1, label %if.then, label %if.end, !dbg !5526

if.then:                                          ; preds = %land.lhs.true
  %2 = load i8*, i8** %p.addr, align 8, !dbg !5527
  call void @free(i8* %2) #11, !dbg !5529
  store i8* null, i8** %retval, !dbg !5530
  br label %return, !dbg !5530

if.end:                                           ; preds = %land.lhs.true, %entry
  %3 = load i8*, i8** %p.addr, align 8, !dbg !5531
  %4 = load i64, i64* %n.addr, align 8, !dbg !5532
  %call = call i8* @realloc(i8* %3, i64 %4) #11, !dbg !5533
  store i8* %call, i8** %p.addr, align 8, !dbg !5534
  %5 = load i8*, i8** %p.addr, align 8, !dbg !5535
  %tobool2 = icmp ne i8* %5, null, !dbg !5535
  br i1 %tobool2, label %if.end.6, label %land.lhs.true.3, !dbg !5537

land.lhs.true.3:                                  ; preds = %if.end
  %6 = load i64, i64* %n.addr, align 8, !dbg !5538
  %tobool4 = icmp ne i64 %6, 0, !dbg !5538
  br i1 %tobool4, label %if.then.5, label %if.end.6, !dbg !5540

if.then.5:                                        ; preds = %land.lhs.true.3
  call void @xalloc_die() #15, !dbg !5541
  unreachable, !dbg !5541

if.end.6:                                         ; preds = %land.lhs.true.3, %if.end
  %7 = load i8*, i8** %p.addr, align 8, !dbg !5542
  store i8* %7, i8** %retval, !dbg !5543
  br label %return, !dbg !5543

return:                                           ; preds = %if.end.6, %if.then
  %8 = load i8*, i8** %retval, !dbg !5544
  ret i8* %8, !dbg !5544
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @x2nrealloc(i8* %p, i64* %pn, i64 %s) #8 !dbg !619 {
entry:
  %p.addr = alloca i8*, align 8
  %pn.addr = alloca i64*, align 8
  %s.addr = alloca i64, align 8
  %n = alloca i64, align 8
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !5545, metadata !DIExpression()), !dbg !5546
  store i64* %pn, i64** %pn.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %pn.addr, metadata !5547, metadata !DIExpression()), !dbg !5548
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !5549, metadata !DIExpression()), !dbg !5550
  call void @llvm.dbg.declare(metadata i64* %n, metadata !5551, metadata !DIExpression()), !dbg !5552
  %0 = load i64*, i64** %pn.addr, align 8, !dbg !5553
  %1 = load i64, i64* %0, align 8, !dbg !5554
  store i64 %1, i64* %n, align 8, !dbg !5552
  %2 = load i8*, i8** %p.addr, align 8, !dbg !5555
  %tobool = icmp ne i8* %2, null, !dbg !5555
  br i1 %tobool, label %if.else, label %if.then, !dbg !5557

if.then:                                          ; preds = %entry
  %3 = load i64, i64* %n, align 8, !dbg !5558
  %tobool1 = icmp ne i64 %3, 0, !dbg !5558
  br i1 %tobool1, label %if.end, label %if.then.2, !dbg !5561

if.then.2:                                        ; preds = %if.then
  %4 = load i64, i64* %s.addr, align 8, !dbg !5562
  %div = udiv i64 128, %4, !dbg !5564
  store i64 %div, i64* %n, align 8, !dbg !5565
  %5 = load i64, i64* %n, align 8, !dbg !5566
  %tobool3 = icmp ne i64 %5, 0, !dbg !5567
  %lnot = xor i1 %tobool3, true, !dbg !5567
  %lnot.ext = zext i1 %lnot to i32, !dbg !5567
  %conv = sext i32 %lnot.ext to i64, !dbg !5567
  %6 = load i64, i64* %n, align 8, !dbg !5568
  %add = add i64 %6, %conv, !dbg !5568
  store i64 %add, i64* %n, align 8, !dbg !5568
  br label %if.end, !dbg !5569

if.end:                                           ; preds = %if.then.2, %if.then
  br label %if.end.11, !dbg !5570

if.else:                                          ; preds = %entry
  %7 = load i64, i64* %s.addr, align 8, !dbg !5571
  %div4 = udiv i64 -6148914691236517206, %7, !dbg !5574
  %8 = load i64, i64* %n, align 8, !dbg !5575
  %cmp = icmp ule i64 %div4, %8, !dbg !5576
  br i1 %cmp, label %if.then.6, label %if.end.7, !dbg !5577

if.then.6:                                        ; preds = %if.else
  call void @xalloc_die() #15, !dbg !5578
  unreachable, !dbg !5578

if.end.7:                                         ; preds = %if.else
  %9 = load i64, i64* %n, align 8, !dbg !5579
  %div8 = udiv i64 %9, 2, !dbg !5580
  %add9 = add i64 %div8, 1, !dbg !5581
  %10 = load i64, i64* %n, align 8, !dbg !5582
  %add10 = add i64 %10, %add9, !dbg !5582
  store i64 %add10, i64* %n, align 8, !dbg !5582
  br label %if.end.11

if.end.11:                                        ; preds = %if.end.7, %if.end
  %11 = load i64, i64* %n, align 8, !dbg !5583
  %12 = load i64*, i64** %pn.addr, align 8, !dbg !5584
  store i64 %11, i64* %12, align 8, !dbg !5585
  %13 = load i8*, i8** %p.addr, align 8, !dbg !5586
  %14 = load i64, i64* %n, align 8, !dbg !5587
  %15 = load i64, i64* %s.addr, align 8, !dbg !5588
  %mul = mul i64 %14, %15, !dbg !5589
  %call = call i8* @xrealloc(i8* %13, i64 %mul), !dbg !5590
  ret i8* %call, !dbg !5591
}

; Function Attrs: inlinehint nounwind uwtable
define internal noalias i8* @xcharalloc(i64 %n) #8 !dbg !5592 {
entry:
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !5595, metadata !DIExpression()), !dbg !5596
  %0 = load i64, i64* %n.addr, align 8, !dbg !5597
  %call = call noalias i8* @xmalloc(i64 %0), !dbg !5597
  ret i8* %call, !dbg !5598
}

; Function Attrs: nounwind
declare i8* @realloc(i8*, i64) #3

; Function Attrs: nounwind uwtable
define internal i8* @x2realloc(i8* %p, i64* %pn) #5 !dbg !5599 {
entry:
  %p.addr = alloca i8*, align 8
  %pn.addr = alloca i64*, align 8
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !5602, metadata !DIExpression()), !dbg !5603
  store i64* %pn, i64** %pn.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %pn.addr, metadata !5604, metadata !DIExpression()), !dbg !5605
  %0 = load i8*, i8** %p.addr, align 8, !dbg !5606
  %1 = load i64*, i64** %pn.addr, align 8, !dbg !5607
  %call = call i8* @x2nrealloc(i8* %0, i64* %1, i64 1), !dbg !5608
  ret i8* %call, !dbg !5609
}

; Function Attrs: nounwind uwtable
define internal noalias i8* @xzalloc(i64 %s) #5 !dbg !5610 {
entry:
  %s.addr = alloca i64, align 8
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !5611, metadata !DIExpression()), !dbg !5612
  %0 = load i64, i64* %s.addr, align 8, !dbg !5613
  %call = call noalias i8* @xmalloc(i64 %0), !dbg !5614
  %1 = load i64, i64* %s.addr, align 8, !dbg !5615
  call void @llvm.memset.p0i8.i64(i8* align 1 %call, i8 0, i64 %1, i1 false), !dbg !5616
  ret i8* %call, !dbg !5617
}

; Function Attrs: nounwind uwtable
define internal noalias i8* @xcalloc(i64 %n, i64 %s) #5 !dbg !5618 {
entry:
  %n.addr = alloca i64, align 8
  %s.addr = alloca i64, align 8
  %p = alloca i8*, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !5619, metadata !DIExpression()), !dbg !5620
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !5621, metadata !DIExpression()), !dbg !5622
  call void @llvm.dbg.declare(metadata i8** %p, metadata !5623, metadata !DIExpression()), !dbg !5624
  %0 = load i64, i64* %n.addr, align 8, !dbg !5625
  %1 = load i64, i64* %s.addr, align 8, !dbg !5627
  %call = call i8* @rpl_calloc(i64 %0, i64 %1), !dbg !5628
  store i8* %call, i8** %p, align 8, !dbg !5629
  %tobool = icmp ne i8* %call, null, !dbg !5629
  br i1 %tobool, label %if.end, label %if.then, !dbg !5630

if.then:                                          ; preds = %entry
  call void @xalloc_die() #15, !dbg !5631
  unreachable, !dbg !5631

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %p, align 8, !dbg !5632
  ret i8* %2, !dbg !5633
}

; Function Attrs: nounwind uwtable
define internal i8* @xmemdup(i8* %p, i64 %s) #5 !dbg !5634 {
entry:
  %p.addr = alloca i8*, align 8
  %s.addr = alloca i64, align 8
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !5635, metadata !DIExpression()), !dbg !5636
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !5637, metadata !DIExpression()), !dbg !5638
  %0 = load i64, i64* %s.addr, align 8, !dbg !5639
  %call = call noalias i8* @xmalloc(i64 %0), !dbg !5640
  %1 = load i8*, i8** %p.addr, align 8, !dbg !5641
  %2 = load i64, i64* %s.addr, align 8, !dbg !5642
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %call, i8* align 1 %1, i64 %2, i1 false), !dbg !5643
  ret i8* %call, !dbg !5644
}

; Function Attrs: nounwind uwtable
define internal noalias i8* @xstrdup(i8* %string) #5 !dbg !5645 {
entry:
  %string.addr = alloca i8*, align 8
  store i8* %string, i8** %string.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !5646, metadata !DIExpression()), !dbg !5647
  %0 = load i8*, i8** %string.addr, align 8, !dbg !5648
  %1 = load i8*, i8** %string.addr, align 8, !dbg !5649
  %call = call i64 @strlen(i8* %1) #16, !dbg !5650
  %add = add i64 %call, 1, !dbg !5651
  %call1 = call i8* @xmemdup(i8* %0, i64 %add), !dbg !5652
  ret i8* %call1, !dbg !5653
}

; Function Attrs: noreturn nounwind uwtable
define internal void @xalloc_die() #0 !dbg !5654 {
entry:
  %0 = load volatile i32, i32* @exit_failure, align 4, !dbg !5655
  %call = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.150, i32 0, i32 0)) #11, !dbg !5656
  call void (i32, i32, i8*, ...) @error(i32 %0, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.151, i32 0, i32 0), i8* %call), !dbg !5657
  call void @abort() #14, !dbg !5658
  unreachable, !dbg !5658

return:                                           ; No predecessors!
  ret void, !dbg !5659
}

; Function Attrs: nounwind uwtable
define internal i8* @rpl_calloc(i64 %n, i64 %s) #5 !dbg !5660 {
entry:
  %retval = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %s.addr = alloca i64, align 8
  %result = alloca i8*, align 8
  %bytes = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !5661, metadata !DIExpression()), !dbg !5662
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !5663, metadata !DIExpression()), !dbg !5664
  call void @llvm.dbg.declare(metadata i8** %result, metadata !5665, metadata !DIExpression()), !dbg !5666
  %0 = load i64, i64* %n.addr, align 8, !dbg !5667
  %cmp = icmp eq i64 %0, 0, !dbg !5669
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5670

lor.lhs.false:                                    ; preds = %entry
  %1 = load i64, i64* %s.addr, align 8, !dbg !5671
  %cmp1 = icmp eq i64 %1, 0, !dbg !5673
  br i1 %cmp1, label %if.then, label %if.else, !dbg !5674

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i64 1, i64* %n.addr, align 8, !dbg !5675
  store i64 1, i64* %s.addr, align 8, !dbg !5677
  br label %if.end.4, !dbg !5678

if.else:                                          ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !5679, metadata !DIExpression()), !dbg !5681
  %2 = load i64, i64* %n.addr, align 8, !dbg !5682
  %3 = load i64, i64* %s.addr, align 8, !dbg !5683
  %mul = mul i64 %2, %3, !dbg !5684
  store i64 %mul, i64* %bytes, align 8, !dbg !5681
  %4 = load i64, i64* %bytes, align 8, !dbg !5685
  %5 = load i64, i64* %s.addr, align 8, !dbg !5687
  %div = udiv i64 %4, %5, !dbg !5688
  %6 = load i64, i64* %n.addr, align 8, !dbg !5689
  %cmp2 = icmp ne i64 %div, %6, !dbg !5690
  br i1 %cmp2, label %if.then.3, label %if.end, !dbg !5691

if.then.3:                                        ; preds = %if.else
  %call = call i32* @__errno_location() #17, !dbg !5692
  store i32 12, i32* %call, align 4, !dbg !5694
  store i8* null, i8** %retval, !dbg !5695
  br label %return, !dbg !5695

if.end:                                           ; preds = %if.else
  br label %if.end.4

if.end.4:                                         ; preds = %if.end, %if.then
  %7 = load i64, i64* %n.addr, align 8, !dbg !5696
  %8 = load i64, i64* %s.addr, align 8, !dbg !5697
  %call5 = call noalias i8* @calloc(i64 %7, i64 %8) #11, !dbg !5698
  store i8* %call5, i8** %result, align 8, !dbg !5699
  %9 = load i8*, i8** %result, align 8, !dbg !5700
  store i8* %9, i8** %retval, !dbg !5701
  br label %return, !dbg !5701

return:                                           ; preds = %if.end.4, %if.then.3
  %10 = load i8*, i8** %retval, !dbg !5702
  ret i8* %10, !dbg !5702
}

; Function Attrs: nounwind
declare noalias i8* @calloc(i64, i64) #3

; Function Attrs: nounwind uwtable
define internal i32 @rpl_fclose(%struct._IO_FILE* nonnull %fp) #5 !dbg !5703 {
entry:
  %retval = alloca i32, align 4
  %fp.addr = alloca %struct._IO_FILE*, align 8
  %saved_errno = alloca i32, align 4
  %fd = alloca i32, align 4
  %result = alloca i32, align 4
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !5746, metadata !DIExpression()), !dbg !5747
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !5748, metadata !DIExpression()), !dbg !5749
  store i32 0, i32* %saved_errno, align 4, !dbg !5749
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !5750, metadata !DIExpression()), !dbg !5751
  call void @llvm.dbg.declare(metadata i32* %result, metadata !5752, metadata !DIExpression()), !dbg !5753
  store i32 0, i32* %result, align 4, !dbg !5753
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !5754
  %call = call i32 @fileno(%struct._IO_FILE* %0) #11, !dbg !5755
  store i32 %call, i32* %fd, align 4, !dbg !5756
  %1 = load i32, i32* %fd, align 4, !dbg !5757
  %cmp = icmp slt i32 %1, 0, !dbg !5759
  br i1 %cmp, label %if.then, label %if.end, !dbg !5760

if.then:                                          ; preds = %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !5761
  %call1 = call i32 @fclose(%struct._IO_FILE* %2), !dbg !5762
  store i32 %call1, i32* %retval, !dbg !5763
  br label %return, !dbg !5763

if.end:                                           ; preds = %entry
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !5764
  %call2 = call i32 @__freading(%struct._IO_FILE* %3) #11, !dbg !5764
  %cmp3 = icmp ne i32 %call2, 0, !dbg !5764
  br i1 %cmp3, label %lor.lhs.false, label %land.lhs.true, !dbg !5766

lor.lhs.false:                                    ; preds = %if.end
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !5767
  %call4 = call i32 @fileno(%struct._IO_FILE* %4) #11, !dbg !5769
  %call5 = call i64 @lseek(i32 %call4, i64 0, i32 1) #11, !dbg !5770
  %cmp6 = icmp ne i64 %call5, -1, !dbg !5771
  br i1 %cmp6, label %land.lhs.true, label %if.end.10, !dbg !5772

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !5773
  %call7 = call i32 @rpl_fflush(%struct._IO_FILE* %5), !dbg !5774
  %tobool = icmp ne i32 %call7, 0, !dbg !5774
  br i1 %tobool, label %if.then.8, label %if.end.10, !dbg !5775

if.then.8:                                        ; preds = %land.lhs.true
  %call9 = call i32* @__errno_location() #17, !dbg !5776
  %6 = load i32, i32* %call9, align 4, !dbg !5776
  store i32 %6, i32* %saved_errno, align 4, !dbg !5777
  br label %if.end.10, !dbg !5778

if.end.10:                                        ; preds = %if.then.8, %land.lhs.true, %lor.lhs.false
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !5779
  %call11 = call i32 @fclose(%struct._IO_FILE* %7), !dbg !5780
  store i32 %call11, i32* %result, align 4, !dbg !5781
  %8 = load i32, i32* %saved_errno, align 4, !dbg !5782
  %cmp12 = icmp ne i32 %8, 0, !dbg !5784
  br i1 %cmp12, label %if.then.13, label %if.end.15, !dbg !5785

if.then.13:                                       ; preds = %if.end.10
  %9 = load i32, i32* %saved_errno, align 4, !dbg !5786
  %call14 = call i32* @__errno_location() #17, !dbg !5788
  store i32 %9, i32* %call14, align 4, !dbg !5789
  store i32 -1, i32* %result, align 4, !dbg !5790
  br label %if.end.15, !dbg !5791

if.end.15:                                        ; preds = %if.then.13, %if.end.10
  %10 = load i32, i32* %result, align 4, !dbg !5792
  store i32 %10, i32* %retval, !dbg !5793
  br label %return, !dbg !5793

return:                                           ; preds = %if.end.15, %if.then
  %11 = load i32, i32* %retval, !dbg !5794
  ret i32 %11, !dbg !5794
}

declare i32 @fclose(%struct._IO_FILE*) #2

; Function Attrs: nounwind
declare i32 @__freading(%struct._IO_FILE*) #3

; Function Attrs: nounwind
declare i64 @lseek(i32, i64, i32) #3

; Function Attrs: nounwind uwtable
define internal i32 @rpl_fcntl(i32 %fd, i32 %action, ...) #5 !dbg !247 {
entry:
  %fd.addr = alloca i32, align 4
  %action.addr = alloca i32, align 4
  %arg = alloca [1 x %struct.__va_list_tag], align 16
  %result = alloca i32, align 4
  %target = alloca i32, align 4
  %flags = alloca i32, align 4
  %saved_errno = alloca i32, align 4
  %p = alloca i8*, align 8
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !5795, metadata !DIExpression()), !dbg !5796
  store i32 %action, i32* %action.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %action.addr, metadata !5797, metadata !DIExpression()), !dbg !5798
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %arg, metadata !5799, metadata !DIExpression()), !dbg !5810
  call void @llvm.dbg.declare(metadata i32* %result, metadata !5811, metadata !DIExpression()), !dbg !5812
  store i32 -1, i32* %result, align 4, !dbg !5812
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i32 0, i32 0, !dbg !5813
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !5813
  call void @llvm.va_start(i8* %arraydecay1), !dbg !5813
  %0 = load i32, i32* %action.addr, align 4, !dbg !5814
  switch i32 %0, label %sw.default [
    i32 1030, label %sw.bb
  ], !dbg !5815

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %target, metadata !5816, metadata !DIExpression()), !dbg !5819
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i32 0, i32 0, !dbg !5820
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 0, !dbg !5820
  %gp_offset = load i32, i32* %gp_offset_p, !dbg !5820
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !5820
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !5820

vaarg.in_reg:                                     ; preds = %sw.bb
  %1 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 3, !dbg !5821
  %reg_save_area = load i8*, i8** %1, !dbg !5821
  %2 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !5821
  %3 = bitcast i8* %2 to i32*, !dbg !5821
  %4 = add i32 %gp_offset, 8, !dbg !5821
  store i32 %4, i32* %gp_offset_p, !dbg !5821
  br label %vaarg.end, !dbg !5821

vaarg.in_mem:                                     ; preds = %sw.bb
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 2, !dbg !5823
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, !dbg !5823
  %5 = bitcast i8* %overflow_arg_area to i32*, !dbg !5823
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !5823
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, !dbg !5823
  br label %vaarg.end, !dbg !5823

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i32* [ %3, %vaarg.in_reg ], [ %5, %vaarg.in_mem ], !dbg !5820
  %6 = load i32, i32* %vaarg.addr, !dbg !5825
  store i32 %6, i32* %target, align 4, !dbg !5819
  %7 = load i32, i32* @rpl_fcntl.have_dupfd_cloexec, align 4, !dbg !5828
  %cmp = icmp sle i32 0, %7, !dbg !5830
  br i1 %cmp, label %if.then, label %if.else.11, !dbg !5831

if.then:                                          ; preds = %vaarg.end
  %8 = load i32, i32* %fd.addr, align 4, !dbg !5832
  %9 = load i32, i32* %action.addr, align 4, !dbg !5834
  %10 = load i32, i32* %target, align 4, !dbg !5835
  %call = call i32 (i32, i32, ...) @fcntl(i32 %8, i32 %9, i32 %10), !dbg !5836
  store i32 %call, i32* %result, align 4, !dbg !5837
  %11 = load i32, i32* %result, align 4, !dbg !5838
  %cmp3 = icmp sle i32 0, %11, !dbg !5840
  br i1 %cmp3, label %if.then.6, label %lor.lhs.false, !dbg !5841

lor.lhs.false:                                    ; preds = %if.then
  %call4 = call i32* @__errno_location() #17, !dbg !5842
  %12 = load i32, i32* %call4, align 4, !dbg !5842
  %cmp5 = icmp ne i32 %12, 22, !dbg !5844
  br i1 %cmp5, label %if.then.6, label %if.else, !dbg !5845

if.then.6:                                        ; preds = %lor.lhs.false, %if.then
  store i32 1, i32* @rpl_fcntl.have_dupfd_cloexec, align 4, !dbg !5846
  br label %if.end.10, !dbg !5848

if.else:                                          ; preds = %lor.lhs.false
  %13 = load i32, i32* %fd.addr, align 4, !dbg !5849
  %14 = load i32, i32* %target, align 4, !dbg !5851
  %call7 = call i32 (i32, i32, ...) @rpl_fcntl(i32 %13, i32 0, i32 %14), !dbg !5852
  store i32 %call7, i32* %result, align 4, !dbg !5853
  %15 = load i32, i32* %result, align 4, !dbg !5854
  %cmp8 = icmp slt i32 %15, 0, !dbg !5856
  br i1 %cmp8, label %if.then.9, label %if.end, !dbg !5857

if.then.9:                                        ; preds = %if.else
  br label %sw.epilog, !dbg !5858

if.end:                                           ; preds = %if.else
  store i32 -1, i32* @rpl_fcntl.have_dupfd_cloexec, align 4, !dbg !5859
  br label %if.end.10

if.end.10:                                        ; preds = %if.end, %if.then.6
  br label %if.end.13, !dbg !5860

if.else.11:                                       ; preds = %vaarg.end
  %16 = load i32, i32* %fd.addr, align 4, !dbg !5861
  %17 = load i32, i32* %target, align 4, !dbg !5862
  %call12 = call i32 (i32, i32, ...) @rpl_fcntl(i32 %16, i32 0, i32 %17), !dbg !5863
  store i32 %call12, i32* %result, align 4, !dbg !5864
  br label %if.end.13

if.end.13:                                        ; preds = %if.else.11, %if.end.10
  %18 = load i32, i32* %result, align 4, !dbg !5865
  %cmp14 = icmp sle i32 0, %18, !dbg !5867
  br i1 %cmp14, label %land.lhs.true, label %if.end.27, !dbg !5868

land.lhs.true:                                    ; preds = %if.end.13
  %19 = load i32, i32* @rpl_fcntl.have_dupfd_cloexec, align 4, !dbg !5869
  %cmp15 = icmp eq i32 %19, -1, !dbg !5871
  br i1 %cmp15, label %if.then.16, label %if.end.27, !dbg !5872

if.then.16:                                       ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !5873, metadata !DIExpression()), !dbg !5875
  %20 = load i32, i32* %result, align 4, !dbg !5876
  %call17 = call i32 (i32, i32, ...) @fcntl(i32 %20, i32 1), !dbg !5877
  store i32 %call17, i32* %flags, align 4, !dbg !5875
  %21 = load i32, i32* %flags, align 4, !dbg !5878
  %cmp18 = icmp slt i32 %21, 0, !dbg !5880
  br i1 %cmp18, label %if.then.22, label %lor.lhs.false.19, !dbg !5881

lor.lhs.false.19:                                 ; preds = %if.then.16
  %22 = load i32, i32* %result, align 4, !dbg !5882
  %23 = load i32, i32* %flags, align 4, !dbg !5884
  %or = or i32 %23, 1, !dbg !5885
  %call20 = call i32 (i32, i32, ...) @fcntl(i32 %22, i32 2, i32 %or), !dbg !5886
  %cmp21 = icmp eq i32 %call20, -1, !dbg !5887
  br i1 %cmp21, label %if.then.22, label %if.end.26, !dbg !5888

if.then.22:                                       ; preds = %lor.lhs.false.19, %if.then.16
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !5889, metadata !DIExpression()), !dbg !5891
  %call23 = call i32* @__errno_location() #17, !dbg !5892
  %24 = load i32, i32* %call23, align 4, !dbg !5892
  store i32 %24, i32* %saved_errno, align 4, !dbg !5891
  %25 = load i32, i32* %result, align 4, !dbg !5893
  %call24 = call i32 @close(i32 %25), !dbg !5894
  %26 = load i32, i32* %saved_errno, align 4, !dbg !5895
  %call25 = call i32* @__errno_location() #17, !dbg !5896
  store i32 %26, i32* %call25, align 4, !dbg !5897
  store i32 -1, i32* %result, align 4, !dbg !5898
  br label %if.end.26, !dbg !5899

if.end.26:                                        ; preds = %if.then.22, %lor.lhs.false.19
  br label %if.end.27, !dbg !5900

if.end.27:                                        ; preds = %if.end.26, %land.lhs.true, %if.end.13
  br label %sw.epilog, !dbg !5901

sw.default:                                       ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %p, metadata !5902, metadata !DIExpression()), !dbg !5904
  %arraydecay28 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i32 0, i32 0, !dbg !5905
  %gp_offset_p29 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay28, i32 0, i32 0, !dbg !5905
  %gp_offset30 = load i32, i32* %gp_offset_p29, !dbg !5905
  %fits_in_gp31 = icmp ule i32 %gp_offset30, 40, !dbg !5905
  br i1 %fits_in_gp31, label %vaarg.in_reg.32, label %vaarg.in_mem.34, !dbg !5905

vaarg.in_reg.32:                                  ; preds = %sw.default
  %27 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay28, i32 0, i32 3, !dbg !5906
  %reg_save_area33 = load i8*, i8** %27, !dbg !5906
  %28 = getelementptr i8, i8* %reg_save_area33, i32 %gp_offset30, !dbg !5906
  %29 = bitcast i8* %28 to i8**, !dbg !5906
  %30 = add i32 %gp_offset30, 8, !dbg !5906
  store i32 %30, i32* %gp_offset_p29, !dbg !5906
  br label %vaarg.end.38, !dbg !5906

vaarg.in_mem.34:                                  ; preds = %sw.default
  %overflow_arg_area_p35 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay28, i32 0, i32 2, !dbg !5908
  %overflow_arg_area36 = load i8*, i8** %overflow_arg_area_p35, !dbg !5908
  %31 = bitcast i8* %overflow_arg_area36 to i8**, !dbg !5908
  %overflow_arg_area.next37 = getelementptr i8, i8* %overflow_arg_area36, i32 8, !dbg !5908
  store i8* %overflow_arg_area.next37, i8** %overflow_arg_area_p35, !dbg !5908
  br label %vaarg.end.38, !dbg !5908

vaarg.end.38:                                     ; preds = %vaarg.in_mem.34, %vaarg.in_reg.32
  %vaarg.addr39 = phi i8** [ %29, %vaarg.in_reg.32 ], [ %31, %vaarg.in_mem.34 ], !dbg !5905
  %32 = load i8*, i8** %vaarg.addr39, !dbg !5910
  store i8* %32, i8** %p, align 8, !dbg !5904
  %33 = load i32, i32* %fd.addr, align 4, !dbg !5913
  %34 = load i32, i32* %action.addr, align 4, !dbg !5914
  %35 = load i8*, i8** %p, align 8, !dbg !5915
  %call40 = call i32 (i32, i32, ...) @fcntl(i32 %33, i32 %34, i8* %35), !dbg !5916
  store i32 %call40, i32* %result, align 4, !dbg !5917
  br label %sw.epilog, !dbg !5918

sw.epilog:                                        ; preds = %vaarg.end.38, %if.end.27, %if.then.9
  %arraydecay41 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i32 0, i32 0, !dbg !5919
  %arraydecay4142 = bitcast %struct.__va_list_tag* %arraydecay41 to i8*, !dbg !5919
  call void @llvm.va_end(i8* %arraydecay4142), !dbg !5919
  %36 = load i32, i32* %result, align 4, !dbg !5920
  ret i32 %36, !dbg !5921
}

declare i32 @fcntl(i32, i32, ...) #2

; Function Attrs: nounwind uwtable
define internal i32 @rpl_fflush(%struct._IO_FILE* %stream) #5 !dbg !5922 {
entry:
  %retval = alloca i32, align 4
  %stream.addr = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !5965, metadata !DIExpression()), !dbg !5966
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !5967
  %cmp = icmp eq %struct._IO_FILE* %0, null, !dbg !5969
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5970

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !5971
  %call = call i32 @__freading(%struct._IO_FILE* %1) #11, !dbg !5971
  %cmp1 = icmp ne i32 %call, 0, !dbg !5971
  br i1 %cmp1, label %if.end, label %if.then, !dbg !5973

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !5974
  %call2 = call i32 @fflush(%struct._IO_FILE* %2), !dbg !5975
  store i32 %call2, i32* %retval, !dbg !5976
  br label %return, !dbg !5976

if.end:                                           ; preds = %lor.lhs.false
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !5977
  call void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE* %3), !dbg !5978
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !5979
  %call3 = call i32 @fflush(%struct._IO_FILE* %4), !dbg !5980
  store i32 %call3, i32* %retval, !dbg !5981
  br label %return, !dbg !5981

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, !dbg !5982
  ret i32 %5, !dbg !5982
}

declare i32 @fflush(%struct._IO_FILE*) #2

; Function Attrs: nounwind uwtable
define internal void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE* %fp) #5 !dbg !5983 {
entry:
  %fp.addr = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !5986, metadata !DIExpression()), !dbg !5987
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !5988
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i32 0, i32 0, !dbg !5990
  %1 = load i32, i32* %_flags, align 4, !dbg !5990
  %and = and i32 %1, 256, !dbg !5991
  %tobool = icmp ne i32 %and, 0, !dbg !5991
  br i1 %tobool, label %if.then, label %if.end, !dbg !5992

if.then:                                          ; preds = %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !5993
  %call = call i32 @rpl_fseeko(%struct._IO_FILE* %2, i64 0, i32 1), !dbg !5994
  br label %if.end, !dbg !5994

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !5995
}

; Function Attrs: nounwind uwtable
define internal i32 @rpl_fseeko(%struct._IO_FILE* nonnull %fp, i64 %offset, i32 %whence) #5 !dbg !5996 {
entry:
  %retval = alloca i32, align 4
  %fp.addr = alloca %struct._IO_FILE*, align 8
  %offset.addr = alloca i64, align 8
  %whence.addr = alloca i32, align 4
  %pos = alloca i64, align 8
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !6039, metadata !DIExpression()), !dbg !6040
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !6041, metadata !DIExpression()), !dbg !6042
  store i32 %whence, i32* %whence.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %whence.addr, metadata !6043, metadata !DIExpression()), !dbg !6044
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !6045
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i32 0, i32 2, !dbg !6047
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !6047
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !6048
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %2, i32 0, i32 1, !dbg !6049
  %3 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !6049
  %cmp = icmp eq i8* %1, %3, !dbg !6050
  br i1 %cmp, label %land.lhs.true, label %if.end.7, !dbg !6051

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !6052
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %4, i32 0, i32 5, !dbg !6054
  %5 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !6054
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !6055
  %_IO_write_base = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %6, i32 0, i32 4, !dbg !6056
  %7 = load i8*, i8** %_IO_write_base, align 8, !dbg !6056
  %cmp1 = icmp eq i8* %5, %7, !dbg !6057
  br i1 %cmp1, label %land.lhs.true.2, label %if.end.7, !dbg !6058

land.lhs.true.2:                                  ; preds = %land.lhs.true
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !6059
  %_IO_save_base = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %8, i32 0, i32 9, !dbg !6060
  %9 = load i8*, i8** %_IO_save_base, align 8, !dbg !6060
  %cmp3 = icmp eq i8* %9, null, !dbg !6061
  br i1 %cmp3, label %if.then, label %if.end.7, !dbg !6062

if.then:                                          ; preds = %land.lhs.true.2
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !6063, metadata !DIExpression()), !dbg !6065
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !6066
  %call = call i32 @fileno(%struct._IO_FILE* %10) #11, !dbg !6067
  %11 = load i64, i64* %offset.addr, align 8, !dbg !6068
  %12 = load i32, i32* %whence.addr, align 4, !dbg !6069
  %call4 = call i64 @lseek(i32 %call, i64 %11, i32 %12) #11, !dbg !6070
  store i64 %call4, i64* %pos, align 8, !dbg !6065
  %13 = load i64, i64* %pos, align 8, !dbg !6071
  %cmp5 = icmp eq i64 %13, -1, !dbg !6073
  br i1 %cmp5, label %if.then.6, label %if.end, !dbg !6074

if.then.6:                                        ; preds = %if.then
  store i32 -1, i32* %retval, !dbg !6075
  br label %return, !dbg !6075

if.end:                                           ; preds = %if.then
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !6077
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %14, i32 0, i32 0, !dbg !6078
  %15 = load i32, i32* %_flags, align 4, !dbg !6079
  %and = and i32 %15, -17, !dbg !6079
  store i32 %and, i32* %_flags, align 4, !dbg !6079
  %16 = load i64, i64* %pos, align 8, !dbg !6080
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !6081
  %_offset = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %17, i32 0, i32 21, !dbg !6082
  store i64 %16, i64* %_offset, align 8, !dbg !6083
  store i32 0, i32* %retval, !dbg !6084
  br label %return, !dbg !6084

if.end.7:                                         ; preds = %land.lhs.true.2, %land.lhs.true, %entry
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !6085
  %19 = load i64, i64* %offset.addr, align 8, !dbg !6086
  %20 = load i32, i32* %whence.addr, align 4, !dbg !6087
  %call8 = call i32 @fseeko(%struct._IO_FILE* %18, i64 %19, i32 %20), !dbg !6088
  store i32 %call8, i32* %retval, !dbg !6089
  br label %return, !dbg !6089

return:                                           ; preds = %if.end.7, %if.end, %if.then.6
  %21 = load i32, i32* %retval, !dbg !6090
  ret i32 %21, !dbg !6090
}

declare i32 @fseeko(%struct._IO_FILE*, i64, i32) #2

; Function Attrs: nounwind uwtable
define internal i64 @rpl_mbrtowc(i32* %pwc, i8* %s, i64 %n, %struct.__mbstate_t* %ps) #5 !dbg !6091 {
entry:
  %retval = alloca i64, align 8
  %pwc.addr = alloca i32*, align 8
  %s.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %ps.addr = alloca %struct.__mbstate_t*, align 8
  store i32* %pwc, i32** %pwc.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %pwc.addr, metadata !6106, metadata !DIExpression()), !dbg !6107
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !6108, metadata !DIExpression()), !dbg !6109
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !6110, metadata !DIExpression()), !dbg !6111
  store %struct.__mbstate_t* %ps, %struct.__mbstate_t** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t** %ps.addr, metadata !6112, metadata !DIExpression()), !dbg !6113
  %0 = load i8*, i8** %s.addr, align 8, !dbg !6114
  %cmp = icmp eq i8* %0, null, !dbg !6116
  br i1 %cmp, label %if.then, label %if.end, !dbg !6117

if.then:                                          ; preds = %entry
  store i32* null, i32** %pwc.addr, align 8, !dbg !6118
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.164, i32 0, i32 0), i8** %s.addr, align 8, !dbg !6120
  store i64 1, i64* %n.addr, align 8, !dbg !6121
  br label %if.end, !dbg !6122

if.end:                                           ; preds = %if.then, %entry
  %1 = load i64, i64* %n.addr, align 8, !dbg !6123
  %cmp1 = icmp eq i64 %1, 0, !dbg !6125
  br i1 %cmp1, label %if.then.2, label %if.end.3, !dbg !6126

if.then.2:                                        ; preds = %if.end
  store i64 -2, i64* %retval, !dbg !6127
  br label %return, !dbg !6127

if.end.3:                                         ; preds = %if.end
  %2 = load i32*, i32** %pwc.addr, align 8, !dbg !6128
  %3 = load i8*, i8** %s.addr, align 8, !dbg !6130
  %4 = load i64, i64* %n.addr, align 8, !dbg !6131
  %5 = load %struct.__mbstate_t*, %struct.__mbstate_t** %ps.addr, align 8, !dbg !6132
  %call = call i64 @mbrtowc(i32* %2, i8* %3, i64 %4, %struct.__mbstate_t* %5) #11, !dbg !6133
  store i64 %call, i64* %retval, !dbg !6134
  br label %return, !dbg !6134

return:                                           ; preds = %if.end.3, %if.then.2
  %6 = load i64, i64* %retval, !dbg !6135
  ret i64 %6, !dbg !6135
}

; Function Attrs: nounwind
declare i64 @mbrtowc(i32*, i8*, i64, %struct.__mbstate_t*) #3

; Function Attrs: nounwind readonly uwtable
define internal i32 @c_strcasecmp(i8* %s1, i8* %s2) #9 !dbg !6136 {
entry:
  %retval = alloca i32, align 4
  %s1.addr = alloca i8*, align 8
  %s2.addr = alloca i8*, align 8
  %p1 = alloca i8*, align 8
  %p2 = alloca i8*, align 8
  %c1 = alloca i8, align 1
  %c2 = alloca i8, align 1
  store i8* %s1, i8** %s1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !6139, metadata !DIExpression()), !dbg !6140
  store i8* %s2, i8** %s2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !6141, metadata !DIExpression()), !dbg !6142
  call void @llvm.dbg.declare(metadata i8** %p1, metadata !6143, metadata !DIExpression()), !dbg !6144
  %0 = load i8*, i8** %s1.addr, align 8, !dbg !6145
  store i8* %0, i8** %p1, align 8, !dbg !6144
  call void @llvm.dbg.declare(metadata i8** %p2, metadata !6146, metadata !DIExpression()), !dbg !6147
  %1 = load i8*, i8** %s2.addr, align 8, !dbg !6148
  store i8* %1, i8** %p2, align 8, !dbg !6147
  call void @llvm.dbg.declare(metadata i8* %c1, metadata !6149, metadata !DIExpression()), !dbg !6150
  call void @llvm.dbg.declare(metadata i8* %c2, metadata !6151, metadata !DIExpression()), !dbg !6152
  %2 = load i8*, i8** %p1, align 8, !dbg !6153
  %3 = load i8*, i8** %p2, align 8, !dbg !6155
  %cmp = icmp eq i8* %2, %3, !dbg !6156
  br i1 %cmp, label %if.then, label %if.end, !dbg !6157

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, !dbg !6158
  br label %return, !dbg !6158

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !6159

do.body:                                          ; preds = %do.cond, %if.end
  %4 = load i8*, i8** %p1, align 8, !dbg !6160
  %5 = load i8, i8* %4, align 1, !dbg !6162
  %conv = zext i8 %5 to i32, !dbg !6162
  %call = call i32 @c_tolower(i32 %conv) #17, !dbg !6163
  %conv1 = trunc i32 %call to i8, !dbg !6163
  store i8 %conv1, i8* %c1, align 1, !dbg !6164
  %6 = load i8*, i8** %p2, align 8, !dbg !6165
  %7 = load i8, i8* %6, align 1, !dbg !6166
  %conv2 = zext i8 %7 to i32, !dbg !6166
  %call3 = call i32 @c_tolower(i32 %conv2) #17, !dbg !6167
  %conv4 = trunc i32 %call3 to i8, !dbg !6167
  store i8 %conv4, i8* %c2, align 1, !dbg !6168
  %8 = load i8, i8* %c1, align 1, !dbg !6169
  %conv5 = zext i8 %8 to i32, !dbg !6169
  %cmp6 = icmp eq i32 %conv5, 0, !dbg !6171
  br i1 %cmp6, label %if.then.8, label %if.end.9, !dbg !6172

if.then.8:                                        ; preds = %do.body
  br label %do.end, !dbg !6173

if.end.9:                                         ; preds = %do.body
  %9 = load i8*, i8** %p1, align 8, !dbg !6174
  %incdec.ptr = getelementptr inbounds i8, i8* %9, i32 1, !dbg !6174
  store i8* %incdec.ptr, i8** %p1, align 8, !dbg !6174
  %10 = load i8*, i8** %p2, align 8, !dbg !6175
  %incdec.ptr10 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6175
  store i8* %incdec.ptr10, i8** %p2, align 8, !dbg !6175
  br label %do.cond, !dbg !6176

do.cond:                                          ; preds = %if.end.9
  %11 = load i8, i8* %c1, align 1, !dbg !6177
  %conv11 = zext i8 %11 to i32, !dbg !6177
  %12 = load i8, i8* %c2, align 1, !dbg !6178
  %conv12 = zext i8 %12 to i32, !dbg !6178
  %cmp13 = icmp eq i32 %conv11, %conv12, !dbg !6179
  br i1 %cmp13, label %do.body, label %do.end, !dbg !6176

do.end:                                           ; preds = %do.cond, %if.then.8
  %13 = load i8, i8* %c1, align 1, !dbg !6180
  %conv15 = zext i8 %13 to i32, !dbg !6180
  %14 = load i8, i8* %c2, align 1, !dbg !6182
  %conv16 = zext i8 %14 to i32, !dbg !6182
  %sub = sub nsw i32 %conv15, %conv16, !dbg !6183
  store i32 %sub, i32* %retval, !dbg !6184
  br label %return, !dbg !6184

return:                                           ; preds = %do.end, %if.then
  %15 = load i32, i32* %retval, !dbg !6185
  ret i32 %15, !dbg !6185
}

; Function Attrs: nounwind uwtable
define internal i32 @close_stream(%struct._IO_FILE* %stream) #5 !dbg !6186 {
entry:
  %retval = alloca i32, align 4
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %some_pending = alloca i8, align 1
  %prev_fail = alloca i8, align 1
  %fclose_fail = alloca i8, align 1
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !6229, metadata !DIExpression()), !dbg !6230
  call void @llvm.dbg.declare(metadata i8* %some_pending, metadata !6231, metadata !DIExpression()), !dbg !6233
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !6234
  %call = call i64 @__fpending(%struct._IO_FILE* %0) #11, !dbg !6235
  %cmp = icmp ne i64 %call, 0, !dbg !6236
  %frombool = zext i1 %cmp to i8, !dbg !6233
  store i8 %frombool, i8* %some_pending, align 1, !dbg !6233
  call void @llvm.dbg.declare(metadata i8* %prev_fail, metadata !6237, metadata !DIExpression()), !dbg !6238
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !6239
  %call1 = call i32 @ferror_unlocked(%struct._IO_FILE* %1) #11, !dbg !6239
  %cmp2 = icmp ne i32 %call1, 0, !dbg !6240
  %frombool3 = zext i1 %cmp2 to i8, !dbg !6238
  store i8 %frombool3, i8* %prev_fail, align 1, !dbg !6238
  call void @llvm.dbg.declare(metadata i8* %fclose_fail, metadata !6241, metadata !DIExpression()), !dbg !6242
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !6243
  %call4 = call i32 @rpl_fclose(%struct._IO_FILE* %2), !dbg !6244
  %cmp5 = icmp ne i32 %call4, 0, !dbg !6245
  %frombool6 = zext i1 %cmp5 to i8, !dbg !6242
  store i8 %frombool6, i8* %fclose_fail, align 1, !dbg !6242
  %3 = load i8, i8* %prev_fail, align 1, !dbg !6246
  %tobool = trunc i8 %3 to i1, !dbg !6246
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !6248

lor.lhs.false:                                    ; preds = %entry
  %4 = load i8, i8* %fclose_fail, align 1, !dbg !6249
  %tobool7 = trunc i8 %4 to i1, !dbg !6249
  br i1 %tobool7, label %land.lhs.true, label %if.end.15, !dbg !6251

land.lhs.true:                                    ; preds = %lor.lhs.false
  %5 = load i8, i8* %some_pending, align 1, !dbg !6252
  %tobool8 = trunc i8 %5 to i1, !dbg !6252
  br i1 %tobool8, label %if.then, label %lor.lhs.false.9, !dbg !6254

lor.lhs.false.9:                                  ; preds = %land.lhs.true
  %call10 = call i32* @__errno_location() #17, !dbg !6255
  %6 = load i32, i32* %call10, align 4, !dbg !6255
  %cmp11 = icmp ne i32 %6, 9, !dbg !6257
  br i1 %cmp11, label %if.then, label %if.end.15, !dbg !6258

if.then:                                          ; preds = %lor.lhs.false.9, %land.lhs.true, %entry
  %7 = load i8, i8* %fclose_fail, align 1, !dbg !6259
  %tobool12 = trunc i8 %7 to i1, !dbg !6259
  br i1 %tobool12, label %if.end, label %if.then.13, !dbg !6262

if.then.13:                                       ; preds = %if.then
  %call14 = call i32* @__errno_location() #17, !dbg !6263
  store i32 0, i32* %call14, align 4, !dbg !6264
  br label %if.end, !dbg !6263

if.end:                                           ; preds = %if.then.13, %if.then
  store i32 -1, i32* %retval, !dbg !6265
  br label %return, !dbg !6265

if.end.15:                                        ; preds = %lor.lhs.false.9, %lor.lhs.false
  store i32 0, i32* %retval, !dbg !6266
  br label %return, !dbg !6266

return:                                           ; preds = %if.end.15, %if.end
  %8 = load i32, i32* %retval, !dbg !6267
  ret i32 %8, !dbg !6267
}

; Function Attrs: nounwind
declare i64 @__fpending(%struct._IO_FILE*) #3

; Function Attrs: nounwind uwtable
define internal i8* @locale_charset() #5 !dbg !6268 {
entry:
  %codeset = alloca i8*, align 8
  %aliases = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %codeset, metadata !6271, metadata !DIExpression()), !dbg !6272
  call void @llvm.dbg.declare(metadata i8** %aliases, metadata !6273, metadata !DIExpression()), !dbg !6274
  %call = call i8* @nl_langinfo(i32 14) #11, !dbg !6275
  store i8* %call, i8** %codeset, align 8, !dbg !6276
  %0 = load i8*, i8** %codeset, align 8, !dbg !6277
  %cmp = icmp eq i8* %0, null, !dbg !6279
  br i1 %cmp, label %if.then, label %if.end, !dbg !6280

if.then:                                          ; preds = %entry
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.171, i32 0, i32 0), i8** %codeset, align 8, !dbg !6281
  br label %if.end, !dbg !6282

if.end:                                           ; preds = %if.then, %entry
  %call1 = call i8* @get_charset_aliases(), !dbg !6283
  store i8* %call1, i8** %aliases, align 8, !dbg !6285
  br label %for.cond, !dbg !6286

for.cond:                                         ; preds = %for.inc, %if.end
  %1 = load i8*, i8** %aliases, align 8, !dbg !6287
  %2 = load i8, i8* %1, align 1, !dbg !6289
  %conv = sext i8 %2 to i32, !dbg !6289
  %cmp2 = icmp ne i32 %conv, 0, !dbg !6290
  br i1 %cmp2, label %for.body, label %for.end, !dbg !6291

for.body:                                         ; preds = %for.cond
  %3 = load i8*, i8** %codeset, align 8, !dbg !6292
  %4 = load i8*, i8** %aliases, align 8, !dbg !6294
  %call4 = call i32 @strcmp(i8* %3, i8* %4) #16, !dbg !6295
  %cmp5 = icmp eq i32 %call4, 0, !dbg !6296
  br i1 %cmp5, label %if.then.14, label %lor.lhs.false, !dbg !6297

lor.lhs.false:                                    ; preds = %for.body
  %5 = load i8*, i8** %aliases, align 8, !dbg !6298
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 0, !dbg !6298
  %6 = load i8, i8* %arrayidx, align 1, !dbg !6298
  %conv7 = sext i8 %6 to i32, !dbg !6298
  %cmp8 = icmp eq i32 %conv7, 42, !dbg !6300
  br i1 %cmp8, label %land.lhs.true, label %if.end.17, !dbg !6301

land.lhs.true:                                    ; preds = %lor.lhs.false
  %7 = load i8*, i8** %aliases, align 8, !dbg !6302
  %arrayidx10 = getelementptr inbounds i8, i8* %7, i64 1, !dbg !6302
  %8 = load i8, i8* %arrayidx10, align 1, !dbg !6302
  %conv11 = sext i8 %8 to i32, !dbg !6302
  %cmp12 = icmp eq i32 %conv11, 0, !dbg !6304
  br i1 %cmp12, label %if.then.14, label %if.end.17, !dbg !6305

if.then.14:                                       ; preds = %land.lhs.true, %for.body
  %9 = load i8*, i8** %aliases, align 8, !dbg !6306
  %10 = load i8*, i8** %aliases, align 8, !dbg !6308
  %call15 = call i64 @strlen(i8* %10) #16, !dbg !6309
  %add.ptr = getelementptr inbounds i8, i8* %9, i64 %call15, !dbg !6310
  %add.ptr16 = getelementptr inbounds i8, i8* %add.ptr, i64 1, !dbg !6311
  store i8* %add.ptr16, i8** %codeset, align 8, !dbg !6312
  br label %for.end, !dbg !6313

if.end.17:                                        ; preds = %land.lhs.true, %lor.lhs.false
  br label %for.inc, !dbg !6314

for.inc:                                          ; preds = %if.end.17
  %11 = load i8*, i8** %aliases, align 8, !dbg !6316
  %call18 = call i64 @strlen(i8* %11) #16, !dbg !6317
  %add = add i64 %call18, 1, !dbg !6318
  %12 = load i8*, i8** %aliases, align 8, !dbg !6319
  %add.ptr19 = getelementptr inbounds i8, i8* %12, i64 %add, !dbg !6319
  store i8* %add.ptr19, i8** %aliases, align 8, !dbg !6319
  %13 = load i8*, i8** %aliases, align 8, !dbg !6320
  %call20 = call i64 @strlen(i8* %13) #16, !dbg !6321
  %add21 = add i64 %call20, 1, !dbg !6322
  %14 = load i8*, i8** %aliases, align 8, !dbg !6323
  %add.ptr22 = getelementptr inbounds i8, i8* %14, i64 %add21, !dbg !6323
  store i8* %add.ptr22, i8** %aliases, align 8, !dbg !6323
  br label %for.cond, !dbg !6324

for.end:                                          ; preds = %if.then.14, %for.cond
  %15 = load i8*, i8** %codeset, align 8, !dbg !6325
  %arrayidx23 = getelementptr inbounds i8, i8* %15, i64 0, !dbg !6325
  %16 = load i8, i8* %arrayidx23, align 1, !dbg !6325
  %conv24 = sext i8 %16 to i32, !dbg !6325
  %cmp25 = icmp eq i32 %conv24, 0, !dbg !6327
  br i1 %cmp25, label %if.then.27, label %if.end.28, !dbg !6328

if.then.27:                                       ; preds = %for.end
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.172, i32 0, i32 0), i8** %codeset, align 8, !dbg !6329
  br label %if.end.28, !dbg !6330

if.end.28:                                        ; preds = %if.then.27, %for.end
  %17 = load i8*, i8** %codeset, align 8, !dbg !6331
  ret i8* %17, !dbg !6332
}

; Function Attrs: nounwind
declare i8* @nl_langinfo(i32) #3

; Function Attrs: nounwind
declare i8* @getenv(i8*) #3

declare i32 @open(i8*, i32, ...) #2

declare i32 @getc_unlocked(%struct._IO_FILE*) #2

declare i32 @ungetc(i32, %struct._IO_FILE*) #2

declare i32 @fscanf(%struct._IO_FILE*, i8*, ...) #2

; Function Attrs: nounwind
declare i8* @strcpy(i8*, i8*) #3

; Function Attrs: nounwind uwtable
define internal i8* @get_charset_aliases() #5 !dbg !6333 {
entry:
  %cp = alloca i8*, align 8
  %dir = alloca i8*, align 8
  %base = alloca i8*, align 8
  %file_name = alloca i8*, align 8
  %dir_len = alloca i64, align 8
  %base_len = alloca i64, align 8
  %add_slash = alloca i32, align 4
  %fd = alloca i32, align 4
  %fp = alloca %struct._IO_FILE*, align 8
  %res_ptr = alloca i8*, align 8
  %res_size = alloca i64, align 8
  %c = alloca i32, align 4
  %buf1 = alloca [51 x i8], align 16
  %buf2 = alloca [51 x i8], align 16
  %l1 = alloca i64, align 8
  %l2 = alloca i64, align 8
  %old_res_ptr = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !6334, metadata !DIExpression()), !dbg !6335
  %0 = load volatile i8*, i8** @charset_aliases, align 8, !dbg !6336
  store i8* %0, i8** %cp, align 8, !dbg !6337
  %1 = load i8*, i8** %cp, align 8, !dbg !6338
  %cmp = icmp eq i8* %1, null, !dbg !6340
  br i1 %cmp, label %if.then, label %if.end.124, !dbg !6341

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %dir, metadata !6342, metadata !DIExpression()), !dbg !6344
  call void @llvm.dbg.declare(metadata i8** %base, metadata !6345, metadata !DIExpression()), !dbg !6346
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.173, i32 0, i32 0), i8** %base, align 8, !dbg !6346
  call void @llvm.dbg.declare(metadata i8** %file_name, metadata !6347, metadata !DIExpression()), !dbg !6348
  %call = call i8* @getenv(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3.174, i32 0, i32 0)) #11, !dbg !6349
  store i8* %call, i8** %dir, align 8, !dbg !6350
  %2 = load i8*, i8** %dir, align 8, !dbg !6351
  %cmp1 = icmp eq i8* %2, null, !dbg !6353
  br i1 %cmp1, label %if.then.4, label %lor.lhs.false, !dbg !6354

lor.lhs.false:                                    ; preds = %if.then
  %3 = load i8*, i8** %dir, align 8, !dbg !6355
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 0, !dbg !6355
  %4 = load i8, i8* %arrayidx, align 1, !dbg !6355
  %conv = sext i8 %4 to i32, !dbg !6355
  %cmp2 = icmp eq i32 %conv, 0, !dbg !6357
  br i1 %cmp2, label %if.then.4, label %if.end, !dbg !6358

if.then.4:                                        ; preds = %lor.lhs.false, %if.then
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4.175, i32 0, i32 0), i8** %dir, align 8, !dbg !6359
  br label %if.end, !dbg !6360

if.end:                                           ; preds = %if.then.4, %lor.lhs.false
  call void @llvm.dbg.declare(metadata i64* %dir_len, metadata !6361, metadata !DIExpression()), !dbg !6363
  %5 = load i8*, i8** %dir, align 8, !dbg !6364
  %call5 = call i64 @strlen(i8* %5) #16, !dbg !6365
  store i64 %call5, i64* %dir_len, align 8, !dbg !6363
  call void @llvm.dbg.declare(metadata i64* %base_len, metadata !6366, metadata !DIExpression()), !dbg !6367
  %6 = load i8*, i8** %base, align 8, !dbg !6368
  %call6 = call i64 @strlen(i8* %6) #16, !dbg !6369
  store i64 %call6, i64* %base_len, align 8, !dbg !6367
  call void @llvm.dbg.declare(metadata i32* %add_slash, metadata !6370, metadata !DIExpression()), !dbg !6371
  %7 = load i64, i64* %dir_len, align 8, !dbg !6372
  %cmp7 = icmp ugt i64 %7, 0, !dbg !6373
  br i1 %cmp7, label %land.rhs, label %land.end, !dbg !6374

land.rhs:                                         ; preds = %if.end
  %8 = load i64, i64* %dir_len, align 8, !dbg !6375
  %sub = sub i64 %8, 1, !dbg !6375
  %9 = load i8*, i8** %dir, align 8, !dbg !6375
  %arrayidx9 = getelementptr inbounds i8, i8* %9, i64 %sub, !dbg !6375
  %10 = load i8, i8* %arrayidx9, align 1, !dbg !6375
  %conv10 = sext i8 %10 to i32, !dbg !6375
  %cmp11 = icmp eq i32 %conv10, 47, !dbg !6375
  %lnot = xor i1 %cmp11, true, !dbg !6377
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %11 = phi i1 [ false, %if.end ], [ %lnot, %land.rhs ]
  %land.ext = zext i1 %11 to i32, !dbg !6378
  store i32 %land.ext, i32* %add_slash, align 4, !dbg !6371
  %12 = load i64, i64* %dir_len, align 8, !dbg !6380
  %13 = load i32, i32* %add_slash, align 4, !dbg !6381
  %conv13 = sext i32 %13 to i64, !dbg !6381
  %add = add i64 %12, %conv13, !dbg !6382
  %14 = load i64, i64* %base_len, align 8, !dbg !6383
  %add14 = add i64 %add, %14, !dbg !6384
  %add15 = add i64 %add14, 1, !dbg !6385
  %call16 = call noalias i8* @malloc(i64 %add15) #11, !dbg !6386
  store i8* %call16, i8** %file_name, align 8, !dbg !6387
  %15 = load i8*, i8** %file_name, align 8, !dbg !6388
  %cmp17 = icmp ne i8* %15, null, !dbg !6390
  br i1 %cmp17, label %if.then.19, label %if.end.25, !dbg !6391

if.then.19:                                       ; preds = %land.end
  %16 = load i8*, i8** %file_name, align 8, !dbg !6392
  %17 = load i8*, i8** %dir, align 8, !dbg !6394
  %18 = load i64, i64* %dir_len, align 8, !dbg !6395
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %16, i8* align 1 %17, i64 %18, i1 false), !dbg !6396
  %19 = load i32, i32* %add_slash, align 4, !dbg !6397
  %tobool = icmp ne i32 %19, 0, !dbg !6397
  br i1 %tobool, label %if.then.20, label %if.end.22, !dbg !6399

if.then.20:                                       ; preds = %if.then.19
  %20 = load i64, i64* %dir_len, align 8, !dbg !6400
  %21 = load i8*, i8** %file_name, align 8, !dbg !6401
  %arrayidx21 = getelementptr inbounds i8, i8* %21, i64 %20, !dbg !6401
  store i8 47, i8* %arrayidx21, align 1, !dbg !6402
  br label %if.end.22, !dbg !6401

if.end.22:                                        ; preds = %if.then.20, %if.then.19
  %22 = load i8*, i8** %file_name, align 8, !dbg !6403
  %23 = load i64, i64* %dir_len, align 8, !dbg !6404
  %add.ptr = getelementptr inbounds i8, i8* %22, i64 %23, !dbg !6405
  %24 = load i32, i32* %add_slash, align 4, !dbg !6406
  %idx.ext = sext i32 %24 to i64, !dbg !6407
  %add.ptr23 = getelementptr inbounds i8, i8* %add.ptr, i64 %idx.ext, !dbg !6407
  %25 = load i8*, i8** %base, align 8, !dbg !6408
  %26 = load i64, i64* %base_len, align 8, !dbg !6409
  %add24 = add i64 %26, 1, !dbg !6410
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr23, i8* align 1 %25, i64 %add24, i1 false), !dbg !6411
  br label %if.end.25, !dbg !6412

if.end.25:                                        ; preds = %if.end.22, %land.end
  %27 = load i8*, i8** %file_name, align 8, !dbg !6413
  %cmp26 = icmp eq i8* %27, null, !dbg !6415
  br i1 %cmp26, label %if.then.28, label %if.else, !dbg !6416

if.then.28:                                       ; preds = %if.end.25
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.171, i32 0, i32 0), i8** %cp, align 8, !dbg !6417
  br label %if.end.123, !dbg !6418

if.else:                                          ; preds = %if.end.25
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !6419, metadata !DIExpression()), !dbg !6421
  %28 = load i8*, i8** %file_name, align 8, !dbg !6422
  %call29 = call i32 (i8*, i32, ...) @open(i8* %28, i32 131072), !dbg !6423
  store i32 %call29, i32* %fd, align 4, !dbg !6424
  %29 = load i32, i32* %fd, align 4, !dbg !6425
  %cmp30 = icmp slt i32 %29, 0, !dbg !6427
  br i1 %cmp30, label %if.then.32, label %if.else.33, !dbg !6428

if.then.32:                                       ; preds = %if.else
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.171, i32 0, i32 0), i8** %cp, align 8, !dbg !6429
  br label %if.end.122, !dbg !6430

if.else.33:                                       ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp, metadata !6431, metadata !DIExpression()), !dbg !6473
  %30 = load i32, i32* %fd, align 4, !dbg !6474
  %call34 = call %struct._IO_FILE* @fdopen(i32 %30, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.176, i32 0, i32 0)) #11, !dbg !6475
  store %struct._IO_FILE* %call34, %struct._IO_FILE** %fp, align 8, !dbg !6476
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !6477
  %cmp35 = icmp eq %struct._IO_FILE* %31, null, !dbg !6479
  br i1 %cmp35, label %if.then.37, label %if.else.39, !dbg !6480

if.then.37:                                       ; preds = %if.else.33
  %32 = load i32, i32* %fd, align 4, !dbg !6481
  %call38 = call i32 @close(i32 %32), !dbg !6483
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.171, i32 0, i32 0), i8** %cp, align 8, !dbg !6484
  br label %if.end.121, !dbg !6485

if.else.39:                                       ; preds = %if.else.33
  call void @llvm.dbg.declare(metadata i8** %res_ptr, metadata !6486, metadata !DIExpression()), !dbg !6488
  store i8* null, i8** %res_ptr, align 8, !dbg !6488
  call void @llvm.dbg.declare(metadata i64* %res_size, metadata !6489, metadata !DIExpression()), !dbg !6490
  store i64 0, i64* %res_size, align 8, !dbg !6490
  br label %for.cond, !dbg !6491

for.cond:                                         ; preds = %if.end.99, %if.end.67, %if.then.53, %if.else.39
  call void @llvm.dbg.declare(metadata i32* %c, metadata !6492, metadata !DIExpression()), !dbg !6496
  call void @llvm.dbg.declare(metadata [51 x i8]* %buf1, metadata !6497, metadata !DIExpression()), !dbg !6501
  call void @llvm.dbg.declare(metadata [51 x i8]* %buf2, metadata !6502, metadata !DIExpression()), !dbg !6503
  call void @llvm.dbg.declare(metadata i64* %l1, metadata !6504, metadata !DIExpression()), !dbg !6505
  call void @llvm.dbg.declare(metadata i64* %l2, metadata !6506, metadata !DIExpression()), !dbg !6507
  call void @llvm.dbg.declare(metadata i8** %old_res_ptr, metadata !6508, metadata !DIExpression()), !dbg !6509
  %33 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !6510
  %call40 = call i32 @getc_unlocked(%struct._IO_FILE* %33), !dbg !6511
  store i32 %call40, i32* %c, align 4, !dbg !6512
  %34 = load i32, i32* %c, align 4, !dbg !6513
  %cmp41 = icmp eq i32 %34, -1, !dbg !6515
  br i1 %cmp41, label %if.then.43, label %if.end.44, !dbg !6516

if.then.43:                                       ; preds = %for.cond
  br label %for.end, !dbg !6517

if.end.44:                                        ; preds = %for.cond
  %35 = load i32, i32* %c, align 4, !dbg !6518
  %cmp45 = icmp eq i32 %35, 10, !dbg !6520
  br i1 %cmp45, label %if.then.53, label %lor.lhs.false.47, !dbg !6521

lor.lhs.false.47:                                 ; preds = %if.end.44
  %36 = load i32, i32* %c, align 4, !dbg !6522
  %cmp48 = icmp eq i32 %36, 32, !dbg !6524
  br i1 %cmp48, label %if.then.53, label %lor.lhs.false.50, !dbg !6525

lor.lhs.false.50:                                 ; preds = %lor.lhs.false.47
  %37 = load i32, i32* %c, align 4, !dbg !6526
  %cmp51 = icmp eq i32 %37, 9, !dbg !6528
  br i1 %cmp51, label %if.then.53, label %if.end.54, !dbg !6529

if.then.53:                                       ; preds = %lor.lhs.false.50, %lor.lhs.false.47, %if.end.44
  br label %for.cond, !dbg !6530

if.end.54:                                        ; preds = %lor.lhs.false.50
  %38 = load i32, i32* %c, align 4, !dbg !6531
  %cmp55 = icmp eq i32 %38, 35, !dbg !6533
  br i1 %cmp55, label %if.then.57, label %if.end.68, !dbg !6534

if.then.57:                                       ; preds = %if.end.54
  br label %do.body, !dbg !6535

do.body:                                          ; preds = %lor.end, %if.then.57
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !6537
  %call58 = call i32 @getc_unlocked(%struct._IO_FILE* %39), !dbg !6539
  store i32 %call58, i32* %c, align 4, !dbg !6540
  br label %do.cond, !dbg !6541

do.cond:                                          ; preds = %do.body
  %40 = load i32, i32* %c, align 4, !dbg !6542
  %cmp59 = icmp eq i32 %40, -1, !dbg !6543
  br i1 %cmp59, label %lor.end, label %lor.rhs, !dbg !6544

lor.rhs:                                          ; preds = %do.cond
  %41 = load i32, i32* %c, align 4, !dbg !6545
  %cmp61 = icmp eq i32 %41, 10, !dbg !6547
  br label %lor.end, !dbg !6544

lor.end:                                          ; preds = %lor.rhs, %do.cond
  %42 = phi i1 [ true, %do.cond ], [ %cmp61, %lor.rhs ]
  %lnot63 = xor i1 %42, true, !dbg !6548
  br i1 %lnot63, label %do.body, label %do.end, !dbg !6541

do.end:                                           ; preds = %lor.end
  %43 = load i32, i32* %c, align 4, !dbg !6550
  %cmp64 = icmp eq i32 %43, -1, !dbg !6552
  br i1 %cmp64, label %if.then.66, label %if.end.67, !dbg !6553

if.then.66:                                       ; preds = %do.end
  br label %for.end, !dbg !6554

if.end.67:                                        ; preds = %do.end
  br label %for.cond, !dbg !6555

if.end.68:                                        ; preds = %if.end.54
  %44 = load i32, i32* %c, align 4, !dbg !6556
  %45 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !6557
  %call69 = call i32 @ungetc(i32 %44, %struct._IO_FILE* %45), !dbg !6558
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !6559
  %arraydecay = getelementptr inbounds [51 x i8], [51 x i8]* %buf1, i32 0, i32 0, !dbg !6561
  %arraydecay70 = getelementptr inbounds [51 x i8], [51 x i8]* %buf2, i32 0, i32 0, !dbg !6562
  %call71 = call i32 (%struct._IO_FILE*, i8*, ...) @fscanf(%struct._IO_FILE* %46, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6.177, i32 0, i32 0), i8* %arraydecay, i8* %arraydecay70), !dbg !6563
  %cmp72 = icmp slt i32 %call71, 2, !dbg !6564
  br i1 %cmp72, label %if.then.74, label %if.end.75, !dbg !6565

if.then.74:                                       ; preds = %if.end.68
  br label %for.end, !dbg !6566

if.end.75:                                        ; preds = %if.end.68
  %arraydecay76 = getelementptr inbounds [51 x i8], [51 x i8]* %buf1, i32 0, i32 0, !dbg !6567
  %call77 = call i64 @strlen(i8* %arraydecay76) #16, !dbg !6568
  store i64 %call77, i64* %l1, align 8, !dbg !6569
  %arraydecay78 = getelementptr inbounds [51 x i8], [51 x i8]* %buf2, i32 0, i32 0, !dbg !6570
  %call79 = call i64 @strlen(i8* %arraydecay78) #16, !dbg !6571
  store i64 %call79, i64* %l2, align 8, !dbg !6572
  %47 = load i8*, i8** %res_ptr, align 8, !dbg !6573
  store i8* %47, i8** %old_res_ptr, align 8, !dbg !6574
  %48 = load i64, i64* %res_size, align 8, !dbg !6575
  %cmp80 = icmp eq i64 %48, 0, !dbg !6577
  br i1 %cmp80, label %if.then.82, label %if.else.88, !dbg !6578

if.then.82:                                       ; preds = %if.end.75
  %49 = load i64, i64* %l1, align 8, !dbg !6579
  %add83 = add i64 %49, 1, !dbg !6581
  %50 = load i64, i64* %l2, align 8, !dbg !6582
  %add84 = add i64 %add83, %50, !dbg !6583
  %add85 = add i64 %add84, 1, !dbg !6584
  store i64 %add85, i64* %res_size, align 8, !dbg !6585
  %51 = load i64, i64* %res_size, align 8, !dbg !6586
  %add86 = add i64 %51, 1, !dbg !6587
  %call87 = call noalias i8* @malloc(i64 %add86) #11, !dbg !6588
  store i8* %call87, i8** %res_ptr, align 8, !dbg !6589
  br label %if.end.95, !dbg !6590

if.else.88:                                       ; preds = %if.end.75
  %52 = load i64, i64* %l1, align 8, !dbg !6591
  %add89 = add i64 %52, 1, !dbg !6593
  %53 = load i64, i64* %l2, align 8, !dbg !6594
  %add90 = add i64 %add89, %53, !dbg !6595
  %add91 = add i64 %add90, 1, !dbg !6596
  %54 = load i64, i64* %res_size, align 8, !dbg !6597
  %add92 = add i64 %54, %add91, !dbg !6597
  store i64 %add92, i64* %res_size, align 8, !dbg !6597
  %55 = load i8*, i8** %res_ptr, align 8, !dbg !6598
  %56 = load i64, i64* %res_size, align 8, !dbg !6599
  %add93 = add i64 %56, 1, !dbg !6600
  %call94 = call i8* @realloc(i8* %55, i64 %add93) #11, !dbg !6601
  store i8* %call94, i8** %res_ptr, align 8, !dbg !6602
  br label %if.end.95

if.end.95:                                        ; preds = %if.else.88, %if.then.82
  %57 = load i8*, i8** %res_ptr, align 8, !dbg !6603
  %cmp96 = icmp eq i8* %57, null, !dbg !6605
  br i1 %cmp96, label %if.then.98, label %if.end.99, !dbg !6606

if.then.98:                                       ; preds = %if.end.95
  store i64 0, i64* %res_size, align 8, !dbg !6607
  %58 = load i8*, i8** %old_res_ptr, align 8, !dbg !6609
  call void @free(i8* %58) #11, !dbg !6610
  br label %for.end, !dbg !6611

if.end.99:                                        ; preds = %if.end.95
  %59 = load i8*, i8** %res_ptr, align 8, !dbg !6612
  %60 = load i64, i64* %res_size, align 8, !dbg !6613
  %add.ptr100 = getelementptr inbounds i8, i8* %59, i64 %60, !dbg !6614
  %61 = load i64, i64* %l2, align 8, !dbg !6615
  %add101 = add i64 %61, 1, !dbg !6616
  %idx.neg = sub i64 0, %add101, !dbg !6617
  %add.ptr102 = getelementptr inbounds i8, i8* %add.ptr100, i64 %idx.neg, !dbg !6617
  %62 = load i64, i64* %l1, align 8, !dbg !6618
  %add103 = add i64 %62, 1, !dbg !6619
  %idx.neg104 = sub i64 0, %add103, !dbg !6620
  %add.ptr105 = getelementptr inbounds i8, i8* %add.ptr102, i64 %idx.neg104, !dbg !6620
  %arraydecay106 = getelementptr inbounds [51 x i8], [51 x i8]* %buf1, i32 0, i32 0, !dbg !6621
  %call107 = call i8* @strcpy(i8* %add.ptr105, i8* %arraydecay106) #11, !dbg !6622
  %63 = load i8*, i8** %res_ptr, align 8, !dbg !6623
  %64 = load i64, i64* %res_size, align 8, !dbg !6624
  %add.ptr108 = getelementptr inbounds i8, i8* %63, i64 %64, !dbg !6625
  %65 = load i64, i64* %l2, align 8, !dbg !6626
  %add109 = add i64 %65, 1, !dbg !6627
  %idx.neg110 = sub i64 0, %add109, !dbg !6628
  %add.ptr111 = getelementptr inbounds i8, i8* %add.ptr108, i64 %idx.neg110, !dbg !6628
  %arraydecay112 = getelementptr inbounds [51 x i8], [51 x i8]* %buf2, i32 0, i32 0, !dbg !6629
  %call113 = call i8* @strcpy(i8* %add.ptr111, i8* %arraydecay112) #11, !dbg !6630
  br label %for.cond, !dbg !6631

for.end:                                          ; preds = %if.then.98, %if.then.74, %if.then.66, %if.then.43
  %66 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !6632
  %call114 = call i32 @rpl_fclose(%struct._IO_FILE* %66), !dbg !6633
  %67 = load i64, i64* %res_size, align 8, !dbg !6634
  %cmp115 = icmp eq i64 %67, 0, !dbg !6636
  br i1 %cmp115, label %if.then.117, label %if.else.118, !dbg !6637

if.then.117:                                      ; preds = %for.end
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.171, i32 0, i32 0), i8** %cp, align 8, !dbg !6638
  br label %if.end.120, !dbg !6639

if.else.118:                                      ; preds = %for.end
  %68 = load i8*, i8** %res_ptr, align 8, !dbg !6640
  %69 = load i64, i64* %res_size, align 8, !dbg !6642
  %add.ptr119 = getelementptr inbounds i8, i8* %68, i64 %69, !dbg !6643
  store i8 0, i8* %add.ptr119, align 1, !dbg !6644
  %70 = load i8*, i8** %res_ptr, align 8, !dbg !6645
  store i8* %70, i8** %cp, align 8, !dbg !6646
  br label %if.end.120

if.end.120:                                       ; preds = %if.else.118, %if.then.117
  br label %if.end.121

if.end.121:                                       ; preds = %if.end.120, %if.then.37
  br label %if.end.122

if.end.122:                                       ; preds = %if.end.121, %if.then.32
  %71 = load i8*, i8** %file_name, align 8, !dbg !6647
  call void @free(i8* %71) #11, !dbg !6648
  br label %if.end.123

if.end.123:                                       ; preds = %if.end.122, %if.then.28
  %72 = load i8*, i8** %cp, align 8, !dbg !6649
  store volatile i8* %72, i8** @charset_aliases, align 8, !dbg !6650
  br label %if.end.124, !dbg !6651

if.end.124:                                       ; preds = %if.end.123, %entry
  %73 = load i8*, i8** %cp, align 8, !dbg !6652
  ret i8* %73, !dbg !6653
}

; Function Attrs: nounwind readnone uwtable
define internal zeroext i1 @c_isascii(i32 %c) #12 !dbg !6654 {
entry:
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !6657, metadata !DIExpression()), !dbg !6658
  %0 = load i32, i32* %c.addr, align 4, !dbg !6659
  %cmp = icmp sge i32 %0, 0, !dbg !6660
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !6661

land.rhs:                                         ; preds = %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !6662
  %cmp1 = icmp sle i32 %1, 127, !dbg !6664
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ]
  ret i1 %2, !dbg !6665
}

; Function Attrs: nounwind readnone uwtable
define internal zeroext i1 @c_isalnum(i32 %c) #12 !dbg !6667 {
entry:
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !6668, metadata !DIExpression()), !dbg !6669
  %0 = load i32, i32* %c.addr, align 4, !dbg !6670
  %cmp = icmp sge i32 %0, 48, !dbg !6671
  br i1 %cmp, label %land.lhs.true, label %lor.rhs, !dbg !6672

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !6673
  %cmp1 = icmp sle i32 %1, 57, !dbg !6675
  br i1 %cmp1, label %lor.end, label %lor.rhs, !dbg !6676

lor.rhs:                                          ; preds = %land.lhs.true, %entry
  %2 = load i32, i32* %c.addr, align 4, !dbg !6677
  %and = and i32 %2, -33, !dbg !6678
  %cmp2 = icmp sge i32 %and, 65, !dbg !6679
  br i1 %cmp2, label %land.rhs, label %land.end, !dbg !6680

land.rhs:                                         ; preds = %lor.rhs
  %3 = load i32, i32* %c.addr, align 4, !dbg !6681
  %and3 = and i32 %3, -33, !dbg !6683
  %cmp4 = icmp sle i32 %and3, 90, !dbg !6684
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %4 = phi i1 [ false, %lor.rhs ], [ %cmp4, %land.rhs ]
  br label %lor.end, !dbg !6685

lor.end:                                          ; preds = %land.end, %land.lhs.true
  %5 = phi i1 [ true, %land.lhs.true ], [ %4, %land.end ]
  ret i1 %5, !dbg !6687
}

; Function Attrs: nounwind readnone uwtable
define internal zeroext i1 @c_isalpha(i32 %c) #12 !dbg !6688 {
entry:
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !6689, metadata !DIExpression()), !dbg !6690
  %0 = load i32, i32* %c.addr, align 4, !dbg !6691
  %and = and i32 %0, -33, !dbg !6692
  %cmp = icmp sge i32 %and, 65, !dbg !6693
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !6694

land.rhs:                                         ; preds = %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !6695
  %and1 = and i32 %1, -33, !dbg !6697
  %cmp2 = icmp sle i32 %and1, 90, !dbg !6698
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %cmp2, %land.rhs ]
  ret i1 %2, !dbg !6699
}

; Function Attrs: nounwind readnone uwtable
define internal zeroext i1 @c_isblank(i32 %c) #12 !dbg !6701 {
entry:
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !6702, metadata !DIExpression()), !dbg !6703
  %0 = load i32, i32* %c.addr, align 4, !dbg !6704
  %cmp = icmp eq i32 %0, 32, !dbg !6705
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !6706

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !6707
  %cmp1 = icmp eq i32 %1, 9, !dbg !6709
  br label %lor.end, !dbg !6706

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %cmp1, %lor.rhs ]
  ret i1 %2, !dbg !6710
}

; Function Attrs: nounwind readnone uwtable
define internal zeroext i1 @c_iscntrl(i32 %c) #12 !dbg !6713 {
entry:
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !6714, metadata !DIExpression()), !dbg !6715
  %0 = load i32, i32* %c.addr, align 4, !dbg !6716
  %and = and i32 %0, -32, !dbg !6717
  %cmp = icmp eq i32 %and, 0, !dbg !6718
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !6719

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !6720
  %cmp1 = icmp eq i32 %1, 127, !dbg !6722
  br label %lor.end, !dbg !6719

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %cmp1, %lor.rhs ]
  ret i1 %2, !dbg !6723
}

; Function Attrs: nounwind readnone uwtable
define internal zeroext i1 @c_isdigit(i32 %c) #12 !dbg !6726 {
entry:
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !6727, metadata !DIExpression()), !dbg !6728
  %0 = load i32, i32* %c.addr, align 4, !dbg !6729
  %cmp = icmp sge i32 %0, 48, !dbg !6730
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !6731

land.rhs:                                         ; preds = %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !6732
  %cmp1 = icmp sle i32 %1, 57, !dbg !6734
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ]
  ret i1 %2, !dbg !6735
}

; Function Attrs: nounwind readnone uwtable
define internal zeroext i1 @c_islower(i32 %c) #12 !dbg !6737 {
entry:
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !6738, metadata !DIExpression()), !dbg !6739
  %0 = load i32, i32* %c.addr, align 4, !dbg !6740
  %cmp = icmp sge i32 %0, 97, !dbg !6741
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !6742

land.rhs:                                         ; preds = %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !6743
  %cmp1 = icmp sle i32 %1, 122, !dbg !6745
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ]
  ret i1 %2, !dbg !6746
}

; Function Attrs: nounwind readnone uwtable
define internal zeroext i1 @c_isgraph(i32 %c) #12 !dbg !6748 {
entry:
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !6749, metadata !DIExpression()), !dbg !6750
  %0 = load i32, i32* %c.addr, align 4, !dbg !6751
  %cmp = icmp sge i32 %0, 33, !dbg !6752
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !6753

land.rhs:                                         ; preds = %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !6754
  %cmp1 = icmp sle i32 %1, 126, !dbg !6756
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ]
  ret i1 %2, !dbg !6757
}

; Function Attrs: nounwind readnone uwtable
define internal zeroext i1 @c_isprint(i32 %c) #12 !dbg !6759 {
entry:
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !6760, metadata !DIExpression()), !dbg !6761
  %0 = load i32, i32* %c.addr, align 4, !dbg !6762
  %cmp = icmp sge i32 %0, 32, !dbg !6763
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !6764

land.rhs:                                         ; preds = %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !6765
  %cmp1 = icmp sle i32 %1, 126, !dbg !6767
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ]
  ret i1 %2, !dbg !6768
}

; Function Attrs: nounwind readnone uwtable
define internal zeroext i1 @c_ispunct(i32 %c) #12 !dbg !6770 {
entry:
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !6771, metadata !DIExpression()), !dbg !6772
  %0 = load i32, i32* %c.addr, align 4, !dbg !6773
  %cmp = icmp sge i32 %0, 33, !dbg !6774
  br i1 %cmp, label %land.lhs.true, label %land.end.9, !dbg !6775

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !6776
  %cmp1 = icmp sle i32 %1, 126, !dbg !6778
  br i1 %cmp1, label %land.rhs, label %land.end.9, !dbg !6779

land.rhs:                                         ; preds = %land.lhs.true
  %2 = load i32, i32* %c.addr, align 4, !dbg !6780
  %cmp2 = icmp sge i32 %2, 48, !dbg !6781
  br i1 %cmp2, label %land.lhs.true.3, label %lor.rhs, !dbg !6782

land.lhs.true.3:                                  ; preds = %land.rhs
  %3 = load i32, i32* %c.addr, align 4, !dbg !6783
  %cmp4 = icmp sle i32 %3, 57, !dbg !6785
  br i1 %cmp4, label %lor.end, label %lor.rhs, !dbg !6786

lor.rhs:                                          ; preds = %land.lhs.true.3, %land.rhs
  %4 = load i32, i32* %c.addr, align 4, !dbg !6787
  %and = and i32 %4, -33, !dbg !6788
  %cmp5 = icmp sge i32 %and, 65, !dbg !6789
  br i1 %cmp5, label %land.rhs.6, label %land.end, !dbg !6790

land.rhs.6:                                       ; preds = %lor.rhs
  %5 = load i32, i32* %c.addr, align 4, !dbg !6791
  %and7 = and i32 %5, -33, !dbg !6792
  %cmp8 = icmp sle i32 %and7, 90, !dbg !6793
  br label %land.end

land.end:                                         ; preds = %land.rhs.6, %lor.rhs
  %6 = phi i1 [ false, %lor.rhs ], [ %cmp8, %land.rhs.6 ]
  br label %lor.end, !dbg !6794

lor.end:                                          ; preds = %land.end, %land.lhs.true.3
  %7 = phi i1 [ true, %land.lhs.true.3 ], [ %6, %land.end ]
  %lnot = xor i1 %7, true, !dbg !6796
  br label %land.end.9

land.end.9:                                       ; preds = %lor.end, %land.lhs.true, %entry
  %8 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %lnot, %lor.end ]
  ret i1 %8, !dbg !6797
}

; Function Attrs: nounwind readnone uwtable
define internal zeroext i1 @c_isspace(i32 %c) #12 !dbg !6798 {
entry:
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !6799, metadata !DIExpression()), !dbg !6800
  %0 = load i32, i32* %c.addr, align 4, !dbg !6801
  %cmp = icmp eq i32 %0, 32, !dbg !6802
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !6803

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !6804
  %cmp1 = icmp eq i32 %1, 9, !dbg !6806
  br i1 %cmp1, label %lor.end, label %lor.lhs.false.2, !dbg !6807

lor.lhs.false.2:                                  ; preds = %lor.lhs.false
  %2 = load i32, i32* %c.addr, align 4, !dbg !6808
  %cmp3 = icmp eq i32 %2, 10, !dbg !6810
  br i1 %cmp3, label %lor.end, label %lor.lhs.false.4, !dbg !6811

lor.lhs.false.4:                                  ; preds = %lor.lhs.false.2
  %3 = load i32, i32* %c.addr, align 4, !dbg !6812
  %cmp5 = icmp eq i32 %3, 11, !dbg !6813
  br i1 %cmp5, label %lor.end, label %lor.lhs.false.6, !dbg !6814

lor.lhs.false.6:                                  ; preds = %lor.lhs.false.4
  %4 = load i32, i32* %c.addr, align 4, !dbg !6815
  %cmp7 = icmp eq i32 %4, 12, !dbg !6817
  br i1 %cmp7, label %lor.end, label %lor.rhs, !dbg !6818

lor.rhs:                                          ; preds = %lor.lhs.false.6
  %5 = load i32, i32* %c.addr, align 4, !dbg !6819
  %cmp8 = icmp eq i32 %5, 13, !dbg !6821
  br label %lor.end, !dbg !6818

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false.6, %lor.lhs.false.4, %lor.lhs.false.2, %lor.lhs.false, %entry
  %6 = phi i1 [ true, %lor.lhs.false.6 ], [ true, %lor.lhs.false.4 ], [ true, %lor.lhs.false.2 ], [ true, %lor.lhs.false ], [ true, %entry ], [ %cmp8, %lor.rhs ]
  ret i1 %6, !dbg !6822
}

; Function Attrs: nounwind readnone uwtable
define internal zeroext i1 @c_isupper(i32 %c) #12 !dbg !6823 {
entry:
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !6824, metadata !DIExpression()), !dbg !6825
  %0 = load i32, i32* %c.addr, align 4, !dbg !6826
  %cmp = icmp sge i32 %0, 65, !dbg !6827
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !6828

land.rhs:                                         ; preds = %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !6829
  %cmp1 = icmp sle i32 %1, 90, !dbg !6831
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ]
  ret i1 %2, !dbg !6832
}

; Function Attrs: nounwind readnone uwtable
define internal zeroext i1 @c_isxdigit(i32 %c) #12 !dbg !6834 {
entry:
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !6835, metadata !DIExpression()), !dbg !6836
  %0 = load i32, i32* %c.addr, align 4, !dbg !6837
  %cmp = icmp sge i32 %0, 48, !dbg !6838
  br i1 %cmp, label %land.lhs.true, label %lor.rhs, !dbg !6839

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !6840
  %cmp1 = icmp sle i32 %1, 57, !dbg !6842
  br i1 %cmp1, label %lor.end, label %lor.rhs, !dbg !6843

lor.rhs:                                          ; preds = %land.lhs.true, %entry
  %2 = load i32, i32* %c.addr, align 4, !dbg !6844
  %and = and i32 %2, -33, !dbg !6845
  %cmp2 = icmp sge i32 %and, 65, !dbg !6846
  br i1 %cmp2, label %land.rhs, label %land.end, !dbg !6847

land.rhs:                                         ; preds = %lor.rhs
  %3 = load i32, i32* %c.addr, align 4, !dbg !6848
  %and3 = and i32 %3, -33, !dbg !6850
  %cmp4 = icmp sle i32 %and3, 70, !dbg !6851
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %4 = phi i1 [ false, %lor.rhs ], [ %cmp4, %land.rhs ]
  br label %lor.end, !dbg !6852

lor.end:                                          ; preds = %land.end, %land.lhs.true
  %5 = phi i1 [ true, %land.lhs.true ], [ %4, %land.end ]
  ret i1 %5, !dbg !6854
}

; Function Attrs: nounwind readnone uwtable
define internal i32 @c_tolower(i32 %c) #12 !dbg !6855 {
entry:
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !6856, metadata !DIExpression()), !dbg !6857
  %0 = load i32, i32* %c.addr, align 4, !dbg !6858
  %cmp = icmp sge i32 %0, 65, !dbg !6859
  br i1 %cmp, label %land.lhs.true, label %cond.false, !dbg !6860

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !6861
  %cmp1 = icmp sle i32 %1, 90, !dbg !6863
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !6858

cond.true:                                        ; preds = %land.lhs.true
  %2 = load i32, i32* %c.addr, align 4, !dbg !6864
  %sub = sub nsw i32 %2, 65, !dbg !6866
  %add = add nsw i32 %sub, 97, !dbg !6867
  br label %cond.end, !dbg !6858

cond.false:                                       ; preds = %land.lhs.true, %entry
  %3 = load i32, i32* %c.addr, align 4, !dbg !6868
  br label %cond.end, !dbg !6858

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add, %cond.true ], [ %3, %cond.false ], !dbg !6858
  ret i32 %cond, !dbg !6871
}

; Function Attrs: nounwind readnone uwtable
define internal i32 @c_toupper(i32 %c) #12 !dbg !6874 {
entry:
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !6875, metadata !DIExpression()), !dbg !6876
  %0 = load i32, i32* %c.addr, align 4, !dbg !6877
  %cmp = icmp sge i32 %0, 97, !dbg !6878
  br i1 %cmp, label %land.lhs.true, label %cond.false, !dbg !6879

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !6880
  %cmp1 = icmp sle i32 %1, 122, !dbg !6882
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !6877

cond.true:                                        ; preds = %land.lhs.true
  %2 = load i32, i32* %c.addr, align 4, !dbg !6883
  %sub = sub nsw i32 %2, 97, !dbg !6885
  %add = add nsw i32 %sub, 65, !dbg !6886
  br label %cond.end, !dbg !6877

cond.false:                                       ; preds = %land.lhs.true, %entry
  %3 = load i32, i32* %c.addr, align 4, !dbg !6887
  br label %cond.end, !dbg !6877

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add, %cond.true ], [ %3, %cond.false ], !dbg !6877
  ret i32 %cond, !dbg !6890
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #13

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #13

attributes #0 = { noreturn nounwind uwtable "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind uwtable "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readonly uwtable "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { nounwind readnone uwtable "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { argmemonly nounwind willreturn }
attributes #14 = { noreturn nounwind }
attributes #15 = { noreturn }
attributes #16 = { nounwind readonly }
attributes #17 = { nounwind readnone }

!llvm.dbg.cu = !{!2, !116, !122, !131, !153, !600, !603, !160, !167, !605, !607, !238, !614, !626, !628, !630, !251, !632, !634, !636, !639, !643, !256, !645}
!llvm.ident = !{!647, !647, !647, !647, !647, !647, !647, !647, !647, !647, !647, !647, !647, !647, !647, !647, !647, !647, !647, !647, !647, !647, !647, !647}
!llvm.module.flags = !{!648, !649}

!0 = distinct !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = !DIGlobalVariable(name: "long_options", scope: !2, file: !3, line: 142, type: !92, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 3.7.0 (tags/RELEASE_370/final 255017)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !40, globals: !50)
!3 = !DIFile(filename: "../src/md5sum.c", directory: "/home/gbalats/Downloads/coreutils-8.24/obj-clang")
!4 = !{!5, !20, !31}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 46, size: 32, align: 32, elements: !7)
!6 = !DIFile(filename: "/usr/include/ctype.h", directory: "/home/gbalats/Downloads/coreutils-8.24/obj-clang")
!7 = !{!8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19}
!8 = !DIEnumerator(name: "_ISupper", value: 256)
!9 = !DIEnumerator(name: "_ISlower", value: 512)
!10 = !DIEnumerator(name: "_ISalpha", value: 1024)
!11 = !DIEnumerator(name: "_ISdigit", value: 2048)
!12 = !DIEnumerator(name: "_ISxdigit", value: 4096)
!13 = !DIEnumerator(name: "_ISspace", value: 8192)
!14 = !DIEnumerator(name: "_ISprint", value: 16384)
!15 = !DIEnumerator(name: "_ISgraph", value: 32768)
!16 = !DIEnumerator(name: "_ISblank", value: 1)
!17 = !DIEnumerator(name: "_IScntrl", value: 2)
!18 = !DIEnumerator(name: "_ISpunct", value: 4)
!19 = !DIEnumerator(name: "_ISalnum", value: 8)
!20 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !22, file: !21, line: 180, size: 32, align: 32, elements: !29)
!21 = !DIFile(filename: "../src/system.h", directory: "/home/gbalats/Downloads/coreutils-8.24/obj-clang")
!22 = distinct !DISubprogram(name: "select_plural", scope: !21, file: !21, line: 176, type: !23, scopeLine: 177, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !28)
!23 = !DISubroutineType(types: !24)
!24 = !{!25, !26}
!25 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!26 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !27, line: 135, baseType: !25)
!27 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/gbalats/Downloads/coreutils-8.24/obj-clang")
!28 = !{}
!29 = !{!30}
!30 = !DIEnumerator(name: "PLURAL_REDUCER", value: 1000000)
!31 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !32, line: 45, size: 32, align: 32, elements: !33)
!32 = !DIFile(filename: "../lib/fadvise.h", directory: "/home/gbalats/Downloads/coreutils-8.24/obj-clang")
!33 = !{!34, !35, !36, !37, !38, !39}
!34 = !DIEnumerator(name: "FADVISE_NORMAL", value: 0)
!35 = !DIEnumerator(name: "FADVISE_SEQUENTIAL", value: 2)
!36 = !DIEnumerator(name: "FADVISE_NOREUSE", value: 5)
!37 = !DIEnumerator(name: "FADVISE_DONTNEED", value: 4)
!38 = !DIEnumerator(name: "FADVISE_WILLNEED", value: 3)
!39 = !DIEnumerator(name: "FADVISE_RANDOM", value: 1)
!40 = !{!41, !43, !44, !46, !48, !49}
!41 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !42, size: 64, align: 64)
!42 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!43 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!44 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !45, line: 62, baseType: !25)
!45 = !DIFile(filename: "/usr/data/lobo/llvm/llvm-3.7.0/build/bin/../lib/clang/3.7.0/include/stddef.h", directory: "/home/gbalats/Downloads/coreutils-8.24/obj-clang")
!46 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !47, size: 64, align: 64)
!47 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!48 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!49 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!50 = !{!51, !54, !56, !58, !73, !74, !76, !78, !80, !82, !90}
!51 = distinct !DIGlobalVariableExpression(var: !52, expr: !DIExpression())
!52 = !DIGlobalVariable(name: "have_read_stdin", scope: !2, file: !3, line: 106, type: !53, isLocal: true, isDefinition: true)
!53 = !DIBasicType(name: "_Bool", size: 8, align: 8, encoding: DW_ATE_boolean)
!54 = distinct !DIGlobalVariableExpression(var: !55, expr: !DIExpression())
!55 = !DIGlobalVariable(name: "min_digest_line_length", scope: !2, file: !3, line: 109, type: !44, isLocal: true, isDefinition: true)
!56 = distinct !DIGlobalVariableExpression(var: !57, expr: !DIExpression())
!57 = !DIGlobalVariable(name: "digest_hex_bytes", scope: !2, file: !3, line: 112, type: !44, isLocal: true, isDefinition: true)
!58 = distinct !DIGlobalVariableExpression(var: !59, expr: !DIExpression())
!59 = !DIGlobalVariable(name: "infomap", scope: !60, file: !21, line: 571, type: !65, isLocal: true, isDefinition: true)
!60 = distinct !DISubprogram(name: "emit_ancillary_info", scope: !21, file: !21, line: 569, type: !61, scopeLine: 570, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !28)
!61 = !DISubroutineType(types: !62)
!62 = !{null, !63}
!63 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !64, size: 64, align: 64)
!64 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !42)
!65 = !DICompositeType(tag: DW_TAG_array_type, baseType: !66, size: 896, align: 64, elements: !71)
!66 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !67)
!67 = !DICompositeType(tag: DW_TAG_structure_type, name: "infomap", scope: !60, file: !21, line: 571, size: 128, align: 64, elements: !68)
!68 = !{!69, !70}
!69 = !DIDerivedType(tag: DW_TAG_member, name: "program", scope: !67, file: !21, line: 571, baseType: !63, size: 64, align: 64)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !67, file: !21, line: 571, baseType: !63, size: 64, align: 64, offset: 64)
!71 = !{!72}
!72 = !DISubrange(count: 7)
!73 = distinct !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!74 = distinct !DIGlobalVariableExpression(var: !75, expr: !DIExpression())
!75 = !DIGlobalVariable(name: "status_only", scope: !2, file: !3, line: 116, type: !53, isLocal: true, isDefinition: true)
!76 = distinct !DIGlobalVariableExpression(var: !77, expr: !DIExpression())
!77 = !DIGlobalVariable(name: "warn", scope: !2, file: !3, line: 120, type: !53, isLocal: true, isDefinition: true)
!78 = distinct !DIGlobalVariableExpression(var: !79, expr: !DIExpression())
!79 = !DIGlobalVariable(name: "quiet", scope: !2, file: !3, line: 123, type: !53, isLocal: true, isDefinition: true)
!80 = distinct !DIGlobalVariableExpression(var: !81, expr: !DIExpression())
!81 = !DIGlobalVariable(name: "strict", scope: !2, file: !3, line: 127, type: !53, isLocal: true, isDefinition: true)
!82 = distinct !DIGlobalVariableExpression(var: !83, expr: !DIExpression())
!83 = !DIGlobalVariable(name: "bin2hex", scope: !84, file: !3, line: 558, type: !87, isLocal: true, isDefinition: true)
!84 = distinct !DISubprogram(name: "digest_check", scope: !3, file: !3, line: 480, type: !85, scopeLine: 481, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !28)
!85 = !DISubroutineType(types: !86)
!86 = !{!53, !63}
!87 = !DICompositeType(tag: DW_TAG_array_type, baseType: !64, size: 128, align: 8, elements: !88)
!88 = !{!89}
!89 = !DISubrange(count: 16)
!90 = distinct !DIGlobalVariableExpression(var: !91, expr: !DIExpression())
!91 = !DIGlobalVariable(name: "bsd_reversed", scope: !2, file: !3, line: 130, type: !48, isLocal: true, isDefinition: true)
!92 = !DICompositeType(tag: DW_TAG_array_type, baseType: !93, size: 2816, align: 64, elements: !102)
!93 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !94)
!94 = !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !95, line: 104, size: 256, align: 64, elements: !96)
!95 = !DIFile(filename: "/usr/include/getopt.h", directory: "/home/gbalats/Downloads/coreutils-8.24/obj-clang")
!96 = !{!97, !98, !99, !101}
!97 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !94, file: !95, line: 106, baseType: !63, size: 64, align: 64)
!98 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !94, file: !95, line: 109, baseType: !48, size: 32, align: 32, offset: 64)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !94, file: !95, line: 110, baseType: !100, size: 64, align: 64, offset: 128)
!100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !48, size: 64, align: 64)
!101 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !94, file: !95, line: 111, baseType: !48, size: 32, align: 32, offset: 192)
!102 = !{!103}
!103 = !DISubrange(count: 11)
!104 = distinct !DIGlobalVariableExpression(var: !75, expr: !DIExpression())
!105 = distinct !DIGlobalVariableExpression(var: !77, expr: !DIExpression())
!106 = distinct !DIGlobalVariableExpression(var: !79, expr: !DIExpression())
!107 = distinct !DIGlobalVariableExpression(var: !81, expr: !DIExpression())
!108 = distinct !DIGlobalVariableExpression(var: !55, expr: !DIExpression())
!109 = distinct !DIGlobalVariableExpression(var: !57, expr: !DIExpression())
!110 = distinct !DIGlobalVariableExpression(var: !52, expr: !DIExpression())
!111 = distinct !DIGlobalVariableExpression(var: !59, expr: !DIExpression())
!112 = distinct !DIGlobalVariableExpression(var: !83, expr: !DIExpression())
!113 = distinct !DIGlobalVariableExpression(var: !91, expr: !DIExpression())
!114 = distinct !DIGlobalVariableExpression(var: !115, expr: !DIExpression())
!115 = !DIGlobalVariable(name: "Version", scope: !116, file: !117, line: 2, type: !63, isLocal: false, isDefinition: true)
!116 = distinct !DICompileUnit(language: DW_LANG_C99, file: !117, producer: "clang version 3.7.0 (tags/RELEASE_370/final 255017)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !28, globals: !118)
!117 = !DIFile(filename: "src/version.c", directory: "/home/gbalats/Downloads/coreutils-8.24/obj-clang")
!118 = !{!119}
!119 = distinct !DIGlobalVariableExpression(var: !115, expr: !DIExpression())
!120 = distinct !DIGlobalVariableExpression(var: !121, expr: !DIExpression())
!121 = !DIGlobalVariable(name: "file_name", scope: !122, file: !123, line: 36, type: !63, isLocal: true, isDefinition: true)
!122 = distinct !DICompileUnit(language: DW_LANG_C99, file: !123, producer: "clang version 3.7.0 (tags/RELEASE_370/final 255017)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !28, globals: !124)
!123 = !DIFile(filename: "../lib/closeout.c", directory: "/home/gbalats/Downloads/coreutils-8.24/obj-clang")
!124 = !{!125, !126}
!125 = distinct !DIGlobalVariableExpression(var: !121, expr: !DIExpression())
!126 = distinct !DIGlobalVariableExpression(var: !127, expr: !DIExpression())
!127 = !DIGlobalVariable(name: "ignore_EPIPE", scope: !122, file: !123, line: 46, type: !53, isLocal: true, isDefinition: true)
!128 = distinct !DIGlobalVariableExpression(var: !127, expr: !DIExpression())
!129 = distinct !DIGlobalVariableExpression(var: !130, expr: !DIExpression())
!130 = !DIGlobalVariable(name: "sha512_round_constants", scope: !131, file: !132, line: 429, type: !146, isLocal: true, isDefinition: true)
!131 = distinct !DICompileUnit(language: DW_LANG_C99, file: !132, producer: "clang version 3.7.0 (tags/RELEASE_370/final 255017)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !28, retainedTypes: !133, globals: !138)
!132 = !DIFile(filename: "../lib/sha512.c", directory: "/home/gbalats/Downloads/coreutils-8.24/obj-clang")
!133 = !{!134, !41, !63, !137}
!134 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !135, line: 37, baseType: !136)
!135 = !DIFile(filename: "../lib/u64.h", directory: "/home/gbalats/Downloads/coreutils-8.24/obj-clang")
!136 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !27, line: 55, baseType: !25)
!137 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !27, line: 122, baseType: !25)
!138 = !{!139, !145}
!139 = distinct !DIGlobalVariableExpression(var: !140, expr: !DIExpression())
!140 = !DIGlobalVariable(name: "fillbuf", scope: !131, file: !132, line: 61, type: !141, isLocal: true, isDefinition: true)
!141 = !DICompositeType(tag: DW_TAG_array_type, baseType: !142, size: 1024, align: 8, elements: !143)
!142 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !47)
!143 = !{!144}
!144 = !DISubrange(count: 128)
!145 = distinct !DIGlobalVariableExpression(var: !130, expr: !DIExpression())
!146 = !DICompositeType(tag: DW_TAG_array_type, baseType: !147, size: 5120, align: 64, elements: !148)
!147 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !134)
!148 = !{!149}
!149 = !DISubrange(count: 80)
!150 = distinct !DIGlobalVariableExpression(var: !140, expr: !DIExpression())
!151 = distinct !DIGlobalVariableExpression(var: !152, expr: !DIExpression())
!152 = !DIGlobalVariable(name: "exit_failure", scope: !153, file: !154, line: 24, type: !157, isLocal: false, isDefinition: true)
!153 = distinct !DICompileUnit(language: DW_LANG_C99, file: !154, producer: "clang version 3.7.0 (tags/RELEASE_370/final 255017)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !28, globals: !155)
!154 = !DIFile(filename: "../lib/exitfail.c", directory: "/home/gbalats/Downloads/coreutils-8.24/obj-clang")
!155 = !{!156}
!156 = distinct !DIGlobalVariableExpression(var: !152, expr: !DIExpression())
!157 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !48)
!158 = distinct !DIGlobalVariableExpression(var: !159, expr: !DIExpression())
!159 = !DIGlobalVariable(name: "program_name", scope: !160, file: !161, line: 33, type: !63, isLocal: false, isDefinition: true)
!160 = distinct !DICompileUnit(language: DW_LANG_C99, file: !161, producer: "clang version 3.7.0 (tags/RELEASE_370/final 255017)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !28, retainedTypes: !162, globals: !163)
!161 = !DIFile(filename: "../lib/progname.c", directory: "/home/gbalats/Downloads/coreutils-8.24/obj-clang")
!162 = !{!43, !41}
!163 = !{!164}
!164 = distinct !DIGlobalVariableExpression(var: !159, expr: !DIExpression())
!165 = distinct !DIGlobalVariableExpression(var: !166, expr: !DIExpression())
!166 = !DIGlobalVariable(name: "quoting_style_args", scope: !167, file: !168, line: 75, type: !225, isLocal: false, isDefinition: true)
!167 = distinct !DICompileUnit(language: DW_LANG_C99, file: !168, producer: "clang version 3.7.0 (tags/RELEASE_370/final 255017)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !169, retainedTypes: !187, globals: !188)
!168 = !DIFile(filename: "../lib/quotearg.c", directory: "/home/gbalats/Downloads/coreutils-8.24/obj-clang")
!169 = !{!170, !182, !5}
!170 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quoting_style", file: !171, line: 32, size: 32, align: 32, elements: !172)
!171 = !DIFile(filename: "../lib/quotearg.h", directory: "/home/gbalats/Downloads/coreutils-8.24/obj-clang")
!172 = !{!173, !174, !175, !176, !177, !178, !179, !180, !181}
!173 = !DIEnumerator(name: "literal_quoting_style", value: 0)
!174 = !DIEnumerator(name: "shell_quoting_style", value: 1)
!175 = !DIEnumerator(name: "shell_always_quoting_style", value: 2)
!176 = !DIEnumerator(name: "c_quoting_style", value: 3)
!177 = !DIEnumerator(name: "c_maybe_quoting_style", value: 4)
!178 = !DIEnumerator(name: "escape_quoting_style", value: 5)
!179 = !DIEnumerator(name: "locale_quoting_style", value: 6)
!180 = !DIEnumerator(name: "clocale_quoting_style", value: 7)
!181 = !DIEnumerator(name: "custom_quoting_style", value: 8)
!182 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quoting_flags", file: !171, line: 211, size: 32, align: 32, elements: !183)
!183 = !{!184, !185, !186}
!184 = !DIEnumerator(name: "QA_ELIDE_NULL_BYTES", value: 1)
!185 = !DIEnumerator(name: "QA_ELIDE_OUTER_QUOTES", value: 2)
!186 = !DIEnumerator(name: "QA_SPLIT_TRIGRAPHS", value: 4)
!187 = !{!44, !48, !49}
!188 = !{!189, !190, !196, !207, !209, !214, !221, !223}
!189 = distinct !DIGlobalVariableExpression(var: !166, expr: !DIExpression())
!190 = distinct !DIGlobalVariableExpression(var: !191, expr: !DIExpression())
!191 = !DIGlobalVariable(name: "quoting_style_vals", scope: !167, file: !168, line: 89, type: !192, isLocal: false, isDefinition: true)
!192 = !DICompositeType(tag: DW_TAG_array_type, baseType: !193, size: 256, align: 32, elements: !194)
!193 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !170)
!194 = !{!195}
!195 = !DISubrange(count: 8)
!196 = distinct !DIGlobalVariableExpression(var: !197, expr: !DIExpression())
!197 = !DIGlobalVariable(name: "quote_quoting_options", scope: !167, file: !168, line: 938, type: !198, isLocal: false, isDefinition: true)
!198 = !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !168, line: 55, size: 448, align: 64, elements: !199)
!199 = !{!200, !201, !202, !205, !206}
!200 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !198, file: !168, line: 58, baseType: !170, size: 32, align: 32)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !198, file: !168, line: 61, baseType: !48, size: 32, align: 32, offset: 32)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !198, file: !168, line: 65, baseType: !203, size: 256, align: 32, offset: 64)
!203 = !DICompositeType(tag: DW_TAG_array_type, baseType: !204, size: 256, align: 32, elements: !194)
!204 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !198, file: !168, line: 68, baseType: !63, size: 64, align: 64, offset: 320)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !198, file: !168, line: 71, baseType: !63, size: 64, align: 64, offset: 384)
!207 = distinct !DIGlobalVariableExpression(var: !208, expr: !DIExpression())
!208 = !DIGlobalVariable(name: "default_quoting_options", scope: !167, file: !168, line: 102, type: !198, isLocal: true, isDefinition: true)
!209 = distinct !DIGlobalVariableExpression(var: !210, expr: !DIExpression())
!210 = !DIGlobalVariable(name: "slot0", scope: !167, file: !168, line: 731, type: !211, isLocal: true, isDefinition: true)
!211 = !DICompositeType(tag: DW_TAG_array_type, baseType: !42, size: 2048, align: 8, elements: !212)
!212 = !{!213}
!213 = !DISubrange(count: 256)
!214 = distinct !DIGlobalVariableExpression(var: !215, expr: !DIExpression())
!215 = !DIGlobalVariable(name: "slotvec", scope: !167, file: !168, line: 734, type: !216, isLocal: true, isDefinition: true)
!216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !217, size: 64, align: 64)
!217 = !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !168, line: 723, size: 128, align: 64, elements: !218)
!218 = !{!219, !220}
!219 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !217, file: !168, line: 725, baseType: !44, size: 64, align: 64)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !217, file: !168, line: 726, baseType: !41, size: 64, align: 64, offset: 64)
!221 = distinct !DIGlobalVariableExpression(var: !222, expr: !DIExpression())
!222 = !DIGlobalVariable(name: "nslots", scope: !167, file: !168, line: 732, type: !204, isLocal: true, isDefinition: true)
!223 = distinct !DIGlobalVariableExpression(var: !224, expr: !DIExpression())
!224 = !DIGlobalVariable(name: "slotvec0", scope: !167, file: !168, line: 733, type: !217, isLocal: true, isDefinition: true)
!225 = !DICompositeType(tag: DW_TAG_array_type, baseType: !226, size: 576, align: 64, elements: !227)
!226 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !63)
!227 = !{!228}
!228 = !DISubrange(count: 9)
!229 = distinct !DIGlobalVariableExpression(var: !191, expr: !DIExpression())
!230 = distinct !DIGlobalVariableExpression(var: !197, expr: !DIExpression())
!231 = distinct !DIGlobalVariableExpression(var: !208, expr: !DIExpression())
!232 = distinct !DIGlobalVariableExpression(var: !215, expr: !DIExpression())
!233 = distinct !DIGlobalVariableExpression(var: !222, expr: !DIExpression())
!234 = distinct !DIGlobalVariableExpression(var: !210, expr: !DIExpression())
!235 = distinct !DIGlobalVariableExpression(var: !224, expr: !DIExpression())
!236 = distinct !DIGlobalVariableExpression(var: !237, expr: !DIExpression())
!237 = !DIGlobalVariable(name: "version_etc_copyright", scope: !238, file: !239, line: 26, type: !242, isLocal: false, isDefinition: true)
!238 = distinct !DICompileUnit(language: DW_LANG_C99, file: !239, producer: "clang version 3.7.0 (tags/RELEASE_370/final 255017)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !28, globals: !240)
!239 = !DIFile(filename: "../lib/version-etc-fsf.c", directory: "/home/gbalats/Downloads/coreutils-8.24/obj-clang")
!240 = !{!241}
!241 = distinct !DIGlobalVariableExpression(var: !237, expr: !DIExpression())
!242 = !DICompositeType(tag: DW_TAG_array_type, baseType: !64, size: 376, align: 8, elements: !243)
!243 = !{!244}
!244 = !DISubrange(count: 47)
!245 = distinct !DIGlobalVariableExpression(var: !246, expr: !DIExpression())
!246 = !DIGlobalVariable(name: "have_dupfd_cloexec", scope: !247, file: !248, line: 248, type: !48, isLocal: true, isDefinition: true)
!247 = distinct !DISubprogram(name: "rpl_fcntl", scope: !248, file: !248, line: 185, type: !249, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !251, retainedNodes: !28)
!248 = !DIFile(filename: "../lib/fcntl.c", directory: "/home/gbalats/Downloads/coreutils-8.24/obj-clang")
!249 = !DISubroutineType(types: !250)
!250 = !{!48, !48, !48, null}
!251 = distinct !DICompileUnit(language: DW_LANG_C99, file: !248, producer: "clang version 3.7.0 (tags/RELEASE_370/final 255017)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !28, globals: !252)
!252 = !{!253}
!253 = distinct !DIGlobalVariableExpression(var: !246, expr: !DIExpression())
!254 = distinct !DIGlobalVariableExpression(var: !255, expr: !DIExpression())
!255 = !DIGlobalVariable(name: "charset_aliases", scope: !256, file: !257, line: 120, type: !599, isLocal: true, isDefinition: true)
!256 = distinct !DICompileUnit(language: DW_LANG_C99, file: !257, producer: "clang version 3.7.0 (tags/RELEASE_370/final 255017)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !258, retainedTypes: !162, globals: !597)
!257 = !DIFile(filename: "../lib/localcharset.c", directory: "/home/gbalats/Downloads/coreutils-8.24/obj-clang")
!258 = !{!259}
!259 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !260, line: 41, size: 32, align: 32, elements: !261)
!260 = !DIFile(filename: "/usr/include/langinfo.h", directory: "/home/gbalats/Downloads/coreutils-8.24/obj-clang")
!261 = !{!262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596}
!262 = !DIEnumerator(name: "ABDAY_1", value: 131072)
!263 = !DIEnumerator(name: "ABDAY_2", value: 131073)
!264 = !DIEnumerator(name: "ABDAY_3", value: 131074)
!265 = !DIEnumerator(name: "ABDAY_4", value: 131075)
!266 = !DIEnumerator(name: "ABDAY_5", value: 131076)
!267 = !DIEnumerator(name: "ABDAY_6", value: 131077)
!268 = !DIEnumerator(name: "ABDAY_7", value: 131078)
!269 = !DIEnumerator(name: "DAY_1", value: 131079)
!270 = !DIEnumerator(name: "DAY_2", value: 131080)
!271 = !DIEnumerator(name: "DAY_3", value: 131081)
!272 = !DIEnumerator(name: "DAY_4", value: 131082)
!273 = !DIEnumerator(name: "DAY_5", value: 131083)
!274 = !DIEnumerator(name: "DAY_6", value: 131084)
!275 = !DIEnumerator(name: "DAY_7", value: 131085)
!276 = !DIEnumerator(name: "ABMON_1", value: 131086)
!277 = !DIEnumerator(name: "ABMON_2", value: 131087)
!278 = !DIEnumerator(name: "ABMON_3", value: 131088)
!279 = !DIEnumerator(name: "ABMON_4", value: 131089)
!280 = !DIEnumerator(name: "ABMON_5", value: 131090)
!281 = !DIEnumerator(name: "ABMON_6", value: 131091)
!282 = !DIEnumerator(name: "ABMON_7", value: 131092)
!283 = !DIEnumerator(name: "ABMON_8", value: 131093)
!284 = !DIEnumerator(name: "ABMON_9", value: 131094)
!285 = !DIEnumerator(name: "ABMON_10", value: 131095)
!286 = !DIEnumerator(name: "ABMON_11", value: 131096)
!287 = !DIEnumerator(name: "ABMON_12", value: 131097)
!288 = !DIEnumerator(name: "MON_1", value: 131098)
!289 = !DIEnumerator(name: "MON_2", value: 131099)
!290 = !DIEnumerator(name: "MON_3", value: 131100)
!291 = !DIEnumerator(name: "MON_4", value: 131101)
!292 = !DIEnumerator(name: "MON_5", value: 131102)
!293 = !DIEnumerator(name: "MON_6", value: 131103)
!294 = !DIEnumerator(name: "MON_7", value: 131104)
!295 = !DIEnumerator(name: "MON_8", value: 131105)
!296 = !DIEnumerator(name: "MON_9", value: 131106)
!297 = !DIEnumerator(name: "MON_10", value: 131107)
!298 = !DIEnumerator(name: "MON_11", value: 131108)
!299 = !DIEnumerator(name: "MON_12", value: 131109)
!300 = !DIEnumerator(name: "AM_STR", value: 131110)
!301 = !DIEnumerator(name: "PM_STR", value: 131111)
!302 = !DIEnumerator(name: "D_T_FMT", value: 131112)
!303 = !DIEnumerator(name: "D_FMT", value: 131113)
!304 = !DIEnumerator(name: "T_FMT", value: 131114)
!305 = !DIEnumerator(name: "T_FMT_AMPM", value: 131115)
!306 = !DIEnumerator(name: "ERA", value: 131116)
!307 = !DIEnumerator(name: "__ERA_YEAR", value: 131117)
!308 = !DIEnumerator(name: "ERA_D_FMT", value: 131118)
!309 = !DIEnumerator(name: "ALT_DIGITS", value: 131119)
!310 = !DIEnumerator(name: "ERA_D_T_FMT", value: 131120)
!311 = !DIEnumerator(name: "ERA_T_FMT", value: 131121)
!312 = !DIEnumerator(name: "_NL_TIME_ERA_NUM_ENTRIES", value: 131122)
!313 = !DIEnumerator(name: "_NL_TIME_ERA_ENTRIES", value: 131123)
!314 = !DIEnumerator(name: "_NL_WABDAY_1", value: 131124)
!315 = !DIEnumerator(name: "_NL_WABDAY_2", value: 131125)
!316 = !DIEnumerator(name: "_NL_WABDAY_3", value: 131126)
!317 = !DIEnumerator(name: "_NL_WABDAY_4", value: 131127)
!318 = !DIEnumerator(name: "_NL_WABDAY_5", value: 131128)
!319 = !DIEnumerator(name: "_NL_WABDAY_6", value: 131129)
!320 = !DIEnumerator(name: "_NL_WABDAY_7", value: 131130)
!321 = !DIEnumerator(name: "_NL_WDAY_1", value: 131131)
!322 = !DIEnumerator(name: "_NL_WDAY_2", value: 131132)
!323 = !DIEnumerator(name: "_NL_WDAY_3", value: 131133)
!324 = !DIEnumerator(name: "_NL_WDAY_4", value: 131134)
!325 = !DIEnumerator(name: "_NL_WDAY_5", value: 131135)
!326 = !DIEnumerator(name: "_NL_WDAY_6", value: 131136)
!327 = !DIEnumerator(name: "_NL_WDAY_7", value: 131137)
!328 = !DIEnumerator(name: "_NL_WABMON_1", value: 131138)
!329 = !DIEnumerator(name: "_NL_WABMON_2", value: 131139)
!330 = !DIEnumerator(name: "_NL_WABMON_3", value: 131140)
!331 = !DIEnumerator(name: "_NL_WABMON_4", value: 131141)
!332 = !DIEnumerator(name: "_NL_WABMON_5", value: 131142)
!333 = !DIEnumerator(name: "_NL_WABMON_6", value: 131143)
!334 = !DIEnumerator(name: "_NL_WABMON_7", value: 131144)
!335 = !DIEnumerator(name: "_NL_WABMON_8", value: 131145)
!336 = !DIEnumerator(name: "_NL_WABMON_9", value: 131146)
!337 = !DIEnumerator(name: "_NL_WABMON_10", value: 131147)
!338 = !DIEnumerator(name: "_NL_WABMON_11", value: 131148)
!339 = !DIEnumerator(name: "_NL_WABMON_12", value: 131149)
!340 = !DIEnumerator(name: "_NL_WMON_1", value: 131150)
!341 = !DIEnumerator(name: "_NL_WMON_2", value: 131151)
!342 = !DIEnumerator(name: "_NL_WMON_3", value: 131152)
!343 = !DIEnumerator(name: "_NL_WMON_4", value: 131153)
!344 = !DIEnumerator(name: "_NL_WMON_5", value: 131154)
!345 = !DIEnumerator(name: "_NL_WMON_6", value: 131155)
!346 = !DIEnumerator(name: "_NL_WMON_7", value: 131156)
!347 = !DIEnumerator(name: "_NL_WMON_8", value: 131157)
!348 = !DIEnumerator(name: "_NL_WMON_9", value: 131158)
!349 = !DIEnumerator(name: "_NL_WMON_10", value: 131159)
!350 = !DIEnumerator(name: "_NL_WMON_11", value: 131160)
!351 = !DIEnumerator(name: "_NL_WMON_12", value: 131161)
!352 = !DIEnumerator(name: "_NL_WAM_STR", value: 131162)
!353 = !DIEnumerator(name: "_NL_WPM_STR", value: 131163)
!354 = !DIEnumerator(name: "_NL_WD_T_FMT", value: 131164)
!355 = !DIEnumerator(name: "_NL_WD_FMT", value: 131165)
!356 = !DIEnumerator(name: "_NL_WT_FMT", value: 131166)
!357 = !DIEnumerator(name: "_NL_WT_FMT_AMPM", value: 131167)
!358 = !DIEnumerator(name: "_NL_WERA_YEAR", value: 131168)
!359 = !DIEnumerator(name: "_NL_WERA_D_FMT", value: 131169)
!360 = !DIEnumerator(name: "_NL_WALT_DIGITS", value: 131170)
!361 = !DIEnumerator(name: "_NL_WERA_D_T_FMT", value: 131171)
!362 = !DIEnumerator(name: "_NL_WERA_T_FMT", value: 131172)
!363 = !DIEnumerator(name: "_NL_TIME_WEEK_NDAYS", value: 131173)
!364 = !DIEnumerator(name: "_NL_TIME_WEEK_1STDAY", value: 131174)
!365 = !DIEnumerator(name: "_NL_TIME_WEEK_1STWEEK", value: 131175)
!366 = !DIEnumerator(name: "_NL_TIME_FIRST_WEEKDAY", value: 131176)
!367 = !DIEnumerator(name: "_NL_TIME_FIRST_WORKDAY", value: 131177)
!368 = !DIEnumerator(name: "_NL_TIME_CAL_DIRECTION", value: 131178)
!369 = !DIEnumerator(name: "_NL_TIME_TIMEZONE", value: 131179)
!370 = !DIEnumerator(name: "_DATE_FMT", value: 131180)
!371 = !DIEnumerator(name: "_NL_W_DATE_FMT", value: 131181)
!372 = !DIEnumerator(name: "_NL_TIME_CODESET", value: 131182)
!373 = !DIEnumerator(name: "_NL_NUM_LC_TIME", value: 131183)
!374 = !DIEnumerator(name: "_NL_COLLATE_NRULES", value: 196608)
!375 = !DIEnumerator(name: "_NL_COLLATE_RULESETS", value: 196609)
!376 = !DIEnumerator(name: "_NL_COLLATE_TABLEMB", value: 196610)
!377 = !DIEnumerator(name: "_NL_COLLATE_WEIGHTMB", value: 196611)
!378 = !DIEnumerator(name: "_NL_COLLATE_EXTRAMB", value: 196612)
!379 = !DIEnumerator(name: "_NL_COLLATE_INDIRECTMB", value: 196613)
!380 = !DIEnumerator(name: "_NL_COLLATE_GAP1", value: 196614)
!381 = !DIEnumerator(name: "_NL_COLLATE_GAP2", value: 196615)
!382 = !DIEnumerator(name: "_NL_COLLATE_GAP3", value: 196616)
!383 = !DIEnumerator(name: "_NL_COLLATE_TABLEWC", value: 196617)
!384 = !DIEnumerator(name: "_NL_COLLATE_WEIGHTWC", value: 196618)
!385 = !DIEnumerator(name: "_NL_COLLATE_EXTRAWC", value: 196619)
!386 = !DIEnumerator(name: "_NL_COLLATE_INDIRECTWC", value: 196620)
!387 = !DIEnumerator(name: "_NL_COLLATE_SYMB_HASH_SIZEMB", value: 196621)
!388 = !DIEnumerator(name: "_NL_COLLATE_SYMB_TABLEMB", value: 196622)
!389 = !DIEnumerator(name: "_NL_COLLATE_SYMB_EXTRAMB", value: 196623)
!390 = !DIEnumerator(name: "_NL_COLLATE_COLLSEQMB", value: 196624)
!391 = !DIEnumerator(name: "_NL_COLLATE_COLLSEQWC", value: 196625)
!392 = !DIEnumerator(name: "_NL_COLLATE_CODESET", value: 196626)
!393 = !DIEnumerator(name: "_NL_NUM_LC_COLLATE", value: 196627)
!394 = !DIEnumerator(name: "_NL_CTYPE_CLASS", value: 0)
!395 = !DIEnumerator(name: "_NL_CTYPE_TOUPPER", value: 1)
!396 = !DIEnumerator(name: "_NL_CTYPE_GAP1", value: 2)
!397 = !DIEnumerator(name: "_NL_CTYPE_TOLOWER", value: 3)
!398 = !DIEnumerator(name: "_NL_CTYPE_GAP2", value: 4)
!399 = !DIEnumerator(name: "_NL_CTYPE_CLASS32", value: 5)
!400 = !DIEnumerator(name: "_NL_CTYPE_GAP3", value: 6)
!401 = !DIEnumerator(name: "_NL_CTYPE_GAP4", value: 7)
!402 = !DIEnumerator(name: "_NL_CTYPE_GAP5", value: 8)
!403 = !DIEnumerator(name: "_NL_CTYPE_GAP6", value: 9)
!404 = !DIEnumerator(name: "_NL_CTYPE_CLASS_NAMES", value: 10)
!405 = !DIEnumerator(name: "_NL_CTYPE_MAP_NAMES", value: 11)
!406 = !DIEnumerator(name: "_NL_CTYPE_WIDTH", value: 12)
!407 = !DIEnumerator(name: "_NL_CTYPE_MB_CUR_MAX", value: 13)
!408 = !DIEnumerator(name: "_NL_CTYPE_CODESET_NAME", value: 14)
!409 = !DIEnumerator(name: "CODESET", value: 14)
!410 = !DIEnumerator(name: "_NL_CTYPE_TOUPPER32", value: 15)
!411 = !DIEnumerator(name: "_NL_CTYPE_TOLOWER32", value: 16)
!412 = !DIEnumerator(name: "_NL_CTYPE_CLASS_OFFSET", value: 17)
!413 = !DIEnumerator(name: "_NL_CTYPE_MAP_OFFSET", value: 18)
!414 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS_MB_LEN", value: 19)
!415 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS0_MB", value: 20)
!416 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS1_MB", value: 21)
!417 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS2_MB", value: 22)
!418 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS3_MB", value: 23)
!419 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS4_MB", value: 24)
!420 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS5_MB", value: 25)
!421 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS6_MB", value: 26)
!422 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS7_MB", value: 27)
!423 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS8_MB", value: 28)
!424 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS9_MB", value: 29)
!425 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS_WC_LEN", value: 30)
!426 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS0_WC", value: 31)
!427 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS1_WC", value: 32)
!428 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS2_WC", value: 33)
!429 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS3_WC", value: 34)
!430 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS4_WC", value: 35)
!431 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS5_WC", value: 36)
!432 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS6_WC", value: 37)
!433 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS7_WC", value: 38)
!434 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS8_WC", value: 39)
!435 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS9_WC", value: 40)
!436 = !DIEnumerator(name: "_NL_CTYPE_OUTDIGIT0_MB", value: 41)
!437 = !DIEnumerator(name: "_NL_CTYPE_OUTDIGIT1_MB", value: 42)
!438 = !DIEnumerator(name: "_NL_CTYPE_OUTDIGIT2_MB", value: 43)
!439 = !DIEnumerator(name: "_NL_CTYPE_OUTDIGIT3_MB", value: 44)
!440 = !DIEnumerator(name: "_NL_CTYPE_OUTDIGIT4_MB", value: 45)
!441 = !DIEnumerator(name: "_NL_CTYPE_OUTDIGIT5_MB", value: 46)
!442 = !DIEnumerator(name: "_NL_CTYPE_OUTDIGIT6_MB", value: 47)
!443 = !DIEnumerator(name: "_NL_CTYPE_OUTDIGIT7_MB", value: 48)
!444 = !DIEnumerator(name: "_NL_CTYPE_OUTDIGIT8_MB", value: 49)
!445 = !DIEnumerator(name: "_NL_CTYPE_OUTDIGIT9_MB", value: 50)
!446 = !DIEnumerator(name: "_NL_CTYPE_OUTDIGIT0_WC", value: 51)
!447 = !DIEnumerator(name: "_NL_CTYPE_OUTDIGIT1_WC", value: 52)
!448 = !DIEnumerator(name: "_NL_CTYPE_OUTDIGIT2_WC", value: 53)
!449 = !DIEnumerator(name: "_NL_CTYPE_OUTDIGIT3_WC", value: 54)
!450 = !DIEnumerator(name: "_NL_CTYPE_OUTDIGIT4_WC", value: 55)
!451 = !DIEnumerator(name: "_NL_CTYPE_OUTDIGIT5_WC", value: 56)
!452 = !DIEnumerator(name: "_NL_CTYPE_OUTDIGIT6_WC", value: 57)
!453 = !DIEnumerator(name: "_NL_CTYPE_OUTDIGIT7_WC", value: 58)
!454 = !DIEnumerator(name: "_NL_CTYPE_OUTDIGIT8_WC", value: 59)
!455 = !DIEnumerator(name: "_NL_CTYPE_OUTDIGIT9_WC", value: 60)
!456 = !DIEnumerator(name: "_NL_CTYPE_TRANSLIT_TAB_SIZE", value: 61)
!457 = !DIEnumerator(name: "_NL_CTYPE_TRANSLIT_FROM_IDX", value: 62)
!458 = !DIEnumerator(name: "_NL_CTYPE_TRANSLIT_FROM_TBL", value: 63)
!459 = !DIEnumerator(name: "_NL_CTYPE_TRANSLIT_TO_IDX", value: 64)
!460 = !DIEnumerator(name: "_NL_CTYPE_TRANSLIT_TO_TBL", value: 65)
!461 = !DIEnumerator(name: "_NL_CTYPE_TRANSLIT_DEFAULT_MISSING_LEN", value: 66)
!462 = !DIEnumerator(name: "_NL_CTYPE_TRANSLIT_DEFAULT_MISSING", value: 67)
!463 = !DIEnumerator(name: "_NL_CTYPE_TRANSLIT_IGNORE_LEN", value: 68)
!464 = !DIEnumerator(name: "_NL_CTYPE_TRANSLIT_IGNORE", value: 69)
!465 = !DIEnumerator(name: "_NL_CTYPE_MAP_TO_NONASCII", value: 70)
!466 = !DIEnumerator(name: "_NL_CTYPE_NONASCII_CASE", value: 71)
!467 = !DIEnumerator(name: "_NL_CTYPE_EXTRA_MAP_1", value: 72)
!468 = !DIEnumerator(name: "_NL_CTYPE_EXTRA_MAP_2", value: 73)
!469 = !DIEnumerator(name: "_NL_CTYPE_EXTRA_MAP_3", value: 74)
!470 = !DIEnumerator(name: "_NL_CTYPE_EXTRA_MAP_4", value: 75)
!471 = !DIEnumerator(name: "_NL_CTYPE_EXTRA_MAP_5", value: 76)
!472 = !DIEnumerator(name: "_NL_CTYPE_EXTRA_MAP_6", value: 77)
!473 = !DIEnumerator(name: "_NL_CTYPE_EXTRA_MAP_7", value: 78)
!474 = !DIEnumerator(name: "_NL_CTYPE_EXTRA_MAP_8", value: 79)
!475 = !DIEnumerator(name: "_NL_CTYPE_EXTRA_MAP_9", value: 80)
!476 = !DIEnumerator(name: "_NL_CTYPE_EXTRA_MAP_10", value: 81)
!477 = !DIEnumerator(name: "_NL_CTYPE_EXTRA_MAP_11", value: 82)
!478 = !DIEnumerator(name: "_NL_CTYPE_EXTRA_MAP_12", value: 83)
!479 = !DIEnumerator(name: "_NL_CTYPE_EXTRA_MAP_13", value: 84)
!480 = !DIEnumerator(name: "_NL_CTYPE_EXTRA_MAP_14", value: 85)
!481 = !DIEnumerator(name: "_NL_NUM_LC_CTYPE", value: 86)
!482 = !DIEnumerator(name: "__INT_CURR_SYMBOL", value: 262144)
!483 = !DIEnumerator(name: "__CURRENCY_SYMBOL", value: 262145)
!484 = !DIEnumerator(name: "__MON_DECIMAL_POINT", value: 262146)
!485 = !DIEnumerator(name: "__MON_THOUSANDS_SEP", value: 262147)
!486 = !DIEnumerator(name: "__MON_GROUPING", value: 262148)
!487 = !DIEnumerator(name: "__POSITIVE_SIGN", value: 262149)
!488 = !DIEnumerator(name: "__NEGATIVE_SIGN", value: 262150)
!489 = !DIEnumerator(name: "__INT_FRAC_DIGITS", value: 262151)
!490 = !DIEnumerator(name: "__FRAC_DIGITS", value: 262152)
!491 = !DIEnumerator(name: "__P_CS_PRECEDES", value: 262153)
!492 = !DIEnumerator(name: "__P_SEP_BY_SPACE", value: 262154)
!493 = !DIEnumerator(name: "__N_CS_PRECEDES", value: 262155)
!494 = !DIEnumerator(name: "__N_SEP_BY_SPACE", value: 262156)
!495 = !DIEnumerator(name: "__P_SIGN_POSN", value: 262157)
!496 = !DIEnumerator(name: "__N_SIGN_POSN", value: 262158)
!497 = !DIEnumerator(name: "_NL_MONETARY_CRNCYSTR", value: 262159)
!498 = !DIEnumerator(name: "__INT_P_CS_PRECEDES", value: 262160)
!499 = !DIEnumerator(name: "__INT_P_SEP_BY_SPACE", value: 262161)
!500 = !DIEnumerator(name: "__INT_N_CS_PRECEDES", value: 262162)
!501 = !DIEnumerator(name: "__INT_N_SEP_BY_SPACE", value: 262163)
!502 = !DIEnumerator(name: "__INT_P_SIGN_POSN", value: 262164)
!503 = !DIEnumerator(name: "__INT_N_SIGN_POSN", value: 262165)
!504 = !DIEnumerator(name: "_NL_MONETARY_DUO_INT_CURR_SYMBOL", value: 262166)
!505 = !DIEnumerator(name: "_NL_MONETARY_DUO_CURRENCY_SYMBOL", value: 262167)
!506 = !DIEnumerator(name: "_NL_MONETARY_DUO_INT_FRAC_DIGITS", value: 262168)
!507 = !DIEnumerator(name: "_NL_MONETARY_DUO_FRAC_DIGITS", value: 262169)
!508 = !DIEnumerator(name: "_NL_MONETARY_DUO_P_CS_PRECEDES", value: 262170)
!509 = !DIEnumerator(name: "_NL_MONETARY_DUO_P_SEP_BY_SPACE", value: 262171)
!510 = !DIEnumerator(name: "_NL_MONETARY_DUO_N_CS_PRECEDES", value: 262172)
!511 = !DIEnumerator(name: "_NL_MONETARY_DUO_N_SEP_BY_SPACE", value: 262173)
!512 = !DIEnumerator(name: "_NL_MONETARY_DUO_INT_P_CS_PRECEDES", value: 262174)
!513 = !DIEnumerator(name: "_NL_MONETARY_DUO_INT_P_SEP_BY_SPACE", value: 262175)
!514 = !DIEnumerator(name: "_NL_MONETARY_DUO_INT_N_CS_PRECEDES", value: 262176)
!515 = !DIEnumerator(name: "_NL_MONETARY_DUO_INT_N_SEP_BY_SPACE", value: 262177)
!516 = !DIEnumerator(name: "_NL_MONETARY_DUO_P_SIGN_POSN", value: 262178)
!517 = !DIEnumerator(name: "_NL_MONETARY_DUO_N_SIGN_POSN", value: 262179)
!518 = !DIEnumerator(name: "_NL_MONETARY_DUO_INT_P_SIGN_POSN", value: 262180)
!519 = !DIEnumerator(name: "_NL_MONETARY_DUO_INT_N_SIGN_POSN", value: 262181)
!520 = !DIEnumerator(name: "_NL_MONETARY_UNO_VALID_FROM", value: 262182)
!521 = !DIEnumerator(name: "_NL_MONETARY_UNO_VALID_TO", value: 262183)
!522 = !DIEnumerator(name: "_NL_MONETARY_DUO_VALID_FROM", value: 262184)
!523 = !DIEnumerator(name: "_NL_MONETARY_DUO_VALID_TO", value: 262185)
!524 = !DIEnumerator(name: "_NL_MONETARY_CONVERSION_RATE", value: 262186)
!525 = !DIEnumerator(name: "_NL_MONETARY_DECIMAL_POINT_WC", value: 262187)
!526 = !DIEnumerator(name: "_NL_MONETARY_THOUSANDS_SEP_WC", value: 262188)
!527 = !DIEnumerator(name: "_NL_MONETARY_CODESET", value: 262189)
!528 = !DIEnumerator(name: "_NL_NUM_LC_MONETARY", value: 262190)
!529 = !DIEnumerator(name: "__DECIMAL_POINT", value: 65536)
!530 = !DIEnumerator(name: "RADIXCHAR", value: 65536)
!531 = !DIEnumerator(name: "__THOUSANDS_SEP", value: 65537)
!532 = !DIEnumerator(name: "THOUSEP", value: 65537)
!533 = !DIEnumerator(name: "__GROUPING", value: 65538)
!534 = !DIEnumerator(name: "_NL_NUMERIC_DECIMAL_POINT_WC", value: 65539)
!535 = !DIEnumerator(name: "_NL_NUMERIC_THOUSANDS_SEP_WC", value: 65540)
!536 = !DIEnumerator(name: "_NL_NUMERIC_CODESET", value: 65541)
!537 = !DIEnumerator(name: "_NL_NUM_LC_NUMERIC", value: 65542)
!538 = !DIEnumerator(name: "__YESEXPR", value: 327680)
!539 = !DIEnumerator(name: "__NOEXPR", value: 327681)
!540 = !DIEnumerator(name: "__YESSTR", value: 327682)
!541 = !DIEnumerator(name: "__NOSTR", value: 327683)
!542 = !DIEnumerator(name: "_NL_MESSAGES_CODESET", value: 327684)
!543 = !DIEnumerator(name: "_NL_NUM_LC_MESSAGES", value: 327685)
!544 = !DIEnumerator(name: "_NL_PAPER_HEIGHT", value: 458752)
!545 = !DIEnumerator(name: "_NL_PAPER_WIDTH", value: 458753)
!546 = !DIEnumerator(name: "_NL_PAPER_CODESET", value: 458754)
!547 = !DIEnumerator(name: "_NL_NUM_LC_PAPER", value: 458755)
!548 = !DIEnumerator(name: "_NL_NAME_NAME_FMT", value: 524288)
!549 = !DIEnumerator(name: "_NL_NAME_NAME_GEN", value: 524289)
!550 = !DIEnumerator(name: "_NL_NAME_NAME_MR", value: 524290)
!551 = !DIEnumerator(name: "_NL_NAME_NAME_MRS", value: 524291)
!552 = !DIEnumerator(name: "_NL_NAME_NAME_MISS", value: 524292)
!553 = !DIEnumerator(name: "_NL_NAME_NAME_MS", value: 524293)
!554 = !DIEnumerator(name: "_NL_NAME_CODESET", value: 524294)
!555 = !DIEnumerator(name: "_NL_NUM_LC_NAME", value: 524295)
!556 = !DIEnumerator(name: "_NL_ADDRESS_POSTAL_FMT", value: 589824)
!557 = !DIEnumerator(name: "_NL_ADDRESS_COUNTRY_NAME", value: 589825)
!558 = !DIEnumerator(name: "_NL_ADDRESS_COUNTRY_POST", value: 589826)
!559 = !DIEnumerator(name: "_NL_ADDRESS_COUNTRY_AB2", value: 589827)
!560 = !DIEnumerator(name: "_NL_ADDRESS_COUNTRY_AB3", value: 589828)
!561 = !DIEnumerator(name: "_NL_ADDRESS_COUNTRY_CAR", value: 589829)
!562 = !DIEnumerator(name: "_NL_ADDRESS_COUNTRY_NUM", value: 589830)
!563 = !DIEnumerator(name: "_NL_ADDRESS_COUNTRY_ISBN", value: 589831)
!564 = !DIEnumerator(name: "_NL_ADDRESS_LANG_NAME", value: 589832)
!565 = !DIEnumerator(name: "_NL_ADDRESS_LANG_AB", value: 589833)
!566 = !DIEnumerator(name: "_NL_ADDRESS_LANG_TERM", value: 589834)
!567 = !DIEnumerator(name: "_NL_ADDRESS_LANG_LIB", value: 589835)
!568 = !DIEnumerator(name: "_NL_ADDRESS_CODESET", value: 589836)
!569 = !DIEnumerator(name: "_NL_NUM_LC_ADDRESS", value: 589837)
!570 = !DIEnumerator(name: "_NL_TELEPHONE_TEL_INT_FMT", value: 655360)
!571 = !DIEnumerator(name: "_NL_TELEPHONE_TEL_DOM_FMT", value: 655361)
!572 = !DIEnumerator(name: "_NL_TELEPHONE_INT_SELECT", value: 655362)
!573 = !DIEnumerator(name: "_NL_TELEPHONE_INT_PREFIX", value: 655363)
!574 = !DIEnumerator(name: "_NL_TELEPHONE_CODESET", value: 655364)
!575 = !DIEnumerator(name: "_NL_NUM_LC_TELEPHONE", value: 655365)
!576 = !DIEnumerator(name: "_NL_MEASUREMENT_MEASUREMENT", value: 720896)
!577 = !DIEnumerator(name: "_NL_MEASUREMENT_CODESET", value: 720897)
!578 = !DIEnumerator(name: "_NL_NUM_LC_MEASUREMENT", value: 720898)
!579 = !DIEnumerator(name: "_NL_IDENTIFICATION_TITLE", value: 786432)
!580 = !DIEnumerator(name: "_NL_IDENTIFICATION_SOURCE", value: 786433)
!581 = !DIEnumerator(name: "_NL_IDENTIFICATION_ADDRESS", value: 786434)
!582 = !DIEnumerator(name: "_NL_IDENTIFICATION_CONTACT", value: 786435)
!583 = !DIEnumerator(name: "_NL_IDENTIFICATION_EMAIL", value: 786436)
!584 = !DIEnumerator(name: "_NL_IDENTIFICATION_TEL", value: 786437)
!585 = !DIEnumerator(name: "_NL_IDENTIFICATION_FAX", value: 786438)
!586 = !DIEnumerator(name: "_NL_IDENTIFICATION_LANGUAGE", value: 786439)
!587 = !DIEnumerator(name: "_NL_IDENTIFICATION_TERRITORY", value: 786440)
!588 = !DIEnumerator(name: "_NL_IDENTIFICATION_AUDIENCE", value: 786441)
!589 = !DIEnumerator(name: "_NL_IDENTIFICATION_APPLICATION", value: 786442)
!590 = !DIEnumerator(name: "_NL_IDENTIFICATION_ABBREVIATION", value: 786443)
!591 = !DIEnumerator(name: "_NL_IDENTIFICATION_REVISION", value: 786444)
!592 = !DIEnumerator(name: "_NL_IDENTIFICATION_DATE", value: 786445)
!593 = !DIEnumerator(name: "_NL_IDENTIFICATION_CATEGORY", value: 786446)
!594 = !DIEnumerator(name: "_NL_IDENTIFICATION_CODESET", value: 786447)
!595 = !DIEnumerator(name: "_NL_NUM_LC_IDENTIFICATION", value: 786448)
!596 = !DIEnumerator(name: "_NL_NUM", value: 786449)
!597 = !{!598}
!598 = distinct !DIGlobalVariableExpression(var: !255, expr: !DIExpression())
!599 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !63)
!600 = distinct !DICompileUnit(language: DW_LANG_C99, file: !601, producer: "clang version 3.7.0 (tags/RELEASE_370/final 255017)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !602)
!601 = !DIFile(filename: "../lib/fadvise.c", directory: "/home/gbalats/Downloads/coreutils-8.24/obj-clang")
!602 = !{!31}
!603 = distinct !DICompileUnit(language: DW_LANG_C99, file: !604, producer: "clang version 3.7.0 (tags/RELEASE_370/final 255017)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !28)
!604 = !DIFile(filename: "../lib/fopen-safer.c", directory: "/home/gbalats/Downloads/coreutils-8.24/obj-clang")
!605 = distinct !DICompileUnit(language: DW_LANG_C99, file: !606, producer: "clang version 3.7.0 (tags/RELEASE_370/final 255017)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !28)
!606 = !DIFile(filename: "../lib/dup-safer.c", directory: "/home/gbalats/Downloads/coreutils-8.24/obj-clang")
!607 = distinct !DICompileUnit(language: DW_LANG_C99, file: !608, producer: "clang version 3.7.0 (tags/RELEASE_370/final 255017)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !609, retainedTypes: !613)
!608 = !DIFile(filename: "../lib/version-etc.c", directory: "/home/gbalats/Downloads/coreutils-8.24/obj-clang")
!609 = !{!610}
!610 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !608, line: 41, size: 32, align: 32, elements: !611)
!611 = !{!612}
!612 = !DIEnumerator(name: "COPYRIGHT_YEAR", value: 2015)
!613 = !{!43}
!614 = distinct !DICompileUnit(language: DW_LANG_C99, file: !615, producer: "clang version 3.7.0 (tags/RELEASE_370/final 255017)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !616, retainedTypes: !625)
!615 = !DIFile(filename: "../lib/xmalloc.c", directory: "/home/gbalats/Downloads/coreutils-8.24/obj-clang")
!616 = !{!617}
!617 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !619, file: !618, line: 191, size: 32, align: 32, elements: !623)
!618 = !DIFile(filename: "../lib/xalloc.h", directory: "/home/gbalats/Downloads/coreutils-8.24/obj-clang")
!619 = distinct !DISubprogram(name: "x2nrealloc", scope: !618, file: !618, line: 179, type: !620, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !614, retainedNodes: !28)
!620 = !DISubroutineType(types: !621)
!621 = !{!43, !43, !622, !44}
!622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !44, size: 64, align: 64)
!623 = !{!624}
!624 = !DIEnumerator(name: "DEFAULT_MXFAST", value: 128)
!625 = !{!44, !41, !43}
!626 = distinct !DICompileUnit(language: DW_LANG_C99, file: !627, producer: "clang version 3.7.0 (tags/RELEASE_370/final 255017)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !28)
!627 = !DIFile(filename: "../lib/xalloc-die.c", directory: "/home/gbalats/Downloads/coreutils-8.24/obj-clang")
!628 = distinct !DICompileUnit(language: DW_LANG_C99, file: !629, producer: "clang version 3.7.0 (tags/RELEASE_370/final 255017)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !28, retainedTypes: !613)
!629 = !DIFile(filename: "../lib/calloc.c", directory: "/home/gbalats/Downloads/coreutils-8.24/obj-clang")
!630 = distinct !DICompileUnit(language: DW_LANG_C99, file: !631, producer: "clang version 3.7.0 (tags/RELEASE_370/final 255017)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !28)
!631 = !DIFile(filename: "../lib/fclose.c", directory: "/home/gbalats/Downloads/coreutils-8.24/obj-clang")
!632 = distinct !DICompileUnit(language: DW_LANG_C99, file: !633, producer: "clang version 3.7.0 (tags/RELEASE_370/final 255017)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !28, retainedTypes: !613)
!633 = !DIFile(filename: "../lib/fflush.c", directory: "/home/gbalats/Downloads/coreutils-8.24/obj-clang")
!634 = distinct !DICompileUnit(language: DW_LANG_C99, file: !635, producer: "clang version 3.7.0 (tags/RELEASE_370/final 255017)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !28, retainedTypes: !613)
!635 = !DIFile(filename: "../lib/fseeko.c", directory: "/home/gbalats/Downloads/coreutils-8.24/obj-clang")
!636 = distinct !DICompileUnit(language: DW_LANG_C99, file: !637, producer: "clang version 3.7.0 (tags/RELEASE_370/final 255017)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !28, retainedTypes: !638)
!637 = !DIFile(filename: "../lib/mbrtowc.c", directory: "/home/gbalats/Downloads/coreutils-8.24/obj-clang")
!638 = !{!43, !44}
!639 = distinct !DICompileUnit(language: DW_LANG_C99, file: !640, producer: "clang version 3.7.0 (tags/RELEASE_370/final 255017)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !28, retainedTypes: !641)
!640 = !DIFile(filename: "../lib/c-strcasecmp.c", directory: "/home/gbalats/Downloads/coreutils-8.24/obj-clang")
!641 = !{!642}
!642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !142, size: 64, align: 64)
!643 = distinct !DICompileUnit(language: DW_LANG_C99, file: !644, producer: "clang version 3.7.0 (tags/RELEASE_370/final 255017)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !28)
!644 = !DIFile(filename: "../lib/close-stream.c", directory: "/home/gbalats/Downloads/coreutils-8.24/obj-clang")
!645 = distinct !DICompileUnit(language: DW_LANG_C99, file: !646, producer: "clang version 3.7.0 (tags/RELEASE_370/final 255017)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !28)
!646 = !DIFile(filename: "../lib/c-ctype.c", directory: "/home/gbalats/Downloads/coreutils-8.24/obj-clang")
!647 = !{!"clang version 3.7.0 (tags/RELEASE_370/final 255017)"}
!648 = !{i32 2, !"Dwarf Version", i32 4}
!649 = !{i32 2, !"Debug Info Version", i32 3}
!650 = distinct !DISubprogram(name: "usage", scope: !3, file: !3, line: 158, type: !651, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !28)
!651 = !DISubroutineType(types: !652)
!652 = !{null, !48}
!653 = !DILocalVariable(name: "status", arg: 1, scope: !650, file: !3, line: 158, type: !48)
!654 = !DILocation(line: 158, column: 12, scope: !650)
!655 = !DILocation(line: 160, column: 7, scope: !656)
!656 = distinct !DILexicalBlock(scope: !650, file: !3, line: 160, column: 7)
!657 = !DILocation(line: 160, column: 14, scope: !656)
!658 = !DILocation(line: 160, column: 7, scope: !650)
!659 = !DILocation(line: 161, column: 5, scope: !656)
!660 = !DILocation(line: 164, column: 15, scope: !661)
!661 = distinct !DILexicalBlock(scope: !656, file: !3, line: 163, column: 5)
!662 = !DILocation(line: 168, column: 15, scope: !661)
!663 = !DILocation(line: 164, column: 7, scope: !661)
!664 = !DILocation(line: 172, column: 7, scope: !661)
!665 = !DILocation(line: 180, column: 9, scope: !666)
!666 = distinct !DILexicalBlock(scope: !661, file: !3, line: 174, column: 11)
!667 = !DILocation(line: 184, column: 15, scope: !661)
!668 = !DILocation(line: 184, column: 7, scope: !661)
!669 = !DILocation(line: 187, column: 7, scope: !661)
!670 = !DILocation(line: 195, column: 9, scope: !671)
!671 = distinct !DILexicalBlock(scope: !661, file: !3, line: 190, column: 11)
!672 = !DILocation(line: 198, column: 7, scope: !661)
!673 = !DILocation(line: 207, column: 7, scope: !661)
!674 = !DILocation(line: 208, column: 7, scope: !661)
!675 = !DILocation(line: 209, column: 15, scope: !661)
!676 = !DILocation(line: 209, column: 7, scope: !661)
!677 = !DILocation(line: 216, column: 7, scope: !661)
!678 = !DILocation(line: 219, column: 9, scope: !650)
!679 = !DILocation(line: 219, column: 3, scope: !650)
!680 = !DILocation(line: 220, column: 1, scope: !650)
!681 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 693, type: !682, scopeLine: 694, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !28)
!682 = !DISubroutineType(types: !683)
!683 = !{!48, !48, !684}
!684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !41, size: 64, align: 64)
!685 = !DILocalVariable(name: "argc", arg: 1, scope: !681, file: !3, line: 693, type: !48)
!686 = !DILocation(line: 693, column: 11, scope: !681)
!687 = !DILocalVariable(name: "argv", arg: 2, scope: !681, file: !3, line: 693, type: !684)
!688 = !DILocation(line: 693, column: 24, scope: !681)
!689 = !DILocalVariable(name: "bin_buffer_unaligned", scope: !681, file: !3, line: 695, type: !690)
!690 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 576, align: 8, elements: !691)
!691 = !{!692}
!692 = !DISubrange(count: 72)
!693 = !DILocation(line: 695, column: 17, scope: !681)
!694 = !DILocalVariable(name: "bin_buffer", scope: !681, file: !3, line: 697, type: !46)
!695 = !DILocation(line: 697, column: 18, scope: !681)
!696 = !DILocation(line: 697, column: 42, scope: !681)
!697 = !DILocation(line: 697, column: 31, scope: !681)
!698 = !DILocalVariable(name: "do_check", scope: !681, file: !3, line: 698, type: !53)
!699 = !DILocation(line: 698, column: 8, scope: !681)
!700 = !DILocalVariable(name: "opt", scope: !681, file: !3, line: 699, type: !48)
!701 = !DILocation(line: 699, column: 7, scope: !681)
!702 = !DILocalVariable(name: "ok", scope: !681, file: !3, line: 700, type: !53)
!703 = !DILocation(line: 700, column: 8, scope: !681)
!704 = !DILocalVariable(name: "binary", scope: !681, file: !3, line: 701, type: !48)
!705 = !DILocation(line: 701, column: 7, scope: !681)
!706 = !DILocalVariable(name: "prefix_tag", scope: !681, file: !3, line: 702, type: !53)
!707 = !DILocation(line: 702, column: 8, scope: !681)
!708 = !DILocation(line: 706, column: 21, scope: !681)
!709 = !DILocation(line: 706, column: 3, scope: !681)
!710 = !DILocation(line: 707, column: 3, scope: !681)
!711 = !DILocation(line: 708, column: 3, scope: !681)
!712 = !DILocation(line: 709, column: 3, scope: !681)
!713 = !DILocation(line: 711, column: 3, scope: !681)
!714 = !DILocation(line: 715, column: 12, scope: !681)
!715 = !DILocation(line: 715, column: 3, scope: !681)
!716 = !DILocation(line: 717, column: 3, scope: !681)
!717 = !DILocation(line: 717, column: 30, scope: !718)
!718 = !DILexicalBlockFile(scope: !719, file: !3, discriminator: 2)
!719 = !DILexicalBlockFile(scope: !681, file: !3, discriminator: 1)
!720 = !DILocation(line: 717, column: 36, scope: !681)
!721 = !DILocation(line: 717, column: 17, scope: !681)
!722 = !DILocation(line: 717, column: 15, scope: !681)
!723 = !DILocation(line: 717, column: 71, scope: !681)
!724 = !DILocation(line: 718, column: 13, scope: !681)
!725 = !DILocation(line: 718, column: 5, scope: !681)
!726 = !DILocation(line: 721, column: 16, scope: !727)
!727 = distinct !DILexicalBlock(scope: !681, file: !3, line: 719, column: 7)
!728 = !DILocation(line: 722, column: 9, scope: !727)
!729 = !DILocation(line: 724, column: 18, scope: !727)
!730 = !DILocation(line: 725, column: 9, scope: !727)
!731 = !DILocation(line: 727, column: 21, scope: !727)
!732 = !DILocation(line: 728, column: 14, scope: !727)
!733 = !DILocation(line: 729, column: 15, scope: !727)
!734 = !DILocation(line: 730, column: 9, scope: !727)
!735 = !DILocation(line: 732, column: 16, scope: !727)
!736 = !DILocation(line: 733, column: 9, scope: !727)
!737 = !DILocation(line: 735, column: 21, scope: !727)
!738 = !DILocation(line: 736, column: 14, scope: !727)
!739 = !DILocation(line: 737, column: 15, scope: !727)
!740 = !DILocation(line: 738, column: 9, scope: !727)
!741 = !DILocation(line: 740, column: 21, scope: !727)
!742 = !DILocation(line: 741, column: 14, scope: !727)
!743 = !DILocation(line: 742, column: 15, scope: !727)
!744 = !DILocation(line: 743, column: 9, scope: !727)
!745 = !DILocation(line: 745, column: 16, scope: !727)
!746 = !DILocation(line: 746, column: 9, scope: !727)
!747 = !DILocation(line: 748, column: 20, scope: !727)
!748 = !DILocation(line: 749, column: 16, scope: !727)
!749 = !DILocation(line: 750, column: 9, scope: !727)
!750 = !DILocation(line: 751, column: 7, scope: !727)
!751 = !DILocation(line: 752, column: 7, scope: !727)
!752 = !DILocation(line: 754, column: 9, scope: !727)
!753 = !DILocation(line: 757, column: 26, scope: !681)
!754 = !DILocation(line: 758, column: 20, scope: !681)
!755 = !DILocation(line: 760, column: 7, scope: !756)
!756 = distinct !DILexicalBlock(scope: !681, file: !3, line: 760, column: 7)
!757 = !DILocation(line: 760, column: 18, scope: !756)
!758 = !DILocation(line: 760, column: 22, scope: !759)
!759 = !DILexicalBlockFile(scope: !756, file: !3, discriminator: 1)
!760 = !DILocation(line: 760, column: 7, scope: !681)
!761 = !DILocation(line: 767, column: 19, scope: !762)
!762 = distinct !DILexicalBlock(scope: !756, file: !3, line: 761, column: 4)
!763 = !DILocation(line: 767, column: 6, scope: !762)
!764 = !DILocation(line: 768, column: 6, scope: !762)
!765 = !DILocation(line: 771, column: 7, scope: !766)
!766 = distinct !DILexicalBlock(scope: !681, file: !3, line: 771, column: 7)
!767 = !DILocation(line: 771, column: 18, scope: !766)
!768 = !DILocation(line: 771, column: 21, scope: !769)
!769 = !DILexicalBlockFile(scope: !766, file: !3, discriminator: 1)
!770 = !DILocation(line: 771, column: 7, scope: !681)
!771 = !DILocation(line: 773, column: 20, scope: !772)
!772 = distinct !DILexicalBlock(scope: !766, file: !3, line: 772, column: 5)
!773 = !DILocation(line: 773, column: 7, scope: !772)
!774 = !DILocation(line: 775, column: 7, scope: !772)
!775 = !DILocation(line: 778, column: 12, scope: !776)
!776 = distinct !DILexicalBlock(scope: !681, file: !3, line: 778, column: 7)
!777 = !DILocation(line: 778, column: 9, scope: !776)
!778 = !DILocation(line: 778, column: 19, scope: !776)
!779 = !DILocation(line: 778, column: 22, scope: !780)
!780 = !DILexicalBlockFile(scope: !776, file: !3, discriminator: 1)
!781 = !DILocation(line: 778, column: 7, scope: !681)
!782 = !DILocation(line: 780, column: 20, scope: !783)
!783 = distinct !DILexicalBlock(scope: !776, file: !3, line: 779, column: 5)
!784 = !DILocation(line: 780, column: 7, scope: !783)
!785 = !DILocation(line: 782, column: 7, scope: !783)
!786 = !DILocation(line: 785, column: 7, scope: !787)
!787 = distinct !DILexicalBlock(scope: !681, file: !3, line: 785, column: 7)
!788 = !DILocation(line: 785, column: 19, scope: !787)
!789 = !DILocation(line: 785, column: 23, scope: !790)
!790 = !DILexicalBlockFile(scope: !787, file: !3, discriminator: 1)
!791 = !DILocation(line: 785, column: 7, scope: !681)
!792 = !DILocation(line: 788, column: 8, scope: !793)
!793 = distinct !DILexicalBlock(scope: !787, file: !3, line: 786, column: 5)
!794 = !DILocation(line: 787, column: 7, scope: !793)
!795 = !DILocation(line: 789, column: 7, scope: !793)
!796 = !DILocation(line: 792, column: 7, scope: !797)
!797 = distinct !DILexicalBlock(scope: !681, file: !3, line: 792, column: 7)
!798 = !DILocation(line: 792, column: 12, scope: !797)
!799 = !DILocation(line: 792, column: 16, scope: !800)
!800 = !DILexicalBlockFile(scope: !797, file: !3, discriminator: 1)
!801 = !DILocation(line: 792, column: 7, scope: !681)
!802 = !DILocation(line: 795, column: 8, scope: !803)
!803 = distinct !DILexicalBlock(scope: !797, file: !3, line: 793, column: 5)
!804 = !DILocation(line: 794, column: 7, scope: !803)
!805 = !DILocation(line: 796, column: 7, scope: !803)
!806 = !DILocation(line: 799, column: 7, scope: !807)
!807 = distinct !DILexicalBlock(scope: !681, file: !3, line: 799, column: 7)
!808 = !DILocation(line: 799, column: 13, scope: !807)
!809 = !DILocation(line: 799, column: 17, scope: !810)
!810 = !DILexicalBlockFile(scope: !807, file: !3, discriminator: 1)
!811 = !DILocation(line: 799, column: 7, scope: !681)
!812 = !DILocation(line: 802, column: 8, scope: !813)
!813 = distinct !DILexicalBlock(scope: !807, file: !3, line: 800, column: 5)
!814 = !DILocation(line: 801, column: 7, scope: !813)
!815 = !DILocation(line: 803, column: 7, scope: !813)
!816 = !DILocation(line: 806, column: 7, scope: !817)
!817 = distinct !DILexicalBlock(scope: !681, file: !3, line: 806, column: 7)
!818 = !DILocation(line: 806, column: 17, scope: !817)
!819 = !DILocation(line: 806, column: 16, scope: !817)
!820 = !DILocation(line: 806, column: 14, scope: !817)
!821 = !DILocation(line: 806, column: 7, scope: !681)
!822 = !DILocation(line: 809, column: 9, scope: !823)
!823 = distinct !DILexicalBlock(scope: !817, file: !3, line: 807, column: 4)
!824 = !DILocation(line: 808, column: 6, scope: !823)
!825 = !DILocation(line: 810, column: 6, scope: !823)
!826 = !DILocation(line: 813, column: 20, scope: !827)
!827 = distinct !DILexicalBlock(scope: !681, file: !3, line: 813, column: 7)
!828 = !DILocation(line: 813, column: 27, scope: !827)
!829 = !DILocation(line: 813, column: 7, scope: !681)
!830 = !DILocation(line: 814, column: 12, scope: !827)
!831 = !DILocation(line: 814, column: 5, scope: !827)
!832 = !DILocation(line: 816, column: 7, scope: !833)
!833 = distinct !DILexicalBlock(scope: !681, file: !3, line: 816, column: 7)
!834 = !DILocation(line: 816, column: 17, scope: !833)
!835 = !DILocation(line: 816, column: 14, scope: !833)
!836 = !DILocation(line: 816, column: 7, scope: !681)
!837 = !DILocation(line: 817, column: 20, scope: !833)
!838 = !DILocation(line: 817, column: 14, scope: !833)
!839 = !DILocation(line: 817, column: 5, scope: !833)
!840 = !DILocation(line: 817, column: 18, scope: !833)
!841 = !DILocation(line: 819, column: 3, scope: !681)
!842 = !DILocation(line: 819, column: 10, scope: !843)
!843 = !DILexicalBlockFile(scope: !844, file: !3, discriminator: 2)
!844 = !DILexicalBlockFile(scope: !845, file: !3, discriminator: 1)
!845 = distinct !DILexicalBlock(scope: !846, file: !3, line: 819, column: 3)
!846 = distinct !DILexicalBlock(scope: !681, file: !3, line: 819, column: 3)
!847 = !DILocation(line: 819, column: 19, scope: !845)
!848 = !DILocation(line: 819, column: 17, scope: !845)
!849 = !DILocation(line: 819, column: 3, scope: !846)
!850 = !DILocalVariable(name: "file", scope: !851, file: !3, line: 821, type: !41)
!851 = distinct !DILexicalBlock(scope: !845, file: !3, line: 820, column: 5)
!852 = !DILocation(line: 821, column: 13, scope: !851)
!853 = !DILocation(line: 821, column: 25, scope: !851)
!854 = !DILocation(line: 821, column: 20, scope: !851)
!855 = !DILocation(line: 823, column: 11, scope: !856)
!856 = distinct !DILexicalBlock(scope: !851, file: !3, line: 823, column: 11)
!857 = !DILocation(line: 823, column: 11, scope: !851)
!858 = !DILocation(line: 824, column: 29, scope: !856)
!859 = !DILocation(line: 824, column: 15, scope: !856)
!860 = !DILocation(line: 824, column: 12, scope: !856)
!861 = !DILocation(line: 824, column: 9, scope: !856)
!862 = !DILocalVariable(name: "file_is_binary", scope: !863, file: !3, line: 827, type: !48)
!863 = distinct !DILexicalBlock(scope: !856, file: !3, line: 826, column: 9)
!864 = !DILocation(line: 827, column: 15, scope: !863)
!865 = !DILocation(line: 827, column: 32, scope: !863)
!866 = !DILocation(line: 829, column: 30, scope: !867)
!867 = distinct !DILexicalBlock(scope: !863, file: !3, line: 829, column: 15)
!868 = !DILocation(line: 829, column: 53, scope: !867)
!869 = !DILocation(line: 829, column: 17, scope: !867)
!870 = !DILocation(line: 829, column: 15, scope: !863)
!871 = !DILocation(line: 830, column: 16, scope: !867)
!872 = !DILocation(line: 830, column: 13, scope: !867)
!873 = !DILocalVariable(name: "needs_escape", scope: !874, file: !3, line: 840, type: !53)
!874 = distinct !DILexicalBlock(scope: !867, file: !3, line: 832, column: 13)
!875 = !DILocation(line: 840, column: 20, scope: !874)
!876 = !DILocation(line: 840, column: 43, scope: !874)
!877 = !DILocation(line: 840, column: 35, scope: !874)
!878 = !DILocation(line: 840, column: 55, scope: !874)
!879 = !DILocation(line: 840, column: 66, scope: !880)
!880 = !DILexicalBlockFile(scope: !874, file: !3, discriminator: 2)
!881 = !DILocation(line: 840, column: 58, scope: !874)
!882 = !DILocation(line: 840, column: 20, scope: !883)
!883 = !DILexicalBlockFile(scope: !884, file: !3, discriminator: 3)
!884 = !DILexicalBlockFile(scope: !874, file: !3, discriminator: 1)
!885 = !DILocation(line: 842, column: 19, scope: !886)
!886 = distinct !DILexicalBlock(scope: !874, file: !3, line: 842, column: 19)
!887 = !DILocation(line: 842, column: 19, scope: !874)
!888 = !DILocation(line: 844, column: 23, scope: !889)
!889 = distinct !DILexicalBlock(scope: !890, file: !3, line: 844, column: 23)
!890 = distinct !DILexicalBlock(scope: !886, file: !3, line: 843, column: 17)
!891 = !DILocation(line: 844, column: 23, scope: !890)
!892 = !DILocation(line: 845, column: 21, scope: !889)
!893 = !DILocation(line: 847, column: 19, scope: !890)
!894 = !DILocation(line: 848, column: 19, scope: !890)
!895 = !DILocation(line: 849, column: 35, scope: !890)
!896 = !DILocation(line: 849, column: 41, scope: !890)
!897 = !DILocation(line: 849, column: 19, scope: !890)
!898 = !DILocation(line: 850, column: 19, scope: !890)
!899 = !DILocation(line: 851, column: 17, scope: !890)
!900 = !DILocalVariable(name: "i", scope: !874, file: !3, line: 853, type: !44)
!901 = !DILocation(line: 853, column: 22, scope: !874)
!902 = !DILocation(line: 857, column: 20, scope: !903)
!903 = distinct !DILexicalBlock(scope: !874, file: !3, line: 857, column: 19)
!904 = !DILocation(line: 857, column: 31, scope: !903)
!905 = !DILocation(line: 857, column: 34, scope: !906)
!906 = !DILexicalBlockFile(scope: !903, file: !3, discriminator: 1)
!907 = !DILocation(line: 857, column: 19, scope: !874)
!908 = !DILocation(line: 858, column: 17, scope: !903)
!909 = !DILocation(line: 860, column: 22, scope: !910)
!910 = distinct !DILexicalBlock(scope: !874, file: !3, line: 860, column: 15)
!911 = !DILocation(line: 860, column: 20, scope: !910)
!912 = !DILocation(line: 860, column: 27, scope: !913)
!913 = !DILexicalBlockFile(scope: !914, file: !3, discriminator: 2)
!914 = !DILexicalBlockFile(scope: !915, file: !3, discriminator: 1)
!915 = distinct !DILexicalBlock(scope: !910, file: !3, line: 860, column: 15)
!916 = !DILocation(line: 860, column: 32, scope: !915)
!917 = !DILocation(line: 860, column: 49, scope: !915)
!918 = !DILocation(line: 860, column: 29, scope: !915)
!919 = !DILocation(line: 860, column: 15, scope: !910)
!920 = !DILocation(line: 861, column: 44, scope: !915)
!921 = !DILocation(line: 861, column: 33, scope: !915)
!922 = !DILocation(line: 861, column: 17, scope: !915)
!923 = !DILocation(line: 860, column: 55, scope: !915)
!924 = !DILocation(line: 860, column: 15, scope: !915)
!925 = !DILocation(line: 863, column: 20, scope: !926)
!926 = distinct !DILexicalBlock(scope: !874, file: !3, line: 863, column: 19)
!927 = !DILocation(line: 863, column: 19, scope: !874)
!928 = !DILocation(line: 865, column: 19, scope: !929)
!929 = distinct !DILexicalBlock(scope: !926, file: !3, line: 864, column: 17)
!930 = !DILocation(line: 867, column: 19, scope: !929)
!931 = !DILocation(line: 869, column: 35, scope: !929)
!932 = !DILocation(line: 869, column: 41, scope: !929)
!933 = !DILocation(line: 869, column: 19, scope: !929)
!934 = !DILocation(line: 870, column: 17, scope: !929)
!935 = !DILocation(line: 872, column: 15, scope: !874)
!936 = !DILocation(line: 875, column: 5, scope: !851)
!937 = !DILocation(line: 819, column: 25, scope: !845)
!938 = !DILocation(line: 819, column: 3, scope: !845)
!939 = !DILocation(line: 877, column: 7, scope: !940)
!940 = distinct !DILexicalBlock(scope: !681, file: !3, line: 877, column: 7)
!941 = !DILocation(line: 877, column: 23, scope: !940)
!942 = !DILocation(line: 877, column: 34, scope: !943)
!943 = !DILexicalBlockFile(scope: !940, file: !3, discriminator: 1)
!944 = !DILocation(line: 877, column: 26, scope: !940)
!945 = !DILocation(line: 877, column: 41, scope: !940)
!946 = !DILocation(line: 877, column: 7, scope: !681)
!947 = !DILocation(line: 878, column: 26, scope: !940)
!948 = !DILocation(line: 878, column: 33, scope: !940)
!949 = !DILocation(line: 878, column: 5, scope: !940)
!950 = !DILocation(line: 880, column: 10, scope: !681)
!951 = !DILocation(line: 880, column: 3, scope: !681)
!952 = distinct !DISubprogram(name: "emit_try_help", scope: !21, file: !21, line: 611, type: !953, scopeLine: 612, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !28)
!953 = !DISubroutineType(types: !954)
!954 = !{null}
!955 = !DILocation(line: 613, column: 12, scope: !952)
!956 = !DILocation(line: 613, column: 20, scope: !952)
!957 = !DILocation(line: 613, column: 66, scope: !952)
!958 = !DILocation(line: 613, column: 3, scope: !952)
!959 = !DILocation(line: 614, column: 1, scope: !952)
!960 = distinct !DISubprogram(name: "emit_stdin_note", scope: !21, file: !21, line: 535, type: !953, scopeLine: 536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !28)
!961 = !DILocation(line: 537, column: 3, scope: !960)
!962 = !DILocation(line: 540, column: 1, scope: !960)
!963 = !DILocalVariable(name: "program", arg: 1, scope: !60, file: !21, line: 569, type: !63)
!964 = !DILocation(line: 569, column: 34, scope: !60)
!965 = !DILocalVariable(name: "node", scope: !60, file: !21, line: 581, type: !63)
!966 = !DILocation(line: 581, column: 15, scope: !60)
!967 = !DILocation(line: 581, column: 22, scope: !60)
!968 = !DILocalVariable(name: "map_prog", scope: !60, file: !21, line: 582, type: !969)
!969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !66, size: 64, align: 64)
!970 = !DILocation(line: 582, column: 25, scope: !60)
!971 = !DILocation(line: 584, column: 3, scope: !60)
!972 = !DILocation(line: 584, column: 10, scope: !973)
!973 = !DILexicalBlockFile(scope: !974, file: !21, discriminator: 4)
!974 = !DILexicalBlockFile(scope: !60, file: !21, discriminator: 1)
!975 = !DILocation(line: 584, column: 20, scope: !60)
!976 = !DILocation(line: 584, column: 10, scope: !60)
!977 = !DILocation(line: 584, column: 28, scope: !60)
!978 = !DILocation(line: 584, column: 33, scope: !979)
!979 = !DILexicalBlockFile(scope: !60, file: !21, discriminator: 2)
!980 = !DILocation(line: 584, column: 31, scope: !60)
!981 = !DILocation(line: 584, column: 3, scope: !982)
!982 = !DILexicalBlockFile(scope: !60, file: !21, discriminator: 3)
!983 = !DILocation(line: 585, column: 13, scope: !60)
!984 = !DILocation(line: 587, column: 7, scope: !985)
!985 = distinct !DILexicalBlock(scope: !60, file: !21, line: 587, column: 7)
!986 = !DILocation(line: 587, column: 17, scope: !985)
!987 = !DILocation(line: 587, column: 7, scope: !60)
!988 = !DILocation(line: 588, column: 12, scope: !985)
!989 = !DILocation(line: 588, column: 22, scope: !985)
!990 = !DILocation(line: 588, column: 10, scope: !985)
!991 = !DILocation(line: 588, column: 5, scope: !985)
!992 = !DILocation(line: 590, column: 11, scope: !60)
!993 = !DILocation(line: 590, column: 3, scope: !60)
!994 = !DILocalVariable(name: "lc_messages", scope: !60, file: !21, line: 594, type: !63)
!995 = !DILocation(line: 594, column: 15, scope: !60)
!996 = !DILocation(line: 594, column: 29, scope: !60)
!997 = !DILocation(line: 595, column: 7, scope: !998)
!998 = distinct !DILexicalBlock(scope: !60, file: !21, line: 595, column: 7)
!999 = !DILocation(line: 595, column: 19, scope: !998)
!1000 = !DILocation(line: 595, column: 22, scope: !1001)
!1001 = !DILexicalBlockFile(scope: !998, file: !21, discriminator: 1)
!1002 = !DILocation(line: 595, column: 7, scope: !60)
!1003 = !DILocation(line: 601, column: 15, scope: !1004)
!1004 = distinct !DILexicalBlock(scope: !998, file: !21, line: 596, column: 5)
!1005 = !DILocation(line: 602, column: 61, scope: !1004)
!1006 = !DILocation(line: 601, column: 7, scope: !1004)
!1007 = !DILocation(line: 603, column: 5, scope: !1004)
!1008 = !DILocation(line: 604, column: 11, scope: !60)
!1009 = !DILocation(line: 605, column: 24, scope: !60)
!1010 = !DILocation(line: 604, column: 3, scope: !60)
!1011 = !DILocation(line: 606, column: 11, scope: !60)
!1012 = !DILocation(line: 607, column: 11, scope: !60)
!1013 = !DILocation(line: 607, column: 17, scope: !60)
!1014 = !DILocation(line: 607, column: 25, scope: !60)
!1015 = !DILocation(line: 607, column: 22, scope: !60)
!1016 = !DILocation(line: 606, column: 3, scope: !60)
!1017 = !DILocation(line: 608, column: 1, scope: !60)
!1018 = distinct !DISubprogram(name: "ptr_align", scope: !21, file: !21, line: 482, type: !1019, scopeLine: 483, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !28)
!1019 = !DISubroutineType(types: !1020)
!1020 = !{!43, !1021, !44}
!1021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 64, align: 64)
!1022 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1023 = !DILocalVariable(name: "ptr", arg: 1, scope: !1018, file: !21, line: 482, type: !1021)
!1024 = !DILocation(line: 482, column: 24, scope: !1018)
!1025 = !DILocalVariable(name: "alignment", arg: 2, scope: !1018, file: !21, line: 482, type: !44)
!1026 = !DILocation(line: 482, column: 36, scope: !1018)
!1027 = !DILocalVariable(name: "p0", scope: !1018, file: !21, line: 484, type: !63)
!1028 = !DILocation(line: 484, column: 15, scope: !1018)
!1029 = !DILocation(line: 484, column: 20, scope: !1018)
!1030 = !DILocalVariable(name: "p1", scope: !1018, file: !21, line: 485, type: !63)
!1031 = !DILocation(line: 485, column: 15, scope: !1018)
!1032 = !DILocation(line: 485, column: 20, scope: !1018)
!1033 = !DILocation(line: 485, column: 25, scope: !1018)
!1034 = !DILocation(line: 485, column: 23, scope: !1018)
!1035 = !DILocation(line: 485, column: 35, scope: !1018)
!1036 = !DILocation(line: 486, column: 20, scope: !1018)
!1037 = !DILocation(line: 486, column: 34, scope: !1018)
!1038 = !DILocation(line: 486, column: 25, scope: !1018)
!1039 = !DILocation(line: 486, column: 39, scope: !1018)
!1040 = !DILocation(line: 486, column: 37, scope: !1018)
!1041 = !DILocation(line: 486, column: 23, scope: !1018)
!1042 = !DILocation(line: 486, column: 3, scope: !1018)
!1043 = distinct !DISubprogram(name: "bad_cast", scope: !21, file: !21, line: 627, type: !1044, scopeLine: 628, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !28)
!1044 = !DISubroutineType(types: !1045)
!1045 = !{!41, !63}
!1046 = !DILocalVariable(name: "s", arg: 1, scope: !1043, file: !21, line: 627, type: !63)
!1047 = !DILocation(line: 627, column: 23, scope: !1043)
!1048 = !DILocation(line: 629, column: 19, scope: !1043)
!1049 = !DILocation(line: 629, column: 3, scope: !1043)
!1050 = !DILocalVariable(name: "checkfile_name", arg: 1, scope: !84, file: !3, line: 480, type: !63)
!1051 = !DILocation(line: 480, column: 27, scope: !84)
!1052 = !DILocalVariable(name: "checkfile_stream", scope: !84, file: !3, line: 482, type: !1053)
!1053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1054, size: 64, align: 64)
!1054 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1055, line: 48, baseType: !1056)
!1055 = !DIFile(filename: "/usr/include/stdio.h", directory: "/home/gbalats/Downloads/coreutils-8.24/obj-clang")
!1056 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !1057, line: 245, size: 1728, align: 64, elements: !1058)
!1057 = !DIFile(filename: "/usr/include/libio.h", directory: "/home/gbalats/Downloads/coreutils-8.24/obj-clang")
!1058 = !{!1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1079, !1080, !1081, !1082, !1086, !1087, !1089, !1093, !1096, !1098, !1099, !1100, !1101, !1102, !1103, !1104}
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1056, file: !1057, line: 246, baseType: !48, size: 32, align: 32)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1056, file: !1057, line: 251, baseType: !41, size: 64, align: 64, offset: 64)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1056, file: !1057, line: 252, baseType: !41, size: 64, align: 64, offset: 128)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1056, file: !1057, line: 253, baseType: !41, size: 64, align: 64, offset: 192)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1056, file: !1057, line: 254, baseType: !41, size: 64, align: 64, offset: 256)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1056, file: !1057, line: 255, baseType: !41, size: 64, align: 64, offset: 320)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1056, file: !1057, line: 256, baseType: !41, size: 64, align: 64, offset: 384)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1056, file: !1057, line: 257, baseType: !41, size: 64, align: 64, offset: 448)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1056, file: !1057, line: 258, baseType: !41, size: 64, align: 64, offset: 512)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1056, file: !1057, line: 260, baseType: !41, size: 64, align: 64, offset: 576)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1056, file: !1057, line: 261, baseType: !41, size: 64, align: 64, offset: 640)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1056, file: !1057, line: 262, baseType: !41, size: 64, align: 64, offset: 704)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1056, file: !1057, line: 264, baseType: !1072, size: 64, align: 64, offset: 768)
!1072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1073, size: 64, align: 64)
!1073 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !1057, line: 160, size: 192, align: 64, elements: !1074)
!1074 = !{!1075, !1076, !1078}
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1073, file: !1057, line: 161, baseType: !1072, size: 64, align: 64)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !1073, file: !1057, line: 162, baseType: !1077, size: 64, align: 64, offset: 64)
!1077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 64, align: 64)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !1073, file: !1057, line: 166, baseType: !48, size: 32, align: 32, offset: 128)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1056, file: !1057, line: 266, baseType: !1077, size: 64, align: 64, offset: 832)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1056, file: !1057, line: 268, baseType: !48, size: 32, align: 32, offset: 896)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1056, file: !1057, line: 272, baseType: !48, size: 32, align: 32, offset: 928)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1056, file: !1057, line: 274, baseType: !1083, size: 64, align: 64, offset: 960)
!1083 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !1084, line: 131, baseType: !1085)
!1084 = !DIFile(filename: "/usr/include/bits/types.h", directory: "/home/gbalats/Downloads/coreutils-8.24/obj-clang")
!1085 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1056, file: !1057, line: 278, baseType: !49, size: 16, align: 16, offset: 1024)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1056, file: !1057, line: 279, baseType: !1088, size: 8, align: 8, offset: 1040)
!1088 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1056, file: !1057, line: 280, baseType: !1090, size: 8, align: 8, offset: 1048)
!1090 = !DICompositeType(tag: DW_TAG_array_type, baseType: !42, size: 8, align: 8, elements: !1091)
!1091 = !{!1092}
!1092 = !DISubrange(count: 1)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1056, file: !1057, line: 284, baseType: !1094, size: 64, align: 64, offset: 1088)
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 64, align: 64)
!1095 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !1057, line: 154, baseType: null)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1056, file: !1057, line: 293, baseType: !1097, size: 64, align: 64, offset: 1152)
!1097 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !1084, line: 132, baseType: !1085)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !1056, file: !1057, line: 302, baseType: !43, size: 64, align: 64, offset: 1216)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !1056, file: !1057, line: 303, baseType: !43, size: 64, align: 64, offset: 1280)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !1056, file: !1057, line: 304, baseType: !43, size: 64, align: 64, offset: 1344)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !1056, file: !1057, line: 305, baseType: !43, size: 64, align: 64, offset: 1408)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1056, file: !1057, line: 306, baseType: !44, size: 64, align: 64, offset: 1472)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1056, file: !1057, line: 308, baseType: !48, size: 32, align: 32, offset: 1536)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1056, file: !1057, line: 310, baseType: !1105, size: 160, align: 8, offset: 1568)
!1105 = !DICompositeType(tag: DW_TAG_array_type, baseType: !42, size: 160, align: 8, elements: !1106)
!1106 = !{!1107}
!1107 = !DISubrange(count: 20)
!1108 = !DILocation(line: 482, column: 9, scope: !84)
!1109 = !DILocalVariable(name: "n_misformatted_lines", scope: !84, file: !3, line: 483, type: !26)
!1110 = !DILocation(line: 483, column: 13, scope: !84)
!1111 = !DILocalVariable(name: "n_properly_formatted_lines", scope: !84, file: !3, line: 484, type: !26)
!1112 = !DILocation(line: 484, column: 13, scope: !84)
!1113 = !DILocalVariable(name: "n_improperly_formatted_lines", scope: !84, file: !3, line: 485, type: !26)
!1114 = !DILocation(line: 485, column: 13, scope: !84)
!1115 = !DILocalVariable(name: "n_mismatched_checksums", scope: !84, file: !3, line: 486, type: !26)
!1116 = !DILocation(line: 486, column: 13, scope: !84)
!1117 = !DILocalVariable(name: "n_open_or_read_failures", scope: !84, file: !3, line: 487, type: !26)
!1118 = !DILocation(line: 487, column: 13, scope: !84)
!1119 = !DILocalVariable(name: "bin_buffer_unaligned", scope: !84, file: !3, line: 488, type: !690)
!1120 = !DILocation(line: 488, column: 17, scope: !84)
!1121 = !DILocalVariable(name: "bin_buffer", scope: !84, file: !3, line: 490, type: !46)
!1122 = !DILocation(line: 490, column: 18, scope: !84)
!1123 = !DILocation(line: 490, column: 42, scope: !84)
!1124 = !DILocation(line: 490, column: 31, scope: !84)
!1125 = !DILocalVariable(name: "line_number", scope: !84, file: !3, line: 491, type: !26)
!1126 = !DILocation(line: 491, column: 13, scope: !84)
!1127 = !DILocalVariable(name: "line", scope: !84, file: !3, line: 492, type: !41)
!1128 = !DILocation(line: 492, column: 9, scope: !84)
!1129 = !DILocalVariable(name: "line_chars_allocated", scope: !84, file: !3, line: 493, type: !44)
!1130 = !DILocation(line: 493, column: 10, scope: !84)
!1131 = !DILocalVariable(name: "is_stdin", scope: !84, file: !3, line: 494, type: !53)
!1132 = !DILocation(line: 494, column: 8, scope: !84)
!1133 = !DILocation(line: 494, column: 19, scope: !84)
!1134 = !DILocation(line: 496, column: 7, scope: !1135)
!1135 = distinct !DILexicalBlock(scope: !84, file: !3, line: 496, column: 7)
!1136 = !DILocation(line: 496, column: 7, scope: !84)
!1137 = !DILocation(line: 498, column: 23, scope: !1138)
!1138 = distinct !DILexicalBlock(scope: !1135, file: !3, line: 497, column: 5)
!1139 = !DILocation(line: 499, column: 24, scope: !1138)
!1140 = !DILocation(line: 499, column: 22, scope: !1138)
!1141 = !DILocation(line: 500, column: 26, scope: !1138)
!1142 = !DILocation(line: 500, column: 24, scope: !1138)
!1143 = !DILocation(line: 501, column: 5, scope: !1138)
!1144 = !DILocation(line: 504, column: 33, scope: !1145)
!1145 = distinct !DILexicalBlock(scope: !1135, file: !3, line: 503, column: 5)
!1146 = !DILocation(line: 504, column: 26, scope: !1145)
!1147 = !DILocation(line: 504, column: 24, scope: !1145)
!1148 = !DILocation(line: 505, column: 11, scope: !1149)
!1149 = distinct !DILexicalBlock(scope: !1145, file: !3, line: 505, column: 11)
!1150 = !DILocation(line: 505, column: 28, scope: !1149)
!1151 = !DILocation(line: 505, column: 11, scope: !1145)
!1152 = !DILocation(line: 507, column: 21, scope: !1153)
!1153 = distinct !DILexicalBlock(scope: !1149, file: !3, line: 506, column: 9)
!1154 = !DILocation(line: 507, column: 34, scope: !1153)
!1155 = !DILocation(line: 507, column: 11, scope: !1153)
!1156 = !DILocation(line: 508, column: 11, scope: !1153)
!1157 = !DILocation(line: 512, column: 15, scope: !84)
!1158 = !DILocation(line: 513, column: 8, scope: !84)
!1159 = !DILocation(line: 514, column: 24, scope: !84)
!1160 = !DILocation(line: 515, column: 3, scope: !84)
!1161 = !DILocalVariable(name: "filename", scope: !1162, file: !3, line: 517, type: !41)
!1162 = distinct !DILexicalBlock(scope: !84, file: !3, line: 516, column: 5)
!1163 = !DILocation(line: 517, column: 13, scope: !1162)
!1164 = !DILocalVariable(name: "binary", scope: !1162, file: !3, line: 518, type: !48)
!1165 = !DILocation(line: 518, column: 11, scope: !1162)
!1166 = !DILocalVariable(name: "hex_digest", scope: !1162, file: !3, line: 519, type: !46)
!1167 = !DILocation(line: 519, column: 22, scope: !1162)
!1168 = !DILocalVariable(name: "line_length", scope: !1162, file: !3, line: 520, type: !1169)
!1169 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !1170, line: 109, baseType: !1171)
!1170 = !DIFile(filename: "/usr/include/sys/types.h", directory: "/home/gbalats/Downloads/coreutils-8.24/obj-clang")
!1171 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !1084, line: 172, baseType: !1085)
!1172 = !DILocation(line: 520, column: 15, scope: !1162)
!1173 = !DILocation(line: 522, column: 7, scope: !1162)
!1174 = !DILocation(line: 523, column: 11, scope: !1175)
!1175 = distinct !DILexicalBlock(scope: !1162, file: !3, line: 523, column: 11)
!1176 = !DILocation(line: 523, column: 23, scope: !1175)
!1177 = !DILocation(line: 523, column: 11, scope: !1162)
!1178 = !DILocation(line: 524, column: 33, scope: !1175)
!1179 = !DILocation(line: 525, column: 16, scope: !1175)
!1180 = !DILocation(line: 524, column: 9, scope: !1175)
!1181 = !DILocation(line: 527, column: 60, scope: !1162)
!1182 = !DILocation(line: 527, column: 21, scope: !1162)
!1183 = !DILocation(line: 527, column: 19, scope: !1162)
!1184 = !DILocation(line: 528, column: 11, scope: !1185)
!1185 = distinct !DILexicalBlock(scope: !1162, file: !3, line: 528, column: 11)
!1186 = !DILocation(line: 528, column: 23, scope: !1185)
!1187 = !DILocation(line: 528, column: 11, scope: !1162)
!1188 = !DILocation(line: 529, column: 9, scope: !1185)
!1189 = !DILocation(line: 532, column: 11, scope: !1190)
!1190 = distinct !DILexicalBlock(scope: !1162, file: !3, line: 532, column: 11)
!1191 = !DILocation(line: 532, column: 19, scope: !1190)
!1192 = !DILocation(line: 532, column: 11, scope: !1162)
!1193 = !DILocation(line: 533, column: 9, scope: !1190)
!1194 = !DILocation(line: 536, column: 16, scope: !1195)
!1195 = distinct !DILexicalBlock(scope: !1162, file: !3, line: 536, column: 11)
!1196 = !DILocation(line: 536, column: 28, scope: !1195)
!1197 = !DILocation(line: 536, column: 11, scope: !1195)
!1198 = !DILocation(line: 536, column: 33, scope: !1195)
!1199 = !DILocation(line: 536, column: 11, scope: !1162)
!1200 = !DILocation(line: 537, column: 14, scope: !1195)
!1201 = !DILocation(line: 537, column: 9, scope: !1195)
!1202 = !DILocation(line: 537, column: 29, scope: !1195)
!1203 = !DILocation(line: 539, column: 23, scope: !1204)
!1204 = distinct !DILexicalBlock(scope: !1162, file: !3, line: 539, column: 11)
!1205 = !DILocation(line: 539, column: 29, scope: !1204)
!1206 = !DILocation(line: 539, column: 14, scope: !1204)
!1207 = !DILocation(line: 540, column: 14, scope: !1204)
!1208 = !DILocation(line: 540, column: 20, scope: !1209)
!1209 = !DILexicalBlockFile(scope: !1204, file: !3, discriminator: 1)
!1210 = !DILocation(line: 540, column: 29, scope: !1204)
!1211 = !DILocation(line: 540, column: 32, scope: !1212)
!1212 = !DILexicalBlockFile(scope: !1204, file: !3, discriminator: 2)
!1213 = !DILocation(line: 541, column: 14, scope: !1204)
!1214 = !DILocation(line: 541, column: 29, scope: !1209)
!1215 = !DILocation(line: 541, column: 17, scope: !1204)
!1216 = !DILocation(line: 539, column: 11, scope: !1162)
!1217 = !DILocation(line: 543, column: 11, scope: !1218)
!1218 = distinct !DILexicalBlock(scope: !1204, file: !3, line: 542, column: 9)
!1219 = !DILocation(line: 545, column: 15, scope: !1220)
!1220 = distinct !DILexicalBlock(scope: !1218, file: !3, line: 545, column: 15)
!1221 = !DILocation(line: 545, column: 15, scope: !1218)
!1222 = !DILocation(line: 548, column: 22, scope: !1223)
!1223 = distinct !DILexicalBlock(scope: !1220, file: !3, line: 546, column: 13)
!1224 = !DILocation(line: 550, column: 22, scope: !1223)
!1225 = !DILocation(line: 550, column: 38, scope: !1223)
!1226 = !DILocation(line: 547, column: 15, scope: !1223)
!1227 = !DILocation(line: 552, column: 13, scope: !1223)
!1228 = !DILocation(line: 554, column: 11, scope: !1218)
!1229 = !DILocation(line: 555, column: 9, scope: !1218)
!1230 = !DILocalVariable(name: "ok", scope: !1231, file: !3, line: 562, type: !53)
!1231 = distinct !DILexicalBlock(scope: !1204, file: !3, line: 557, column: 9)
!1232 = !DILocation(line: 562, column: 16, scope: !1231)
!1233 = !DILocation(line: 564, column: 11, scope: !1231)
!1234 = !DILocation(line: 566, column: 29, scope: !1231)
!1235 = !DILocation(line: 566, column: 48, scope: !1231)
!1236 = !DILocation(line: 566, column: 16, scope: !1231)
!1237 = !DILocation(line: 566, column: 14, scope: !1231)
!1238 = !DILocation(line: 568, column: 16, scope: !1239)
!1239 = distinct !DILexicalBlock(scope: !1231, file: !3, line: 568, column: 15)
!1240 = !DILocation(line: 568, column: 15, scope: !1231)
!1241 = !DILocation(line: 570, column: 15, scope: !1242)
!1242 = distinct !DILexicalBlock(scope: !1239, file: !3, line: 569, column: 13)
!1243 = !DILocation(line: 571, column: 20, scope: !1244)
!1244 = distinct !DILexicalBlock(scope: !1242, file: !3, line: 571, column: 19)
!1245 = !DILocation(line: 571, column: 19, scope: !1242)
!1246 = !DILocation(line: 573, column: 27, scope: !1247)
!1247 = distinct !DILexicalBlock(scope: !1244, file: !3, line: 572, column: 17)
!1248 = !DILocation(line: 573, column: 59, scope: !1247)
!1249 = !DILocation(line: 573, column: 19, scope: !1247)
!1250 = !DILocation(line: 574, column: 17, scope: !1247)
!1251 = !DILocation(line: 575, column: 13, scope: !1242)
!1252 = !DILocalVariable(name: "digest_bin_bytes", scope: !1253, file: !3, line: 578, type: !44)
!1253 = distinct !DILexicalBlock(scope: !1239, file: !3, line: 577, column: 13)
!1254 = !DILocation(line: 578, column: 22, scope: !1253)
!1255 = !DILocation(line: 578, column: 41, scope: !1253)
!1256 = !DILocation(line: 578, column: 58, scope: !1253)
!1257 = !DILocalVariable(name: "cnt", scope: !1253, file: !3, line: 579, type: !44)
!1258 = !DILocation(line: 579, column: 22, scope: !1253)
!1259 = !DILocation(line: 582, column: 24, scope: !1260)
!1260 = distinct !DILexicalBlock(scope: !1253, file: !3, line: 582, column: 15)
!1261 = !DILocation(line: 582, column: 20, scope: !1260)
!1262 = !DILocation(line: 582, column: 29, scope: !1263)
!1263 = !DILexicalBlockFile(scope: !1264, file: !3, discriminator: 2)
!1264 = !DILexicalBlockFile(scope: !1265, file: !3, discriminator: 1)
!1265 = distinct !DILexicalBlock(scope: !1260, file: !3, line: 582, column: 15)
!1266 = !DILocation(line: 582, column: 35, scope: !1265)
!1267 = !DILocation(line: 582, column: 33, scope: !1265)
!1268 = !DILocation(line: 582, column: 15, scope: !1260)
!1269 = !DILocation(line: 584, column: 47, scope: !1270)
!1270 = distinct !DILexicalBlock(scope: !1271, file: !3, line: 584, column: 23)
!1271 = distinct !DILexicalBlock(scope: !1265, file: !3, line: 583, column: 17)
!1272 = !DILocation(line: 584, column: 45, scope: !1270)
!1273 = !DILocation(line: 584, column: 32, scope: !1270)
!1274 = !DILocation(line: 584, column: 23, scope: !1270)
!1275 = !DILocation(line: 585, column: 45, scope: !1270)
!1276 = !DILocation(line: 585, column: 34, scope: !1270)
!1277 = !DILocation(line: 585, column: 50, scope: !1270)
!1278 = !DILocation(line: 585, column: 26, scope: !1270)
!1279 = !DILocation(line: 585, column: 23, scope: !1270)
!1280 = !DILocation(line: 586, column: 23, scope: !1270)
!1281 = !DILocation(line: 586, column: 51, scope: !1282)
!1282 = !DILexicalBlockFile(scope: !1270, file: !3, discriminator: 1)
!1283 = !DILocation(line: 586, column: 49, scope: !1270)
!1284 = !DILocation(line: 586, column: 55, scope: !1270)
!1285 = !DILocation(line: 586, column: 36, scope: !1270)
!1286 = !DILocation(line: 586, column: 27, scope: !1270)
!1287 = !DILocation(line: 587, column: 50, scope: !1270)
!1288 = !DILocation(line: 587, column: 39, scope: !1270)
!1289 = !DILocation(line: 587, column: 55, scope: !1270)
!1290 = !DILocation(line: 587, column: 31, scope: !1270)
!1291 = !DILocation(line: 587, column: 30, scope: !1270)
!1292 = !DILocation(line: 587, column: 27, scope: !1270)
!1293 = !DILocation(line: 584, column: 23, scope: !1271)
!1294 = !DILocation(line: 588, column: 21, scope: !1270)
!1295 = !DILocation(line: 589, column: 17, scope: !1271)
!1296 = !DILocation(line: 582, column: 53, scope: !1265)
!1297 = !DILocation(line: 582, column: 15, scope: !1265)
!1298 = !DILocation(line: 590, column: 19, scope: !1299)
!1299 = distinct !DILexicalBlock(scope: !1253, file: !3, line: 590, column: 19)
!1300 = !DILocation(line: 590, column: 26, scope: !1299)
!1301 = !DILocation(line: 590, column: 23, scope: !1299)
!1302 = !DILocation(line: 590, column: 19, scope: !1253)
!1303 = !DILocation(line: 591, column: 17, scope: !1299)
!1304 = !DILocation(line: 593, column: 20, scope: !1305)
!1305 = distinct !DILexicalBlock(scope: !1253, file: !3, line: 593, column: 19)
!1306 = !DILocation(line: 593, column: 19, scope: !1253)
!1307 = !DILocation(line: 595, column: 23, scope: !1308)
!1308 = distinct !DILexicalBlock(scope: !1309, file: !3, line: 595, column: 23)
!1309 = distinct !DILexicalBlock(scope: !1305, file: !3, line: 594, column: 17)
!1310 = !DILocation(line: 595, column: 30, scope: !1308)
!1311 = !DILocation(line: 595, column: 27, scope: !1308)
!1312 = !DILocation(line: 595, column: 23, scope: !1309)
!1313 = !DILocation(line: 596, column: 41, scope: !1308)
!1314 = !DILocation(line: 596, column: 51, scope: !1308)
!1315 = !DILocation(line: 596, column: 21, scope: !1308)
!1316 = !DILocation(line: 597, column: 29, scope: !1317)
!1317 = distinct !DILexicalBlock(scope: !1308, file: !3, line: 597, column: 28)
!1318 = !DILocation(line: 597, column: 28, scope: !1308)
!1319 = !DILocation(line: 598, column: 41, scope: !1317)
!1320 = !DILocation(line: 598, column: 51, scope: !1317)
!1321 = !DILocation(line: 598, column: 21, scope: !1317)
!1322 = !DILocation(line: 599, column: 17, scope: !1309)
!1323 = !DILocation(line: 602, column: 5, scope: !1162)
!1324 = !DILocation(line: 603, column: 11, scope: !84)
!1325 = !DILocation(line: 603, column: 35, scope: !84)
!1326 = !DILocation(line: 603, column: 39, scope: !1327)
!1327 = !DILexicalBlockFile(scope: !84, file: !3, discriminator: 1)
!1328 = !DILocation(line: 603, column: 38, scope: !84)
!1329 = !DILocation(line: 605, column: 9, scope: !84)
!1330 = !DILocation(line: 605, column: 3, scope: !84)
!1331 = !DILocation(line: 607, column: 7, scope: !1332)
!1332 = distinct !DILexicalBlock(scope: !84, file: !3, line: 607, column: 7)
!1333 = !DILocation(line: 607, column: 7, scope: !84)
!1334 = !DILocation(line: 609, column: 20, scope: !1335)
!1335 = distinct !DILexicalBlock(scope: !1332, file: !3, line: 608, column: 5)
!1336 = !DILocation(line: 609, column: 41, scope: !1335)
!1337 = !DILocation(line: 609, column: 7, scope: !1335)
!1338 = !DILocation(line: 610, column: 7, scope: !1335)
!1339 = !DILocation(line: 613, column: 8, scope: !1340)
!1340 = distinct !DILexicalBlock(scope: !84, file: !3, line: 613, column: 7)
!1341 = !DILocation(line: 613, column: 17, scope: !1340)
!1342 = !DILocation(line: 613, column: 28, scope: !1343)
!1343 = !DILexicalBlockFile(scope: !1340, file: !3, discriminator: 1)
!1344 = !DILocation(line: 613, column: 20, scope: !1340)
!1345 = !DILocation(line: 613, column: 46, scope: !1340)
!1346 = !DILocation(line: 613, column: 7, scope: !84)
!1347 = !DILocation(line: 615, column: 17, scope: !1348)
!1348 = distinct !DILexicalBlock(scope: !1340, file: !3, line: 614, column: 5)
!1349 = !DILocation(line: 615, column: 30, scope: !1348)
!1350 = !DILocation(line: 615, column: 7, scope: !1348)
!1351 = !DILocation(line: 616, column: 7, scope: !1348)
!1352 = !DILocation(line: 619, column: 7, scope: !1353)
!1353 = distinct !DILexicalBlock(scope: !84, file: !3, line: 619, column: 7)
!1354 = !DILocation(line: 619, column: 34, scope: !1353)
!1355 = !DILocation(line: 619, column: 7, scope: !84)
!1356 = !DILocation(line: 622, column: 20, scope: !1357)
!1357 = distinct !DILexicalBlock(scope: !1353, file: !3, line: 620, column: 5)
!1358 = !DILocation(line: 623, column: 14, scope: !1357)
!1359 = !DILocation(line: 622, column: 7, scope: !1357)
!1360 = !DILocation(line: 624, column: 5, scope: !1357)
!1361 = !DILocation(line: 627, column: 12, scope: !1362)
!1362 = distinct !DILexicalBlock(scope: !1363, file: !3, line: 627, column: 11)
!1363 = distinct !DILexicalBlock(scope: !1353, file: !3, line: 626, column: 5)
!1364 = !DILocation(line: 627, column: 11, scope: !1363)
!1365 = !DILocation(line: 629, column: 15, scope: !1366)
!1366 = distinct !DILexicalBlock(scope: !1367, file: !3, line: 629, column: 15)
!1367 = distinct !DILexicalBlock(scope: !1362, file: !3, line: 628, column: 9)
!1368 = !DILocation(line: 629, column: 36, scope: !1366)
!1369 = !DILocation(line: 629, column: 15, scope: !1367)
!1370 = !DILocation(line: 634, column: 37, scope: !1366)
!1371 = !DILocation(line: 634, column: 22, scope: !1366)
!1372 = !DILocation(line: 631, column: 21, scope: !1366)
!1373 = !DILocation(line: 635, column: 20, scope: !1366)
!1374 = !DILocation(line: 630, column: 13, scope: !1366)
!1375 = !DILocation(line: 637, column: 15, scope: !1376)
!1376 = distinct !DILexicalBlock(scope: !1367, file: !3, line: 637, column: 15)
!1377 = !DILocation(line: 637, column: 39, scope: !1376)
!1378 = !DILocation(line: 637, column: 15, scope: !1367)
!1379 = !DILocation(line: 642, column: 37, scope: !1376)
!1380 = !DILocation(line: 642, column: 22, scope: !1376)
!1381 = !DILocation(line: 639, column: 21, scope: !1376)
!1382 = !DILocation(line: 643, column: 20, scope: !1376)
!1383 = !DILocation(line: 638, column: 13, scope: !1376)
!1384 = !DILocation(line: 645, column: 15, scope: !1385)
!1385 = distinct !DILexicalBlock(scope: !1367, file: !3, line: 645, column: 15)
!1386 = !DILocation(line: 645, column: 38, scope: !1385)
!1387 = !DILocation(line: 645, column: 15, scope: !1367)
!1388 = !DILocation(line: 650, column: 37, scope: !1385)
!1389 = !DILocation(line: 650, column: 22, scope: !1385)
!1390 = !DILocation(line: 647, column: 21, scope: !1385)
!1391 = !DILocation(line: 651, column: 20, scope: !1385)
!1392 = !DILocation(line: 646, column: 13, scope: !1385)
!1393 = !DILocation(line: 652, column: 9, scope: !1367)
!1394 = !DILocation(line: 655, column: 11, scope: !84)
!1395 = !DILocation(line: 655, column: 38, scope: !84)
!1396 = !DILocation(line: 656, column: 11, scope: !84)
!1397 = !DILocation(line: 656, column: 14, scope: !1327)
!1398 = !DILocation(line: 656, column: 37, scope: !84)
!1399 = !DILocation(line: 657, column: 11, scope: !84)
!1400 = !DILocation(line: 657, column: 14, scope: !1327)
!1401 = !DILocation(line: 657, column: 38, scope: !84)
!1402 = !DILocation(line: 658, column: 11, scope: !84)
!1403 = !DILocation(line: 658, column: 16, scope: !1327)
!1404 = !DILocation(line: 658, column: 23, scope: !84)
!1405 = !DILocation(line: 658, column: 26, scope: !1406)
!1406 = !DILexicalBlockFile(scope: !84, file: !3, discriminator: 2)
!1407 = !DILocation(line: 658, column: 55, scope: !84)
!1408 = !DILocation(line: 655, column: 3, scope: !84)
!1409 = !DILocation(line: 659, column: 1, scope: !84)
!1410 = distinct !DISubprogram(name: "digest_file", scope: !3, file: !3, line: 431, type: !1411, scopeLine: 432, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !28)
!1411 = !DISubroutineType(types: !1412)
!1412 = !{!53, !63, !100, !46}
!1413 = !DILocalVariable(name: "filename", arg: 1, scope: !1410, file: !3, line: 431, type: !63)
!1414 = !DILocation(line: 431, column: 26, scope: !1410)
!1415 = !DILocalVariable(name: "binary", arg: 2, scope: !1410, file: !3, line: 431, type: !100)
!1416 = !DILocation(line: 431, column: 41, scope: !1410)
!1417 = !DILocalVariable(name: "bin_result", arg: 3, scope: !1410, file: !3, line: 431, type: !46)
!1418 = !DILocation(line: 431, column: 64, scope: !1410)
!1419 = !DILocalVariable(name: "fp", scope: !1410, file: !3, line: 433, type: !1053)
!1420 = !DILocation(line: 433, column: 9, scope: !1410)
!1421 = !DILocalVariable(name: "err", scope: !1410, file: !3, line: 434, type: !48)
!1422 = !DILocation(line: 434, column: 7, scope: !1410)
!1423 = !DILocalVariable(name: "is_stdin", scope: !1410, file: !3, line: 435, type: !53)
!1424 = !DILocation(line: 435, column: 8, scope: !1410)
!1425 = !DILocation(line: 435, column: 19, scope: !1410)
!1426 = !DILocation(line: 437, column: 7, scope: !1427)
!1427 = distinct !DILexicalBlock(scope: !1410, file: !3, line: 437, column: 7)
!1428 = !DILocation(line: 437, column: 7, scope: !1410)
!1429 = !DILocation(line: 439, column: 23, scope: !1430)
!1430 = distinct !DILexicalBlock(scope: !1427, file: !3, line: 438, column: 5)
!1431 = !DILocation(line: 440, column: 12, scope: !1430)
!1432 = !DILocation(line: 440, column: 10, scope: !1430)
!1433 = !DILocation(line: 448, column: 5, scope: !1430)
!1434 = !DILocation(line: 451, column: 19, scope: !1435)
!1435 = distinct !DILexicalBlock(scope: !1427, file: !3, line: 450, column: 5)
!1436 = !DILocation(line: 451, column: 12, scope: !1435)
!1437 = !DILocation(line: 451, column: 10, scope: !1435)
!1438 = !DILocation(line: 452, column: 11, scope: !1439)
!1439 = distinct !DILexicalBlock(scope: !1435, file: !3, line: 452, column: 11)
!1440 = !DILocation(line: 452, column: 14, scope: !1439)
!1441 = !DILocation(line: 452, column: 11, scope: !1435)
!1442 = !DILocation(line: 454, column: 21, scope: !1443)
!1443 = distinct !DILexicalBlock(scope: !1439, file: !3, line: 453, column: 9)
!1444 = !DILocation(line: 454, column: 34, scope: !1443)
!1445 = !DILocation(line: 454, column: 11, scope: !1443)
!1446 = !DILocation(line: 455, column: 11, scope: !1443)
!1447 = !DILocation(line: 459, column: 12, scope: !1410)
!1448 = !DILocation(line: 459, column: 3, scope: !1410)
!1449 = !DILocation(line: 461, column: 24, scope: !1410)
!1450 = !DILocation(line: 461, column: 28, scope: !1410)
!1451 = !DILocation(line: 461, column: 9, scope: !1410)
!1452 = !DILocation(line: 461, column: 7, scope: !1410)
!1453 = !DILocation(line: 462, column: 7, scope: !1454)
!1454 = distinct !DILexicalBlock(scope: !1410, file: !3, line: 462, column: 7)
!1455 = !DILocation(line: 462, column: 7, scope: !1410)
!1456 = !DILocation(line: 464, column: 17, scope: !1457)
!1457 = distinct !DILexicalBlock(scope: !1454, file: !3, line: 463, column: 5)
!1458 = !DILocation(line: 464, column: 30, scope: !1457)
!1459 = !DILocation(line: 464, column: 7, scope: !1457)
!1460 = !DILocation(line: 465, column: 11, scope: !1461)
!1461 = distinct !DILexicalBlock(scope: !1457, file: !3, line: 465, column: 11)
!1462 = !DILocation(line: 465, column: 17, scope: !1461)
!1463 = !DILocation(line: 465, column: 14, scope: !1461)
!1464 = !DILocation(line: 465, column: 11, scope: !1457)
!1465 = !DILocation(line: 466, column: 17, scope: !1461)
!1466 = !DILocation(line: 466, column: 9, scope: !1461)
!1467 = !DILocation(line: 467, column: 7, scope: !1457)
!1468 = !DILocation(line: 470, column: 8, scope: !1469)
!1469 = distinct !DILexicalBlock(scope: !1410, file: !3, line: 470, column: 7)
!1470 = !DILocation(line: 470, column: 17, scope: !1469)
!1471 = !DILocation(line: 470, column: 28, scope: !1472)
!1472 = !DILexicalBlockFile(scope: !1469, file: !3, discriminator: 1)
!1473 = !DILocation(line: 470, column: 20, scope: !1469)
!1474 = !DILocation(line: 470, column: 32, scope: !1469)
!1475 = !DILocation(line: 470, column: 7, scope: !1410)
!1476 = !DILocation(line: 472, column: 17, scope: !1477)
!1477 = distinct !DILexicalBlock(scope: !1469, file: !3, line: 471, column: 5)
!1478 = !DILocation(line: 472, column: 30, scope: !1477)
!1479 = !DILocation(line: 472, column: 7, scope: !1477)
!1480 = !DILocation(line: 473, column: 7, scope: !1477)
!1481 = !DILocation(line: 476, column: 3, scope: !1410)
!1482 = !DILocation(line: 477, column: 1, scope: !1410)
!1483 = distinct !DISubprogram(name: "print_filename", scope: !3, file: !3, line: 664, type: !1484, scopeLine: 665, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !28)
!1484 = !DISubroutineType(types: !1485)
!1485 = !{null, !63, !53}
!1486 = !DILocalVariable(name: "file", arg: 1, scope: !1483, file: !3, line: 664, type: !63)
!1487 = !DILocation(line: 664, column: 29, scope: !1483)
!1488 = !DILocalVariable(name: "escape", arg: 2, scope: !1483, file: !3, line: 664, type: !53)
!1489 = !DILocation(line: 664, column: 40, scope: !1483)
!1490 = !DILocation(line: 666, column: 9, scope: !1491)
!1491 = distinct !DILexicalBlock(scope: !1483, file: !3, line: 666, column: 7)
!1492 = !DILocation(line: 666, column: 7, scope: !1483)
!1493 = !DILocation(line: 668, column: 7, scope: !1494)
!1494 = distinct !DILexicalBlock(scope: !1491, file: !3, line: 667, column: 5)
!1495 = !DILocation(line: 669, column: 7, scope: !1494)
!1496 = !DILocation(line: 672, column: 3, scope: !1483)
!1497 = !DILocation(line: 672, column: 11, scope: !1498)
!1498 = !DILexicalBlockFile(scope: !1499, file: !3, discriminator: 2)
!1499 = !DILexicalBlockFile(scope: !1483, file: !3, discriminator: 1)
!1500 = !DILocation(line: 672, column: 10, scope: !1483)
!1501 = !DILocation(line: 674, column: 16, scope: !1502)
!1502 = distinct !DILexicalBlock(scope: !1483, file: !3, line: 673, column: 5)
!1503 = !DILocation(line: 674, column: 15, scope: !1502)
!1504 = !DILocation(line: 674, column: 7, scope: !1502)
!1505 = !DILocation(line: 677, column: 11, scope: !1506)
!1506 = distinct !DILexicalBlock(scope: !1502, file: !3, line: 675, column: 9)
!1507 = !DILocation(line: 678, column: 11, scope: !1506)
!1508 = !DILocation(line: 681, column: 11, scope: !1506)
!1509 = !DILocation(line: 682, column: 11, scope: !1506)
!1510 = !DILocation(line: 685, column: 11, scope: !1506)
!1511 = !DILocation(line: 686, column: 11, scope: !1506)
!1512 = !DILocation(line: 688, column: 11, scope: !1502)
!1513 = !DILocation(line: 690, column: 1, scope: !1483)
!1514 = !DILocalVariable(name: "n", arg: 1, scope: !22, file: !21, line: 176, type: !26)
!1515 = !DILocation(line: 176, column: 26, scope: !22)
!1516 = !DILocation(line: 181, column: 11, scope: !22)
!1517 = !DILocation(line: 181, column: 13, scope: !22)
!1518 = !DILocation(line: 181, column: 28, scope: !1519)
!1519 = !DILexicalBlockFile(scope: !22, file: !21, discriminator: 1)
!1520 = !DILocation(line: 181, column: 32, scope: !1521)
!1521 = !DILexicalBlockFile(scope: !22, file: !21, discriminator: 2)
!1522 = !DILocation(line: 181, column: 34, scope: !22)
!1523 = !DILocation(line: 181, column: 51, scope: !22)
!1524 = !DILocation(line: 181, column: 3, scope: !1525)
!1525 = !DILexicalBlockFile(scope: !1526, file: !21, discriminator: 4)
!1526 = !DILexicalBlockFile(scope: !22, file: !21, discriminator: 3)
!1527 = distinct !DISubprogram(name: "split_3", scope: !3, file: !3, line: 325, type: !1528, scopeLine: 327, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !28)
!1528 = !DISubroutineType(types: !1529)
!1529 = !{!53, !41, !44, !1530, !100, !684}
!1530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !46, size: 64, align: 64)
!1531 = !DILocalVariable(name: "s", arg: 1, scope: !1527, file: !3, line: 325, type: !41)
!1532 = !DILocation(line: 325, column: 16, scope: !1527)
!1533 = !DILocalVariable(name: "s_len", arg: 2, scope: !1527, file: !3, line: 325, type: !44)
!1534 = !DILocation(line: 325, column: 26, scope: !1527)
!1535 = !DILocalVariable(name: "hex_digest", arg: 3, scope: !1527, file: !3, line: 326, type: !1530)
!1536 = !DILocation(line: 326, column: 26, scope: !1527)
!1537 = !DILocalVariable(name: "binary", arg: 4, scope: !1527, file: !3, line: 326, type: !100)
!1538 = !DILocation(line: 326, column: 43, scope: !1527)
!1539 = !DILocalVariable(name: "file_name", arg: 5, scope: !1527, file: !3, line: 326, type: !684)
!1540 = !DILocation(line: 326, column: 58, scope: !1527)
!1541 = !DILocalVariable(name: "escaped_filename", scope: !1527, file: !3, line: 328, type: !53)
!1542 = !DILocation(line: 328, column: 8, scope: !1527)
!1543 = !DILocalVariable(name: "algo_name_len", scope: !1527, file: !3, line: 329, type: !44)
!1544 = !DILocation(line: 329, column: 10, scope: !1527)
!1545 = !DILocalVariable(name: "i", scope: !1527, file: !3, line: 331, type: !44)
!1546 = !DILocation(line: 331, column: 10, scope: !1527)
!1547 = !DILocation(line: 332, column: 3, scope: !1527)
!1548 = !DILocation(line: 332, column: 10, scope: !1549)
!1549 = !DILexicalBlockFile(scope: !1550, file: !3, discriminator: 5)
!1550 = !DILexicalBlockFile(scope: !1527, file: !3, discriminator: 1)
!1551 = !DILocation(line: 332, column: 10, scope: !1552)
!1552 = !DILexicalBlockFile(scope: !1527, file: !3, discriminator: 3)
!1553 = !DILocation(line: 332, column: 3, scope: !1554)
!1554 = !DILexicalBlockFile(scope: !1555, file: !3, discriminator: 4)
!1555 = !DILexicalBlockFile(scope: !1527, file: !3, discriminator: 2)
!1556 = !DILocation(line: 333, column: 5, scope: !1527)
!1557 = !DILocation(line: 335, column: 9, scope: !1558)
!1558 = distinct !DILexicalBlock(scope: !1527, file: !3, line: 335, column: 7)
!1559 = !DILocation(line: 335, column: 7, scope: !1558)
!1560 = !DILocation(line: 335, column: 12, scope: !1558)
!1561 = !DILocation(line: 335, column: 7, scope: !1527)
!1562 = !DILocation(line: 337, column: 7, scope: !1563)
!1563 = distinct !DILexicalBlock(scope: !1558, file: !3, line: 336, column: 5)
!1564 = !DILocation(line: 338, column: 24, scope: !1563)
!1565 = !DILocation(line: 339, column: 5, scope: !1563)
!1566 = !DILocation(line: 343, column: 17, scope: !1527)
!1567 = !DILocation(line: 344, column: 7, scope: !1568)
!1568 = distinct !DILexicalBlock(scope: !1527, file: !3, line: 344, column: 7)
!1569 = !DILocation(line: 344, column: 7, scope: !1527)
!1570 = !DILocation(line: 346, column: 13, scope: !1571)
!1571 = distinct !DILexicalBlock(scope: !1572, file: !3, line: 346, column: 11)
!1572 = distinct !DILexicalBlock(scope: !1568, file: !3, line: 345, column: 5)
!1573 = !DILocation(line: 346, column: 17, scope: !1571)
!1574 = !DILocation(line: 346, column: 15, scope: !1571)
!1575 = !DILocation(line: 346, column: 11, scope: !1571)
!1576 = !DILocation(line: 346, column: 32, scope: !1571)
!1577 = !DILocation(line: 346, column: 11, scope: !1572)
!1578 = !DILocation(line: 347, column: 9, scope: !1571)
!1579 = !DILocation(line: 348, column: 13, scope: !1580)
!1580 = distinct !DILexicalBlock(scope: !1572, file: !3, line: 348, column: 11)
!1581 = !DILocation(line: 348, column: 17, scope: !1580)
!1582 = !DILocation(line: 348, column: 15, scope: !1580)
!1583 = !DILocation(line: 348, column: 11, scope: !1580)
!1584 = !DILocation(line: 348, column: 32, scope: !1580)
!1585 = !DILocation(line: 348, column: 11, scope: !1572)
!1586 = !DILocation(line: 350, column: 12, scope: !1587)
!1587 = distinct !DILexicalBlock(scope: !1580, file: !3, line: 349, column: 9)
!1588 = !DILocation(line: 350, column: 19, scope: !1587)
!1589 = !DILocation(line: 351, column: 31, scope: !1587)
!1590 = !DILocation(line: 351, column: 40, scope: !1587)
!1591 = !DILocation(line: 351, column: 33, scope: !1587)
!1592 = !DILocation(line: 351, column: 44, scope: !1587)
!1593 = !DILocation(line: 351, column: 42, scope: !1587)
!1594 = !DILocation(line: 351, column: 58, scope: !1587)
!1595 = !DILocation(line: 352, column: 31, scope: !1587)
!1596 = !DILocation(line: 352, column: 40, scope: !1587)
!1597 = !DILocation(line: 352, column: 44, scope: !1587)
!1598 = !DILocation(line: 352, column: 42, scope: !1587)
!1599 = !DILocation(line: 352, column: 58, scope: !1587)
!1600 = !DILocation(line: 352, column: 37, scope: !1587)
!1601 = !DILocation(line: 353, column: 31, scope: !1587)
!1602 = !DILocation(line: 353, column: 43, scope: !1587)
!1603 = !DILocation(line: 353, column: 54, scope: !1587)
!1604 = !DILocation(line: 351, column: 18, scope: !1587)
!1605 = !DILocation(line: 351, column: 11, scope: !1587)
!1606 = !DILocation(line: 355, column: 5, scope: !1572)
!1607 = !DILocation(line: 361, column: 7, scope: !1608)
!1608 = distinct !DILexicalBlock(scope: !1527, file: !3, line: 361, column: 7)
!1609 = !DILocation(line: 361, column: 15, scope: !1608)
!1610 = !DILocation(line: 361, column: 13, scope: !1608)
!1611 = !DILocation(line: 361, column: 19, scope: !1608)
!1612 = !DILocation(line: 361, column: 47, scope: !1608)
!1613 = !DILocation(line: 361, column: 45, scope: !1608)
!1614 = !DILocation(line: 361, column: 50, scope: !1608)
!1615 = !DILocation(line: 361, column: 44, scope: !1608)
!1616 = !DILocation(line: 361, column: 42, scope: !1608)
!1617 = !DILocation(line: 361, column: 17, scope: !1608)
!1618 = !DILocation(line: 361, column: 7, scope: !1527)
!1619 = !DILocation(line: 362, column: 5, scope: !1608)
!1620 = !DILocation(line: 364, column: 38, scope: !1527)
!1621 = !DILocation(line: 364, column: 36, scope: !1527)
!1622 = !DILocation(line: 364, column: 4, scope: !1527)
!1623 = !DILocation(line: 364, column: 15, scope: !1527)
!1624 = !DILocation(line: 369, column: 8, scope: !1527)
!1625 = !DILocation(line: 369, column: 5, scope: !1527)
!1626 = !DILocation(line: 370, column: 8, scope: !1627)
!1627 = distinct !DILexicalBlock(scope: !1527, file: !3, line: 370, column: 7)
!1628 = !DILocation(line: 370, column: 8, scope: !1629)
!1629 = !DILexicalBlockFile(scope: !1627, file: !3, discriminator: 1)
!1630 = !DILocation(line: 370, column: 7, scope: !1527)
!1631 = !DILocation(line: 371, column: 5, scope: !1627)
!1632 = !DILocation(line: 373, column: 6, scope: !1527)
!1633 = !DILocation(line: 373, column: 3, scope: !1527)
!1634 = !DILocation(line: 373, column: 10, scope: !1527)
!1635 = !DILocation(line: 376, column: 8, scope: !1636)
!1636 = distinct !DILexicalBlock(scope: !1527, file: !3, line: 376, column: 7)
!1637 = !DILocation(line: 376, column: 16, scope: !1636)
!1638 = !DILocation(line: 376, column: 14, scope: !1636)
!1639 = !DILocation(line: 376, column: 18, scope: !1636)
!1640 = !DILocation(line: 376, column: 24, scope: !1636)
!1641 = !DILocation(line: 376, column: 30, scope: !1642)
!1642 = !DILexicalBlockFile(scope: !1636, file: !3, discriminator: 1)
!1643 = !DILocation(line: 376, column: 28, scope: !1636)
!1644 = !DILocation(line: 376, column: 33, scope: !1636)
!1645 = !DILocation(line: 376, column: 40, scope: !1636)
!1646 = !DILocation(line: 376, column: 45, scope: !1647)
!1647 = !DILexicalBlockFile(scope: !1636, file: !3, discriminator: 2)
!1648 = !DILocation(line: 376, column: 43, scope: !1636)
!1649 = !DILocation(line: 376, column: 48, scope: !1636)
!1650 = !DILocation(line: 376, column: 7, scope: !1527)
!1651 = !DILocation(line: 384, column: 11, scope: !1652)
!1652 = distinct !DILexicalBlock(scope: !1653, file: !3, line: 384, column: 11)
!1653 = distinct !DILexicalBlock(scope: !1636, file: !3, line: 377, column: 5)
!1654 = !DILocation(line: 384, column: 24, scope: !1652)
!1655 = !DILocation(line: 384, column: 11, scope: !1653)
!1656 = !DILocation(line: 385, column: 9, scope: !1652)
!1657 = !DILocation(line: 386, column: 20, scope: !1653)
!1658 = !DILocation(line: 387, column: 5, scope: !1653)
!1659 = !DILocation(line: 388, column: 12, scope: !1660)
!1660 = distinct !DILexicalBlock(scope: !1636, file: !3, line: 388, column: 12)
!1661 = !DILocation(line: 388, column: 25, scope: !1660)
!1662 = !DILocation(line: 388, column: 12, scope: !1636)
!1663 = !DILocation(line: 390, column: 20, scope: !1664)
!1664 = distinct !DILexicalBlock(scope: !1660, file: !3, line: 389, column: 5)
!1665 = !DILocation(line: 391, column: 21, scope: !1664)
!1666 = !DILocation(line: 391, column: 18, scope: !1664)
!1667 = !DILocation(line: 391, column: 25, scope: !1664)
!1668 = !DILocation(line: 391, column: 8, scope: !1664)
!1669 = !DILocation(line: 391, column: 15, scope: !1664)
!1670 = !DILocation(line: 392, column: 5, scope: !1664)
!1671 = !DILocation(line: 396, column: 19, scope: !1527)
!1672 = !DILocation(line: 396, column: 17, scope: !1527)
!1673 = !DILocation(line: 396, column: 4, scope: !1527)
!1674 = !DILocation(line: 396, column: 14, scope: !1527)
!1675 = !DILocation(line: 398, column: 7, scope: !1676)
!1676 = distinct !DILexicalBlock(scope: !1527, file: !3, line: 398, column: 7)
!1677 = !DILocation(line: 398, column: 7, scope: !1527)
!1678 = !DILocation(line: 399, column: 34, scope: !1676)
!1679 = !DILocation(line: 399, column: 32, scope: !1676)
!1680 = !DILocation(line: 399, column: 38, scope: !1676)
!1681 = !DILocation(line: 399, column: 46, scope: !1676)
!1682 = !DILocation(line: 399, column: 44, scope: !1676)
!1683 = !DILocation(line: 399, column: 12, scope: !1676)
!1684 = !DILocation(line: 399, column: 49, scope: !1676)
!1685 = !DILocation(line: 399, column: 5, scope: !1676)
!1686 = !DILocation(line: 401, column: 3, scope: !1527)
!1687 = !DILocation(line: 402, column: 1, scope: !1527)
!1688 = distinct !DISubprogram(name: "bsd_split_3", scope: !3, file: !3, line: 282, type: !1689, scopeLine: 284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !28)
!1689 = !DISubroutineType(types: !1690)
!1690 = !{!53, !41, !44, !1530, !684, !53}
!1691 = !DILocalVariable(name: "s", arg: 1, scope: !1688, file: !3, line: 282, type: !41)
!1692 = !DILocation(line: 282, column: 20, scope: !1688)
!1693 = !DILocalVariable(name: "s_len", arg: 2, scope: !1688, file: !3, line: 282, type: !44)
!1694 = !DILocation(line: 282, column: 30, scope: !1688)
!1695 = !DILocalVariable(name: "hex_digest", arg: 3, scope: !1688, file: !3, line: 282, type: !1530)
!1696 = !DILocation(line: 282, column: 53, scope: !1688)
!1697 = !DILocalVariable(name: "file_name", arg: 4, scope: !1688, file: !3, line: 283, type: !684)
!1698 = !DILocation(line: 283, column: 21, scope: !1688)
!1699 = !DILocalVariable(name: "escaped_filename", arg: 5, scope: !1688, file: !3, line: 283, type: !53)
!1700 = !DILocation(line: 283, column: 37, scope: !1688)
!1701 = !DILocalVariable(name: "i", scope: !1688, file: !3, line: 285, type: !44)
!1702 = !DILocation(line: 285, column: 10, scope: !1688)
!1703 = !DILocation(line: 287, column: 7, scope: !1704)
!1704 = distinct !DILexicalBlock(scope: !1688, file: !3, line: 287, column: 7)
!1705 = !DILocation(line: 287, column: 13, scope: !1704)
!1706 = !DILocation(line: 287, column: 7, scope: !1688)
!1707 = !DILocation(line: 288, column: 5, scope: !1704)
!1708 = !DILocation(line: 291, column: 7, scope: !1688)
!1709 = !DILocation(line: 291, column: 13, scope: !1688)
!1710 = !DILocation(line: 291, column: 5, scope: !1688)
!1711 = !DILocation(line: 292, column: 3, scope: !1688)
!1712 = !DILocation(line: 292, column: 10, scope: !1713)
!1713 = !DILexicalBlockFile(scope: !1714, file: !3, discriminator: 4)
!1714 = !DILexicalBlockFile(scope: !1688, file: !3, discriminator: 1)
!1715 = !DILocation(line: 292, column: 12, scope: !1688)
!1716 = !DILocation(line: 292, column: 17, scope: !1717)
!1717 = !DILexicalBlockFile(scope: !1688, file: !3, discriminator: 2)
!1718 = !DILocation(line: 292, column: 15, scope: !1688)
!1719 = !DILocation(line: 292, column: 20, scope: !1688)
!1720 = !DILocation(line: 292, column: 3, scope: !1721)
!1721 = !DILexicalBlockFile(scope: !1688, file: !3, discriminator: 3)
!1722 = !DILocation(line: 293, column: 6, scope: !1688)
!1723 = !DILocation(line: 295, column: 9, scope: !1724)
!1724 = distinct !DILexicalBlock(scope: !1688, file: !3, line: 295, column: 7)
!1725 = !DILocation(line: 295, column: 7, scope: !1724)
!1726 = !DILocation(line: 295, column: 12, scope: !1724)
!1727 = !DILocation(line: 295, column: 7, scope: !1688)
!1728 = !DILocation(line: 296, column: 5, scope: !1724)
!1729 = !DILocation(line: 298, column: 16, scope: !1688)
!1730 = !DILocation(line: 298, column: 4, scope: !1688)
!1731 = !DILocation(line: 298, column: 14, scope: !1688)
!1732 = !DILocation(line: 300, column: 7, scope: !1733)
!1733 = distinct !DILexicalBlock(scope: !1688, file: !3, line: 300, column: 7)
!1734 = !DILocation(line: 300, column: 24, scope: !1733)
!1735 = !DILocation(line: 300, column: 46, scope: !1736)
!1736 = !DILexicalBlockFile(scope: !1733, file: !3, discriminator: 1)
!1737 = !DILocation(line: 300, column: 49, scope: !1733)
!1738 = !DILocation(line: 300, column: 27, scope: !1733)
!1739 = !DILocation(line: 300, column: 52, scope: !1733)
!1740 = !DILocation(line: 300, column: 7, scope: !1688)
!1741 = !DILocation(line: 301, column: 5, scope: !1733)
!1742 = !DILocation(line: 303, column: 6, scope: !1688)
!1743 = !DILocation(line: 303, column: 3, scope: !1688)
!1744 = !DILocation(line: 303, column: 10, scope: !1688)
!1745 = !DILocation(line: 305, column: 3, scope: !1688)
!1746 = !DILocation(line: 305, column: 10, scope: !1747)
!1747 = !DILexicalBlockFile(scope: !1714, file: !3, discriminator: 5)
!1748 = !DILocation(line: 305, column: 10, scope: !1721)
!1749 = !DILocation(line: 305, column: 3, scope: !1750)
!1750 = !DILexicalBlockFile(scope: !1717, file: !3, discriminator: 4)
!1751 = !DILocation(line: 306, column: 6, scope: !1688)
!1752 = !DILocation(line: 308, column: 9, scope: !1753)
!1753 = distinct !DILexicalBlock(scope: !1688, file: !3, line: 308, column: 7)
!1754 = !DILocation(line: 308, column: 7, scope: !1753)
!1755 = !DILocation(line: 308, column: 12, scope: !1753)
!1756 = !DILocation(line: 308, column: 7, scope: !1688)
!1757 = !DILocation(line: 309, column: 5, scope: !1753)
!1758 = !DILocation(line: 311, column: 4, scope: !1688)
!1759 = !DILocation(line: 313, column: 3, scope: !1688)
!1760 = !DILocation(line: 313, column: 10, scope: !1747)
!1761 = !DILocation(line: 313, column: 10, scope: !1721)
!1762 = !DILocation(line: 313, column: 3, scope: !1750)
!1763 = !DILocation(line: 314, column: 6, scope: !1688)
!1764 = !DILocation(line: 316, column: 38, scope: !1688)
!1765 = !DILocation(line: 316, column: 36, scope: !1688)
!1766 = !DILocation(line: 316, column: 4, scope: !1688)
!1767 = !DILocation(line: 316, column: 15, scope: !1688)
!1768 = !DILocation(line: 317, column: 3, scope: !1688)
!1769 = !DILocation(line: 318, column: 1, scope: !1688)
!1770 = distinct !DISubprogram(name: "filename_unescape", scope: !3, file: !3, line: 233, type: !1771, scopeLine: 234, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !28)
!1771 = !DISubroutineType(types: !1772)
!1772 = !{!41, !41, !44}
!1773 = !DILocalVariable(name: "s", arg: 1, scope: !1770, file: !3, line: 233, type: !41)
!1774 = !DILocation(line: 233, column: 26, scope: !1770)
!1775 = !DILocalVariable(name: "s_len", arg: 2, scope: !1770, file: !3, line: 233, type: !44)
!1776 = !DILocation(line: 233, column: 36, scope: !1770)
!1777 = !DILocalVariable(name: "dst", scope: !1770, file: !3, line: 235, type: !41)
!1778 = !DILocation(line: 235, column: 9, scope: !1770)
!1779 = !DILocation(line: 235, column: 15, scope: !1770)
!1780 = !DILocalVariable(name: "i", scope: !1781, file: !3, line: 237, type: !44)
!1781 = distinct !DILexicalBlock(scope: !1770, file: !3, line: 237, column: 3)
!1782 = !DILocation(line: 237, column: 15, scope: !1781)
!1783 = !DILocation(line: 237, column: 8, scope: !1781)
!1784 = !DILocation(line: 237, column: 22, scope: !1785)
!1785 = !DILexicalBlockFile(scope: !1786, file: !3, discriminator: 2)
!1786 = !DILexicalBlockFile(scope: !1787, file: !3, discriminator: 1)
!1787 = distinct !DILexicalBlock(scope: !1781, file: !3, line: 237, column: 3)
!1788 = !DILocation(line: 237, column: 26, scope: !1787)
!1789 = !DILocation(line: 237, column: 24, scope: !1787)
!1790 = !DILocation(line: 237, column: 3, scope: !1781)
!1791 = !DILocation(line: 239, column: 17, scope: !1792)
!1792 = distinct !DILexicalBlock(scope: !1787, file: !3, line: 238, column: 5)
!1793 = !DILocation(line: 239, column: 15, scope: !1792)
!1794 = !DILocation(line: 239, column: 7, scope: !1792)
!1795 = !DILocation(line: 242, column: 15, scope: !1796)
!1796 = distinct !DILexicalBlock(scope: !1797, file: !3, line: 242, column: 15)
!1797 = distinct !DILexicalBlock(scope: !1792, file: !3, line: 240, column: 9)
!1798 = !DILocation(line: 242, column: 20, scope: !1796)
!1799 = !DILocation(line: 242, column: 26, scope: !1796)
!1800 = !DILocation(line: 242, column: 17, scope: !1796)
!1801 = !DILocation(line: 242, column: 15, scope: !1797)
!1802 = !DILocation(line: 245, column: 15, scope: !1803)
!1803 = distinct !DILexicalBlock(scope: !1796, file: !3, line: 243, column: 13)
!1804 = !DILocation(line: 247, column: 11, scope: !1797)
!1805 = !DILocation(line: 248, column: 21, scope: !1797)
!1806 = !DILocation(line: 248, column: 19, scope: !1797)
!1807 = !DILocation(line: 248, column: 11, scope: !1797)
!1808 = !DILocation(line: 251, column: 19, scope: !1809)
!1809 = distinct !DILexicalBlock(scope: !1797, file: !3, line: 249, column: 13)
!1810 = !DILocation(line: 251, column: 22, scope: !1809)
!1811 = !DILocation(line: 252, column: 15, scope: !1809)
!1812 = !DILocation(line: 254, column: 19, scope: !1809)
!1813 = !DILocation(line: 254, column: 22, scope: !1809)
!1814 = !DILocation(line: 255, column: 15, scope: !1809)
!1815 = !DILocation(line: 258, column: 15, scope: !1809)
!1816 = !DILocation(line: 260, column: 11, scope: !1797)
!1817 = !DILocation(line: 264, column: 11, scope: !1797)
!1818 = !DILocation(line: 267, column: 22, scope: !1797)
!1819 = !DILocation(line: 267, column: 20, scope: !1797)
!1820 = !DILocation(line: 267, column: 15, scope: !1797)
!1821 = !DILocation(line: 267, column: 18, scope: !1797)
!1822 = !DILocation(line: 268, column: 11, scope: !1797)
!1823 = !DILocation(line: 270, column: 5, scope: !1792)
!1824 = !DILocation(line: 237, column: 34, scope: !1787)
!1825 = !DILocation(line: 237, column: 3, scope: !1787)
!1826 = !DILocation(line: 271, column: 7, scope: !1827)
!1827 = distinct !DILexicalBlock(scope: !1770, file: !3, line: 271, column: 7)
!1828 = !DILocation(line: 271, column: 13, scope: !1827)
!1829 = !DILocation(line: 271, column: 17, scope: !1827)
!1830 = !DILocation(line: 271, column: 15, scope: !1827)
!1831 = !DILocation(line: 271, column: 11, scope: !1827)
!1832 = !DILocation(line: 271, column: 7, scope: !1770)
!1833 = !DILocation(line: 272, column: 6, scope: !1827)
!1834 = !DILocation(line: 272, column: 10, scope: !1827)
!1835 = !DILocation(line: 272, column: 5, scope: !1827)
!1836 = !DILocation(line: 274, column: 10, scope: !1770)
!1837 = !DILocation(line: 274, column: 3, scope: !1770)
!1838 = !DILocation(line: 275, column: 1, scope: !1770)
!1839 = distinct !DISubprogram(name: "hex_digits", scope: !3, file: !3, line: 407, type: !1840, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !28)
!1840 = !DISubroutineType(types: !1841)
!1841 = !{!53, !642}
!1842 = !DILocalVariable(name: "s", arg: 1, scope: !1839, file: !3, line: 407, type: !642)
!1843 = !DILocation(line: 407, column: 34, scope: !1839)
!1844 = !DILocalVariable(name: "i", scope: !1839, file: !3, line: 409, type: !204)
!1845 = !DILocation(line: 409, column: 16, scope: !1839)
!1846 = !DILocation(line: 410, column: 10, scope: !1847)
!1847 = distinct !DILexicalBlock(scope: !1839, file: !3, line: 410, column: 3)
!1848 = !DILocation(line: 410, column: 8, scope: !1847)
!1849 = !DILocation(line: 410, column: 15, scope: !1850)
!1850 = !DILexicalBlockFile(scope: !1851, file: !3, discriminator: 2)
!1851 = !DILexicalBlockFile(scope: !1852, file: !3, discriminator: 1)
!1852 = distinct !DILexicalBlock(scope: !1847, file: !3, line: 410, column: 3)
!1853 = !DILocation(line: 410, column: 19, scope: !1852)
!1854 = !DILocation(line: 410, column: 17, scope: !1852)
!1855 = !DILocation(line: 410, column: 3, scope: !1847)
!1856 = !DILocation(line: 412, column: 12, scope: !1857)
!1857 = distinct !DILexicalBlock(scope: !1858, file: !3, line: 412, column: 11)
!1858 = distinct !DILexicalBlock(scope: !1852, file: !3, line: 411, column: 5)
!1859 = !DILocation(line: 412, column: 11, scope: !1858)
!1860 = !DILocation(line: 413, column: 9, scope: !1857)
!1861 = !DILocation(line: 414, column: 7, scope: !1858)
!1862 = !DILocation(line: 415, column: 5, scope: !1858)
!1863 = !DILocation(line: 410, column: 38, scope: !1852)
!1864 = !DILocation(line: 410, column: 3, scope: !1852)
!1865 = !DILocation(line: 416, column: 11, scope: !1839)
!1866 = !DILocation(line: 416, column: 10, scope: !1839)
!1867 = !DILocation(line: 416, column: 13, scope: !1839)
!1868 = !DILocation(line: 416, column: 3, scope: !1839)
!1869 = !DILocation(line: 417, column: 1, scope: !1839)
!1870 = distinct !DISubprogram(name: "close_stdout_set_file_name", scope: !123, file: !123, line: 41, type: !61, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !122, retainedNodes: !28)
!1871 = !DILocalVariable(name: "file", arg: 1, scope: !1870, file: !123, line: 41, type: !63)
!1872 = !DILocation(line: 41, column: 41, scope: !1870)
!1873 = !DILocation(line: 43, column: 15, scope: !1870)
!1874 = !DILocation(line: 43, column: 13, scope: !1870)
!1875 = !DILocation(line: 44, column: 1, scope: !1870)
!1876 = distinct !DISubprogram(name: "close_stdout_set_ignore_EPIPE", scope: !123, file: !123, line: 78, type: !1877, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !122, retainedNodes: !28)
!1877 = !DISubroutineType(types: !1878)
!1878 = !{null, !53}
!1879 = !DILocalVariable(name: "ignore", arg: 1, scope: !1876, file: !123, line: 78, type: !53)
!1880 = !DILocation(line: 78, column: 37, scope: !1876)
!1881 = !DILocation(line: 80, column: 18, scope: !1876)
!1882 = !DILocation(line: 80, column: 16, scope: !1876)
!1883 = !DILocation(line: 81, column: 1, scope: !1876)
!1884 = distinct !DISubprogram(name: "close_stdout", scope: !123, file: !123, line: 107, type: !953, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !122, retainedNodes: !28)
!1885 = !DILocation(line: 109, column: 21, scope: !1886)
!1886 = distinct !DILexicalBlock(scope: !1884, file: !123, line: 109, column: 7)
!1887 = !DILocation(line: 109, column: 7, scope: !1886)
!1888 = !DILocation(line: 109, column: 29, scope: !1886)
!1889 = !DILocation(line: 110, column: 7, scope: !1886)
!1890 = !DILocation(line: 110, column: 12, scope: !1891)
!1891 = !DILexicalBlockFile(scope: !1886, file: !123, discriminator: 1)
!1892 = !DILocation(line: 110, column: 25, scope: !1886)
!1893 = !DILocation(line: 110, column: 28, scope: !1894)
!1894 = !DILexicalBlockFile(scope: !1886, file: !123, discriminator: 2)
!1895 = !DILocation(line: 110, column: 34, scope: !1886)
!1896 = !DILocation(line: 109, column: 7, scope: !1884)
!1897 = !DILocalVariable(name: "write_error", scope: !1898, file: !123, line: 112, type: !63)
!1898 = distinct !DILexicalBlock(scope: !1886, file: !123, line: 111, column: 5)
!1899 = !DILocation(line: 112, column: 19, scope: !1898)
!1900 = !DILocation(line: 112, column: 33, scope: !1898)
!1901 = !DILocation(line: 113, column: 11, scope: !1902)
!1902 = distinct !DILexicalBlock(scope: !1898, file: !123, line: 113, column: 11)
!1903 = !DILocation(line: 113, column: 11, scope: !1898)
!1904 = !DILocation(line: 114, column: 19, scope: !1902)
!1905 = !DILocation(line: 114, column: 52, scope: !1902)
!1906 = !DILocation(line: 114, column: 36, scope: !1902)
!1907 = !DILocation(line: 115, column: 16, scope: !1902)
!1908 = !DILocation(line: 114, column: 9, scope: !1902)
!1909 = !DILocation(line: 117, column: 19, scope: !1902)
!1910 = !DILocation(line: 117, column: 32, scope: !1902)
!1911 = !DILocation(line: 117, column: 9, scope: !1902)
!1912 = !DILocation(line: 119, column: 14, scope: !1898)
!1913 = !DILocation(line: 119, column: 7, scope: !1898)
!1914 = !DILocation(line: 122, column: 22, scope: !1915)
!1915 = distinct !DILexicalBlock(scope: !1884, file: !123, line: 122, column: 8)
!1916 = !DILocation(line: 122, column: 8, scope: !1915)
!1917 = !DILocation(line: 122, column: 30, scope: !1915)
!1918 = !DILocation(line: 122, column: 8, scope: !1884)
!1919 = !DILocation(line: 123, column: 13, scope: !1915)
!1920 = !DILocation(line: 123, column: 6, scope: !1915)
!1921 = !DILocation(line: 124, column: 1, scope: !1884)
!1922 = distinct !DISubprogram(name: "sha512_init_ctx", scope: !132, file: !132, line: 70, type: !1923, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !131, retainedNodes: !28)
!1923 = !DISubroutineType(types: !1924)
!1924 = !{null, !1925}
!1925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1926, size: 64, align: 64)
!1926 = !DICompositeType(tag: DW_TAG_structure_type, name: "sha512_ctx", file: !1927, line: 42, size: 2752, align: 64, elements: !1928)
!1927 = !DIFile(filename: "../lib/sha512.h", directory: "/home/gbalats/Downloads/coreutils-8.24/obj-clang")
!1928 = !{!1929, !1931, !1935, !1936}
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1926, file: !1927, line: 44, baseType: !1930, size: 512, align: 64)
!1930 = !DICompositeType(tag: DW_TAG_array_type, baseType: !134, size: 512, align: 64, elements: !194)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "total", scope: !1926, file: !1927, line: 46, baseType: !1932, size: 128, align: 64, offset: 512)
!1932 = !DICompositeType(tag: DW_TAG_array_type, baseType: !134, size: 128, align: 64, elements: !1933)
!1933 = !{!1934}
!1934 = !DISubrange(count: 2)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !1926, file: !1927, line: 47, baseType: !44, size: 64, align: 64, offset: 640)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1926, file: !1927, line: 48, baseType: !1937, size: 2048, align: 64, offset: 704)
!1937 = !DICompositeType(tag: DW_TAG_array_type, baseType: !134, size: 2048, align: 64, elements: !1938)
!1938 = !{!1939}
!1939 = !DISubrange(count: 32)
!1940 = !DILocalVariable(name: "ctx", arg: 1, scope: !1922, file: !132, line: 70, type: !1925)
!1941 = !DILocation(line: 70, column: 37, scope: !1922)
!1942 = !DILocation(line: 72, column: 3, scope: !1922)
!1943 = !DILocation(line: 72, column: 8, scope: !1922)
!1944 = !DILocation(line: 72, column: 17, scope: !1922)
!1945 = !DILocation(line: 73, column: 3, scope: !1922)
!1946 = !DILocation(line: 73, column: 8, scope: !1922)
!1947 = !DILocation(line: 73, column: 17, scope: !1922)
!1948 = !DILocation(line: 74, column: 3, scope: !1922)
!1949 = !DILocation(line: 74, column: 8, scope: !1922)
!1950 = !DILocation(line: 74, column: 17, scope: !1922)
!1951 = !DILocation(line: 75, column: 3, scope: !1922)
!1952 = !DILocation(line: 75, column: 8, scope: !1922)
!1953 = !DILocation(line: 75, column: 17, scope: !1922)
!1954 = !DILocation(line: 76, column: 3, scope: !1922)
!1955 = !DILocation(line: 76, column: 8, scope: !1922)
!1956 = !DILocation(line: 76, column: 17, scope: !1922)
!1957 = !DILocation(line: 77, column: 3, scope: !1922)
!1958 = !DILocation(line: 77, column: 8, scope: !1922)
!1959 = !DILocation(line: 77, column: 17, scope: !1922)
!1960 = !DILocation(line: 78, column: 3, scope: !1922)
!1961 = !DILocation(line: 78, column: 8, scope: !1922)
!1962 = !DILocation(line: 78, column: 17, scope: !1922)
!1963 = !DILocation(line: 79, column: 3, scope: !1922)
!1964 = !DILocation(line: 79, column: 8, scope: !1922)
!1965 = !DILocation(line: 79, column: 17, scope: !1922)
!1966 = !DILocation(line: 81, column: 19, scope: !1922)
!1967 = !DILocation(line: 81, column: 24, scope: !1922)
!1968 = !DILocation(line: 81, column: 33, scope: !1922)
!1969 = !DILocation(line: 81, column: 3, scope: !1922)
!1970 = !DILocation(line: 81, column: 8, scope: !1922)
!1971 = !DILocation(line: 81, column: 17, scope: !1922)
!1972 = !DILocation(line: 82, column: 3, scope: !1922)
!1973 = !DILocation(line: 82, column: 8, scope: !1922)
!1974 = !DILocation(line: 82, column: 15, scope: !1922)
!1975 = !DILocation(line: 83, column: 1, scope: !1922)
!1976 = distinct !DISubprogram(name: "sha384_init_ctx", scope: !132, file: !132, line: 86, type: !1923, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !131, retainedNodes: !28)
!1977 = !DILocalVariable(name: "ctx", arg: 1, scope: !1976, file: !132, line: 86, type: !1925)
!1978 = !DILocation(line: 86, column: 37, scope: !1976)
!1979 = !DILocation(line: 88, column: 3, scope: !1976)
!1980 = !DILocation(line: 88, column: 8, scope: !1976)
!1981 = !DILocation(line: 88, column: 17, scope: !1976)
!1982 = !DILocation(line: 89, column: 3, scope: !1976)
!1983 = !DILocation(line: 89, column: 8, scope: !1976)
!1984 = !DILocation(line: 89, column: 17, scope: !1976)
!1985 = !DILocation(line: 90, column: 3, scope: !1976)
!1986 = !DILocation(line: 90, column: 8, scope: !1976)
!1987 = !DILocation(line: 90, column: 17, scope: !1976)
!1988 = !DILocation(line: 91, column: 3, scope: !1976)
!1989 = !DILocation(line: 91, column: 8, scope: !1976)
!1990 = !DILocation(line: 91, column: 17, scope: !1976)
!1991 = !DILocation(line: 92, column: 3, scope: !1976)
!1992 = !DILocation(line: 92, column: 8, scope: !1976)
!1993 = !DILocation(line: 92, column: 17, scope: !1976)
!1994 = !DILocation(line: 93, column: 3, scope: !1976)
!1995 = !DILocation(line: 93, column: 8, scope: !1976)
!1996 = !DILocation(line: 93, column: 17, scope: !1976)
!1997 = !DILocation(line: 94, column: 3, scope: !1976)
!1998 = !DILocation(line: 94, column: 8, scope: !1976)
!1999 = !DILocation(line: 94, column: 17, scope: !1976)
!2000 = !DILocation(line: 95, column: 3, scope: !1976)
!2001 = !DILocation(line: 95, column: 8, scope: !1976)
!2002 = !DILocation(line: 95, column: 17, scope: !1976)
!2003 = !DILocation(line: 97, column: 19, scope: !1976)
!2004 = !DILocation(line: 97, column: 24, scope: !1976)
!2005 = !DILocation(line: 97, column: 33, scope: !1976)
!2006 = !DILocation(line: 97, column: 3, scope: !1976)
!2007 = !DILocation(line: 97, column: 8, scope: !1976)
!2008 = !DILocation(line: 97, column: 17, scope: !1976)
!2009 = !DILocation(line: 98, column: 3, scope: !1976)
!2010 = !DILocation(line: 98, column: 8, scope: !1976)
!2011 = !DILocation(line: 98, column: 15, scope: !1976)
!2012 = !DILocation(line: 99, column: 1, scope: !1976)
!2013 = distinct !DISubprogram(name: "sha512_read_ctx", scope: !132, file: !132, line: 113, type: !2014, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !131, retainedNodes: !28)
!2014 = !DISubroutineType(types: !2015)
!2015 = !{!43, !2016, !43}
!2016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2017, size: 64, align: 64)
!2017 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1926)
!2018 = !DILocalVariable(name: "ctx", arg: 1, scope: !2013, file: !132, line: 113, type: !2016)
!2019 = !DILocation(line: 113, column: 43, scope: !2013)
!2020 = !DILocalVariable(name: "resbuf", arg: 2, scope: !2013, file: !132, line: 113, type: !43)
!2021 = !DILocation(line: 113, column: 54, scope: !2013)
!2022 = !DILocalVariable(name: "i", scope: !2013, file: !132, line: 115, type: !48)
!2023 = !DILocation(line: 115, column: 7, scope: !2013)
!2024 = !DILocalVariable(name: "r", scope: !2013, file: !132, line: 116, type: !41)
!2025 = !DILocation(line: 116, column: 9, scope: !2013)
!2026 = !DILocation(line: 116, column: 13, scope: !2013)
!2027 = !DILocation(line: 118, column: 10, scope: !2028)
!2028 = distinct !DILexicalBlock(scope: !2013, file: !132, line: 118, column: 3)
!2029 = !DILocation(line: 118, column: 8, scope: !2028)
!2030 = !DILocation(line: 118, column: 15, scope: !2031)
!2031 = !DILexicalBlockFile(scope: !2032, file: !132, discriminator: 2)
!2032 = !DILexicalBlockFile(scope: !2033, file: !132, discriminator: 1)
!2033 = distinct !DILexicalBlock(scope: !2028, file: !132, line: 118, column: 3)
!2034 = !DILocation(line: 118, column: 17, scope: !2033)
!2035 = !DILocation(line: 118, column: 3, scope: !2028)
!2036 = !DILocation(line: 119, column: 17, scope: !2033)
!2037 = !DILocation(line: 119, column: 21, scope: !2033)
!2038 = !DILocation(line: 119, column: 23, scope: !2033)
!2039 = !DILocation(line: 119, column: 19, scope: !2033)
!2040 = !DILocation(line: 119, column: 47, scope: !2033)
!2041 = !DILocation(line: 119, column: 5, scope: !2033)
!2042 = !DILocation(line: 118, column: 23, scope: !2033)
!2043 = !DILocation(line: 118, column: 3, scope: !2033)
!2044 = !DILocation(line: 121, column: 10, scope: !2013)
!2045 = !DILocation(line: 121, column: 3, scope: !2013)
!2046 = distinct !DISubprogram(name: "sha384_read_ctx", scope: !132, file: !132, line: 125, type: !2014, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !131, retainedNodes: !28)
!2047 = !DILocalVariable(name: "ctx", arg: 1, scope: !2046, file: !132, line: 125, type: !2016)
!2048 = !DILocation(line: 125, column: 43, scope: !2046)
!2049 = !DILocalVariable(name: "resbuf", arg: 2, scope: !2046, file: !132, line: 125, type: !43)
!2050 = !DILocation(line: 125, column: 54, scope: !2046)
!2051 = !DILocalVariable(name: "i", scope: !2046, file: !132, line: 127, type: !48)
!2052 = !DILocation(line: 127, column: 7, scope: !2046)
!2053 = !DILocalVariable(name: "r", scope: !2046, file: !132, line: 128, type: !41)
!2054 = !DILocation(line: 128, column: 9, scope: !2046)
!2055 = !DILocation(line: 128, column: 13, scope: !2046)
!2056 = !DILocation(line: 130, column: 10, scope: !2057)
!2057 = distinct !DILexicalBlock(scope: !2046, file: !132, line: 130, column: 3)
!2058 = !DILocation(line: 130, column: 8, scope: !2057)
!2059 = !DILocation(line: 130, column: 15, scope: !2060)
!2060 = !DILexicalBlockFile(scope: !2061, file: !132, discriminator: 2)
!2061 = !DILexicalBlockFile(scope: !2062, file: !132, discriminator: 1)
!2062 = distinct !DILexicalBlock(scope: !2057, file: !132, line: 130, column: 3)
!2063 = !DILocation(line: 130, column: 17, scope: !2062)
!2064 = !DILocation(line: 130, column: 3, scope: !2057)
!2065 = !DILocation(line: 131, column: 17, scope: !2062)
!2066 = !DILocation(line: 131, column: 21, scope: !2062)
!2067 = !DILocation(line: 131, column: 23, scope: !2062)
!2068 = !DILocation(line: 131, column: 19, scope: !2062)
!2069 = !DILocation(line: 131, column: 47, scope: !2062)
!2070 = !DILocation(line: 131, column: 5, scope: !2062)
!2071 = !DILocation(line: 130, column: 23, scope: !2062)
!2072 = !DILocation(line: 130, column: 3, scope: !2062)
!2073 = !DILocation(line: 133, column: 10, scope: !2046)
!2074 = !DILocation(line: 133, column: 3, scope: !2046)
!2075 = distinct !DISubprogram(name: "sha512_finish_ctx", scope: !132, file: !132, line: 166, type: !2076, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !131, retainedNodes: !28)
!2076 = !DISubroutineType(types: !2077)
!2077 = !{!43, !1925, !43}
!2078 = !DILocalVariable(name: "ctx", arg: 1, scope: !2075, file: !132, line: 166, type: !1925)
!2079 = !DILocation(line: 166, column: 39, scope: !2075)
!2080 = !DILocalVariable(name: "resbuf", arg: 2, scope: !2075, file: !132, line: 166, type: !43)
!2081 = !DILocation(line: 166, column: 50, scope: !2075)
!2082 = !DILocation(line: 168, column: 24, scope: !2075)
!2083 = !DILocation(line: 168, column: 3, scope: !2075)
!2084 = !DILocation(line: 169, column: 27, scope: !2075)
!2085 = !DILocation(line: 169, column: 32, scope: !2075)
!2086 = !DILocation(line: 169, column: 10, scope: !2075)
!2087 = !DILocation(line: 169, column: 3, scope: !2075)
!2088 = distinct !DISubprogram(name: "sha384_finish_ctx", scope: !132, file: !132, line: 173, type: !2076, scopeLine: 174, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !131, retainedNodes: !28)
!2089 = !DILocalVariable(name: "ctx", arg: 1, scope: !2088, file: !132, line: 173, type: !1925)
!2090 = !DILocation(line: 173, column: 39, scope: !2088)
!2091 = !DILocalVariable(name: "resbuf", arg: 2, scope: !2088, file: !132, line: 173, type: !43)
!2092 = !DILocation(line: 173, column: 50, scope: !2088)
!2093 = !DILocation(line: 175, column: 24, scope: !2088)
!2094 = !DILocation(line: 175, column: 3, scope: !2088)
!2095 = !DILocation(line: 176, column: 27, scope: !2088)
!2096 = !DILocation(line: 176, column: 32, scope: !2088)
!2097 = !DILocation(line: 176, column: 10, scope: !2088)
!2098 = !DILocation(line: 176, column: 3, scope: !2088)
!2099 = distinct !DISubprogram(name: "sha512_stream", scope: !132, file: !132, line: 184, type: !2100, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !131, retainedNodes: !28)
!2100 = !DISubroutineType(types: !2101)
!2101 = !{!48, !2102, !43}
!2102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2103, size: 64, align: 64)
!2103 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1055, line: 48, baseType: !2104)
!2104 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !1057, line: 245, size: 1728, align: 64, elements: !2105)
!2105 = !{!2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114, !2115, !2116, !2117, !2118, !2126, !2127, !2128, !2129, !2130, !2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141}
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2104, file: !1057, line: 246, baseType: !48, size: 32, align: 32)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2104, file: !1057, line: 251, baseType: !41, size: 64, align: 64, offset: 64)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2104, file: !1057, line: 252, baseType: !41, size: 64, align: 64, offset: 128)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2104, file: !1057, line: 253, baseType: !41, size: 64, align: 64, offset: 192)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2104, file: !1057, line: 254, baseType: !41, size: 64, align: 64, offset: 256)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2104, file: !1057, line: 255, baseType: !41, size: 64, align: 64, offset: 320)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2104, file: !1057, line: 256, baseType: !41, size: 64, align: 64, offset: 384)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2104, file: !1057, line: 257, baseType: !41, size: 64, align: 64, offset: 448)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2104, file: !1057, line: 258, baseType: !41, size: 64, align: 64, offset: 512)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2104, file: !1057, line: 260, baseType: !41, size: 64, align: 64, offset: 576)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2104, file: !1057, line: 261, baseType: !41, size: 64, align: 64, offset: 640)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2104, file: !1057, line: 262, baseType: !41, size: 64, align: 64, offset: 704)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2104, file: !1057, line: 264, baseType: !2119, size: 64, align: 64, offset: 768)
!2119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2120, size: 64, align: 64)
!2120 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !1057, line: 160, size: 192, align: 64, elements: !2121)
!2121 = !{!2122, !2123, !2125}
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2120, file: !1057, line: 161, baseType: !2119, size: 64, align: 64)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !2120, file: !1057, line: 162, baseType: !2124, size: 64, align: 64, offset: 64)
!2124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2104, size: 64, align: 64)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !2120, file: !1057, line: 166, baseType: !48, size: 32, align: 32, offset: 128)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2104, file: !1057, line: 266, baseType: !2124, size: 64, align: 64, offset: 832)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2104, file: !1057, line: 268, baseType: !48, size: 32, align: 32, offset: 896)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2104, file: !1057, line: 272, baseType: !48, size: 32, align: 32, offset: 928)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2104, file: !1057, line: 274, baseType: !1083, size: 64, align: 64, offset: 960)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2104, file: !1057, line: 278, baseType: !49, size: 16, align: 16, offset: 1024)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2104, file: !1057, line: 279, baseType: !1088, size: 8, align: 8, offset: 1040)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2104, file: !1057, line: 280, baseType: !1090, size: 8, align: 8, offset: 1048)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2104, file: !1057, line: 284, baseType: !1094, size: 64, align: 64, offset: 1088)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2104, file: !1057, line: 293, baseType: !1097, size: 64, align: 64, offset: 1152)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !2104, file: !1057, line: 302, baseType: !43, size: 64, align: 64, offset: 1216)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !2104, file: !1057, line: 303, baseType: !43, size: 64, align: 64, offset: 1280)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !2104, file: !1057, line: 304, baseType: !43, size: 64, align: 64, offset: 1344)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !2104, file: !1057, line: 305, baseType: !43, size: 64, align: 64, offset: 1408)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2104, file: !1057, line: 306, baseType: !44, size: 64, align: 64, offset: 1472)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2104, file: !1057, line: 308, baseType: !48, size: 32, align: 32, offset: 1536)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2104, file: !1057, line: 310, baseType: !1105, size: 160, align: 8, offset: 1568)
!2142 = !DILocalVariable(name: "stream", arg: 1, scope: !2099, file: !132, line: 184, type: !2102)
!2143 = !DILocation(line: 184, column: 22, scope: !2099)
!2144 = !DILocalVariable(name: "resblock", arg: 2, scope: !2099, file: !132, line: 184, type: !43)
!2145 = !DILocation(line: 184, column: 36, scope: !2099)
!2146 = !DILocalVariable(name: "ctx", scope: !2099, file: !132, line: 186, type: !1926)
!2147 = !DILocation(line: 186, column: 21, scope: !2099)
!2148 = !DILocalVariable(name: "sum", scope: !2099, file: !132, line: 187, type: !44)
!2149 = !DILocation(line: 187, column: 10, scope: !2099)
!2150 = !DILocalVariable(name: "buffer", scope: !2099, file: !132, line: 189, type: !41)
!2151 = !DILocation(line: 189, column: 9, scope: !2099)
!2152 = !DILocation(line: 189, column: 18, scope: !2099)
!2153 = !DILocation(line: 190, column: 8, scope: !2154)
!2154 = distinct !DILexicalBlock(scope: !2099, file: !132, line: 190, column: 7)
!2155 = !DILocation(line: 190, column: 7, scope: !2099)
!2156 = !DILocation(line: 191, column: 5, scope: !2154)
!2157 = !DILocation(line: 194, column: 3, scope: !2099)
!2158 = !DILocation(line: 197, column: 3, scope: !2099)
!2159 = !DILocalVariable(name: "n", scope: !2160, file: !132, line: 202, type: !44)
!2160 = distinct !DILexicalBlock(scope: !2099, file: !132, line: 198, column: 5)
!2161 = !DILocation(line: 202, column: 14, scope: !2160)
!2162 = !DILocation(line: 203, column: 11, scope: !2160)
!2163 = !DILocation(line: 206, column: 7, scope: !2160)
!2164 = !DILocation(line: 208, column: 15, scope: !2165)
!2165 = distinct !DILexicalBlock(scope: !2160, file: !132, line: 207, column: 9)
!2166 = !DILocation(line: 208, column: 13, scope: !2165)
!2167 = !DILocation(line: 210, column: 18, scope: !2165)
!2168 = !DILocation(line: 210, column: 15, scope: !2165)
!2169 = !DILocation(line: 212, column: 15, scope: !2170)
!2170 = distinct !DILexicalBlock(scope: !2165, file: !132, line: 212, column: 15)
!2171 = !DILocation(line: 212, column: 19, scope: !2170)
!2172 = !DILocation(line: 212, column: 15, scope: !2165)
!2173 = !DILocation(line: 213, column: 13, scope: !2170)
!2174 = !DILocation(line: 215, column: 15, scope: !2175)
!2175 = distinct !DILexicalBlock(scope: !2165, file: !132, line: 215, column: 15)
!2176 = !DILocation(line: 215, column: 17, scope: !2175)
!2177 = !DILocation(line: 215, column: 15, scope: !2165)
!2178 = !DILocation(line: 220, column: 19, scope: !2179)
!2179 = distinct !DILexicalBlock(scope: !2180, file: !132, line: 220, column: 19)
!2180 = distinct !DILexicalBlock(scope: !2175, file: !132, line: 216, column: 13)
!2181 = !DILocation(line: 220, column: 19, scope: !2180)
!2182 = !DILocation(line: 222, column: 25, scope: !2183)
!2183 = distinct !DILexicalBlock(scope: !2179, file: !132, line: 221, column: 17)
!2184 = !DILocation(line: 222, column: 19, scope: !2183)
!2185 = !DILocation(line: 223, column: 19, scope: !2183)
!2186 = !DILocation(line: 225, column: 15, scope: !2180)
!2187 = !DILocation(line: 231, column: 15, scope: !2188)
!2188 = distinct !DILexicalBlock(scope: !2165, file: !132, line: 231, column: 15)
!2189 = !DILocation(line: 231, column: 15, scope: !2165)
!2190 = !DILocation(line: 232, column: 13, scope: !2188)
!2191 = !DILocation(line: 238, column: 29, scope: !2160)
!2192 = !DILocation(line: 238, column: 7, scope: !2160)
!2193 = !DILocation(line: 244, column: 7, scope: !2194)
!2194 = distinct !DILexicalBlock(scope: !2099, file: !132, line: 244, column: 7)
!2195 = !DILocation(line: 244, column: 11, scope: !2194)
!2196 = !DILocation(line: 244, column: 7, scope: !2099)
!2197 = !DILocation(line: 245, column: 27, scope: !2194)
!2198 = !DILocation(line: 245, column: 35, scope: !2194)
!2199 = !DILocation(line: 245, column: 5, scope: !2194)
!2200 = !DILocation(line: 248, column: 28, scope: !2099)
!2201 = !DILocation(line: 248, column: 3, scope: !2099)
!2202 = !DILocation(line: 249, column: 9, scope: !2099)
!2203 = !DILocation(line: 249, column: 3, scope: !2099)
!2204 = !DILocation(line: 250, column: 3, scope: !2099)
!2205 = !DILocation(line: 251, column: 1, scope: !2099)
!2206 = distinct !DISubprogram(name: "sha512_process_block", scope: !132, file: !132, line: 481, type: !2207, scopeLine: 482, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !131, retainedNodes: !28)
!2207 = !DISubroutineType(types: !2208)
!2208 = !{null, !1021, !44, !1925}
!2209 = !DILocalVariable(name: "buffer", arg: 1, scope: !2206, file: !132, line: 481, type: !1021)
!2210 = !DILocation(line: 481, column: 35, scope: !2206)
!2211 = !DILocalVariable(name: "len", arg: 2, scope: !2206, file: !132, line: 481, type: !44)
!2212 = !DILocation(line: 481, column: 50, scope: !2206)
!2213 = !DILocalVariable(name: "ctx", arg: 3, scope: !2206, file: !132, line: 481, type: !1925)
!2214 = !DILocation(line: 481, column: 74, scope: !2206)
!2215 = !DILocalVariable(name: "words", scope: !2206, file: !132, line: 483, type: !2216)
!2216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !147, size: 64, align: 64)
!2217 = !DILocation(line: 483, column: 14, scope: !2206)
!2218 = !DILocation(line: 483, column: 22, scope: !2206)
!2219 = !DILocalVariable(name: "endp", scope: !2206, file: !132, line: 484, type: !2216)
!2220 = !DILocation(line: 484, column: 14, scope: !2206)
!2221 = !DILocation(line: 484, column: 21, scope: !2206)
!2222 = !DILocation(line: 484, column: 29, scope: !2206)
!2223 = !DILocation(line: 484, column: 33, scope: !2206)
!2224 = !DILocation(line: 484, column: 27, scope: !2206)
!2225 = !DILocalVariable(name: "x", scope: !2206, file: !132, line: 485, type: !2226)
!2226 = !DICompositeType(tag: DW_TAG_array_type, baseType: !134, size: 1024, align: 64, elements: !88)
!2227 = !DILocation(line: 485, column: 7, scope: !2206)
!2228 = !DILocalVariable(name: "a", scope: !2206, file: !132, line: 486, type: !134)
!2229 = !DILocation(line: 486, column: 7, scope: !2206)
!2230 = !DILocation(line: 486, column: 11, scope: !2206)
!2231 = !DILocation(line: 486, column: 16, scope: !2206)
!2232 = !DILocalVariable(name: "b", scope: !2206, file: !132, line: 487, type: !134)
!2233 = !DILocation(line: 487, column: 7, scope: !2206)
!2234 = !DILocation(line: 487, column: 11, scope: !2206)
!2235 = !DILocation(line: 487, column: 16, scope: !2206)
!2236 = !DILocalVariable(name: "c", scope: !2206, file: !132, line: 488, type: !134)
!2237 = !DILocation(line: 488, column: 7, scope: !2206)
!2238 = !DILocation(line: 488, column: 11, scope: !2206)
!2239 = !DILocation(line: 488, column: 16, scope: !2206)
!2240 = !DILocalVariable(name: "d", scope: !2206, file: !132, line: 489, type: !134)
!2241 = !DILocation(line: 489, column: 7, scope: !2206)
!2242 = !DILocation(line: 489, column: 11, scope: !2206)
!2243 = !DILocation(line: 489, column: 16, scope: !2206)
!2244 = !DILocalVariable(name: "e", scope: !2206, file: !132, line: 490, type: !134)
!2245 = !DILocation(line: 490, column: 7, scope: !2206)
!2246 = !DILocation(line: 490, column: 11, scope: !2206)
!2247 = !DILocation(line: 490, column: 16, scope: !2206)
!2248 = !DILocalVariable(name: "f", scope: !2206, file: !132, line: 491, type: !134)
!2249 = !DILocation(line: 491, column: 7, scope: !2206)
!2250 = !DILocation(line: 491, column: 11, scope: !2206)
!2251 = !DILocation(line: 491, column: 16, scope: !2206)
!2252 = !DILocalVariable(name: "g", scope: !2206, file: !132, line: 492, type: !134)
!2253 = !DILocation(line: 492, column: 7, scope: !2206)
!2254 = !DILocation(line: 492, column: 11, scope: !2206)
!2255 = !DILocation(line: 492, column: 16, scope: !2206)
!2256 = !DILocalVariable(name: "h", scope: !2206, file: !132, line: 493, type: !134)
!2257 = !DILocation(line: 493, column: 7, scope: !2206)
!2258 = !DILocation(line: 493, column: 11, scope: !2206)
!2259 = !DILocation(line: 493, column: 16, scope: !2206)
!2260 = !DILocalVariable(name: "lolen", scope: !2206, file: !132, line: 494, type: !134)
!2261 = !DILocation(line: 494, column: 7, scope: !2206)
!2262 = !DILocation(line: 494, column: 15, scope: !2206)
!2263 = !DILocation(line: 499, column: 19, scope: !2206)
!2264 = !DILocation(line: 499, column: 3, scope: !2206)
!2265 = !DILocation(line: 499, column: 8, scope: !2206)
!2266 = !DILocation(line: 499, column: 17, scope: !2206)
!2267 = !DILocation(line: 500, column: 19, scope: !2206)
!2268 = !DILocation(line: 500, column: 3, scope: !2206)
!2269 = !DILocation(line: 500, column: 8, scope: !2206)
!2270 = !DILocation(line: 500, column: 17, scope: !2206)
!2271 = !DILocation(line: 527, column: 3, scope: !2206)
!2272 = !DILocation(line: 527, column: 10, scope: !2273)
!2273 = !DILexicalBlockFile(scope: !2274, file: !132, discriminator: 2)
!2274 = !DILexicalBlockFile(scope: !2206, file: !132, discriminator: 1)
!2275 = !DILocation(line: 527, column: 18, scope: !2206)
!2276 = !DILocation(line: 527, column: 16, scope: !2206)
!2277 = !DILocalVariable(name: "t", scope: !2278, file: !132, line: 529, type: !48)
!2278 = distinct !DILexicalBlock(scope: !2206, file: !132, line: 528, column: 5)
!2279 = !DILocation(line: 529, column: 11, scope: !2278)
!2280 = !DILocation(line: 531, column: 14, scope: !2281)
!2281 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 531, column: 7)
!2282 = !DILocation(line: 531, column: 12, scope: !2281)
!2283 = !DILocation(line: 531, column: 19, scope: !2284)
!2284 = !DILexicalBlockFile(scope: !2285, file: !132, discriminator: 2)
!2285 = !DILexicalBlockFile(scope: !2286, file: !132, discriminator: 1)
!2286 = distinct !DILexicalBlock(scope: !2281, file: !132, line: 531, column: 7)
!2287 = !DILocation(line: 531, column: 21, scope: !2286)
!2288 = !DILocation(line: 531, column: 7, scope: !2281)
!2289 = !DILocation(line: 533, column: 18, scope: !2290)
!2290 = distinct !DILexicalBlock(scope: !2286, file: !132, line: 532, column: 9)
!2291 = !DILocation(line: 533, column: 13, scope: !2290)
!2292 = !DILocation(line: 533, column: 11, scope: !2290)
!2293 = !DILocation(line: 533, column: 16, scope: !2290)
!2294 = !DILocation(line: 534, column: 16, scope: !2290)
!2295 = !DILocation(line: 535, column: 9, scope: !2290)
!2296 = !DILocation(line: 531, column: 28, scope: !2286)
!2297 = !DILocation(line: 531, column: 7, scope: !2286)
!2298 = !DILocation(line: 537, column: 7, scope: !2278)
!2299 = !DILocalVariable(name: "t0", scope: !2300, file: !132, line: 537, type: !134)
!2300 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 537, column: 7)
!2301 = !DILocation(line: 537, column: 7, scope: !2300)
!2302 = !DILocation(line: 537, column: 7, scope: !2303)
!2303 = !DILexicalBlockFile(scope: !2300, file: !132, discriminator: 1)
!2304 = !DILocalVariable(name: "t1", scope: !2300, file: !132, line: 537, type: !134)
!2305 = !DILocation(line: 538, column: 7, scope: !2278)
!2306 = !DILocalVariable(name: "t0", scope: !2307, file: !132, line: 538, type: !134)
!2307 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 538, column: 7)
!2308 = !DILocation(line: 538, column: 7, scope: !2307)
!2309 = !DILocation(line: 538, column: 7, scope: !2310)
!2310 = !DILexicalBlockFile(scope: !2307, file: !132, discriminator: 1)
!2311 = !DILocalVariable(name: "t1", scope: !2307, file: !132, line: 538, type: !134)
!2312 = !DILocation(line: 539, column: 7, scope: !2278)
!2313 = !DILocalVariable(name: "t0", scope: !2314, file: !132, line: 539, type: !134)
!2314 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 539, column: 7)
!2315 = !DILocation(line: 539, column: 7, scope: !2314)
!2316 = !DILocation(line: 539, column: 7, scope: !2317)
!2317 = !DILexicalBlockFile(scope: !2314, file: !132, discriminator: 1)
!2318 = !DILocalVariable(name: "t1", scope: !2314, file: !132, line: 539, type: !134)
!2319 = !DILocation(line: 540, column: 7, scope: !2278)
!2320 = !DILocalVariable(name: "t0", scope: !2321, file: !132, line: 540, type: !134)
!2321 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 540, column: 7)
!2322 = !DILocation(line: 540, column: 7, scope: !2321)
!2323 = !DILocation(line: 540, column: 7, scope: !2324)
!2324 = !DILexicalBlockFile(scope: !2321, file: !132, discriminator: 1)
!2325 = !DILocalVariable(name: "t1", scope: !2321, file: !132, line: 540, type: !134)
!2326 = !DILocation(line: 541, column: 7, scope: !2278)
!2327 = !DILocalVariable(name: "t0", scope: !2328, file: !132, line: 541, type: !134)
!2328 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 541, column: 7)
!2329 = !DILocation(line: 541, column: 7, scope: !2328)
!2330 = !DILocation(line: 541, column: 7, scope: !2331)
!2331 = !DILexicalBlockFile(scope: !2328, file: !132, discriminator: 1)
!2332 = !DILocalVariable(name: "t1", scope: !2328, file: !132, line: 541, type: !134)
!2333 = !DILocation(line: 542, column: 7, scope: !2278)
!2334 = !DILocalVariable(name: "t0", scope: !2335, file: !132, line: 542, type: !134)
!2335 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 542, column: 7)
!2336 = !DILocation(line: 542, column: 7, scope: !2335)
!2337 = !DILocation(line: 542, column: 7, scope: !2338)
!2338 = !DILexicalBlockFile(scope: !2335, file: !132, discriminator: 1)
!2339 = !DILocalVariable(name: "t1", scope: !2335, file: !132, line: 542, type: !134)
!2340 = !DILocation(line: 543, column: 7, scope: !2278)
!2341 = !DILocalVariable(name: "t0", scope: !2342, file: !132, line: 543, type: !134)
!2342 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 543, column: 7)
!2343 = !DILocation(line: 543, column: 7, scope: !2342)
!2344 = !DILocation(line: 543, column: 7, scope: !2345)
!2345 = !DILexicalBlockFile(scope: !2342, file: !132, discriminator: 1)
!2346 = !DILocalVariable(name: "t1", scope: !2342, file: !132, line: 543, type: !134)
!2347 = !DILocation(line: 544, column: 7, scope: !2278)
!2348 = !DILocalVariable(name: "t0", scope: !2349, file: !132, line: 544, type: !134)
!2349 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 544, column: 7)
!2350 = !DILocation(line: 544, column: 7, scope: !2349)
!2351 = !DILocation(line: 544, column: 7, scope: !2352)
!2352 = !DILexicalBlockFile(scope: !2349, file: !132, discriminator: 1)
!2353 = !DILocalVariable(name: "t1", scope: !2349, file: !132, line: 544, type: !134)
!2354 = !DILocation(line: 545, column: 7, scope: !2278)
!2355 = !DILocalVariable(name: "t0", scope: !2356, file: !132, line: 545, type: !134)
!2356 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 545, column: 7)
!2357 = !DILocation(line: 545, column: 7, scope: !2356)
!2358 = !DILocation(line: 545, column: 7, scope: !2359)
!2359 = !DILexicalBlockFile(scope: !2356, file: !132, discriminator: 1)
!2360 = !DILocalVariable(name: "t1", scope: !2356, file: !132, line: 545, type: !134)
!2361 = !DILocation(line: 546, column: 7, scope: !2278)
!2362 = !DILocalVariable(name: "t0", scope: !2363, file: !132, line: 546, type: !134)
!2363 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 546, column: 7)
!2364 = !DILocation(line: 546, column: 7, scope: !2363)
!2365 = !DILocation(line: 546, column: 7, scope: !2366)
!2366 = !DILexicalBlockFile(scope: !2363, file: !132, discriminator: 1)
!2367 = !DILocalVariable(name: "t1", scope: !2363, file: !132, line: 546, type: !134)
!2368 = !DILocation(line: 547, column: 7, scope: !2278)
!2369 = !DILocalVariable(name: "t0", scope: !2370, file: !132, line: 547, type: !134)
!2370 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 547, column: 7)
!2371 = !DILocation(line: 547, column: 7, scope: !2370)
!2372 = !DILocation(line: 547, column: 7, scope: !2373)
!2373 = !DILexicalBlockFile(scope: !2370, file: !132, discriminator: 1)
!2374 = !DILocalVariable(name: "t1", scope: !2370, file: !132, line: 547, type: !134)
!2375 = !DILocation(line: 548, column: 7, scope: !2278)
!2376 = !DILocalVariable(name: "t0", scope: !2377, file: !132, line: 548, type: !134)
!2377 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 548, column: 7)
!2378 = !DILocation(line: 548, column: 7, scope: !2377)
!2379 = !DILocation(line: 548, column: 7, scope: !2380)
!2380 = !DILexicalBlockFile(scope: !2377, file: !132, discriminator: 1)
!2381 = !DILocalVariable(name: "t1", scope: !2377, file: !132, line: 548, type: !134)
!2382 = !DILocation(line: 549, column: 7, scope: !2278)
!2383 = !DILocalVariable(name: "t0", scope: !2384, file: !132, line: 549, type: !134)
!2384 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 549, column: 7)
!2385 = !DILocation(line: 549, column: 7, scope: !2384)
!2386 = !DILocation(line: 549, column: 7, scope: !2387)
!2387 = !DILexicalBlockFile(scope: !2384, file: !132, discriminator: 1)
!2388 = !DILocalVariable(name: "t1", scope: !2384, file: !132, line: 549, type: !134)
!2389 = !DILocation(line: 550, column: 7, scope: !2278)
!2390 = !DILocalVariable(name: "t0", scope: !2391, file: !132, line: 550, type: !134)
!2391 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 550, column: 7)
!2392 = !DILocation(line: 550, column: 7, scope: !2391)
!2393 = !DILocation(line: 550, column: 7, scope: !2394)
!2394 = !DILexicalBlockFile(scope: !2391, file: !132, discriminator: 1)
!2395 = !DILocalVariable(name: "t1", scope: !2391, file: !132, line: 550, type: !134)
!2396 = !DILocation(line: 551, column: 7, scope: !2278)
!2397 = !DILocalVariable(name: "t0", scope: !2398, file: !132, line: 551, type: !134)
!2398 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 551, column: 7)
!2399 = !DILocation(line: 551, column: 7, scope: !2398)
!2400 = !DILocation(line: 551, column: 7, scope: !2401)
!2401 = !DILexicalBlockFile(scope: !2398, file: !132, discriminator: 1)
!2402 = !DILocalVariable(name: "t1", scope: !2398, file: !132, line: 551, type: !134)
!2403 = !DILocation(line: 552, column: 7, scope: !2278)
!2404 = !DILocalVariable(name: "t0", scope: !2405, file: !132, line: 552, type: !134)
!2405 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 552, column: 7)
!2406 = !DILocation(line: 552, column: 7, scope: !2405)
!2407 = !DILocation(line: 552, column: 7, scope: !2408)
!2408 = !DILexicalBlockFile(scope: !2405, file: !132, discriminator: 1)
!2409 = !DILocalVariable(name: "t1", scope: !2405, file: !132, line: 552, type: !134)
!2410 = !DILocation(line: 553, column: 7, scope: !2278)
!2411 = !DILocalVariable(name: "t0", scope: !2412, file: !132, line: 553, type: !134)
!2412 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 553, column: 7)
!2413 = !DILocation(line: 553, column: 7, scope: !2412)
!2414 = !DILocation(line: 553, column: 7, scope: !2415)
!2415 = !DILexicalBlockFile(scope: !2412, file: !132, discriminator: 1)
!2416 = !DILocalVariable(name: "t1", scope: !2412, file: !132, line: 553, type: !134)
!2417 = !DILocation(line: 554, column: 7, scope: !2278)
!2418 = !DILocalVariable(name: "t0", scope: !2419, file: !132, line: 554, type: !134)
!2419 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 554, column: 7)
!2420 = !DILocation(line: 554, column: 7, scope: !2419)
!2421 = !DILocation(line: 554, column: 7, scope: !2422)
!2422 = !DILexicalBlockFile(scope: !2419, file: !132, discriminator: 1)
!2423 = !DILocalVariable(name: "t1", scope: !2419, file: !132, line: 554, type: !134)
!2424 = !DILocation(line: 555, column: 7, scope: !2278)
!2425 = !DILocalVariable(name: "t0", scope: !2426, file: !132, line: 555, type: !134)
!2426 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 555, column: 7)
!2427 = !DILocation(line: 555, column: 7, scope: !2426)
!2428 = !DILocation(line: 555, column: 7, scope: !2429)
!2429 = !DILexicalBlockFile(scope: !2426, file: !132, discriminator: 1)
!2430 = !DILocalVariable(name: "t1", scope: !2426, file: !132, line: 555, type: !134)
!2431 = !DILocation(line: 556, column: 7, scope: !2278)
!2432 = !DILocalVariable(name: "t0", scope: !2433, file: !132, line: 556, type: !134)
!2433 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 556, column: 7)
!2434 = !DILocation(line: 556, column: 7, scope: !2433)
!2435 = !DILocation(line: 556, column: 7, scope: !2436)
!2436 = !DILexicalBlockFile(scope: !2433, file: !132, discriminator: 1)
!2437 = !DILocalVariable(name: "t1", scope: !2433, file: !132, line: 556, type: !134)
!2438 = !DILocation(line: 557, column: 7, scope: !2278)
!2439 = !DILocalVariable(name: "t0", scope: !2440, file: !132, line: 557, type: !134)
!2440 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 557, column: 7)
!2441 = !DILocation(line: 557, column: 7, scope: !2440)
!2442 = !DILocation(line: 557, column: 7, scope: !2443)
!2443 = !DILexicalBlockFile(scope: !2440, file: !132, discriminator: 1)
!2444 = !DILocalVariable(name: "t1", scope: !2440, file: !132, line: 557, type: !134)
!2445 = !DILocation(line: 558, column: 7, scope: !2278)
!2446 = !DILocalVariable(name: "t0", scope: !2447, file: !132, line: 558, type: !134)
!2447 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 558, column: 7)
!2448 = !DILocation(line: 558, column: 7, scope: !2447)
!2449 = !DILocation(line: 558, column: 7, scope: !2450)
!2450 = !DILexicalBlockFile(scope: !2447, file: !132, discriminator: 1)
!2451 = !DILocalVariable(name: "t1", scope: !2447, file: !132, line: 558, type: !134)
!2452 = !DILocation(line: 559, column: 7, scope: !2278)
!2453 = !DILocalVariable(name: "t0", scope: !2454, file: !132, line: 559, type: !134)
!2454 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 559, column: 7)
!2455 = !DILocation(line: 559, column: 7, scope: !2454)
!2456 = !DILocation(line: 559, column: 7, scope: !2457)
!2457 = !DILexicalBlockFile(scope: !2454, file: !132, discriminator: 1)
!2458 = !DILocalVariable(name: "t1", scope: !2454, file: !132, line: 559, type: !134)
!2459 = !DILocation(line: 560, column: 7, scope: !2278)
!2460 = !DILocalVariable(name: "t0", scope: !2461, file: !132, line: 560, type: !134)
!2461 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 560, column: 7)
!2462 = !DILocation(line: 560, column: 7, scope: !2461)
!2463 = !DILocation(line: 560, column: 7, scope: !2464)
!2464 = !DILexicalBlockFile(scope: !2461, file: !132, discriminator: 1)
!2465 = !DILocalVariable(name: "t1", scope: !2461, file: !132, line: 560, type: !134)
!2466 = !DILocation(line: 561, column: 7, scope: !2278)
!2467 = !DILocalVariable(name: "t0", scope: !2468, file: !132, line: 561, type: !134)
!2468 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 561, column: 7)
!2469 = !DILocation(line: 561, column: 7, scope: !2468)
!2470 = !DILocation(line: 561, column: 7, scope: !2471)
!2471 = !DILexicalBlockFile(scope: !2468, file: !132, discriminator: 1)
!2472 = !DILocalVariable(name: "t1", scope: !2468, file: !132, line: 561, type: !134)
!2473 = !DILocation(line: 562, column: 7, scope: !2278)
!2474 = !DILocalVariable(name: "t0", scope: !2475, file: !132, line: 562, type: !134)
!2475 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 562, column: 7)
!2476 = !DILocation(line: 562, column: 7, scope: !2475)
!2477 = !DILocation(line: 562, column: 7, scope: !2478)
!2478 = !DILexicalBlockFile(scope: !2475, file: !132, discriminator: 1)
!2479 = !DILocalVariable(name: "t1", scope: !2475, file: !132, line: 562, type: !134)
!2480 = !DILocation(line: 563, column: 7, scope: !2278)
!2481 = !DILocalVariable(name: "t0", scope: !2482, file: !132, line: 563, type: !134)
!2482 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 563, column: 7)
!2483 = !DILocation(line: 563, column: 7, scope: !2482)
!2484 = !DILocation(line: 563, column: 7, scope: !2485)
!2485 = !DILexicalBlockFile(scope: !2482, file: !132, discriminator: 1)
!2486 = !DILocalVariable(name: "t1", scope: !2482, file: !132, line: 563, type: !134)
!2487 = !DILocation(line: 564, column: 7, scope: !2278)
!2488 = !DILocalVariable(name: "t0", scope: !2489, file: !132, line: 564, type: !134)
!2489 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 564, column: 7)
!2490 = !DILocation(line: 564, column: 7, scope: !2489)
!2491 = !DILocation(line: 564, column: 7, scope: !2492)
!2492 = !DILexicalBlockFile(scope: !2489, file: !132, discriminator: 1)
!2493 = !DILocalVariable(name: "t1", scope: !2489, file: !132, line: 564, type: !134)
!2494 = !DILocation(line: 565, column: 7, scope: !2278)
!2495 = !DILocalVariable(name: "t0", scope: !2496, file: !132, line: 565, type: !134)
!2496 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 565, column: 7)
!2497 = !DILocation(line: 565, column: 7, scope: !2496)
!2498 = !DILocation(line: 565, column: 7, scope: !2499)
!2499 = !DILexicalBlockFile(scope: !2496, file: !132, discriminator: 1)
!2500 = !DILocalVariable(name: "t1", scope: !2496, file: !132, line: 565, type: !134)
!2501 = !DILocation(line: 566, column: 7, scope: !2278)
!2502 = !DILocalVariable(name: "t0", scope: !2503, file: !132, line: 566, type: !134)
!2503 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 566, column: 7)
!2504 = !DILocation(line: 566, column: 7, scope: !2503)
!2505 = !DILocation(line: 566, column: 7, scope: !2506)
!2506 = !DILexicalBlockFile(scope: !2503, file: !132, discriminator: 1)
!2507 = !DILocalVariable(name: "t1", scope: !2503, file: !132, line: 566, type: !134)
!2508 = !DILocation(line: 567, column: 7, scope: !2278)
!2509 = !DILocalVariable(name: "t0", scope: !2510, file: !132, line: 567, type: !134)
!2510 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 567, column: 7)
!2511 = !DILocation(line: 567, column: 7, scope: !2510)
!2512 = !DILocation(line: 567, column: 7, scope: !2513)
!2513 = !DILexicalBlockFile(scope: !2510, file: !132, discriminator: 1)
!2514 = !DILocalVariable(name: "t1", scope: !2510, file: !132, line: 567, type: !134)
!2515 = !DILocation(line: 568, column: 7, scope: !2278)
!2516 = !DILocalVariable(name: "t0", scope: !2517, file: !132, line: 568, type: !134)
!2517 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 568, column: 7)
!2518 = !DILocation(line: 568, column: 7, scope: !2517)
!2519 = !DILocation(line: 568, column: 7, scope: !2520)
!2520 = !DILexicalBlockFile(scope: !2517, file: !132, discriminator: 1)
!2521 = !DILocalVariable(name: "t1", scope: !2517, file: !132, line: 568, type: !134)
!2522 = !DILocation(line: 569, column: 7, scope: !2278)
!2523 = !DILocalVariable(name: "t0", scope: !2524, file: !132, line: 569, type: !134)
!2524 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 569, column: 7)
!2525 = !DILocation(line: 569, column: 7, scope: !2524)
!2526 = !DILocation(line: 569, column: 7, scope: !2527)
!2527 = !DILexicalBlockFile(scope: !2524, file: !132, discriminator: 1)
!2528 = !DILocalVariable(name: "t1", scope: !2524, file: !132, line: 569, type: !134)
!2529 = !DILocation(line: 570, column: 7, scope: !2278)
!2530 = !DILocalVariable(name: "t0", scope: !2531, file: !132, line: 570, type: !134)
!2531 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 570, column: 7)
!2532 = !DILocation(line: 570, column: 7, scope: !2531)
!2533 = !DILocation(line: 570, column: 7, scope: !2534)
!2534 = !DILexicalBlockFile(scope: !2531, file: !132, discriminator: 1)
!2535 = !DILocalVariable(name: "t1", scope: !2531, file: !132, line: 570, type: !134)
!2536 = !DILocation(line: 571, column: 7, scope: !2278)
!2537 = !DILocalVariable(name: "t0", scope: !2538, file: !132, line: 571, type: !134)
!2538 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 571, column: 7)
!2539 = !DILocation(line: 571, column: 7, scope: !2538)
!2540 = !DILocation(line: 571, column: 7, scope: !2541)
!2541 = !DILexicalBlockFile(scope: !2538, file: !132, discriminator: 1)
!2542 = !DILocalVariable(name: "t1", scope: !2538, file: !132, line: 571, type: !134)
!2543 = !DILocation(line: 572, column: 7, scope: !2278)
!2544 = !DILocalVariable(name: "t0", scope: !2545, file: !132, line: 572, type: !134)
!2545 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 572, column: 7)
!2546 = !DILocation(line: 572, column: 7, scope: !2545)
!2547 = !DILocation(line: 572, column: 7, scope: !2548)
!2548 = !DILexicalBlockFile(scope: !2545, file: !132, discriminator: 1)
!2549 = !DILocalVariable(name: "t1", scope: !2545, file: !132, line: 572, type: !134)
!2550 = !DILocation(line: 573, column: 7, scope: !2278)
!2551 = !DILocalVariable(name: "t0", scope: !2552, file: !132, line: 573, type: !134)
!2552 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 573, column: 7)
!2553 = !DILocation(line: 573, column: 7, scope: !2552)
!2554 = !DILocation(line: 573, column: 7, scope: !2555)
!2555 = !DILexicalBlockFile(scope: !2552, file: !132, discriminator: 1)
!2556 = !DILocalVariable(name: "t1", scope: !2552, file: !132, line: 573, type: !134)
!2557 = !DILocation(line: 574, column: 7, scope: !2278)
!2558 = !DILocalVariable(name: "t0", scope: !2559, file: !132, line: 574, type: !134)
!2559 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 574, column: 7)
!2560 = !DILocation(line: 574, column: 7, scope: !2559)
!2561 = !DILocation(line: 574, column: 7, scope: !2562)
!2562 = !DILexicalBlockFile(scope: !2559, file: !132, discriminator: 1)
!2563 = !DILocalVariable(name: "t1", scope: !2559, file: !132, line: 574, type: !134)
!2564 = !DILocation(line: 575, column: 7, scope: !2278)
!2565 = !DILocalVariable(name: "t0", scope: !2566, file: !132, line: 575, type: !134)
!2566 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 575, column: 7)
!2567 = !DILocation(line: 575, column: 7, scope: !2566)
!2568 = !DILocation(line: 575, column: 7, scope: !2569)
!2569 = !DILexicalBlockFile(scope: !2566, file: !132, discriminator: 1)
!2570 = !DILocalVariable(name: "t1", scope: !2566, file: !132, line: 575, type: !134)
!2571 = !DILocation(line: 576, column: 7, scope: !2278)
!2572 = !DILocalVariable(name: "t0", scope: !2573, file: !132, line: 576, type: !134)
!2573 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 576, column: 7)
!2574 = !DILocation(line: 576, column: 7, scope: !2573)
!2575 = !DILocation(line: 576, column: 7, scope: !2576)
!2576 = !DILexicalBlockFile(scope: !2573, file: !132, discriminator: 1)
!2577 = !DILocalVariable(name: "t1", scope: !2573, file: !132, line: 576, type: !134)
!2578 = !DILocation(line: 577, column: 7, scope: !2278)
!2579 = !DILocalVariable(name: "t0", scope: !2580, file: !132, line: 577, type: !134)
!2580 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 577, column: 7)
!2581 = !DILocation(line: 577, column: 7, scope: !2580)
!2582 = !DILocation(line: 577, column: 7, scope: !2583)
!2583 = !DILexicalBlockFile(scope: !2580, file: !132, discriminator: 1)
!2584 = !DILocalVariable(name: "t1", scope: !2580, file: !132, line: 577, type: !134)
!2585 = !DILocation(line: 578, column: 7, scope: !2278)
!2586 = !DILocalVariable(name: "t0", scope: !2587, file: !132, line: 578, type: !134)
!2587 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 578, column: 7)
!2588 = !DILocation(line: 578, column: 7, scope: !2587)
!2589 = !DILocation(line: 578, column: 7, scope: !2590)
!2590 = !DILexicalBlockFile(scope: !2587, file: !132, discriminator: 1)
!2591 = !DILocalVariable(name: "t1", scope: !2587, file: !132, line: 578, type: !134)
!2592 = !DILocation(line: 579, column: 7, scope: !2278)
!2593 = !DILocalVariable(name: "t0", scope: !2594, file: !132, line: 579, type: !134)
!2594 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 579, column: 7)
!2595 = !DILocation(line: 579, column: 7, scope: !2594)
!2596 = !DILocation(line: 579, column: 7, scope: !2597)
!2597 = !DILexicalBlockFile(scope: !2594, file: !132, discriminator: 1)
!2598 = !DILocalVariable(name: "t1", scope: !2594, file: !132, line: 579, type: !134)
!2599 = !DILocation(line: 580, column: 7, scope: !2278)
!2600 = !DILocalVariable(name: "t0", scope: !2601, file: !132, line: 580, type: !134)
!2601 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 580, column: 7)
!2602 = !DILocation(line: 580, column: 7, scope: !2601)
!2603 = !DILocation(line: 580, column: 7, scope: !2604)
!2604 = !DILexicalBlockFile(scope: !2601, file: !132, discriminator: 1)
!2605 = !DILocalVariable(name: "t1", scope: !2601, file: !132, line: 580, type: !134)
!2606 = !DILocation(line: 581, column: 7, scope: !2278)
!2607 = !DILocalVariable(name: "t0", scope: !2608, file: !132, line: 581, type: !134)
!2608 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 581, column: 7)
!2609 = !DILocation(line: 581, column: 7, scope: !2608)
!2610 = !DILocation(line: 581, column: 7, scope: !2611)
!2611 = !DILexicalBlockFile(scope: !2608, file: !132, discriminator: 1)
!2612 = !DILocalVariable(name: "t1", scope: !2608, file: !132, line: 581, type: !134)
!2613 = !DILocation(line: 582, column: 7, scope: !2278)
!2614 = !DILocalVariable(name: "t0", scope: !2615, file: !132, line: 582, type: !134)
!2615 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 582, column: 7)
!2616 = !DILocation(line: 582, column: 7, scope: !2615)
!2617 = !DILocation(line: 582, column: 7, scope: !2618)
!2618 = !DILexicalBlockFile(scope: !2615, file: !132, discriminator: 1)
!2619 = !DILocalVariable(name: "t1", scope: !2615, file: !132, line: 582, type: !134)
!2620 = !DILocation(line: 583, column: 7, scope: !2278)
!2621 = !DILocalVariable(name: "t0", scope: !2622, file: !132, line: 583, type: !134)
!2622 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 583, column: 7)
!2623 = !DILocation(line: 583, column: 7, scope: !2622)
!2624 = !DILocation(line: 583, column: 7, scope: !2625)
!2625 = !DILexicalBlockFile(scope: !2622, file: !132, discriminator: 1)
!2626 = !DILocalVariable(name: "t1", scope: !2622, file: !132, line: 583, type: !134)
!2627 = !DILocation(line: 584, column: 7, scope: !2278)
!2628 = !DILocalVariable(name: "t0", scope: !2629, file: !132, line: 584, type: !134)
!2629 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 584, column: 7)
!2630 = !DILocation(line: 584, column: 7, scope: !2629)
!2631 = !DILocation(line: 584, column: 7, scope: !2632)
!2632 = !DILexicalBlockFile(scope: !2629, file: !132, discriminator: 1)
!2633 = !DILocalVariable(name: "t1", scope: !2629, file: !132, line: 584, type: !134)
!2634 = !DILocation(line: 585, column: 7, scope: !2278)
!2635 = !DILocalVariable(name: "t0", scope: !2636, file: !132, line: 585, type: !134)
!2636 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 585, column: 7)
!2637 = !DILocation(line: 585, column: 7, scope: !2636)
!2638 = !DILocation(line: 585, column: 7, scope: !2639)
!2639 = !DILexicalBlockFile(scope: !2636, file: !132, discriminator: 1)
!2640 = !DILocalVariable(name: "t1", scope: !2636, file: !132, line: 585, type: !134)
!2641 = !DILocation(line: 586, column: 7, scope: !2278)
!2642 = !DILocalVariable(name: "t0", scope: !2643, file: !132, line: 586, type: !134)
!2643 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 586, column: 7)
!2644 = !DILocation(line: 586, column: 7, scope: !2643)
!2645 = !DILocation(line: 586, column: 7, scope: !2646)
!2646 = !DILexicalBlockFile(scope: !2643, file: !132, discriminator: 1)
!2647 = !DILocalVariable(name: "t1", scope: !2643, file: !132, line: 586, type: !134)
!2648 = !DILocation(line: 587, column: 7, scope: !2278)
!2649 = !DILocalVariable(name: "t0", scope: !2650, file: !132, line: 587, type: !134)
!2650 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 587, column: 7)
!2651 = !DILocation(line: 587, column: 7, scope: !2650)
!2652 = !DILocation(line: 587, column: 7, scope: !2653)
!2653 = !DILexicalBlockFile(scope: !2650, file: !132, discriminator: 1)
!2654 = !DILocalVariable(name: "t1", scope: !2650, file: !132, line: 587, type: !134)
!2655 = !DILocation(line: 588, column: 7, scope: !2278)
!2656 = !DILocalVariable(name: "t0", scope: !2657, file: !132, line: 588, type: !134)
!2657 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 588, column: 7)
!2658 = !DILocation(line: 588, column: 7, scope: !2657)
!2659 = !DILocation(line: 588, column: 7, scope: !2660)
!2660 = !DILexicalBlockFile(scope: !2657, file: !132, discriminator: 1)
!2661 = !DILocalVariable(name: "t1", scope: !2657, file: !132, line: 588, type: !134)
!2662 = !DILocation(line: 589, column: 7, scope: !2278)
!2663 = !DILocalVariable(name: "t0", scope: !2664, file: !132, line: 589, type: !134)
!2664 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 589, column: 7)
!2665 = !DILocation(line: 589, column: 7, scope: !2664)
!2666 = !DILocation(line: 589, column: 7, scope: !2667)
!2667 = !DILexicalBlockFile(scope: !2664, file: !132, discriminator: 1)
!2668 = !DILocalVariable(name: "t1", scope: !2664, file: !132, line: 589, type: !134)
!2669 = !DILocation(line: 590, column: 7, scope: !2278)
!2670 = !DILocalVariable(name: "t0", scope: !2671, file: !132, line: 590, type: !134)
!2671 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 590, column: 7)
!2672 = !DILocation(line: 590, column: 7, scope: !2671)
!2673 = !DILocation(line: 590, column: 7, scope: !2674)
!2674 = !DILexicalBlockFile(scope: !2671, file: !132, discriminator: 1)
!2675 = !DILocalVariable(name: "t1", scope: !2671, file: !132, line: 590, type: !134)
!2676 = !DILocation(line: 591, column: 7, scope: !2278)
!2677 = !DILocalVariable(name: "t0", scope: !2678, file: !132, line: 591, type: !134)
!2678 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 591, column: 7)
!2679 = !DILocation(line: 591, column: 7, scope: !2678)
!2680 = !DILocation(line: 591, column: 7, scope: !2681)
!2681 = !DILexicalBlockFile(scope: !2678, file: !132, discriminator: 1)
!2682 = !DILocalVariable(name: "t1", scope: !2678, file: !132, line: 591, type: !134)
!2683 = !DILocation(line: 592, column: 7, scope: !2278)
!2684 = !DILocalVariable(name: "t0", scope: !2685, file: !132, line: 592, type: !134)
!2685 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 592, column: 7)
!2686 = !DILocation(line: 592, column: 7, scope: !2685)
!2687 = !DILocation(line: 592, column: 7, scope: !2688)
!2688 = !DILexicalBlockFile(scope: !2685, file: !132, discriminator: 1)
!2689 = !DILocalVariable(name: "t1", scope: !2685, file: !132, line: 592, type: !134)
!2690 = !DILocation(line: 593, column: 7, scope: !2278)
!2691 = !DILocalVariable(name: "t0", scope: !2692, file: !132, line: 593, type: !134)
!2692 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 593, column: 7)
!2693 = !DILocation(line: 593, column: 7, scope: !2692)
!2694 = !DILocation(line: 593, column: 7, scope: !2695)
!2695 = !DILexicalBlockFile(scope: !2692, file: !132, discriminator: 1)
!2696 = !DILocalVariable(name: "t1", scope: !2692, file: !132, line: 593, type: !134)
!2697 = !DILocation(line: 594, column: 7, scope: !2278)
!2698 = !DILocalVariable(name: "t0", scope: !2699, file: !132, line: 594, type: !134)
!2699 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 594, column: 7)
!2700 = !DILocation(line: 594, column: 7, scope: !2699)
!2701 = !DILocation(line: 594, column: 7, scope: !2702)
!2702 = !DILexicalBlockFile(scope: !2699, file: !132, discriminator: 1)
!2703 = !DILocalVariable(name: "t1", scope: !2699, file: !132, line: 594, type: !134)
!2704 = !DILocation(line: 595, column: 7, scope: !2278)
!2705 = !DILocalVariable(name: "t0", scope: !2706, file: !132, line: 595, type: !134)
!2706 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 595, column: 7)
!2707 = !DILocation(line: 595, column: 7, scope: !2706)
!2708 = !DILocation(line: 595, column: 7, scope: !2709)
!2709 = !DILexicalBlockFile(scope: !2706, file: !132, discriminator: 1)
!2710 = !DILocalVariable(name: "t1", scope: !2706, file: !132, line: 595, type: !134)
!2711 = !DILocation(line: 596, column: 7, scope: !2278)
!2712 = !DILocalVariable(name: "t0", scope: !2713, file: !132, line: 596, type: !134)
!2713 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 596, column: 7)
!2714 = !DILocation(line: 596, column: 7, scope: !2713)
!2715 = !DILocation(line: 596, column: 7, scope: !2716)
!2716 = !DILexicalBlockFile(scope: !2713, file: !132, discriminator: 1)
!2717 = !DILocalVariable(name: "t1", scope: !2713, file: !132, line: 596, type: !134)
!2718 = !DILocation(line: 597, column: 7, scope: !2278)
!2719 = !DILocalVariable(name: "t0", scope: !2720, file: !132, line: 597, type: !134)
!2720 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 597, column: 7)
!2721 = !DILocation(line: 597, column: 7, scope: !2720)
!2722 = !DILocation(line: 597, column: 7, scope: !2723)
!2723 = !DILexicalBlockFile(scope: !2720, file: !132, discriminator: 1)
!2724 = !DILocalVariable(name: "t1", scope: !2720, file: !132, line: 597, type: !134)
!2725 = !DILocation(line: 598, column: 7, scope: !2278)
!2726 = !DILocalVariable(name: "t0", scope: !2727, file: !132, line: 598, type: !134)
!2727 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 598, column: 7)
!2728 = !DILocation(line: 598, column: 7, scope: !2727)
!2729 = !DILocation(line: 598, column: 7, scope: !2730)
!2730 = !DILexicalBlockFile(scope: !2727, file: !132, discriminator: 1)
!2731 = !DILocalVariable(name: "t1", scope: !2727, file: !132, line: 598, type: !134)
!2732 = !DILocation(line: 599, column: 7, scope: !2278)
!2733 = !DILocalVariable(name: "t0", scope: !2734, file: !132, line: 599, type: !134)
!2734 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 599, column: 7)
!2735 = !DILocation(line: 599, column: 7, scope: !2734)
!2736 = !DILocation(line: 599, column: 7, scope: !2737)
!2737 = !DILexicalBlockFile(scope: !2734, file: !132, discriminator: 1)
!2738 = !DILocalVariable(name: "t1", scope: !2734, file: !132, line: 599, type: !134)
!2739 = !DILocation(line: 600, column: 7, scope: !2278)
!2740 = !DILocalVariable(name: "t0", scope: !2741, file: !132, line: 600, type: !134)
!2741 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 600, column: 7)
!2742 = !DILocation(line: 600, column: 7, scope: !2741)
!2743 = !DILocation(line: 600, column: 7, scope: !2744)
!2744 = !DILexicalBlockFile(scope: !2741, file: !132, discriminator: 1)
!2745 = !DILocalVariable(name: "t1", scope: !2741, file: !132, line: 600, type: !134)
!2746 = !DILocation(line: 601, column: 7, scope: !2278)
!2747 = !DILocalVariable(name: "t0", scope: !2748, file: !132, line: 601, type: !134)
!2748 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 601, column: 7)
!2749 = !DILocation(line: 601, column: 7, scope: !2748)
!2750 = !DILocation(line: 601, column: 7, scope: !2751)
!2751 = !DILexicalBlockFile(scope: !2748, file: !132, discriminator: 1)
!2752 = !DILocalVariable(name: "t1", scope: !2748, file: !132, line: 601, type: !134)
!2753 = !DILocation(line: 602, column: 7, scope: !2278)
!2754 = !DILocalVariable(name: "t0", scope: !2755, file: !132, line: 602, type: !134)
!2755 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 602, column: 7)
!2756 = !DILocation(line: 602, column: 7, scope: !2755)
!2757 = !DILocation(line: 602, column: 7, scope: !2758)
!2758 = !DILexicalBlockFile(scope: !2755, file: !132, discriminator: 1)
!2759 = !DILocalVariable(name: "t1", scope: !2755, file: !132, line: 602, type: !134)
!2760 = !DILocation(line: 603, column: 7, scope: !2278)
!2761 = !DILocalVariable(name: "t0", scope: !2762, file: !132, line: 603, type: !134)
!2762 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 603, column: 7)
!2763 = !DILocation(line: 603, column: 7, scope: !2762)
!2764 = !DILocation(line: 603, column: 7, scope: !2765)
!2765 = !DILexicalBlockFile(scope: !2762, file: !132, discriminator: 1)
!2766 = !DILocalVariable(name: "t1", scope: !2762, file: !132, line: 603, type: !134)
!2767 = !DILocation(line: 604, column: 7, scope: !2278)
!2768 = !DILocalVariable(name: "t0", scope: !2769, file: !132, line: 604, type: !134)
!2769 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 604, column: 7)
!2770 = !DILocation(line: 604, column: 7, scope: !2769)
!2771 = !DILocation(line: 604, column: 7, scope: !2772)
!2772 = !DILexicalBlockFile(scope: !2769, file: !132, discriminator: 1)
!2773 = !DILocalVariable(name: "t1", scope: !2769, file: !132, line: 604, type: !134)
!2774 = !DILocation(line: 605, column: 7, scope: !2278)
!2775 = !DILocalVariable(name: "t0", scope: !2776, file: !132, line: 605, type: !134)
!2776 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 605, column: 7)
!2777 = !DILocation(line: 605, column: 7, scope: !2776)
!2778 = !DILocation(line: 605, column: 7, scope: !2779)
!2779 = !DILexicalBlockFile(scope: !2776, file: !132, discriminator: 1)
!2780 = !DILocalVariable(name: "t1", scope: !2776, file: !132, line: 605, type: !134)
!2781 = !DILocation(line: 606, column: 7, scope: !2278)
!2782 = !DILocalVariable(name: "t0", scope: !2783, file: !132, line: 606, type: !134)
!2783 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 606, column: 7)
!2784 = !DILocation(line: 606, column: 7, scope: !2783)
!2785 = !DILocation(line: 606, column: 7, scope: !2786)
!2786 = !DILexicalBlockFile(scope: !2783, file: !132, discriminator: 1)
!2787 = !DILocalVariable(name: "t1", scope: !2783, file: !132, line: 606, type: !134)
!2788 = !DILocation(line: 607, column: 7, scope: !2278)
!2789 = !DILocalVariable(name: "t0", scope: !2790, file: !132, line: 607, type: !134)
!2790 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 607, column: 7)
!2791 = !DILocation(line: 607, column: 7, scope: !2790)
!2792 = !DILocation(line: 607, column: 7, scope: !2793)
!2793 = !DILexicalBlockFile(scope: !2790, file: !132, discriminator: 1)
!2794 = !DILocalVariable(name: "t1", scope: !2790, file: !132, line: 607, type: !134)
!2795 = !DILocation(line: 608, column: 7, scope: !2278)
!2796 = !DILocalVariable(name: "t0", scope: !2797, file: !132, line: 608, type: !134)
!2797 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 608, column: 7)
!2798 = !DILocation(line: 608, column: 7, scope: !2797)
!2799 = !DILocation(line: 608, column: 7, scope: !2800)
!2800 = !DILexicalBlockFile(scope: !2797, file: !132, discriminator: 1)
!2801 = !DILocalVariable(name: "t1", scope: !2797, file: !132, line: 608, type: !134)
!2802 = !DILocation(line: 609, column: 7, scope: !2278)
!2803 = !DILocalVariable(name: "t0", scope: !2804, file: !132, line: 609, type: !134)
!2804 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 609, column: 7)
!2805 = !DILocation(line: 609, column: 7, scope: !2804)
!2806 = !DILocation(line: 609, column: 7, scope: !2807)
!2807 = !DILexicalBlockFile(scope: !2804, file: !132, discriminator: 1)
!2808 = !DILocalVariable(name: "t1", scope: !2804, file: !132, line: 609, type: !134)
!2809 = !DILocation(line: 610, column: 7, scope: !2278)
!2810 = !DILocalVariable(name: "t0", scope: !2811, file: !132, line: 610, type: !134)
!2811 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 610, column: 7)
!2812 = !DILocation(line: 610, column: 7, scope: !2811)
!2813 = !DILocation(line: 610, column: 7, scope: !2814)
!2814 = !DILexicalBlockFile(scope: !2811, file: !132, discriminator: 1)
!2815 = !DILocalVariable(name: "t1", scope: !2811, file: !132, line: 610, type: !134)
!2816 = !DILocation(line: 611, column: 7, scope: !2278)
!2817 = !DILocalVariable(name: "t0", scope: !2818, file: !132, line: 611, type: !134)
!2818 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 611, column: 7)
!2819 = !DILocation(line: 611, column: 7, scope: !2818)
!2820 = !DILocation(line: 611, column: 7, scope: !2821)
!2821 = !DILexicalBlockFile(scope: !2818, file: !132, discriminator: 1)
!2822 = !DILocalVariable(name: "t1", scope: !2818, file: !132, line: 611, type: !134)
!2823 = !DILocation(line: 612, column: 7, scope: !2278)
!2824 = !DILocalVariable(name: "t0", scope: !2825, file: !132, line: 612, type: !134)
!2825 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 612, column: 7)
!2826 = !DILocation(line: 612, column: 7, scope: !2825)
!2827 = !DILocation(line: 612, column: 7, scope: !2828)
!2828 = !DILexicalBlockFile(scope: !2825, file: !132, discriminator: 1)
!2829 = !DILocalVariable(name: "t1", scope: !2825, file: !132, line: 612, type: !134)
!2830 = !DILocation(line: 613, column: 7, scope: !2278)
!2831 = !DILocalVariable(name: "t0", scope: !2832, file: !132, line: 613, type: !134)
!2832 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 613, column: 7)
!2833 = !DILocation(line: 613, column: 7, scope: !2832)
!2834 = !DILocation(line: 613, column: 7, scope: !2835)
!2835 = !DILexicalBlockFile(scope: !2832, file: !132, discriminator: 1)
!2836 = !DILocalVariable(name: "t1", scope: !2832, file: !132, line: 613, type: !134)
!2837 = !DILocation(line: 614, column: 7, scope: !2278)
!2838 = !DILocalVariable(name: "t0", scope: !2839, file: !132, line: 614, type: !134)
!2839 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 614, column: 7)
!2840 = !DILocation(line: 614, column: 7, scope: !2839)
!2841 = !DILocation(line: 614, column: 7, scope: !2842)
!2842 = !DILexicalBlockFile(scope: !2839, file: !132, discriminator: 1)
!2843 = !DILocalVariable(name: "t1", scope: !2839, file: !132, line: 614, type: !134)
!2844 = !DILocation(line: 615, column: 7, scope: !2278)
!2845 = !DILocalVariable(name: "t0", scope: !2846, file: !132, line: 615, type: !134)
!2846 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 615, column: 7)
!2847 = !DILocation(line: 615, column: 7, scope: !2846)
!2848 = !DILocation(line: 615, column: 7, scope: !2849)
!2849 = !DILexicalBlockFile(scope: !2846, file: !132, discriminator: 1)
!2850 = !DILocalVariable(name: "t1", scope: !2846, file: !132, line: 615, type: !134)
!2851 = !DILocation(line: 616, column: 7, scope: !2278)
!2852 = !DILocalVariable(name: "t0", scope: !2853, file: !132, line: 616, type: !134)
!2853 = distinct !DILexicalBlock(scope: !2278, file: !132, line: 616, column: 7)
!2854 = !DILocation(line: 616, column: 7, scope: !2853)
!2855 = !DILocation(line: 616, column: 7, scope: !2856)
!2856 = !DILexicalBlockFile(scope: !2853, file: !132, discriminator: 1)
!2857 = !DILocalVariable(name: "t1", scope: !2853, file: !132, line: 616, type: !134)
!2858 = !DILocation(line: 618, column: 27, scope: !2278)
!2859 = !DILocation(line: 618, column: 11, scope: !2278)
!2860 = !DILocation(line: 618, column: 16, scope: !2278)
!2861 = !DILocation(line: 618, column: 25, scope: !2278)
!2862 = !DILocation(line: 618, column: 9, scope: !2278)
!2863 = !DILocation(line: 619, column: 27, scope: !2278)
!2864 = !DILocation(line: 619, column: 11, scope: !2278)
!2865 = !DILocation(line: 619, column: 16, scope: !2278)
!2866 = !DILocation(line: 619, column: 25, scope: !2278)
!2867 = !DILocation(line: 619, column: 9, scope: !2278)
!2868 = !DILocation(line: 620, column: 27, scope: !2278)
!2869 = !DILocation(line: 620, column: 11, scope: !2278)
!2870 = !DILocation(line: 620, column: 16, scope: !2278)
!2871 = !DILocation(line: 620, column: 25, scope: !2278)
!2872 = !DILocation(line: 620, column: 9, scope: !2278)
!2873 = !DILocation(line: 621, column: 27, scope: !2278)
!2874 = !DILocation(line: 621, column: 11, scope: !2278)
!2875 = !DILocation(line: 621, column: 16, scope: !2278)
!2876 = !DILocation(line: 621, column: 25, scope: !2278)
!2877 = !DILocation(line: 621, column: 9, scope: !2278)
!2878 = !DILocation(line: 622, column: 27, scope: !2278)
!2879 = !DILocation(line: 622, column: 11, scope: !2278)
!2880 = !DILocation(line: 622, column: 16, scope: !2278)
!2881 = !DILocation(line: 622, column: 25, scope: !2278)
!2882 = !DILocation(line: 622, column: 9, scope: !2278)
!2883 = !DILocation(line: 623, column: 27, scope: !2278)
!2884 = !DILocation(line: 623, column: 11, scope: !2278)
!2885 = !DILocation(line: 623, column: 16, scope: !2278)
!2886 = !DILocation(line: 623, column: 25, scope: !2278)
!2887 = !DILocation(line: 623, column: 9, scope: !2278)
!2888 = !DILocation(line: 624, column: 27, scope: !2278)
!2889 = !DILocation(line: 624, column: 11, scope: !2278)
!2890 = !DILocation(line: 624, column: 16, scope: !2278)
!2891 = !DILocation(line: 624, column: 25, scope: !2278)
!2892 = !DILocation(line: 624, column: 9, scope: !2278)
!2893 = !DILocation(line: 625, column: 27, scope: !2278)
!2894 = !DILocation(line: 625, column: 11, scope: !2278)
!2895 = !DILocation(line: 625, column: 16, scope: !2278)
!2896 = !DILocation(line: 625, column: 25, scope: !2278)
!2897 = !DILocation(line: 625, column: 9, scope: !2278)
!2898 = !DILocation(line: 627, column: 1, scope: !2206)
!2899 = distinct !DISubprogram(name: "sha512_process_bytes", scope: !132, file: !132, line: 360, type: !2207, scopeLine: 361, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !131, retainedNodes: !28)
!2900 = !DILocalVariable(name: "buffer", arg: 1, scope: !2899, file: !132, line: 360, type: !1021)
!2901 = !DILocation(line: 360, column: 35, scope: !2899)
!2902 = !DILocalVariable(name: "len", arg: 2, scope: !2899, file: !132, line: 360, type: !44)
!2903 = !DILocation(line: 360, column: 50, scope: !2899)
!2904 = !DILocalVariable(name: "ctx", arg: 3, scope: !2899, file: !132, line: 360, type: !1925)
!2905 = !DILocation(line: 360, column: 74, scope: !2899)
!2906 = !DILocation(line: 364, column: 7, scope: !2907)
!2907 = distinct !DILexicalBlock(scope: !2899, file: !132, line: 364, column: 7)
!2908 = !DILocation(line: 364, column: 12, scope: !2907)
!2909 = !DILocation(line: 364, column: 19, scope: !2907)
!2910 = !DILocation(line: 364, column: 7, scope: !2899)
!2911 = !DILocalVariable(name: "left_over", scope: !2912, file: !132, line: 366, type: !44)
!2912 = distinct !DILexicalBlock(scope: !2907, file: !132, line: 365, column: 5)
!2913 = !DILocation(line: 366, column: 14, scope: !2912)
!2914 = !DILocation(line: 366, column: 26, scope: !2912)
!2915 = !DILocation(line: 366, column: 31, scope: !2912)
!2916 = !DILocalVariable(name: "add", scope: !2912, file: !132, line: 367, type: !44)
!2917 = !DILocation(line: 367, column: 14, scope: !2912)
!2918 = !DILocation(line: 367, column: 26, scope: !2912)
!2919 = !DILocation(line: 367, column: 24, scope: !2912)
!2920 = !DILocation(line: 367, column: 38, scope: !2912)
!2921 = !DILocation(line: 367, column: 36, scope: !2912)
!2922 = !DILocation(line: 367, column: 20, scope: !2912)
!2923 = !DILocation(line: 367, column: 44, scope: !2924)
!2924 = !DILexicalBlockFile(scope: !2912, file: !132, discriminator: 1)
!2925 = !DILocation(line: 367, column: 56, scope: !2926)
!2926 = !DILexicalBlockFile(scope: !2912, file: !132, discriminator: 2)
!2927 = !DILocation(line: 367, column: 54, scope: !2912)
!2928 = !DILocation(line: 367, column: 14, scope: !2929)
!2929 = !DILexicalBlockFile(scope: !2930, file: !132, discriminator: 4)
!2930 = !DILexicalBlockFile(scope: !2912, file: !132, discriminator: 3)
!2931 = !DILocation(line: 369, column: 39, scope: !2912)
!2932 = !DILocation(line: 369, column: 26, scope: !2912)
!2933 = !DILocation(line: 369, column: 31, scope: !2912)
!2934 = !DILocation(line: 369, column: 17, scope: !2912)
!2935 = !DILocation(line: 369, column: 16, scope: !2912)
!2936 = !DILocation(line: 369, column: 51, scope: !2912)
!2937 = !DILocation(line: 369, column: 59, scope: !2912)
!2938 = !DILocation(line: 369, column: 7, scope: !2912)
!2939 = !DILocation(line: 370, column: 22, scope: !2912)
!2940 = !DILocation(line: 370, column: 7, scope: !2912)
!2941 = !DILocation(line: 370, column: 12, scope: !2912)
!2942 = !DILocation(line: 370, column: 19, scope: !2912)
!2943 = !DILocation(line: 372, column: 11, scope: !2944)
!2944 = distinct !DILexicalBlock(scope: !2912, file: !132, line: 372, column: 11)
!2945 = !DILocation(line: 372, column: 16, scope: !2944)
!2946 = !DILocation(line: 372, column: 23, scope: !2944)
!2947 = !DILocation(line: 372, column: 11, scope: !2912)
!2948 = !DILocation(line: 374, column: 33, scope: !2949)
!2949 = distinct !DILexicalBlock(scope: !2944, file: !132, line: 373, column: 9)
!2950 = !DILocation(line: 374, column: 38, scope: !2949)
!2951 = !DILocation(line: 374, column: 46, scope: !2949)
!2952 = !DILocation(line: 374, column: 51, scope: !2949)
!2953 = !DILocation(line: 374, column: 58, scope: !2949)
!2954 = !DILocation(line: 374, column: 66, scope: !2949)
!2955 = !DILocation(line: 374, column: 11, scope: !2949)
!2956 = !DILocation(line: 376, column: 11, scope: !2949)
!2957 = !DILocation(line: 376, column: 16, scope: !2949)
!2958 = !DILocation(line: 376, column: 23, scope: !2949)
!2959 = !DILocation(line: 378, column: 19, scope: !2949)
!2960 = !DILocation(line: 378, column: 24, scope: !2949)
!2961 = !DILocation(line: 378, column: 11, scope: !2949)
!2962 = !DILocation(line: 379, column: 44, scope: !2949)
!2963 = !DILocation(line: 379, column: 56, scope: !2949)
!2964 = !DILocation(line: 379, column: 54, scope: !2949)
!2965 = !DILocation(line: 379, column: 61, scope: !2949)
!2966 = !DILocation(line: 379, column: 30, scope: !2949)
!2967 = !DILocation(line: 379, column: 35, scope: !2949)
!2968 = !DILocation(line: 379, column: 21, scope: !2949)
!2969 = !DILocation(line: 379, column: 20, scope: !2949)
!2970 = !DILocation(line: 380, column: 19, scope: !2949)
!2971 = !DILocation(line: 380, column: 24, scope: !2949)
!2972 = !DILocation(line: 381, column: 9, scope: !2949)
!2973 = !DILocation(line: 383, column: 31, scope: !2912)
!2974 = !DILocation(line: 383, column: 40, scope: !2912)
!2975 = !DILocation(line: 383, column: 38, scope: !2912)
!2976 = !DILocation(line: 383, column: 14, scope: !2912)
!2977 = !DILocation(line: 384, column: 14, scope: !2912)
!2978 = !DILocation(line: 384, column: 11, scope: !2912)
!2979 = !DILocation(line: 385, column: 5, scope: !2912)
!2980 = !DILocation(line: 388, column: 7, scope: !2981)
!2981 = distinct !DILexicalBlock(scope: !2899, file: !132, line: 388, column: 7)
!2982 = !DILocation(line: 388, column: 11, scope: !2981)
!2983 = !DILocation(line: 388, column: 7, scope: !2899)
!2984 = !DILocation(line: 392, column: 11, scope: !2985)
!2985 = distinct !DILexicalBlock(scope: !2986, file: !132, line: 392, column: 11)
!2986 = distinct !DILexicalBlock(scope: !2981, file: !132, line: 389, column: 5)
!2987 = !DILocation(line: 392, column: 11, scope: !2986)
!2988 = !DILocation(line: 393, column: 9, scope: !2985)
!2989 = !DILocation(line: 393, column: 16, scope: !2990)
!2990 = !DILexicalBlockFile(scope: !2991, file: !132, discriminator: 3)
!2991 = !DILexicalBlockFile(scope: !2985, file: !132, discriminator: 1)
!2992 = !DILocation(line: 393, column: 20, scope: !2985)
!2993 = !DILocation(line: 395, column: 43, scope: !2994)
!2994 = distinct !DILexicalBlock(scope: !2985, file: !132, line: 394, column: 11)
!2995 = !DILocation(line: 395, column: 48, scope: !2994)
!2996 = !DILocation(line: 395, column: 35, scope: !2994)
!2997 = !DILocation(line: 395, column: 56, scope: !2994)
!2998 = !DILocation(line: 395, column: 75, scope: !2994)
!2999 = !DILocation(line: 395, column: 13, scope: !2994)
!3000 = !DILocation(line: 396, column: 37, scope: !2994)
!3001 = !DILocation(line: 396, column: 44, scope: !2994)
!3002 = !DILocation(line: 396, column: 20, scope: !2994)
!3003 = !DILocation(line: 397, column: 17, scope: !2994)
!3004 = !DILocation(line: 393, column: 9, scope: !3005)
!3005 = !DILexicalBlockFile(scope: !2985, file: !132, discriminator: 2)
!3006 = !DILocation(line: 402, column: 33, scope: !3007)
!3007 = distinct !DILexicalBlock(scope: !2985, file: !132, line: 401, column: 9)
!3008 = !DILocation(line: 402, column: 41, scope: !3007)
!3009 = !DILocation(line: 402, column: 45, scope: !3007)
!3010 = !DILocation(line: 402, column: 53, scope: !3007)
!3011 = !DILocation(line: 402, column: 11, scope: !3007)
!3012 = !DILocation(line: 403, column: 35, scope: !3007)
!3013 = !DILocation(line: 403, column: 45, scope: !3007)
!3014 = !DILocation(line: 403, column: 49, scope: !3007)
!3015 = !DILocation(line: 403, column: 42, scope: !3007)
!3016 = !DILocation(line: 403, column: 18, scope: !3007)
!3017 = !DILocation(line: 404, column: 15, scope: !3007)
!3018 = !DILocation(line: 406, column: 5, scope: !2986)
!3019 = !DILocation(line: 409, column: 7, scope: !3020)
!3020 = distinct !DILexicalBlock(scope: !2899, file: !132, line: 409, column: 7)
!3021 = !DILocation(line: 409, column: 11, scope: !3020)
!3022 = !DILocation(line: 409, column: 7, scope: !2899)
!3023 = !DILocalVariable(name: "left_over", scope: !3024, file: !132, line: 411, type: !44)
!3024 = distinct !DILexicalBlock(scope: !3020, file: !132, line: 410, column: 5)
!3025 = !DILocation(line: 411, column: 14, scope: !3024)
!3026 = !DILocation(line: 411, column: 26, scope: !3024)
!3027 = !DILocation(line: 411, column: 31, scope: !3024)
!3028 = !DILocation(line: 413, column: 39, scope: !3024)
!3029 = !DILocation(line: 413, column: 26, scope: !3024)
!3030 = !DILocation(line: 413, column: 31, scope: !3024)
!3031 = !DILocation(line: 413, column: 17, scope: !3024)
!3032 = !DILocation(line: 413, column: 16, scope: !3024)
!3033 = !DILocation(line: 413, column: 51, scope: !3024)
!3034 = !DILocation(line: 413, column: 59, scope: !3024)
!3035 = !DILocation(line: 413, column: 7, scope: !3024)
!3036 = !DILocation(line: 414, column: 20, scope: !3024)
!3037 = !DILocation(line: 414, column: 17, scope: !3024)
!3038 = !DILocation(line: 415, column: 11, scope: !3039)
!3039 = distinct !DILexicalBlock(scope: !3024, file: !132, line: 415, column: 11)
!3040 = !DILocation(line: 415, column: 21, scope: !3039)
!3041 = !DILocation(line: 415, column: 11, scope: !3024)
!3042 = !DILocation(line: 417, column: 33, scope: !3043)
!3043 = distinct !DILexicalBlock(scope: !3039, file: !132, line: 416, column: 9)
!3044 = !DILocation(line: 417, column: 38, scope: !3043)
!3045 = !DILocation(line: 417, column: 51, scope: !3043)
!3046 = !DILocation(line: 417, column: 11, scope: !3043)
!3047 = !DILocation(line: 418, column: 21, scope: !3043)
!3048 = !DILocation(line: 419, column: 19, scope: !3043)
!3049 = !DILocation(line: 419, column: 24, scope: !3043)
!3050 = !DILocation(line: 419, column: 11, scope: !3043)
!3051 = !DILocation(line: 419, column: 33, scope: !3043)
!3052 = !DILocation(line: 419, column: 38, scope: !3043)
!3053 = !DILocation(line: 419, column: 50, scope: !3043)
!3054 = !DILocation(line: 420, column: 9, scope: !3043)
!3055 = !DILocation(line: 421, column: 21, scope: !3024)
!3056 = !DILocation(line: 421, column: 7, scope: !3024)
!3057 = !DILocation(line: 421, column: 12, scope: !3024)
!3058 = !DILocation(line: 421, column: 19, scope: !3024)
!3059 = !DILocation(line: 422, column: 5, scope: !3024)
!3060 = !DILocation(line: 423, column: 1, scope: !2899)
!3061 = distinct !DISubprogram(name: "sha384_stream", scope: !132, file: !132, line: 255, type: !2100, scopeLine: 256, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !131, retainedNodes: !28)
!3062 = !DILocalVariable(name: "stream", arg: 1, scope: !3061, file: !132, line: 255, type: !2102)
!3063 = !DILocation(line: 255, column: 22, scope: !3061)
!3064 = !DILocalVariable(name: "resblock", arg: 2, scope: !3061, file: !132, line: 255, type: !43)
!3065 = !DILocation(line: 255, column: 36, scope: !3061)
!3066 = !DILocalVariable(name: "ctx", scope: !3061, file: !132, line: 257, type: !1926)
!3067 = !DILocation(line: 257, column: 21, scope: !3061)
!3068 = !DILocalVariable(name: "sum", scope: !3061, file: !132, line: 258, type: !44)
!3069 = !DILocation(line: 258, column: 10, scope: !3061)
!3070 = !DILocalVariable(name: "buffer", scope: !3061, file: !132, line: 260, type: !41)
!3071 = !DILocation(line: 260, column: 9, scope: !3061)
!3072 = !DILocation(line: 260, column: 18, scope: !3061)
!3073 = !DILocation(line: 261, column: 8, scope: !3074)
!3074 = distinct !DILexicalBlock(scope: !3061, file: !132, line: 261, column: 7)
!3075 = !DILocation(line: 261, column: 7, scope: !3061)
!3076 = !DILocation(line: 262, column: 5, scope: !3074)
!3077 = !DILocation(line: 265, column: 3, scope: !3061)
!3078 = !DILocation(line: 268, column: 3, scope: !3061)
!3079 = !DILocalVariable(name: "n", scope: !3080, file: !132, line: 273, type: !44)
!3080 = distinct !DILexicalBlock(scope: !3061, file: !132, line: 269, column: 5)
!3081 = !DILocation(line: 273, column: 14, scope: !3080)
!3082 = !DILocation(line: 274, column: 11, scope: !3080)
!3083 = !DILocation(line: 277, column: 7, scope: !3080)
!3084 = !DILocation(line: 279, column: 15, scope: !3085)
!3085 = distinct !DILexicalBlock(scope: !3080, file: !132, line: 278, column: 9)
!3086 = !DILocation(line: 279, column: 13, scope: !3085)
!3087 = !DILocation(line: 281, column: 18, scope: !3085)
!3088 = !DILocation(line: 281, column: 15, scope: !3085)
!3089 = !DILocation(line: 283, column: 15, scope: !3090)
!3090 = distinct !DILexicalBlock(scope: !3085, file: !132, line: 283, column: 15)
!3091 = !DILocation(line: 283, column: 19, scope: !3090)
!3092 = !DILocation(line: 283, column: 15, scope: !3085)
!3093 = !DILocation(line: 284, column: 13, scope: !3090)
!3094 = !DILocation(line: 286, column: 15, scope: !3095)
!3095 = distinct !DILexicalBlock(scope: !3085, file: !132, line: 286, column: 15)
!3096 = !DILocation(line: 286, column: 17, scope: !3095)
!3097 = !DILocation(line: 286, column: 15, scope: !3085)
!3098 = !DILocation(line: 291, column: 19, scope: !3099)
!3099 = distinct !DILexicalBlock(scope: !3100, file: !132, line: 291, column: 19)
!3100 = distinct !DILexicalBlock(scope: !3095, file: !132, line: 287, column: 13)
!3101 = !DILocation(line: 291, column: 19, scope: !3100)
!3102 = !DILocation(line: 293, column: 25, scope: !3103)
!3103 = distinct !DILexicalBlock(scope: !3099, file: !132, line: 292, column: 17)
!3104 = !DILocation(line: 293, column: 19, scope: !3103)
!3105 = !DILocation(line: 294, column: 19, scope: !3103)
!3106 = !DILocation(line: 296, column: 15, scope: !3100)
!3107 = !DILocation(line: 302, column: 15, scope: !3108)
!3108 = distinct !DILexicalBlock(scope: !3085, file: !132, line: 302, column: 15)
!3109 = !DILocation(line: 302, column: 15, scope: !3085)
!3110 = !DILocation(line: 303, column: 13, scope: !3108)
!3111 = !DILocation(line: 309, column: 29, scope: !3080)
!3112 = !DILocation(line: 309, column: 7, scope: !3080)
!3113 = !DILocation(line: 315, column: 7, scope: !3114)
!3114 = distinct !DILexicalBlock(scope: !3061, file: !132, line: 315, column: 7)
!3115 = !DILocation(line: 315, column: 11, scope: !3114)
!3116 = !DILocation(line: 315, column: 7, scope: !3061)
!3117 = !DILocation(line: 316, column: 27, scope: !3114)
!3118 = !DILocation(line: 316, column: 35, scope: !3114)
!3119 = !DILocation(line: 316, column: 5, scope: !3114)
!3120 = !DILocation(line: 319, column: 28, scope: !3061)
!3121 = !DILocation(line: 319, column: 3, scope: !3061)
!3122 = !DILocation(line: 320, column: 9, scope: !3061)
!3123 = !DILocation(line: 320, column: 3, scope: !3061)
!3124 = !DILocation(line: 321, column: 3, scope: !3061)
!3125 = !DILocation(line: 322, column: 1, scope: !3061)
!3126 = distinct !DISubprogram(name: "sha512_buffer", scope: !132, file: !132, line: 330, type: !3127, scopeLine: 331, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !131, retainedNodes: !28)
!3127 = !DISubroutineType(types: !3128)
!3128 = !{!43, !63, !44, !43}
!3129 = !DILocalVariable(name: "buffer", arg: 1, scope: !3126, file: !132, line: 330, type: !63)
!3130 = !DILocation(line: 330, column: 28, scope: !3126)
!3131 = !DILocalVariable(name: "len", arg: 2, scope: !3126, file: !132, line: 330, type: !44)
!3132 = !DILocation(line: 330, column: 43, scope: !3126)
!3133 = !DILocalVariable(name: "resblock", arg: 3, scope: !3126, file: !132, line: 330, type: !43)
!3134 = !DILocation(line: 330, column: 54, scope: !3126)
!3135 = !DILocalVariable(name: "ctx", scope: !3126, file: !132, line: 332, type: !1926)
!3136 = !DILocation(line: 332, column: 21, scope: !3126)
!3137 = !DILocation(line: 335, column: 3, scope: !3126)
!3138 = !DILocation(line: 338, column: 25, scope: !3126)
!3139 = !DILocation(line: 338, column: 33, scope: !3126)
!3140 = !DILocation(line: 338, column: 3, scope: !3126)
!3141 = !DILocation(line: 341, column: 35, scope: !3126)
!3142 = !DILocation(line: 341, column: 10, scope: !3126)
!3143 = !DILocation(line: 341, column: 3, scope: !3126)
!3144 = distinct !DISubprogram(name: "sha384_buffer", scope: !132, file: !132, line: 345, type: !3127, scopeLine: 346, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !131, retainedNodes: !28)
!3145 = !DILocalVariable(name: "buffer", arg: 1, scope: !3144, file: !132, line: 345, type: !63)
!3146 = !DILocation(line: 345, column: 28, scope: !3144)
!3147 = !DILocalVariable(name: "len", arg: 2, scope: !3144, file: !132, line: 345, type: !44)
!3148 = !DILocation(line: 345, column: 43, scope: !3144)
!3149 = !DILocalVariable(name: "resblock", arg: 3, scope: !3144, file: !132, line: 345, type: !43)
!3150 = !DILocation(line: 345, column: 54, scope: !3144)
!3151 = !DILocalVariable(name: "ctx", scope: !3144, file: !132, line: 347, type: !1926)
!3152 = !DILocation(line: 347, column: 21, scope: !3144)
!3153 = !DILocation(line: 350, column: 3, scope: !3144)
!3154 = !DILocation(line: 353, column: 25, scope: !3144)
!3155 = !DILocation(line: 353, column: 33, scope: !3144)
!3156 = !DILocation(line: 353, column: 3, scope: !3144)
!3157 = !DILocation(line: 356, column: 35, scope: !3144)
!3158 = !DILocation(line: 356, column: 10, scope: !3144)
!3159 = !DILocation(line: 356, column: 3, scope: !3144)
!3160 = distinct !DISubprogram(name: "set_uint64", scope: !132, file: !132, line: 105, type: !3161, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !131, retainedNodes: !28)
!3161 = !DISubroutineType(types: !3162)
!3162 = !{null, !41, !134}
!3163 = !DILocalVariable(name: "cp", arg: 1, scope: !3160, file: !132, line: 105, type: !41)
!3164 = !DILocation(line: 105, column: 19, scope: !3160)
!3165 = !DILocalVariable(name: "v", arg: 2, scope: !3160, file: !132, line: 105, type: !134)
!3166 = !DILocation(line: 105, column: 27, scope: !3160)
!3167 = !DILocation(line: 107, column: 11, scope: !3160)
!3168 = !DILocation(line: 107, column: 3, scope: !3160)
!3169 = !DILocation(line: 108, column: 1, scope: !3160)
!3170 = distinct !DISubprogram(name: "sha512_conclude_ctx", scope: !132, file: !132, line: 139, type: !1923, scopeLine: 140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !131, retainedNodes: !28)
!3171 = !DILocalVariable(name: "ctx", arg: 1, scope: !3170, file: !132, line: 139, type: !1925)
!3172 = !DILocation(line: 139, column: 41, scope: !3170)
!3173 = !DILocalVariable(name: "bytes", scope: !3170, file: !132, line: 142, type: !44)
!3174 = !DILocation(line: 142, column: 10, scope: !3170)
!3175 = !DILocation(line: 142, column: 18, scope: !3170)
!3176 = !DILocation(line: 142, column: 23, scope: !3170)
!3177 = !DILocalVariable(name: "size", scope: !3170, file: !132, line: 143, type: !44)
!3178 = !DILocation(line: 143, column: 10, scope: !3170)
!3179 = !DILocation(line: 143, column: 18, scope: !3170)
!3180 = !DILocation(line: 143, column: 24, scope: !3170)
!3181 = !DILocation(line: 143, column: 17, scope: !3170)
!3182 = !DILocation(line: 146, column: 19, scope: !3170)
!3183 = !DILocation(line: 146, column: 3, scope: !3170)
!3184 = !DILocation(line: 146, column: 8, scope: !3170)
!3185 = !DILocation(line: 146, column: 17, scope: !3170)
!3186 = !DILocation(line: 147, column: 7, scope: !3187)
!3187 = distinct !DILexicalBlock(scope: !3170, file: !132, line: 147, column: 7)
!3188 = !DILocation(line: 147, column: 7, scope: !3170)
!3189 = !DILocation(line: 148, column: 21, scope: !3187)
!3190 = !DILocation(line: 148, column: 5, scope: !3187)
!3191 = !DILocation(line: 148, column: 10, scope: !3187)
!3192 = !DILocation(line: 148, column: 19, scope: !3187)
!3193 = !DILocation(line: 153, column: 37, scope: !3170)
!3194 = !DILocation(line: 153, column: 42, scope: !3170)
!3195 = !DILocation(line: 153, column: 25, scope: !3170)
!3196 = !DILocation(line: 153, column: 30, scope: !3170)
!3197 = !DILocation(line: 153, column: 15, scope: !3170)
!3198 = !DILocation(line: 154, column: 15, scope: !3170)
!3199 = !DILocation(line: 153, column: 3, scope: !3170)
!3200 = !DILocation(line: 156, column: 37, scope: !3170)
!3201 = !DILocation(line: 156, column: 42, scope: !3170)
!3202 = !DILocation(line: 156, column: 25, scope: !3170)
!3203 = !DILocation(line: 156, column: 30, scope: !3170)
!3204 = !DILocation(line: 156, column: 15, scope: !3170)
!3205 = !DILocation(line: 157, column: 15, scope: !3170)
!3206 = !DILocation(line: 156, column: 3, scope: !3170)
!3207 = !DILocation(line: 159, column: 35, scope: !3170)
!3208 = !DILocation(line: 159, column: 22, scope: !3170)
!3209 = !DILocation(line: 159, column: 27, scope: !3170)
!3210 = !DILocation(line: 159, column: 13, scope: !3170)
!3211 = !DILocation(line: 159, column: 12, scope: !3170)
!3212 = !DILocation(line: 159, column: 53, scope: !3170)
!3213 = !DILocation(line: 159, column: 58, scope: !3170)
!3214 = !DILocation(line: 159, column: 63, scope: !3170)
!3215 = !DILocation(line: 159, column: 69, scope: !3170)
!3216 = !DILocation(line: 159, column: 67, scope: !3170)
!3217 = !DILocation(line: 159, column: 3, scope: !3170)
!3218 = !DILocation(line: 162, column: 25, scope: !3170)
!3219 = !DILocation(line: 162, column: 30, scope: !3170)
!3220 = !DILocation(line: 162, column: 38, scope: !3170)
!3221 = !DILocation(line: 162, column: 43, scope: !3170)
!3222 = !DILocation(line: 162, column: 48, scope: !3170)
!3223 = !DILocation(line: 162, column: 3, scope: !3170)
!3224 = !DILocation(line: 163, column: 1, scope: !3170)
!3225 = distinct !DISubprogram(name: "fdadvise", scope: !601, file: !601, line: 31, type: !3226, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !600, retainedNodes: !28)
!3226 = !DISubroutineType(types: !3227)
!3227 = !{null, !48, !3228, !3228, !3229}
!3228 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !1055, line: 90, baseType: !1083)
!3229 = !DIDerivedType(tag: DW_TAG_typedef, name: "fadvice_t", file: !32, line: 52, baseType: !31)
!3230 = !DILocalVariable(name: "fd", arg: 1, scope: !3225, file: !601, line: 31, type: !48)
!3231 = !DILocation(line: 31, column: 15, scope: !3225)
!3232 = !DILocalVariable(name: "offset", arg: 2, scope: !3225, file: !601, line: 31, type: !3228)
!3233 = !DILocation(line: 31, column: 25, scope: !3225)
!3234 = !DILocalVariable(name: "len", arg: 3, scope: !3225, file: !601, line: 31, type: !3228)
!3235 = !DILocation(line: 31, column: 39, scope: !3225)
!3236 = !DILocalVariable(name: "advice", arg: 4, scope: !3225, file: !601, line: 31, type: !3229)
!3237 = !DILocation(line: 31, column: 54, scope: !3225)
!3238 = !DILocalVariable(name: "__x", scope: !3239, file: !601, line: 34, type: !48)
!3239 = distinct !DILexicalBlock(scope: !3225, file: !601, line: 34, column: 3)
!3240 = !DILocation(line: 34, column: 3, scope: !3239)
!3241 = !DILocation(line: 36, column: 1, scope: !3225)
!3242 = distinct !DISubprogram(name: "fadvise", scope: !601, file: !601, line: 39, type: !3243, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !600, retainedNodes: !28)
!3243 = !DISubroutineType(types: !3244)
!3244 = !{null, !3245, !3229}
!3245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3246, size: 64, align: 64)
!3246 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1055, line: 48, baseType: !3247)
!3247 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !1057, line: 245, size: 1728, align: 64, elements: !3248)
!3248 = !{!3249, !3250, !3251, !3252, !3253, !3254, !3255, !3256, !3257, !3258, !3259, !3260, !3261, !3269, !3270, !3271, !3272, !3273, !3274, !3275, !3276, !3277, !3278, !3279, !3280, !3281, !3282, !3283, !3284}
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3247, file: !1057, line: 246, baseType: !48, size: 32, align: 32)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !3247, file: !1057, line: 251, baseType: !41, size: 64, align: 64, offset: 64)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !3247, file: !1057, line: 252, baseType: !41, size: 64, align: 64, offset: 128)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !3247, file: !1057, line: 253, baseType: !41, size: 64, align: 64, offset: 192)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !3247, file: !1057, line: 254, baseType: !41, size: 64, align: 64, offset: 256)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !3247, file: !1057, line: 255, baseType: !41, size: 64, align: 64, offset: 320)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !3247, file: !1057, line: 256, baseType: !41, size: 64, align: 64, offset: 384)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !3247, file: !1057, line: 257, baseType: !41, size: 64, align: 64, offset: 448)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !3247, file: !1057, line: 258, baseType: !41, size: 64, align: 64, offset: 512)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !3247, file: !1057, line: 260, baseType: !41, size: 64, align: 64, offset: 576)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !3247, file: !1057, line: 261, baseType: !41, size: 64, align: 64, offset: 640)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !3247, file: !1057, line: 262, baseType: !41, size: 64, align: 64, offset: 704)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !3247, file: !1057, line: 264, baseType: !3262, size: 64, align: 64, offset: 768)
!3262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3263, size: 64, align: 64)
!3263 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !1057, line: 160, size: 192, align: 64, elements: !3264)
!3264 = !{!3265, !3266, !3268}
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !3263, file: !1057, line: 161, baseType: !3262, size: 64, align: 64)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !3263, file: !1057, line: 162, baseType: !3267, size: 64, align: 64, offset: 64)
!3267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3247, size: 64, align: 64)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !3263, file: !1057, line: 166, baseType: !48, size: 32, align: 32, offset: 128)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !3247, file: !1057, line: 266, baseType: !3267, size: 64, align: 64, offset: 832)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !3247, file: !1057, line: 268, baseType: !48, size: 32, align: 32, offset: 896)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !3247, file: !1057, line: 272, baseType: !48, size: 32, align: 32, offset: 928)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !3247, file: !1057, line: 274, baseType: !1083, size: 64, align: 64, offset: 960)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !3247, file: !1057, line: 278, baseType: !49, size: 16, align: 16, offset: 1024)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !3247, file: !1057, line: 279, baseType: !1088, size: 8, align: 8, offset: 1040)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !3247, file: !1057, line: 280, baseType: !1090, size: 8, align: 8, offset: 1048)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !3247, file: !1057, line: 284, baseType: !1094, size: 64, align: 64, offset: 1088)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !3247, file: !1057, line: 293, baseType: !1097, size: 64, align: 64, offset: 1152)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !3247, file: !1057, line: 302, baseType: !43, size: 64, align: 64, offset: 1216)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !3247, file: !1057, line: 303, baseType: !43, size: 64, align: 64, offset: 1280)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !3247, file: !1057, line: 304, baseType: !43, size: 64, align: 64, offset: 1344)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !3247, file: !1057, line: 305, baseType: !43, size: 64, align: 64, offset: 1408)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !3247, file: !1057, line: 306, baseType: !44, size: 64, align: 64, offset: 1472)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !3247, file: !1057, line: 308, baseType: !48, size: 32, align: 32, offset: 1536)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !3247, file: !1057, line: 310, baseType: !1105, size: 160, align: 8, offset: 1568)
!3285 = !DILocalVariable(name: "fp", arg: 1, scope: !3242, file: !601, line: 39, type: !3245)
!3286 = !DILocation(line: 39, column: 16, scope: !3242)
!3287 = !DILocalVariable(name: "advice", arg: 2, scope: !3242, file: !601, line: 39, type: !3229)
!3288 = !DILocation(line: 39, column: 30, scope: !3242)
!3289 = !DILocation(line: 41, column: 7, scope: !3290)
!3290 = distinct !DILexicalBlock(scope: !3242, file: !601, line: 41, column: 7)
!3291 = !DILocation(line: 41, column: 7, scope: !3242)
!3292 = !DILocation(line: 42, column: 23, scope: !3290)
!3293 = !DILocation(line: 42, column: 15, scope: !3290)
!3294 = !DILocation(line: 42, column: 34, scope: !3290)
!3295 = !DILocation(line: 42, column: 5, scope: !3290)
!3296 = !DILocation(line: 43, column: 1, scope: !3242)
!3297 = distinct !DISubprogram(name: "fopen_safer", scope: !604, file: !604, line: 31, type: !3298, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !603, retainedNodes: !28)
!3298 = !DISubroutineType(types: !3299)
!3299 = !{!3300, !63, !63}
!3300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3301, size: 64, align: 64)
!3301 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1055, line: 48, baseType: !3302)
!3302 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !1057, line: 245, size: 1728, align: 64, elements: !3303)
!3303 = !{!3304, !3305, !3306, !3307, !3308, !3309, !3310, !3311, !3312, !3313, !3314, !3315, !3316, !3324, !3325, !3326, !3327, !3328, !3329, !3330, !3331, !3332, !3333, !3334, !3335, !3336, !3337, !3338, !3339}
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3302, file: !1057, line: 246, baseType: !48, size: 32, align: 32)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !3302, file: !1057, line: 251, baseType: !41, size: 64, align: 64, offset: 64)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !3302, file: !1057, line: 252, baseType: !41, size: 64, align: 64, offset: 128)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !3302, file: !1057, line: 253, baseType: !41, size: 64, align: 64, offset: 192)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !3302, file: !1057, line: 254, baseType: !41, size: 64, align: 64, offset: 256)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !3302, file: !1057, line: 255, baseType: !41, size: 64, align: 64, offset: 320)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !3302, file: !1057, line: 256, baseType: !41, size: 64, align: 64, offset: 384)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !3302, file: !1057, line: 257, baseType: !41, size: 64, align: 64, offset: 448)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !3302, file: !1057, line: 258, baseType: !41, size: 64, align: 64, offset: 512)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !3302, file: !1057, line: 260, baseType: !41, size: 64, align: 64, offset: 576)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !3302, file: !1057, line: 261, baseType: !41, size: 64, align: 64, offset: 640)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !3302, file: !1057, line: 262, baseType: !41, size: 64, align: 64, offset: 704)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !3302, file: !1057, line: 264, baseType: !3317, size: 64, align: 64, offset: 768)
!3317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3318, size: 64, align: 64)
!3318 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !1057, line: 160, size: 192, align: 64, elements: !3319)
!3319 = !{!3320, !3321, !3323}
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !3318, file: !1057, line: 161, baseType: !3317, size: 64, align: 64)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !3318, file: !1057, line: 162, baseType: !3322, size: 64, align: 64, offset: 64)
!3322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3302, size: 64, align: 64)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !3318, file: !1057, line: 166, baseType: !48, size: 32, align: 32, offset: 128)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !3302, file: !1057, line: 266, baseType: !3322, size: 64, align: 64, offset: 832)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !3302, file: !1057, line: 268, baseType: !48, size: 32, align: 32, offset: 896)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !3302, file: !1057, line: 272, baseType: !48, size: 32, align: 32, offset: 928)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !3302, file: !1057, line: 274, baseType: !1083, size: 64, align: 64, offset: 960)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !3302, file: !1057, line: 278, baseType: !49, size: 16, align: 16, offset: 1024)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !3302, file: !1057, line: 279, baseType: !1088, size: 8, align: 8, offset: 1040)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !3302, file: !1057, line: 280, baseType: !1090, size: 8, align: 8, offset: 1048)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !3302, file: !1057, line: 284, baseType: !1094, size: 64, align: 64, offset: 1088)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !3302, file: !1057, line: 293, baseType: !1097, size: 64, align: 64, offset: 1152)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !3302, file: !1057, line: 302, baseType: !43, size: 64, align: 64, offset: 1216)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !3302, file: !1057, line: 303, baseType: !43, size: 64, align: 64, offset: 1280)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !3302, file: !1057, line: 304, baseType: !43, size: 64, align: 64, offset: 1344)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !3302, file: !1057, line: 305, baseType: !43, size: 64, align: 64, offset: 1408)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !3302, file: !1057, line: 306, baseType: !44, size: 64, align: 64, offset: 1472)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !3302, file: !1057, line: 308, baseType: !48, size: 32, align: 32, offset: 1536)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !3302, file: !1057, line: 310, baseType: !1105, size: 160, align: 8, offset: 1568)
!3340 = !DILocalVariable(name: "file", arg: 1, scope: !3297, file: !604, line: 31, type: !63)
!3341 = !DILocation(line: 31, column: 26, scope: !3297)
!3342 = !DILocalVariable(name: "mode", arg: 2, scope: !3297, file: !604, line: 31, type: !63)
!3343 = !DILocation(line: 31, column: 44, scope: !3297)
!3344 = !DILocalVariable(name: "fp", scope: !3297, file: !604, line: 33, type: !3300)
!3345 = !DILocation(line: 33, column: 9, scope: !3297)
!3346 = !DILocation(line: 33, column: 21, scope: !3297)
!3347 = !DILocation(line: 33, column: 27, scope: !3297)
!3348 = !DILocation(line: 33, column: 14, scope: !3297)
!3349 = !DILocation(line: 35, column: 7, scope: !3350)
!3350 = distinct !DILexicalBlock(scope: !3297, file: !604, line: 35, column: 7)
!3351 = !DILocation(line: 35, column: 7, scope: !3297)
!3352 = !DILocalVariable(name: "fd", scope: !3353, file: !604, line: 37, type: !48)
!3353 = distinct !DILexicalBlock(scope: !3350, file: !604, line: 36, column: 5)
!3354 = !DILocation(line: 37, column: 11, scope: !3353)
!3355 = !DILocation(line: 37, column: 24, scope: !3353)
!3356 = !DILocation(line: 37, column: 16, scope: !3353)
!3357 = !DILocation(line: 39, column: 16, scope: !3358)
!3358 = distinct !DILexicalBlock(scope: !3353, file: !604, line: 39, column: 11)
!3359 = !DILocation(line: 39, column: 13, scope: !3358)
!3360 = !DILocation(line: 39, column: 19, scope: !3358)
!3361 = !DILocation(line: 39, column: 22, scope: !3362)
!3362 = !DILexicalBlockFile(scope: !3358, file: !604, discriminator: 1)
!3363 = !DILocation(line: 39, column: 25, scope: !3358)
!3364 = !DILocation(line: 39, column: 11, scope: !3353)
!3365 = !DILocalVariable(name: "f", scope: !3366, file: !604, line: 41, type: !48)
!3366 = distinct !DILexicalBlock(scope: !3358, file: !604, line: 40, column: 9)
!3367 = !DILocation(line: 41, column: 15, scope: !3366)
!3368 = !DILocation(line: 41, column: 30, scope: !3366)
!3369 = !DILocation(line: 41, column: 19, scope: !3366)
!3370 = !DILocation(line: 43, column: 15, scope: !3371)
!3371 = distinct !DILexicalBlock(scope: !3366, file: !604, line: 43, column: 15)
!3372 = !DILocation(line: 43, column: 17, scope: !3371)
!3373 = !DILocation(line: 43, column: 15, scope: !3366)
!3374 = !DILocalVariable(name: "e", scope: !3375, file: !604, line: 45, type: !48)
!3375 = distinct !DILexicalBlock(scope: !3371, file: !604, line: 44, column: 13)
!3376 = !DILocation(line: 45, column: 19, scope: !3375)
!3377 = !DILocation(line: 45, column: 23, scope: !3375)
!3378 = !DILocation(line: 46, column: 23, scope: !3375)
!3379 = !DILocation(line: 46, column: 15, scope: !3375)
!3380 = !DILocation(line: 47, column: 23, scope: !3375)
!3381 = !DILocation(line: 47, column: 15, scope: !3375)
!3382 = !DILocation(line: 47, column: 21, scope: !3375)
!3383 = !DILocation(line: 48, column: 15, scope: !3375)
!3384 = !DILocation(line: 51, column: 23, scope: !3385)
!3385 = distinct !DILexicalBlock(scope: !3366, file: !604, line: 51, column: 15)
!3386 = !DILocation(line: 51, column: 15, scope: !3385)
!3387 = !DILocation(line: 51, column: 27, scope: !3385)
!3388 = !DILocation(line: 52, column: 15, scope: !3385)
!3389 = !DILocation(line: 52, column: 34, scope: !3390)
!3390 = !DILexicalBlockFile(scope: !3385, file: !604, discriminator: 1)
!3391 = !DILocation(line: 52, column: 37, scope: !3385)
!3392 = !DILocation(line: 52, column: 26, scope: !3385)
!3393 = !DILocation(line: 52, column: 24, scope: !3385)
!3394 = !DILocation(line: 51, column: 15, scope: !3366)
!3395 = !DILocalVariable(name: "e", scope: !3396, file: !604, line: 54, type: !48)
!3396 = distinct !DILexicalBlock(scope: !3385, file: !604, line: 53, column: 13)
!3397 = !DILocation(line: 54, column: 19, scope: !3396)
!3398 = !DILocation(line: 54, column: 23, scope: !3396)
!3399 = !DILocation(line: 55, column: 22, scope: !3396)
!3400 = !DILocation(line: 55, column: 15, scope: !3396)
!3401 = !DILocation(line: 56, column: 23, scope: !3396)
!3402 = !DILocation(line: 56, column: 15, scope: !3396)
!3403 = !DILocation(line: 56, column: 21, scope: !3396)
!3404 = !DILocation(line: 57, column: 15, scope: !3396)
!3405 = !DILocation(line: 59, column: 9, scope: !3366)
!3406 = !DILocation(line: 60, column: 5, scope: !3353)
!3407 = !DILocation(line: 62, column: 10, scope: !3297)
!3408 = !DILocation(line: 62, column: 3, scope: !3297)
!3409 = !DILocation(line: 63, column: 1, scope: !3297)
!3410 = distinct !DISubprogram(name: "set_program_name", scope: !161, file: !161, line: 39, type: !61, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !160, retainedNodes: !28)
!3411 = !DILocalVariable(name: "argv0", arg: 1, scope: !3410, file: !161, line: 39, type: !63)
!3412 = !DILocation(line: 39, column: 31, scope: !3410)
!3413 = !DILocalVariable(name: "slash", scope: !3410, file: !161, line: 46, type: !63)
!3414 = !DILocation(line: 46, column: 15, scope: !3410)
!3415 = !DILocalVariable(name: "base", scope: !3410, file: !161, line: 47, type: !63)
!3416 = !DILocation(line: 47, column: 15, scope: !3410)
!3417 = !DILocation(line: 51, column: 7, scope: !3418)
!3418 = distinct !DILexicalBlock(scope: !3410, file: !161, line: 51, column: 7)
!3419 = !DILocation(line: 51, column: 13, scope: !3418)
!3420 = !DILocation(line: 51, column: 7, scope: !3410)
!3421 = !DILocation(line: 55, column: 14, scope: !3422)
!3422 = distinct !DILexicalBlock(scope: !3418, file: !161, line: 52, column: 5)
!3423 = !DILocation(line: 54, column: 7, scope: !3422)
!3424 = !DILocation(line: 56, column: 7, scope: !3422)
!3425 = !DILocation(line: 59, column: 20, scope: !3410)
!3426 = !DILocation(line: 59, column: 11, scope: !3410)
!3427 = !DILocation(line: 59, column: 9, scope: !3410)
!3428 = !DILocation(line: 60, column: 11, scope: !3410)
!3429 = !DILocation(line: 60, column: 17, scope: !3410)
!3430 = !DILocation(line: 60, column: 27, scope: !3431)
!3431 = !DILexicalBlockFile(scope: !3410, file: !161, discriminator: 1)
!3432 = !DILocation(line: 60, column: 33, scope: !3410)
!3433 = !DILocation(line: 60, column: 39, scope: !3434)
!3434 = !DILexicalBlockFile(scope: !3410, file: !161, discriminator: 2)
!3435 = !DILocation(line: 60, column: 8, scope: !3436)
!3436 = !DILexicalBlockFile(scope: !3437, file: !161, discriminator: 4)
!3437 = !DILexicalBlockFile(scope: !3410, file: !161, discriminator: 3)
!3438 = !DILocation(line: 61, column: 7, scope: !3439)
!3439 = distinct !DILexicalBlock(scope: !3410, file: !161, line: 61, column: 7)
!3440 = !DILocation(line: 61, column: 14, scope: !3439)
!3441 = !DILocation(line: 61, column: 12, scope: !3439)
!3442 = !DILocation(line: 61, column: 20, scope: !3439)
!3443 = !DILocation(line: 61, column: 25, scope: !3439)
!3444 = !DILocation(line: 61, column: 37, scope: !3445)
!3445 = !DILexicalBlockFile(scope: !3439, file: !161, discriminator: 1)
!3446 = !DILocation(line: 61, column: 42, scope: !3439)
!3447 = !DILocation(line: 61, column: 28, scope: !3439)
!3448 = !DILocation(line: 61, column: 61, scope: !3439)
!3449 = !DILocation(line: 61, column: 7, scope: !3410)
!3450 = !DILocation(line: 63, column: 15, scope: !3451)
!3451 = distinct !DILexicalBlock(scope: !3439, file: !161, line: 62, column: 5)
!3452 = !DILocation(line: 63, column: 13, scope: !3451)
!3453 = !DILocation(line: 64, column: 20, scope: !3454)
!3454 = distinct !DILexicalBlock(scope: !3451, file: !161, line: 64, column: 11)
!3455 = !DILocation(line: 64, column: 11, scope: !3454)
!3456 = !DILocation(line: 64, column: 36, scope: !3454)
!3457 = !DILocation(line: 64, column: 11, scope: !3451)
!3458 = !DILocation(line: 66, column: 19, scope: !3459)
!3459 = distinct !DILexicalBlock(scope: !3454, file: !161, line: 65, column: 9)
!3460 = !DILocation(line: 66, column: 24, scope: !3459)
!3461 = !DILocation(line: 66, column: 17, scope: !3459)
!3462 = !DILocation(line: 70, column: 52, scope: !3459)
!3463 = !DILocation(line: 70, column: 41, scope: !3459)
!3464 = !DILocation(line: 72, column: 9, scope: !3459)
!3465 = !DILocation(line: 73, column: 5, scope: !3451)
!3466 = !DILocation(line: 84, column: 18, scope: !3410)
!3467 = !DILocation(line: 84, column: 16, scope: !3410)
!3468 = !DILocation(line: 90, column: 38, scope: !3410)
!3469 = !DILocation(line: 90, column: 27, scope: !3410)
!3470 = !DILocation(line: 92, column: 1, scope: !3410)
!3471 = distinct !DISubprogram(name: "clone_quoting_options", scope: !168, file: !168, line: 108, type: !3472, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !167, retainedNodes: !28)
!3472 = !DISubroutineType(types: !3473)
!3473 = !{!3474, !3474}
!3474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !198, size: 64, align: 64)
!3475 = !DILocalVariable(name: "o", arg: 1, scope: !3471, file: !168, line: 108, type: !3474)
!3476 = !DILocation(line: 108, column: 48, scope: !3471)
!3477 = !DILocalVariable(name: "e", scope: !3471, file: !168, line: 110, type: !48)
!3478 = !DILocation(line: 110, column: 7, scope: !3471)
!3479 = !DILocation(line: 110, column: 11, scope: !3471)
!3480 = !DILocalVariable(name: "p", scope: !3471, file: !168, line: 111, type: !3474)
!3481 = !DILocation(line: 111, column: 27, scope: !3471)
!3482 = !DILocation(line: 111, column: 40, scope: !3471)
!3483 = !DILocation(line: 111, column: 44, scope: !3484)
!3484 = !DILexicalBlockFile(scope: !3471, file: !168, discriminator: 1)
!3485 = !DILocation(line: 111, column: 40, scope: !3486)
!3486 = !DILexicalBlockFile(scope: !3471, file: !168, discriminator: 2)
!3487 = !DILocation(line: 111, column: 40, scope: !3488)
!3488 = !DILexicalBlockFile(scope: !3489, file: !168, discriminator: 4)
!3489 = !DILexicalBlockFile(scope: !3471, file: !168, discriminator: 3)
!3490 = !DILocation(line: 111, column: 31, scope: !3471)
!3491 = !DILocation(line: 113, column: 11, scope: !3471)
!3492 = !DILocation(line: 113, column: 3, scope: !3471)
!3493 = !DILocation(line: 113, column: 9, scope: !3471)
!3494 = !DILocation(line: 114, column: 10, scope: !3471)
!3495 = !DILocation(line: 114, column: 3, scope: !3471)
!3496 = distinct !DISubprogram(name: "get_quoting_style", scope: !168, file: !168, line: 119, type: !3497, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !167, retainedNodes: !28)
!3497 = !DISubroutineType(types: !3498)
!3498 = !{!170, !3474}
!3499 = !DILocalVariable(name: "o", arg: 1, scope: !3496, file: !168, line: 119, type: !3474)
!3500 = !DILocation(line: 119, column: 44, scope: !3496)
!3501 = !DILocation(line: 121, column: 11, scope: !3496)
!3502 = !DILocation(line: 121, column: 15, scope: !3503)
!3503 = !DILexicalBlockFile(scope: !3496, file: !168, discriminator: 1)
!3504 = !DILocation(line: 121, column: 11, scope: !3505)
!3505 = !DILexicalBlockFile(scope: !3496, file: !168, discriminator: 2)
!3506 = !DILocation(line: 121, column: 46, scope: !3507)
!3507 = !DILexicalBlockFile(scope: !3508, file: !168, discriminator: 4)
!3508 = !DILexicalBlockFile(scope: !3496, file: !168, discriminator: 3)
!3509 = !DILocation(line: 121, column: 3, scope: !3496)
!3510 = distinct !DISubprogram(name: "set_quoting_style", scope: !168, file: !168, line: 127, type: !3511, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !167, retainedNodes: !28)
!3511 = !DISubroutineType(types: !3512)
!3512 = !{null, !3474, !170}
!3513 = !DILocalVariable(name: "o", arg: 1, scope: !3510, file: !168, line: 127, type: !3474)
!3514 = !DILocation(line: 127, column: 44, scope: !3510)
!3515 = !DILocalVariable(name: "s", arg: 2, scope: !3510, file: !168, line: 127, type: !170)
!3516 = !DILocation(line: 127, column: 66, scope: !3510)
!3517 = !DILocation(line: 129, column: 47, scope: !3510)
!3518 = !DILocation(line: 129, column: 4, scope: !3510)
!3519 = !DILocation(line: 129, column: 8, scope: !3520)
!3520 = !DILexicalBlockFile(scope: !3510, file: !168, discriminator: 1)
!3521 = !DILocation(line: 129, column: 4, scope: !3522)
!3522 = !DILexicalBlockFile(scope: !3510, file: !168, discriminator: 2)
!3523 = !DILocation(line: 129, column: 39, scope: !3524)
!3524 = !DILexicalBlockFile(scope: !3525, file: !168, discriminator: 4)
!3525 = !DILexicalBlockFile(scope: !3510, file: !168, discriminator: 3)
!3526 = !DILocation(line: 129, column: 45, scope: !3510)
!3527 = !DILocation(line: 130, column: 1, scope: !3510)
!3528 = distinct !DISubprogram(name: "set_char_quoting", scope: !168, file: !168, line: 138, type: !3529, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !167, retainedNodes: !28)
!3529 = !DISubroutineType(types: !3530)
!3530 = !{!48, !3474, !42, !48}
!3531 = !DILocalVariable(name: "o", arg: 1, scope: !3528, file: !168, line: 138, type: !3474)
!3532 = !DILocation(line: 138, column: 43, scope: !3528)
!3533 = !DILocalVariable(name: "c", arg: 2, scope: !3528, file: !168, line: 138, type: !42)
!3534 = !DILocation(line: 138, column: 51, scope: !3528)
!3535 = !DILocalVariable(name: "i", arg: 3, scope: !3528, file: !168, line: 138, type: !48)
!3536 = !DILocation(line: 138, column: 58, scope: !3528)
!3537 = !DILocalVariable(name: "uc", scope: !3528, file: !168, line: 140, type: !47)
!3538 = !DILocation(line: 140, column: 17, scope: !3528)
!3539 = !DILocation(line: 140, column: 22, scope: !3528)
!3540 = !DILocalVariable(name: "p", scope: !3528, file: !168, line: 141, type: !3541)
!3541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !204, size: 64, align: 64)
!3542 = !DILocation(line: 141, column: 17, scope: !3528)
!3543 = !DILocation(line: 142, column: 6, scope: !3528)
!3544 = !DILocation(line: 142, column: 10, scope: !3545)
!3545 = !DILexicalBlockFile(scope: !3528, file: !168, discriminator: 1)
!3546 = !DILocation(line: 142, column: 6, scope: !3547)
!3547 = !DILexicalBlockFile(scope: !3528, file: !168, discriminator: 2)
!3548 = !DILocation(line: 142, column: 41, scope: !3549)
!3549 = !DILexicalBlockFile(scope: !3550, file: !168, discriminator: 4)
!3550 = !DILexicalBlockFile(scope: !3528, file: !168, discriminator: 3)
!3551 = !DILocation(line: 142, column: 5, scope: !3528)
!3552 = !DILocation(line: 142, column: 59, scope: !3528)
!3553 = !DILocation(line: 142, column: 62, scope: !3528)
!3554 = !DILocation(line: 142, column: 57, scope: !3528)
!3555 = !DILocalVariable(name: "shift", scope: !3528, file: !168, line: 143, type: !48)
!3556 = !DILocation(line: 143, column: 7, scope: !3528)
!3557 = !DILocation(line: 143, column: 15, scope: !3528)
!3558 = !DILocation(line: 143, column: 18, scope: !3528)
!3559 = !DILocalVariable(name: "r", scope: !3528, file: !168, line: 144, type: !48)
!3560 = !DILocation(line: 144, column: 7, scope: !3528)
!3561 = !DILocation(line: 144, column: 13, scope: !3528)
!3562 = !DILocation(line: 144, column: 12, scope: !3528)
!3563 = !DILocation(line: 144, column: 18, scope: !3528)
!3564 = !DILocation(line: 144, column: 15, scope: !3528)
!3565 = !DILocation(line: 144, column: 25, scope: !3528)
!3566 = !DILocation(line: 145, column: 11, scope: !3528)
!3567 = !DILocation(line: 145, column: 13, scope: !3528)
!3568 = !DILocation(line: 145, column: 20, scope: !3528)
!3569 = !DILocation(line: 145, column: 18, scope: !3528)
!3570 = !DILocation(line: 145, column: 26, scope: !3528)
!3571 = !DILocation(line: 145, column: 23, scope: !3528)
!3572 = !DILocation(line: 145, column: 4, scope: !3528)
!3573 = !DILocation(line: 145, column: 6, scope: !3528)
!3574 = !DILocation(line: 146, column: 10, scope: !3528)
!3575 = !DILocation(line: 146, column: 3, scope: !3528)
!3576 = distinct !DISubprogram(name: "set_quoting_flags", scope: !168, file: !168, line: 154, type: !3577, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !167, retainedNodes: !28)
!3577 = !DISubroutineType(types: !3578)
!3578 = !{!48, !3474, !48}
!3579 = !DILocalVariable(name: "o", arg: 1, scope: !3576, file: !168, line: 154, type: !3474)
!3580 = !DILocation(line: 154, column: 44, scope: !3576)
!3581 = !DILocalVariable(name: "i", arg: 2, scope: !3576, file: !168, line: 154, type: !48)
!3582 = !DILocation(line: 154, column: 51, scope: !3576)
!3583 = !DILocalVariable(name: "r", scope: !3576, file: !168, line: 156, type: !48)
!3584 = !DILocation(line: 156, column: 7, scope: !3576)
!3585 = !DILocation(line: 157, column: 8, scope: !3586)
!3586 = distinct !DILexicalBlock(scope: !3576, file: !168, line: 157, column: 7)
!3587 = !DILocation(line: 157, column: 7, scope: !3576)
!3588 = !DILocation(line: 158, column: 7, scope: !3586)
!3589 = !DILocation(line: 158, column: 5, scope: !3586)
!3590 = !DILocation(line: 159, column: 7, scope: !3576)
!3591 = !DILocation(line: 159, column: 10, scope: !3576)
!3592 = !DILocation(line: 159, column: 5, scope: !3576)
!3593 = !DILocation(line: 160, column: 14, scope: !3576)
!3594 = !DILocation(line: 160, column: 3, scope: !3576)
!3595 = !DILocation(line: 160, column: 6, scope: !3576)
!3596 = !DILocation(line: 160, column: 12, scope: !3576)
!3597 = !DILocation(line: 161, column: 10, scope: !3576)
!3598 = !DILocation(line: 161, column: 3, scope: !3576)
!3599 = distinct !DISubprogram(name: "set_custom_quoting", scope: !168, file: !168, line: 165, type: !3600, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !167, retainedNodes: !28)
!3600 = !DISubroutineType(types: !3601)
!3601 = !{null, !3474, !63, !63}
!3602 = !DILocalVariable(name: "o", arg: 1, scope: !3599, file: !168, line: 165, type: !3474)
!3603 = !DILocation(line: 165, column: 45, scope: !3599)
!3604 = !DILocalVariable(name: "left_quote", arg: 2, scope: !3599, file: !168, line: 166, type: !63)
!3605 = !DILocation(line: 166, column: 33, scope: !3599)
!3606 = !DILocalVariable(name: "right_quote", arg: 3, scope: !3599, file: !168, line: 166, type: !63)
!3607 = !DILocation(line: 166, column: 57, scope: !3599)
!3608 = !DILocation(line: 168, column: 8, scope: !3609)
!3609 = distinct !DILexicalBlock(scope: !3599, file: !168, line: 168, column: 7)
!3610 = !DILocation(line: 168, column: 7, scope: !3599)
!3611 = !DILocation(line: 169, column: 7, scope: !3609)
!3612 = !DILocation(line: 169, column: 5, scope: !3609)
!3613 = !DILocation(line: 170, column: 3, scope: !3599)
!3614 = !DILocation(line: 170, column: 6, scope: !3599)
!3615 = !DILocation(line: 170, column: 12, scope: !3599)
!3616 = !DILocation(line: 171, column: 8, scope: !3617)
!3617 = distinct !DILexicalBlock(scope: !3599, file: !168, line: 171, column: 7)
!3618 = !DILocation(line: 171, column: 19, scope: !3617)
!3619 = !DILocation(line: 171, column: 23, scope: !3620)
!3620 = !DILexicalBlockFile(scope: !3617, file: !168, discriminator: 1)
!3621 = !DILocation(line: 171, column: 7, scope: !3599)
!3622 = !DILocation(line: 172, column: 5, scope: !3617)
!3623 = !DILocation(line: 173, column: 19, scope: !3599)
!3624 = !DILocation(line: 173, column: 3, scope: !3599)
!3625 = !DILocation(line: 173, column: 6, scope: !3599)
!3626 = !DILocation(line: 173, column: 17, scope: !3599)
!3627 = !DILocation(line: 174, column: 20, scope: !3599)
!3628 = !DILocation(line: 174, column: 3, scope: !3599)
!3629 = !DILocation(line: 174, column: 6, scope: !3599)
!3630 = !DILocation(line: 174, column: 18, scope: !3599)
!3631 = !DILocation(line: 175, column: 1, scope: !3599)
!3632 = distinct !DISubprogram(name: "quotearg_buffer", scope: !168, file: !168, line: 673, type: !3633, scopeLine: 676, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !167, retainedNodes: !28)
!3633 = !DISubroutineType(types: !3634)
!3634 = !{!44, !41, !44, !63, !44, !3635}
!3635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3636, size: 64, align: 64)
!3636 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !198)
!3637 = !DILocalVariable(name: "buffer", arg: 1, scope: !3632, file: !168, line: 673, type: !41)
!3638 = !DILocation(line: 673, column: 24, scope: !3632)
!3639 = !DILocalVariable(name: "buffersize", arg: 2, scope: !3632, file: !168, line: 673, type: !44)
!3640 = !DILocation(line: 673, column: 39, scope: !3632)
!3641 = !DILocalVariable(name: "arg", arg: 3, scope: !3632, file: !168, line: 674, type: !63)
!3642 = !DILocation(line: 674, column: 30, scope: !3632)
!3643 = !DILocalVariable(name: "argsize", arg: 4, scope: !3632, file: !168, line: 674, type: !44)
!3644 = !DILocation(line: 674, column: 42, scope: !3632)
!3645 = !DILocalVariable(name: "o", arg: 5, scope: !3632, file: !168, line: 675, type: !3635)
!3646 = !DILocation(line: 675, column: 48, scope: !3632)
!3647 = !DILocalVariable(name: "p", scope: !3632, file: !168, line: 677, type: !3635)
!3648 = !DILocation(line: 677, column: 33, scope: !3632)
!3649 = !DILocation(line: 677, column: 37, scope: !3632)
!3650 = !DILocation(line: 677, column: 41, scope: !3651)
!3651 = !DILexicalBlockFile(scope: !3632, file: !168, discriminator: 1)
!3652 = !DILocation(line: 677, column: 37, scope: !3653)
!3653 = !DILexicalBlockFile(scope: !3632, file: !168, discriminator: 2)
!3654 = !DILocation(line: 677, column: 33, scope: !3655)
!3655 = !DILexicalBlockFile(scope: !3656, file: !168, discriminator: 4)
!3656 = !DILexicalBlockFile(scope: !3632, file: !168, discriminator: 3)
!3657 = !DILocalVariable(name: "e", scope: !3632, file: !168, line: 678, type: !48)
!3658 = !DILocation(line: 678, column: 7, scope: !3632)
!3659 = !DILocation(line: 678, column: 11, scope: !3632)
!3660 = !DILocalVariable(name: "r", scope: !3632, file: !168, line: 679, type: !44)
!3661 = !DILocation(line: 679, column: 10, scope: !3632)
!3662 = !DILocation(line: 679, column: 40, scope: !3632)
!3663 = !DILocation(line: 679, column: 48, scope: !3632)
!3664 = !DILocation(line: 679, column: 60, scope: !3632)
!3665 = !DILocation(line: 679, column: 65, scope: !3632)
!3666 = !DILocation(line: 680, column: 40, scope: !3632)
!3667 = !DILocation(line: 680, column: 43, scope: !3632)
!3668 = !DILocation(line: 680, column: 50, scope: !3632)
!3669 = !DILocation(line: 680, column: 53, scope: !3632)
!3670 = !DILocation(line: 680, column: 60, scope: !3632)
!3671 = !DILocation(line: 680, column: 63, scope: !3632)
!3672 = !DILocation(line: 681, column: 40, scope: !3632)
!3673 = !DILocation(line: 681, column: 43, scope: !3632)
!3674 = !DILocation(line: 681, column: 55, scope: !3632)
!3675 = !DILocation(line: 681, column: 58, scope: !3632)
!3676 = !DILocation(line: 679, column: 14, scope: !3632)
!3677 = !DILocation(line: 682, column: 11, scope: !3632)
!3678 = !DILocation(line: 682, column: 3, scope: !3632)
!3679 = !DILocation(line: 682, column: 9, scope: !3632)
!3680 = !DILocation(line: 683, column: 10, scope: !3632)
!3681 = !DILocation(line: 683, column: 3, scope: !3632)
!3682 = distinct !DISubprogram(name: "quotearg_alloc", scope: !168, file: !168, line: 688, type: !3683, scopeLine: 690, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !167, retainedNodes: !28)
!3683 = !DISubroutineType(types: !3684)
!3684 = !{!41, !63, !44, !3635}
!3685 = !DILocalVariable(name: "arg", arg: 1, scope: !3682, file: !168, line: 688, type: !63)
!3686 = !DILocation(line: 688, column: 29, scope: !3682)
!3687 = !DILocalVariable(name: "argsize", arg: 2, scope: !3682, file: !168, line: 688, type: !44)
!3688 = !DILocation(line: 688, column: 41, scope: !3682)
!3689 = !DILocalVariable(name: "o", arg: 3, scope: !3682, file: !168, line: 689, type: !3635)
!3690 = !DILocation(line: 689, column: 47, scope: !3682)
!3691 = !DILocation(line: 691, column: 30, scope: !3682)
!3692 = !DILocation(line: 691, column: 35, scope: !3682)
!3693 = !DILocation(line: 691, column: 50, scope: !3682)
!3694 = !DILocation(line: 691, column: 10, scope: !3682)
!3695 = !DILocation(line: 691, column: 3, scope: !3682)
!3696 = distinct !DISubprogram(name: "quotearg_alloc_mem", scope: !168, file: !168, line: 701, type: !3697, scopeLine: 703, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !167, retainedNodes: !28)
!3697 = !DISubroutineType(types: !3698)
!3698 = !{!41, !63, !44, !622, !3635}
!3699 = !DILocalVariable(name: "arg", arg: 1, scope: !3696, file: !168, line: 701, type: !63)
!3700 = !DILocation(line: 701, column: 33, scope: !3696)
!3701 = !DILocalVariable(name: "argsize", arg: 2, scope: !3696, file: !168, line: 701, type: !44)
!3702 = !DILocation(line: 701, column: 45, scope: !3696)
!3703 = !DILocalVariable(name: "size", arg: 3, scope: !3696, file: !168, line: 701, type: !622)
!3704 = !DILocation(line: 701, column: 62, scope: !3696)
!3705 = !DILocalVariable(name: "o", arg: 4, scope: !3696, file: !168, line: 702, type: !3635)
!3706 = !DILocation(line: 702, column: 51, scope: !3696)
!3707 = !DILocalVariable(name: "p", scope: !3696, file: !168, line: 704, type: !3635)
!3708 = !DILocation(line: 704, column: 33, scope: !3696)
!3709 = !DILocation(line: 704, column: 37, scope: !3696)
!3710 = !DILocation(line: 704, column: 41, scope: !3711)
!3711 = !DILexicalBlockFile(scope: !3696, file: !168, discriminator: 1)
!3712 = !DILocation(line: 704, column: 37, scope: !3713)
!3713 = !DILexicalBlockFile(scope: !3696, file: !168, discriminator: 2)
!3714 = !DILocation(line: 704, column: 33, scope: !3715)
!3715 = !DILexicalBlockFile(scope: !3716, file: !168, discriminator: 4)
!3716 = !DILexicalBlockFile(scope: !3696, file: !168, discriminator: 3)
!3717 = !DILocalVariable(name: "e", scope: !3696, file: !168, line: 705, type: !48)
!3718 = !DILocation(line: 705, column: 7, scope: !3696)
!3719 = !DILocation(line: 705, column: 11, scope: !3696)
!3720 = !DILocalVariable(name: "flags", scope: !3696, file: !168, line: 707, type: !48)
!3721 = !DILocation(line: 707, column: 7, scope: !3696)
!3722 = !DILocation(line: 707, column: 15, scope: !3696)
!3723 = !DILocation(line: 707, column: 18, scope: !3696)
!3724 = !DILocation(line: 707, column: 27, scope: !3696)
!3725 = !DILocation(line: 707, column: 24, scope: !3696)
!3726 = !DILocalVariable(name: "bufsize", scope: !3696, file: !168, line: 708, type: !44)
!3727 = !DILocation(line: 708, column: 10, scope: !3696)
!3728 = !DILocation(line: 708, column: 52, scope: !3696)
!3729 = !DILocation(line: 708, column: 57, scope: !3696)
!3730 = !DILocation(line: 708, column: 66, scope: !3696)
!3731 = !DILocation(line: 708, column: 69, scope: !3696)
!3732 = !DILocation(line: 709, column: 46, scope: !3696)
!3733 = !DILocation(line: 709, column: 53, scope: !3696)
!3734 = !DILocation(line: 709, column: 56, scope: !3696)
!3735 = !DILocation(line: 710, column: 46, scope: !3696)
!3736 = !DILocation(line: 710, column: 49, scope: !3696)
!3737 = !DILocation(line: 711, column: 46, scope: !3696)
!3738 = !DILocation(line: 711, column: 49, scope: !3696)
!3739 = !DILocation(line: 708, column: 20, scope: !3696)
!3740 = !DILocation(line: 711, column: 62, scope: !3696)
!3741 = !DILocalVariable(name: "buf", scope: !3696, file: !168, line: 712, type: !41)
!3742 = !DILocation(line: 712, column: 9, scope: !3696)
!3743 = !DILocation(line: 712, column: 27, scope: !3696)
!3744 = !DILocation(line: 712, column: 15, scope: !3696)
!3745 = !DILocation(line: 713, column: 29, scope: !3696)
!3746 = !DILocation(line: 713, column: 34, scope: !3696)
!3747 = !DILocation(line: 713, column: 43, scope: !3696)
!3748 = !DILocation(line: 713, column: 48, scope: !3696)
!3749 = !DILocation(line: 713, column: 57, scope: !3696)
!3750 = !DILocation(line: 713, column: 60, scope: !3696)
!3751 = !DILocation(line: 713, column: 67, scope: !3696)
!3752 = !DILocation(line: 714, column: 29, scope: !3696)
!3753 = !DILocation(line: 714, column: 32, scope: !3696)
!3754 = !DILocation(line: 715, column: 29, scope: !3696)
!3755 = !DILocation(line: 715, column: 32, scope: !3696)
!3756 = !DILocation(line: 715, column: 44, scope: !3696)
!3757 = !DILocation(line: 715, column: 47, scope: !3696)
!3758 = !DILocation(line: 713, column: 3, scope: !3696)
!3759 = !DILocation(line: 716, column: 11, scope: !3696)
!3760 = !DILocation(line: 716, column: 3, scope: !3696)
!3761 = !DILocation(line: 716, column: 9, scope: !3696)
!3762 = !DILocation(line: 717, column: 7, scope: !3763)
!3763 = distinct !DILexicalBlock(scope: !3696, file: !168, line: 717, column: 7)
!3764 = !DILocation(line: 717, column: 7, scope: !3696)
!3765 = !DILocation(line: 718, column: 13, scope: !3763)
!3766 = !DILocation(line: 718, column: 21, scope: !3763)
!3767 = !DILocation(line: 718, column: 6, scope: !3763)
!3768 = !DILocation(line: 718, column: 11, scope: !3763)
!3769 = !DILocation(line: 718, column: 5, scope: !3763)
!3770 = !DILocation(line: 719, column: 10, scope: !3696)
!3771 = !DILocation(line: 719, column: 3, scope: !3696)
!3772 = distinct !DISubprogram(name: "quotearg_free", scope: !168, file: !168, line: 737, type: !953, scopeLine: 738, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !167, retainedNodes: !28)
!3773 = !DILocalVariable(name: "sv", scope: !3772, file: !168, line: 739, type: !216)
!3774 = !DILocation(line: 739, column: 19, scope: !3772)
!3775 = !DILocation(line: 739, column: 24, scope: !3772)
!3776 = !DILocalVariable(name: "i", scope: !3772, file: !168, line: 740, type: !204)
!3777 = !DILocation(line: 740, column: 16, scope: !3772)
!3778 = !DILocation(line: 741, column: 10, scope: !3779)
!3779 = distinct !DILexicalBlock(scope: !3772, file: !168, line: 741, column: 3)
!3780 = !DILocation(line: 741, column: 8, scope: !3779)
!3781 = !DILocation(line: 741, column: 15, scope: !3782)
!3782 = !DILexicalBlockFile(scope: !3783, file: !168, discriminator: 2)
!3783 = !DILexicalBlockFile(scope: !3784, file: !168, discriminator: 1)
!3784 = distinct !DILexicalBlock(scope: !3779, file: !168, line: 741, column: 3)
!3785 = !DILocation(line: 741, column: 19, scope: !3784)
!3786 = !DILocation(line: 741, column: 17, scope: !3784)
!3787 = !DILocation(line: 741, column: 3, scope: !3779)
!3788 = !DILocation(line: 742, column: 14, scope: !3784)
!3789 = !DILocation(line: 742, column: 11, scope: !3784)
!3790 = !DILocation(line: 742, column: 17, scope: !3784)
!3791 = !DILocation(line: 742, column: 5, scope: !3784)
!3792 = !DILocation(line: 741, column: 28, scope: !3784)
!3793 = !DILocation(line: 741, column: 3, scope: !3784)
!3794 = !DILocation(line: 743, column: 7, scope: !3795)
!3795 = distinct !DILexicalBlock(scope: !3772, file: !168, line: 743, column: 7)
!3796 = !DILocation(line: 743, column: 13, scope: !3795)
!3797 = !DILocation(line: 743, column: 17, scope: !3795)
!3798 = !DILocation(line: 743, column: 7, scope: !3772)
!3799 = !DILocation(line: 745, column: 13, scope: !3800)
!3800 = distinct !DILexicalBlock(scope: !3795, file: !168, line: 744, column: 5)
!3801 = !DILocation(line: 745, column: 19, scope: !3800)
!3802 = !DILocation(line: 745, column: 7, scope: !3800)
!3803 = !DILocation(line: 746, column: 21, scope: !3800)
!3804 = !DILocation(line: 747, column: 20, scope: !3800)
!3805 = !DILocation(line: 748, column: 5, scope: !3800)
!3806 = !DILocation(line: 749, column: 7, scope: !3807)
!3807 = distinct !DILexicalBlock(scope: !3772, file: !168, line: 749, column: 7)
!3808 = !DILocation(line: 749, column: 10, scope: !3807)
!3809 = !DILocation(line: 749, column: 7, scope: !3772)
!3810 = !DILocation(line: 751, column: 13, scope: !3811)
!3811 = distinct !DILexicalBlock(scope: !3807, file: !168, line: 750, column: 5)
!3812 = !DILocation(line: 751, column: 7, scope: !3811)
!3813 = !DILocation(line: 752, column: 15, scope: !3811)
!3814 = !DILocation(line: 753, column: 5, scope: !3811)
!3815 = !DILocation(line: 754, column: 10, scope: !3772)
!3816 = !DILocation(line: 755, column: 1, scope: !3772)
!3817 = distinct !DISubprogram(name: "quotearg_n", scope: !168, file: !168, line: 826, type: !3818, scopeLine: 827, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !167, retainedNodes: !28)
!3818 = !DISubroutineType(types: !3819)
!3819 = !{!41, !48, !63}
!3820 = !DILocalVariable(name: "n", arg: 1, scope: !3817, file: !168, line: 826, type: !48)
!3821 = !DILocation(line: 826, column: 17, scope: !3817)
!3822 = !DILocalVariable(name: "arg", arg: 2, scope: !3817, file: !168, line: 826, type: !63)
!3823 = !DILocation(line: 826, column: 32, scope: !3817)
!3824 = !DILocation(line: 828, column: 30, scope: !3817)
!3825 = !DILocation(line: 828, column: 33, scope: !3817)
!3826 = !DILocation(line: 828, column: 10, scope: !3817)
!3827 = !DILocation(line: 828, column: 3, scope: !3817)
!3828 = distinct !DISubprogram(name: "quotearg_n_mem", scope: !168, file: !168, line: 832, type: !3829, scopeLine: 833, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !167, retainedNodes: !28)
!3829 = !DISubroutineType(types: !3830)
!3830 = !{!41, !48, !63, !44}
!3831 = !DILocalVariable(name: "n", arg: 1, scope: !3828, file: !168, line: 832, type: !48)
!3832 = !DILocation(line: 832, column: 21, scope: !3828)
!3833 = !DILocalVariable(name: "arg", arg: 2, scope: !3828, file: !168, line: 832, type: !63)
!3834 = !DILocation(line: 832, column: 36, scope: !3828)
!3835 = !DILocalVariable(name: "argsize", arg: 3, scope: !3828, file: !168, line: 832, type: !44)
!3836 = !DILocation(line: 832, column: 48, scope: !3828)
!3837 = !DILocation(line: 834, column: 30, scope: !3828)
!3838 = !DILocation(line: 834, column: 33, scope: !3828)
!3839 = !DILocation(line: 834, column: 38, scope: !3828)
!3840 = !DILocation(line: 834, column: 10, scope: !3828)
!3841 = !DILocation(line: 834, column: 3, scope: !3828)
!3842 = distinct !DISubprogram(name: "quotearg", scope: !168, file: !168, line: 838, type: !1044, scopeLine: 839, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !167, retainedNodes: !28)
!3843 = !DILocalVariable(name: "arg", arg: 1, scope: !3842, file: !168, line: 838, type: !63)
!3844 = !DILocation(line: 838, column: 23, scope: !3842)
!3845 = !DILocation(line: 840, column: 25, scope: !3842)
!3846 = !DILocation(line: 840, column: 10, scope: !3842)
!3847 = !DILocation(line: 840, column: 3, scope: !3842)
!3848 = distinct !DISubprogram(name: "quotearg_mem", scope: !168, file: !168, line: 844, type: !3849, scopeLine: 845, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !167, retainedNodes: !28)
!3849 = !DISubroutineType(types: !3850)
!3850 = !{!41, !63, !44}
!3851 = !DILocalVariable(name: "arg", arg: 1, scope: !3848, file: !168, line: 844, type: !63)
!3852 = !DILocation(line: 844, column: 27, scope: !3848)
!3853 = !DILocalVariable(name: "argsize", arg: 2, scope: !3848, file: !168, line: 844, type: !44)
!3854 = !DILocation(line: 844, column: 39, scope: !3848)
!3855 = !DILocation(line: 846, column: 29, scope: !3848)
!3856 = !DILocation(line: 846, column: 34, scope: !3848)
!3857 = !DILocation(line: 846, column: 10, scope: !3848)
!3858 = !DILocation(line: 846, column: 3, scope: !3848)
!3859 = distinct !DISubprogram(name: "quotearg_n_style", scope: !168, file: !168, line: 850, type: !3860, scopeLine: 851, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !167, retainedNodes: !28)
!3860 = !DISubroutineType(types: !3861)
!3861 = !{!41, !48, !170, !63}
!3862 = !DILocalVariable(name: "n", arg: 1, scope: !3859, file: !168, line: 850, type: !48)
!3863 = !DILocation(line: 850, column: 23, scope: !3859)
!3864 = !DILocalVariable(name: "s", arg: 2, scope: !3859, file: !168, line: 850, type: !170)
!3865 = !DILocation(line: 850, column: 45, scope: !3859)
!3866 = !DILocalVariable(name: "arg", arg: 3, scope: !3859, file: !168, line: 850, type: !63)
!3867 = !DILocation(line: 850, column: 60, scope: !3859)
!3868 = !DILocalVariable(name: "o", scope: !3859, file: !168, line: 852, type: !3636)
!3869 = !DILocation(line: 852, column: 32, scope: !3859)
!3870 = !DILocation(line: 852, column: 64, scope: !3859)
!3871 = !DILocation(line: 852, column: 36, scope: !3859)
!3872 = !DILocation(line: 853, column: 30, scope: !3859)
!3873 = !DILocation(line: 853, column: 33, scope: !3859)
!3874 = !DILocation(line: 853, column: 10, scope: !3859)
!3875 = !DILocation(line: 853, column: 3, scope: !3859)
!3876 = distinct !DISubprogram(name: "quotearg_n_style_mem", scope: !168, file: !168, line: 857, type: !3877, scopeLine: 859, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !167, retainedNodes: !28)
!3877 = !DISubroutineType(types: !3878)
!3878 = !{!41, !48, !170, !63, !44}
!3879 = !DILocalVariable(name: "n", arg: 1, scope: !3876, file: !168, line: 857, type: !48)
!3880 = !DILocation(line: 857, column: 27, scope: !3876)
!3881 = !DILocalVariable(name: "s", arg: 2, scope: !3876, file: !168, line: 857, type: !170)
!3882 = !DILocation(line: 857, column: 49, scope: !3876)
!3883 = !DILocalVariable(name: "arg", arg: 3, scope: !3876, file: !168, line: 858, type: !63)
!3884 = !DILocation(line: 858, column: 35, scope: !3876)
!3885 = !DILocalVariable(name: "argsize", arg: 4, scope: !3876, file: !168, line: 858, type: !44)
!3886 = !DILocation(line: 858, column: 47, scope: !3876)
!3887 = !DILocalVariable(name: "o", scope: !3876, file: !168, line: 860, type: !3636)
!3888 = !DILocation(line: 860, column: 32, scope: !3876)
!3889 = !DILocation(line: 860, column: 64, scope: !3876)
!3890 = !DILocation(line: 860, column: 36, scope: !3876)
!3891 = !DILocation(line: 861, column: 30, scope: !3876)
!3892 = !DILocation(line: 861, column: 33, scope: !3876)
!3893 = !DILocation(line: 861, column: 38, scope: !3876)
!3894 = !DILocation(line: 861, column: 10, scope: !3876)
!3895 = !DILocation(line: 861, column: 3, scope: !3876)
!3896 = distinct !DISubprogram(name: "quotearg_style", scope: !168, file: !168, line: 865, type: !3897, scopeLine: 866, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !167, retainedNodes: !28)
!3897 = !DISubroutineType(types: !3898)
!3898 = !{!41, !170, !63}
!3899 = !DILocalVariable(name: "s", arg: 1, scope: !3896, file: !168, line: 865, type: !170)
!3900 = !DILocation(line: 865, column: 36, scope: !3896)
!3901 = !DILocalVariable(name: "arg", arg: 2, scope: !3896, file: !168, line: 865, type: !63)
!3902 = !DILocation(line: 865, column: 51, scope: !3896)
!3903 = !DILocation(line: 867, column: 31, scope: !3896)
!3904 = !DILocation(line: 867, column: 34, scope: !3896)
!3905 = !DILocation(line: 867, column: 10, scope: !3896)
!3906 = !DILocation(line: 867, column: 3, scope: !3896)
!3907 = distinct !DISubprogram(name: "quotearg_style_mem", scope: !168, file: !168, line: 871, type: !3908, scopeLine: 872, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !167, retainedNodes: !28)
!3908 = !DISubroutineType(types: !3909)
!3909 = !{!41, !170, !63, !44}
!3910 = !DILocalVariable(name: "s", arg: 1, scope: !3907, file: !168, line: 871, type: !170)
!3911 = !DILocation(line: 871, column: 40, scope: !3907)
!3912 = !DILocalVariable(name: "arg", arg: 2, scope: !3907, file: !168, line: 871, type: !63)
!3913 = !DILocation(line: 871, column: 55, scope: !3907)
!3914 = !DILocalVariable(name: "argsize", arg: 3, scope: !3907, file: !168, line: 871, type: !44)
!3915 = !DILocation(line: 871, column: 67, scope: !3907)
!3916 = !DILocation(line: 873, column: 35, scope: !3907)
!3917 = !DILocation(line: 873, column: 38, scope: !3907)
!3918 = !DILocation(line: 873, column: 43, scope: !3907)
!3919 = !DILocation(line: 873, column: 10, scope: !3907)
!3920 = !DILocation(line: 873, column: 3, scope: !3907)
!3921 = distinct !DISubprogram(name: "quotearg_char_mem", scope: !168, file: !168, line: 877, type: !3922, scopeLine: 878, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !167, retainedNodes: !28)
!3922 = !DISubroutineType(types: !3923)
!3923 = !{!41, !63, !44, !42}
!3924 = !DILocalVariable(name: "arg", arg: 1, scope: !3921, file: !168, line: 877, type: !63)
!3925 = !DILocation(line: 877, column: 32, scope: !3921)
!3926 = !DILocalVariable(name: "argsize", arg: 2, scope: !3921, file: !168, line: 877, type: !44)
!3927 = !DILocation(line: 877, column: 44, scope: !3921)
!3928 = !DILocalVariable(name: "ch", arg: 3, scope: !3921, file: !168, line: 877, type: !42)
!3929 = !DILocation(line: 877, column: 58, scope: !3921)
!3930 = !DILocalVariable(name: "options", scope: !3921, file: !168, line: 879, type: !198)
!3931 = !DILocation(line: 879, column: 26, scope: !3921)
!3932 = !DILocation(line: 880, column: 13, scope: !3921)
!3933 = !DILocation(line: 881, column: 31, scope: !3921)
!3934 = !DILocation(line: 881, column: 3, scope: !3921)
!3935 = !DILocation(line: 882, column: 33, scope: !3921)
!3936 = !DILocation(line: 882, column: 38, scope: !3921)
!3937 = !DILocation(line: 882, column: 10, scope: !3921)
!3938 = !DILocation(line: 882, column: 3, scope: !3921)
!3939 = distinct !DISubprogram(name: "quotearg_char", scope: !168, file: !168, line: 886, type: !3940, scopeLine: 887, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !167, retainedNodes: !28)
!3940 = !DISubroutineType(types: !3941)
!3941 = !{!41, !63, !42}
!3942 = !DILocalVariable(name: "arg", arg: 1, scope: !3939, file: !168, line: 886, type: !63)
!3943 = !DILocation(line: 886, column: 28, scope: !3939)
!3944 = !DILocalVariable(name: "ch", arg: 2, scope: !3939, file: !168, line: 886, type: !42)
!3945 = !DILocation(line: 886, column: 38, scope: !3939)
!3946 = !DILocation(line: 888, column: 29, scope: !3939)
!3947 = !DILocation(line: 888, column: 44, scope: !3939)
!3948 = !DILocation(line: 888, column: 10, scope: !3939)
!3949 = !DILocation(line: 888, column: 3, scope: !3939)
!3950 = distinct !DISubprogram(name: "quotearg_colon", scope: !168, file: !168, line: 892, type: !1044, scopeLine: 893, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !167, retainedNodes: !28)
!3951 = !DILocalVariable(name: "arg", arg: 1, scope: !3950, file: !168, line: 892, type: !63)
!3952 = !DILocation(line: 892, column: 29, scope: !3950)
!3953 = !DILocation(line: 894, column: 25, scope: !3950)
!3954 = !DILocation(line: 894, column: 10, scope: !3950)
!3955 = !DILocation(line: 894, column: 3, scope: !3950)
!3956 = distinct !DISubprogram(name: "quotearg_colon_mem", scope: !168, file: !168, line: 898, type: !3849, scopeLine: 899, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !167, retainedNodes: !28)
!3957 = !DILocalVariable(name: "arg", arg: 1, scope: !3956, file: !168, line: 898, type: !63)
!3958 = !DILocation(line: 898, column: 33, scope: !3956)
!3959 = !DILocalVariable(name: "argsize", arg: 2, scope: !3956, file: !168, line: 898, type: !44)
!3960 = !DILocation(line: 898, column: 45, scope: !3956)
!3961 = !DILocation(line: 900, column: 29, scope: !3956)
!3962 = !DILocation(line: 900, column: 34, scope: !3956)
!3963 = !DILocation(line: 900, column: 10, scope: !3956)
!3964 = !DILocation(line: 900, column: 3, scope: !3956)
!3965 = distinct !DISubprogram(name: "quotearg_n_custom", scope: !168, file: !168, line: 904, type: !3966, scopeLine: 906, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !167, retainedNodes: !28)
!3966 = !DISubroutineType(types: !3967)
!3967 = !{!41, !48, !63, !63, !63}
!3968 = !DILocalVariable(name: "n", arg: 1, scope: !3965, file: !168, line: 904, type: !48)
!3969 = !DILocation(line: 904, column: 24, scope: !3965)
!3970 = !DILocalVariable(name: "left_quote", arg: 2, scope: !3965, file: !168, line: 904, type: !63)
!3971 = !DILocation(line: 904, column: 39, scope: !3965)
!3972 = !DILocalVariable(name: "right_quote", arg: 3, scope: !3965, file: !168, line: 905, type: !63)
!3973 = !DILocation(line: 905, column: 32, scope: !3965)
!3974 = !DILocalVariable(name: "arg", arg: 4, scope: !3965, file: !168, line: 905, type: !63)
!3975 = !DILocation(line: 905, column: 57, scope: !3965)
!3976 = !DILocation(line: 907, column: 33, scope: !3965)
!3977 = !DILocation(line: 907, column: 36, scope: !3965)
!3978 = !DILocation(line: 907, column: 48, scope: !3965)
!3979 = !DILocation(line: 907, column: 61, scope: !3965)
!3980 = !DILocation(line: 907, column: 10, scope: !3965)
!3981 = !DILocation(line: 907, column: 3, scope: !3965)
!3982 = distinct !DISubprogram(name: "quotearg_n_custom_mem", scope: !168, file: !168, line: 912, type: !3983, scopeLine: 915, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !167, retainedNodes: !28)
!3983 = !DISubroutineType(types: !3984)
!3984 = !{!41, !48, !63, !63, !63, !44}
!3985 = !DILocalVariable(name: "n", arg: 1, scope: !3982, file: !168, line: 912, type: !48)
!3986 = !DILocation(line: 912, column: 28, scope: !3982)
!3987 = !DILocalVariable(name: "left_quote", arg: 2, scope: !3982, file: !168, line: 912, type: !63)
!3988 = !DILocation(line: 912, column: 43, scope: !3982)
!3989 = !DILocalVariable(name: "right_quote", arg: 3, scope: !3982, file: !168, line: 913, type: !63)
!3990 = !DILocation(line: 913, column: 36, scope: !3982)
!3991 = !DILocalVariable(name: "arg", arg: 4, scope: !3982, file: !168, line: 914, type: !63)
!3992 = !DILocation(line: 914, column: 36, scope: !3982)
!3993 = !DILocalVariable(name: "argsize", arg: 5, scope: !3982, file: !168, line: 914, type: !44)
!3994 = !DILocation(line: 914, column: 48, scope: !3982)
!3995 = !DILocalVariable(name: "o", scope: !3982, file: !168, line: 916, type: !198)
!3996 = !DILocation(line: 916, column: 26, scope: !3982)
!3997 = !DILocation(line: 916, column: 30, scope: !3982)
!3998 = !DILocation(line: 917, column: 27, scope: !3982)
!3999 = !DILocation(line: 917, column: 39, scope: !3982)
!4000 = !DILocation(line: 917, column: 3, scope: !3982)
!4001 = !DILocation(line: 918, column: 30, scope: !3982)
!4002 = !DILocation(line: 918, column: 33, scope: !3982)
!4003 = !DILocation(line: 918, column: 38, scope: !3982)
!4004 = !DILocation(line: 918, column: 10, scope: !3982)
!4005 = !DILocation(line: 918, column: 3, scope: !3982)
!4006 = distinct !DISubprogram(name: "quotearg_custom", scope: !168, file: !168, line: 922, type: !4007, scopeLine: 924, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !167, retainedNodes: !28)
!4007 = !DISubroutineType(types: !4008)
!4008 = !{!41, !63, !63, !63}
!4009 = !DILocalVariable(name: "left_quote", arg: 1, scope: !4006, file: !168, line: 922, type: !63)
!4010 = !DILocation(line: 922, column: 30, scope: !4006)
!4011 = !DILocalVariable(name: "right_quote", arg: 2, scope: !4006, file: !168, line: 922, type: !63)
!4012 = !DILocation(line: 922, column: 54, scope: !4006)
!4013 = !DILocalVariable(name: "arg", arg: 3, scope: !4006, file: !168, line: 923, type: !63)
!4014 = !DILocation(line: 923, column: 30, scope: !4006)
!4015 = !DILocation(line: 925, column: 32, scope: !4006)
!4016 = !DILocation(line: 925, column: 44, scope: !4006)
!4017 = !DILocation(line: 925, column: 57, scope: !4006)
!4018 = !DILocation(line: 925, column: 10, scope: !4006)
!4019 = !DILocation(line: 925, column: 3, scope: !4006)
!4020 = distinct !DISubprogram(name: "quotearg_custom_mem", scope: !168, file: !168, line: 929, type: !4021, scopeLine: 931, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !167, retainedNodes: !28)
!4021 = !DISubroutineType(types: !4022)
!4022 = !{!41, !63, !63, !63, !44}
!4023 = !DILocalVariable(name: "left_quote", arg: 1, scope: !4020, file: !168, line: 929, type: !63)
!4024 = !DILocation(line: 929, column: 34, scope: !4020)
!4025 = !DILocalVariable(name: "right_quote", arg: 2, scope: !4020, file: !168, line: 929, type: !63)
!4026 = !DILocation(line: 929, column: 58, scope: !4020)
!4027 = !DILocalVariable(name: "arg", arg: 3, scope: !4020, file: !168, line: 930, type: !63)
!4028 = !DILocation(line: 930, column: 34, scope: !4020)
!4029 = !DILocalVariable(name: "argsize", arg: 4, scope: !4020, file: !168, line: 930, type: !44)
!4030 = !DILocation(line: 930, column: 46, scope: !4020)
!4031 = !DILocation(line: 932, column: 36, scope: !4020)
!4032 = !DILocation(line: 932, column: 48, scope: !4020)
!4033 = !DILocation(line: 932, column: 61, scope: !4020)
!4034 = !DILocation(line: 933, column: 33, scope: !4020)
!4035 = !DILocation(line: 932, column: 10, scope: !4020)
!4036 = !DILocation(line: 932, column: 3, scope: !4020)
!4037 = distinct !DISubprogram(name: "quote_n_mem", scope: !168, file: !168, line: 947, type: !4038, scopeLine: 948, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !167, retainedNodes: !28)
!4038 = !DISubroutineType(types: !4039)
!4039 = !{!63, !48, !63, !44}
!4040 = !DILocalVariable(name: "n", arg: 1, scope: !4037, file: !168, line: 947, type: !48)
!4041 = !DILocation(line: 947, column: 18, scope: !4037)
!4042 = !DILocalVariable(name: "arg", arg: 2, scope: !4037, file: !168, line: 947, type: !63)
!4043 = !DILocation(line: 947, column: 33, scope: !4037)
!4044 = !DILocalVariable(name: "argsize", arg: 3, scope: !4037, file: !168, line: 947, type: !44)
!4045 = !DILocation(line: 947, column: 45, scope: !4037)
!4046 = !DILocation(line: 949, column: 30, scope: !4037)
!4047 = !DILocation(line: 949, column: 33, scope: !4037)
!4048 = !DILocation(line: 949, column: 38, scope: !4037)
!4049 = !DILocation(line: 949, column: 10, scope: !4037)
!4050 = !DILocation(line: 949, column: 3, scope: !4037)
!4051 = distinct !DISubprogram(name: "quote_mem", scope: !168, file: !168, line: 953, type: !4052, scopeLine: 954, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !167, retainedNodes: !28)
!4052 = !DISubroutineType(types: !4053)
!4053 = !{!63, !63, !44}
!4054 = !DILocalVariable(name: "arg", arg: 1, scope: !4051, file: !168, line: 953, type: !63)
!4055 = !DILocation(line: 953, column: 24, scope: !4051)
!4056 = !DILocalVariable(name: "argsize", arg: 2, scope: !4051, file: !168, line: 953, type: !44)
!4057 = !DILocation(line: 953, column: 36, scope: !4051)
!4058 = !DILocation(line: 955, column: 26, scope: !4051)
!4059 = !DILocation(line: 955, column: 31, scope: !4051)
!4060 = !DILocation(line: 955, column: 10, scope: !4051)
!4061 = !DILocation(line: 955, column: 3, scope: !4051)
!4062 = distinct !DISubprogram(name: "quote_n", scope: !168, file: !168, line: 959, type: !4063, scopeLine: 960, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !167, retainedNodes: !28)
!4063 = !DISubroutineType(types: !4064)
!4064 = !{!63, !48, !63}
!4065 = !DILocalVariable(name: "n", arg: 1, scope: !4062, file: !168, line: 959, type: !48)
!4066 = !DILocation(line: 959, column: 14, scope: !4062)
!4067 = !DILocalVariable(name: "arg", arg: 2, scope: !4062, file: !168, line: 959, type: !63)
!4068 = !DILocation(line: 959, column: 29, scope: !4062)
!4069 = !DILocation(line: 961, column: 23, scope: !4062)
!4070 = !DILocation(line: 961, column: 26, scope: !4062)
!4071 = !DILocation(line: 961, column: 10, scope: !4062)
!4072 = !DILocation(line: 961, column: 3, scope: !4062)
!4073 = distinct !DISubprogram(name: "quote", scope: !168, file: !168, line: 965, type: !4074, scopeLine: 966, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !167, retainedNodes: !28)
!4074 = !DISubroutineType(types: !4075)
!4075 = !{!63, !63}
!4076 = !DILocalVariable(name: "arg", arg: 1, scope: !4073, file: !168, line: 965, type: !63)
!4077 = !DILocation(line: 965, column: 20, scope: !4073)
!4078 = !DILocation(line: 967, column: 22, scope: !4073)
!4079 = !DILocation(line: 967, column: 10, scope: !4073)
!4080 = !DILocation(line: 967, column: 3, scope: !4073)
!4081 = distinct !DISubprogram(name: "quotearg_buffer_restyled", scope: !168, file: !168, line: 242, type: !4082, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !167, retainedNodes: !28)
!4082 = !DISubroutineType(types: !4083)
!4083 = !{!44, !41, !44, !63, !44, !170, !48, !4084, !63, !63}
!4084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4085, size: 64, align: 64)
!4085 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !204)
!4086 = !DILocalVariable(name: "buffer", arg: 1, scope: !4081, file: !168, line: 242, type: !41)
!4087 = !DILocation(line: 242, column: 33, scope: !4081)
!4088 = !DILocalVariable(name: "buffersize", arg: 2, scope: !4081, file: !168, line: 242, type: !44)
!4089 = !DILocation(line: 242, column: 48, scope: !4081)
!4090 = !DILocalVariable(name: "arg", arg: 3, scope: !4081, file: !168, line: 243, type: !63)
!4091 = !DILocation(line: 243, column: 39, scope: !4081)
!4092 = !DILocalVariable(name: "argsize", arg: 4, scope: !4081, file: !168, line: 243, type: !44)
!4093 = !DILocation(line: 243, column: 51, scope: !4081)
!4094 = !DILocalVariable(name: "quoting_style", arg: 5, scope: !4081, file: !168, line: 244, type: !170)
!4095 = !DILocation(line: 244, column: 46, scope: !4081)
!4096 = !DILocalVariable(name: "flags", arg: 6, scope: !4081, file: !168, line: 244, type: !48)
!4097 = !DILocation(line: 244, column: 65, scope: !4081)
!4098 = !DILocalVariable(name: "quote_these_too", arg: 7, scope: !4081, file: !168, line: 245, type: !4084)
!4099 = !DILocation(line: 245, column: 47, scope: !4081)
!4100 = !DILocalVariable(name: "left_quote", arg: 8, scope: !4081, file: !168, line: 246, type: !63)
!4101 = !DILocation(line: 246, column: 39, scope: !4081)
!4102 = !DILocalVariable(name: "right_quote", arg: 9, scope: !4081, file: !168, line: 247, type: !63)
!4103 = !DILocation(line: 247, column: 39, scope: !4081)
!4104 = !DILocalVariable(name: "i", scope: !4081, file: !168, line: 249, type: !44)
!4105 = !DILocation(line: 249, column: 10, scope: !4081)
!4106 = !DILocalVariable(name: "len", scope: !4081, file: !168, line: 250, type: !44)
!4107 = !DILocation(line: 250, column: 10, scope: !4081)
!4108 = !DILocalVariable(name: "quote_string", scope: !4081, file: !168, line: 251, type: !63)
!4109 = !DILocation(line: 251, column: 15, scope: !4081)
!4110 = !DILocalVariable(name: "quote_string_len", scope: !4081, file: !168, line: 252, type: !44)
!4111 = !DILocation(line: 252, column: 10, scope: !4081)
!4112 = !DILocalVariable(name: "backslash_escapes", scope: !4081, file: !168, line: 253, type: !53)
!4113 = !DILocation(line: 253, column: 8, scope: !4081)
!4114 = !DILocalVariable(name: "unibyte_locale", scope: !4081, file: !168, line: 254, type: !53)
!4115 = !DILocation(line: 254, column: 8, scope: !4081)
!4116 = !DILocation(line: 254, column: 25, scope: !4081)
!4117 = !DILocation(line: 254, column: 36, scope: !4081)
!4118 = !DILocalVariable(name: "elide_outer_quotes", scope: !4081, file: !168, line: 255, type: !53)
!4119 = !DILocation(line: 255, column: 8, scope: !4081)
!4120 = !DILocation(line: 255, column: 30, scope: !4081)
!4121 = !DILocation(line: 255, column: 36, scope: !4081)
!4122 = !DILocation(line: 255, column: 61, scope: !4081)
!4123 = !DILocation(line: 266, column: 11, scope: !4081)
!4124 = !DILocation(line: 266, column: 3, scope: !4081)
!4125 = !DILocation(line: 269, column: 21, scope: !4126)
!4126 = distinct !DILexicalBlock(scope: !4081, file: !168, line: 267, column: 5)
!4127 = !DILocation(line: 270, column: 26, scope: !4126)
!4128 = !DILocation(line: 270, column: 7, scope: !4126)
!4129 = !DILocation(line: 273, column: 12, scope: !4130)
!4130 = distinct !DILexicalBlock(scope: !4126, file: !168, line: 273, column: 11)
!4131 = !DILocation(line: 273, column: 11, scope: !4126)
!4132 = !DILocation(line: 274, column: 9, scope: !4130)
!4133 = !DILocation(line: 274, column: 9, scope: !4134)
!4134 = !DILexicalBlockFile(scope: !4135, file: !168, discriminator: 1)
!4135 = distinct !DILexicalBlock(scope: !4136, file: !168, line: 274, column: 9)
!4136 = distinct !DILexicalBlock(scope: !4130, file: !168, line: 274, column: 9)
!4137 = !DILocation(line: 274, column: 9, scope: !4136)
!4138 = !DILocation(line: 274, column: 9, scope: !4139)
!4139 = !DILexicalBlockFile(scope: !4135, file: !168, discriminator: 2)
!4140 = !DILocation(line: 274, column: 9, scope: !4141)
!4141 = !DILexicalBlockFile(scope: !4142, file: !168, discriminator: 4)
!4142 = !DILexicalBlockFile(scope: !4136, file: !168, discriminator: 3)
!4143 = !DILocation(line: 274, column: 9, scope: !4144)
!4144 = !DILexicalBlockFile(scope: !4136, file: !168, discriminator: 5)
!4145 = !DILocation(line: 275, column: 25, scope: !4126)
!4146 = !DILocation(line: 276, column: 20, scope: !4126)
!4147 = !DILocation(line: 277, column: 24, scope: !4126)
!4148 = !DILocation(line: 278, column: 7, scope: !4126)
!4149 = !DILocation(line: 281, column: 25, scope: !4126)
!4150 = !DILocation(line: 282, column: 26, scope: !4126)
!4151 = !DILocation(line: 283, column: 7, scope: !4126)
!4152 = !DILocation(line: 289, column: 13, scope: !4153)
!4153 = distinct !DILexicalBlock(scope: !4154, file: !168, line: 289, column: 13)
!4154 = distinct !DILexicalBlock(scope: !4126, file: !168, line: 288, column: 7)
!4155 = !DILocation(line: 289, column: 27, scope: !4153)
!4156 = !DILocation(line: 289, column: 13, scope: !4154)
!4157 = !DILocation(line: 312, column: 50, scope: !4158)
!4158 = distinct !DILexicalBlock(scope: !4153, file: !168, line: 290, column: 11)
!4159 = !DILocation(line: 312, column: 26, scope: !4158)
!4160 = !DILocation(line: 312, column: 24, scope: !4158)
!4161 = !DILocation(line: 313, column: 51, scope: !4158)
!4162 = !DILocation(line: 313, column: 27, scope: !4158)
!4163 = !DILocation(line: 313, column: 25, scope: !4158)
!4164 = !DILocation(line: 314, column: 11, scope: !4158)
!4165 = !DILocation(line: 315, column: 14, scope: !4166)
!4166 = distinct !DILexicalBlock(scope: !4154, file: !168, line: 315, column: 13)
!4167 = !DILocation(line: 315, column: 13, scope: !4154)
!4168 = !DILocation(line: 316, column: 31, scope: !4169)
!4169 = distinct !DILexicalBlock(scope: !4166, file: !168, line: 316, column: 11)
!4170 = !DILocation(line: 316, column: 29, scope: !4169)
!4171 = !DILocation(line: 316, column: 16, scope: !4169)
!4172 = !DILocation(line: 316, column: 44, scope: !4173)
!4173 = !DILexicalBlockFile(scope: !4174, file: !168, discriminator: 2)
!4174 = !DILexicalBlockFile(scope: !4175, file: !168, discriminator: 1)
!4175 = distinct !DILexicalBlock(scope: !4169, file: !168, line: 316, column: 11)
!4176 = !DILocation(line: 316, column: 43, scope: !4175)
!4177 = !DILocation(line: 316, column: 11, scope: !4169)
!4178 = !DILocation(line: 317, column: 13, scope: !4175)
!4179 = !DILocation(line: 317, column: 13, scope: !4180)
!4180 = !DILexicalBlockFile(scope: !4181, file: !168, discriminator: 1)
!4181 = distinct !DILexicalBlock(scope: !4182, file: !168, line: 317, column: 13)
!4182 = distinct !DILexicalBlock(scope: !4175, file: !168, line: 317, column: 13)
!4183 = !DILocation(line: 317, column: 13, scope: !4182)
!4184 = !DILocation(line: 317, column: 13, scope: !4185)
!4185 = !DILexicalBlockFile(scope: !4181, file: !168, discriminator: 2)
!4186 = !DILocation(line: 317, column: 13, scope: !4187)
!4187 = !DILexicalBlockFile(scope: !4188, file: !168, discriminator: 4)
!4188 = !DILexicalBlockFile(scope: !4182, file: !168, discriminator: 3)
!4189 = !DILocation(line: 317, column: 13, scope: !4190)
!4190 = !DILexicalBlockFile(scope: !4182, file: !168, discriminator: 5)
!4191 = !DILocation(line: 316, column: 70, scope: !4175)
!4192 = !DILocation(line: 316, column: 11, scope: !4175)
!4193 = !DILocation(line: 317, column: 13, scope: !4169)
!4194 = !DILocation(line: 318, column: 27, scope: !4154)
!4195 = !DILocation(line: 319, column: 24, scope: !4154)
!4196 = !DILocation(line: 319, column: 22, scope: !4154)
!4197 = !DILocation(line: 320, column: 36, scope: !4154)
!4198 = !DILocation(line: 320, column: 28, scope: !4154)
!4199 = !DILocation(line: 320, column: 26, scope: !4154)
!4200 = !DILocation(line: 322, column: 7, scope: !4126)
!4201 = !DILocation(line: 325, column: 21, scope: !4126)
!4202 = !DILocation(line: 326, column: 26, scope: !4126)
!4203 = !DILocation(line: 326, column: 7, scope: !4126)
!4204 = !DILocation(line: 329, column: 12, scope: !4205)
!4205 = distinct !DILexicalBlock(scope: !4126, file: !168, line: 329, column: 11)
!4206 = !DILocation(line: 329, column: 11, scope: !4126)
!4207 = !DILocation(line: 330, column: 9, scope: !4205)
!4208 = !DILocation(line: 330, column: 9, scope: !4209)
!4209 = !DILexicalBlockFile(scope: !4210, file: !168, discriminator: 1)
!4210 = distinct !DILexicalBlock(scope: !4211, file: !168, line: 330, column: 9)
!4211 = distinct !DILexicalBlock(scope: !4205, file: !168, line: 330, column: 9)
!4212 = !DILocation(line: 330, column: 9, scope: !4211)
!4213 = !DILocation(line: 330, column: 9, scope: !4214)
!4214 = !DILexicalBlockFile(scope: !4210, file: !168, discriminator: 2)
!4215 = !DILocation(line: 330, column: 9, scope: !4216)
!4216 = !DILexicalBlockFile(scope: !4217, file: !168, discriminator: 4)
!4217 = !DILexicalBlockFile(scope: !4211, file: !168, discriminator: 3)
!4218 = !DILocation(line: 330, column: 9, scope: !4219)
!4219 = !DILexicalBlockFile(scope: !4211, file: !168, discriminator: 5)
!4220 = !DILocation(line: 331, column: 20, scope: !4126)
!4221 = !DILocation(line: 332, column: 24, scope: !4126)
!4222 = !DILocation(line: 333, column: 7, scope: !4126)
!4223 = !DILocation(line: 336, column: 26, scope: !4126)
!4224 = !DILocation(line: 337, column: 7, scope: !4126)
!4225 = !DILocation(line: 340, column: 7, scope: !4126)
!4226 = !DILocation(line: 343, column: 10, scope: !4227)
!4227 = distinct !DILexicalBlock(scope: !4081, file: !168, line: 343, column: 3)
!4228 = !DILocation(line: 343, column: 8, scope: !4227)
!4229 = !DILocation(line: 343, column: 19, scope: !4230)
!4230 = !DILexicalBlockFile(scope: !4231, file: !168, discriminator: 6)
!4231 = !DILexicalBlockFile(scope: !4232, file: !168, discriminator: 1)
!4232 = distinct !DILexicalBlock(scope: !4227, file: !168, line: 343, column: 3)
!4233 = !DILocation(line: 343, column: 27, scope: !4232)
!4234 = !DILocation(line: 343, column: 19, scope: !4232)
!4235 = !DILocation(line: 343, column: 45, scope: !4236)
!4236 = !DILexicalBlockFile(scope: !4232, file: !168, discriminator: 2)
!4237 = !DILocation(line: 343, column: 41, scope: !4232)
!4238 = !DILocation(line: 343, column: 48, scope: !4232)
!4239 = !DILocation(line: 343, column: 58, scope: !4240)
!4240 = !DILexicalBlockFile(scope: !4232, file: !168, discriminator: 3)
!4241 = !DILocation(line: 343, column: 63, scope: !4232)
!4242 = !DILocation(line: 343, column: 60, scope: !4232)
!4243 = !DILocation(line: 343, column: 16, scope: !4244)
!4244 = !DILexicalBlockFile(scope: !4245, file: !168, discriminator: 5)
!4245 = !DILexicalBlockFile(scope: !4232, file: !168, discriminator: 4)
!4246 = !DILocation(line: 343, column: 3, scope: !4227)
!4247 = !DILocalVariable(name: "c", scope: !4248, file: !168, line: 345, type: !47)
!4248 = distinct !DILexicalBlock(scope: !4232, file: !168, line: 344, column: 5)
!4249 = !DILocation(line: 345, column: 21, scope: !4248)
!4250 = !DILocalVariable(name: "esc", scope: !4248, file: !168, line: 346, type: !47)
!4251 = !DILocation(line: 346, column: 21, scope: !4248)
!4252 = !DILocalVariable(name: "is_right_quote", scope: !4248, file: !168, line: 347, type: !53)
!4253 = !DILocation(line: 347, column: 12, scope: !4248)
!4254 = !DILocation(line: 349, column: 11, scope: !4255)
!4255 = distinct !DILexicalBlock(scope: !4248, file: !168, line: 349, column: 11)
!4256 = !DILocation(line: 350, column: 11, scope: !4255)
!4257 = !DILocation(line: 350, column: 14, scope: !4258)
!4258 = !DILexicalBlockFile(scope: !4255, file: !168, discriminator: 1)
!4259 = !DILocation(line: 351, column: 11, scope: !4255)
!4260 = !DILocation(line: 351, column: 15, scope: !4258)
!4261 = !DILocation(line: 351, column: 19, scope: !4255)
!4262 = !DILocation(line: 351, column: 17, scope: !4255)
!4263 = !DILocation(line: 352, column: 19, scope: !4255)
!4264 = !DILocation(line: 352, column: 27, scope: !4255)
!4265 = !DILocation(line: 352, column: 39, scope: !4255)
!4266 = !DILocation(line: 352, column: 46, scope: !4258)
!4267 = !DILocation(line: 352, column: 44, scope: !4255)
!4268 = !DILocation(line: 356, column: 40, scope: !4255)
!4269 = !DILocation(line: 356, column: 32, scope: !4255)
!4270 = !DILocation(line: 356, column: 30, scope: !4255)
!4271 = !DILocation(line: 356, column: 48, scope: !4255)
!4272 = !DILocation(line: 352, column: 15, scope: !4273)
!4273 = !DILexicalBlockFile(scope: !4274, file: !168, discriminator: 3)
!4274 = !DILexicalBlockFile(scope: !4255, file: !168, discriminator: 2)
!4275 = !DILocation(line: 357, column: 11, scope: !4255)
!4276 = !DILocation(line: 357, column: 22, scope: !4258)
!4277 = !DILocation(line: 357, column: 28, scope: !4255)
!4278 = !DILocation(line: 357, column: 26, scope: !4255)
!4279 = !DILocation(line: 357, column: 31, scope: !4255)
!4280 = !DILocation(line: 357, column: 45, scope: !4255)
!4281 = !DILocation(line: 357, column: 14, scope: !4255)
!4282 = !DILocation(line: 357, column: 63, scope: !4255)
!4283 = !DILocation(line: 349, column: 11, scope: !4248)
!4284 = !DILocation(line: 359, column: 15, scope: !4285)
!4285 = distinct !DILexicalBlock(scope: !4286, file: !168, line: 359, column: 15)
!4286 = distinct !DILexicalBlock(scope: !4255, file: !168, line: 358, column: 9)
!4287 = !DILocation(line: 359, column: 15, scope: !4286)
!4288 = !DILocation(line: 360, column: 13, scope: !4285)
!4289 = !DILocation(line: 361, column: 26, scope: !4286)
!4290 = !DILocation(line: 362, column: 9, scope: !4286)
!4291 = !DILocation(line: 364, column: 15, scope: !4248)
!4292 = !DILocation(line: 364, column: 11, scope: !4248)
!4293 = !DILocation(line: 364, column: 9, scope: !4248)
!4294 = !DILocation(line: 365, column: 15, scope: !4248)
!4295 = !DILocation(line: 365, column: 7, scope: !4248)
!4296 = !DILocation(line: 368, column: 15, scope: !4297)
!4297 = distinct !DILexicalBlock(scope: !4298, file: !168, line: 368, column: 15)
!4298 = distinct !DILexicalBlock(scope: !4248, file: !168, line: 366, column: 9)
!4299 = !DILocation(line: 368, column: 15, scope: !4298)
!4300 = !DILocation(line: 370, column: 19, scope: !4301)
!4301 = distinct !DILexicalBlock(scope: !4302, file: !168, line: 370, column: 19)
!4302 = distinct !DILexicalBlock(scope: !4297, file: !168, line: 369, column: 13)
!4303 = !DILocation(line: 370, column: 19, scope: !4302)
!4304 = !DILocation(line: 371, column: 17, scope: !4301)
!4305 = !DILocation(line: 372, column: 15, scope: !4302)
!4306 = !DILocation(line: 372, column: 15, scope: !4307)
!4307 = !DILexicalBlockFile(scope: !4308, file: !168, discriminator: 1)
!4308 = distinct !DILexicalBlock(scope: !4309, file: !168, line: 372, column: 15)
!4309 = distinct !DILexicalBlock(scope: !4302, file: !168, line: 372, column: 15)
!4310 = !DILocation(line: 372, column: 15, scope: !4309)
!4311 = !DILocation(line: 372, column: 15, scope: !4312)
!4312 = !DILexicalBlockFile(scope: !4308, file: !168, discriminator: 2)
!4313 = !DILocation(line: 372, column: 15, scope: !4314)
!4314 = !DILexicalBlockFile(scope: !4315, file: !168, discriminator: 4)
!4315 = !DILexicalBlockFile(scope: !4309, file: !168, discriminator: 3)
!4316 = !DILocation(line: 378, column: 19, scope: !4317)
!4317 = distinct !DILexicalBlock(scope: !4302, file: !168, line: 378, column: 19)
!4318 = !DILocation(line: 378, column: 21, scope: !4317)
!4319 = !DILocation(line: 378, column: 27, scope: !4317)
!4320 = !DILocation(line: 378, column: 25, scope: !4317)
!4321 = !DILocation(line: 378, column: 35, scope: !4317)
!4322 = !DILocation(line: 378, column: 49, scope: !4323)
!4323 = !DILexicalBlockFile(scope: !4317, file: !168, discriminator: 1)
!4324 = !DILocation(line: 378, column: 51, scope: !4317)
!4325 = !DILocation(line: 378, column: 45, scope: !4317)
!4326 = !DILocation(line: 378, column: 42, scope: !4317)
!4327 = !DILocation(line: 378, column: 56, scope: !4317)
!4328 = !DILocation(line: 378, column: 63, scope: !4329)
!4329 = !DILexicalBlockFile(scope: !4317, file: !168, discriminator: 2)
!4330 = !DILocation(line: 378, column: 65, scope: !4317)
!4331 = !DILocation(line: 378, column: 59, scope: !4317)
!4332 = !DILocation(line: 378, column: 70, scope: !4317)
!4333 = !DILocation(line: 378, column: 19, scope: !4302)
!4334 = !DILocation(line: 380, column: 19, scope: !4335)
!4335 = distinct !DILexicalBlock(scope: !4317, file: !168, line: 379, column: 17)
!4336 = !DILocation(line: 380, column: 19, scope: !4337)
!4337 = !DILexicalBlockFile(scope: !4338, file: !168, discriminator: 1)
!4338 = distinct !DILexicalBlock(scope: !4339, file: !168, line: 380, column: 19)
!4339 = distinct !DILexicalBlock(scope: !4335, file: !168, line: 380, column: 19)
!4340 = !DILocation(line: 380, column: 19, scope: !4339)
!4341 = !DILocation(line: 380, column: 19, scope: !4342)
!4342 = !DILexicalBlockFile(scope: !4338, file: !168, discriminator: 2)
!4343 = !DILocation(line: 380, column: 19, scope: !4344)
!4344 = !DILexicalBlockFile(scope: !4345, file: !168, discriminator: 4)
!4345 = !DILexicalBlockFile(scope: !4339, file: !168, discriminator: 3)
!4346 = !DILocation(line: 381, column: 19, scope: !4335)
!4347 = !DILocation(line: 381, column: 19, scope: !4348)
!4348 = !DILexicalBlockFile(scope: !4349, file: !168, discriminator: 1)
!4349 = distinct !DILexicalBlock(scope: !4350, file: !168, line: 381, column: 19)
!4350 = distinct !DILexicalBlock(scope: !4335, file: !168, line: 381, column: 19)
!4351 = !DILocation(line: 381, column: 19, scope: !4350)
!4352 = !DILocation(line: 381, column: 19, scope: !4353)
!4353 = !DILexicalBlockFile(scope: !4349, file: !168, discriminator: 2)
!4354 = !DILocation(line: 381, column: 19, scope: !4355)
!4355 = !DILexicalBlockFile(scope: !4356, file: !168, discriminator: 4)
!4356 = !DILexicalBlockFile(scope: !4350, file: !168, discriminator: 3)
!4357 = !DILocation(line: 382, column: 17, scope: !4335)
!4358 = !DILocation(line: 383, column: 17, scope: !4302)
!4359 = !DILocation(line: 388, column: 13, scope: !4302)
!4360 = !DILocation(line: 389, column: 20, scope: !4361)
!4361 = distinct !DILexicalBlock(scope: !4297, file: !168, line: 389, column: 20)
!4362 = !DILocation(line: 389, column: 26, scope: !4361)
!4363 = !DILocation(line: 389, column: 20, scope: !4297)
!4364 = !DILocation(line: 390, column: 13, scope: !4361)
!4365 = !DILocation(line: 391, column: 11, scope: !4298)
!4366 = !DILocation(line: 394, column: 19, scope: !4298)
!4367 = !DILocation(line: 394, column: 11, scope: !4298)
!4368 = !DILocation(line: 397, column: 19, scope: !4369)
!4369 = distinct !DILexicalBlock(scope: !4370, file: !168, line: 397, column: 19)
!4370 = distinct !DILexicalBlock(scope: !4298, file: !168, line: 395, column: 13)
!4371 = !DILocation(line: 397, column: 19, scope: !4370)
!4372 = !DILocation(line: 398, column: 17, scope: !4369)
!4373 = !DILocation(line: 399, column: 15, scope: !4370)
!4374 = !DILocation(line: 402, column: 20, scope: !4375)
!4375 = distinct !DILexicalBlock(scope: !4370, file: !168, line: 402, column: 19)
!4376 = !DILocation(line: 402, column: 26, scope: !4375)
!4377 = !DILocation(line: 403, column: 19, scope: !4375)
!4378 = !DILocation(line: 403, column: 22, scope: !4379)
!4379 = !DILexicalBlockFile(scope: !4375, file: !168, discriminator: 1)
!4380 = !DILocation(line: 403, column: 24, scope: !4375)
!4381 = !DILocation(line: 403, column: 30, scope: !4375)
!4382 = !DILocation(line: 403, column: 28, scope: !4375)
!4383 = !DILocation(line: 403, column: 38, scope: !4375)
!4384 = !DILocation(line: 403, column: 45, scope: !4385)
!4385 = !DILexicalBlockFile(scope: !4375, file: !168, discriminator: 2)
!4386 = !DILocation(line: 403, column: 47, scope: !4375)
!4387 = !DILocation(line: 403, column: 41, scope: !4375)
!4388 = !DILocation(line: 403, column: 52, scope: !4375)
!4389 = !DILocation(line: 402, column: 19, scope: !4370)
!4390 = !DILocation(line: 404, column: 29, scope: !4375)
!4391 = !DILocation(line: 404, column: 31, scope: !4375)
!4392 = !DILocation(line: 404, column: 25, scope: !4375)
!4393 = !DILocation(line: 404, column: 17, scope: !4375)
!4394 = !DILocation(line: 411, column: 25, scope: !4395)
!4395 = distinct !DILexicalBlock(scope: !4396, file: !168, line: 411, column: 25)
!4396 = distinct !DILexicalBlock(scope: !4375, file: !168, line: 405, column: 19)
!4397 = !DILocation(line: 411, column: 25, scope: !4396)
!4398 = !DILocation(line: 412, column: 23, scope: !4395)
!4399 = !DILocation(line: 413, column: 29, scope: !4396)
!4400 = !DILocation(line: 413, column: 31, scope: !4396)
!4401 = !DILocation(line: 413, column: 25, scope: !4396)
!4402 = !DILocation(line: 413, column: 23, scope: !4396)
!4403 = !DILocation(line: 414, column: 23, scope: !4396)
!4404 = !DILocation(line: 415, column: 21, scope: !4396)
!4405 = !DILocation(line: 415, column: 21, scope: !4406)
!4406 = !DILexicalBlockFile(scope: !4407, file: !168, discriminator: 1)
!4407 = distinct !DILexicalBlock(scope: !4408, file: !168, line: 415, column: 21)
!4408 = distinct !DILexicalBlock(scope: !4396, file: !168, line: 415, column: 21)
!4409 = !DILocation(line: 415, column: 21, scope: !4408)
!4410 = !DILocation(line: 415, column: 21, scope: !4411)
!4411 = !DILexicalBlockFile(scope: !4407, file: !168, discriminator: 2)
!4412 = !DILocation(line: 415, column: 21, scope: !4413)
!4413 = !DILexicalBlockFile(scope: !4414, file: !168, discriminator: 4)
!4414 = !DILexicalBlockFile(scope: !4408, file: !168, discriminator: 3)
!4415 = !DILocation(line: 416, column: 21, scope: !4396)
!4416 = !DILocation(line: 416, column: 21, scope: !4417)
!4417 = !DILexicalBlockFile(scope: !4418, file: !168, discriminator: 1)
!4418 = distinct !DILexicalBlock(scope: !4419, file: !168, line: 416, column: 21)
!4419 = distinct !DILexicalBlock(scope: !4396, file: !168, line: 416, column: 21)
!4420 = !DILocation(line: 416, column: 21, scope: !4419)
!4421 = !DILocation(line: 416, column: 21, scope: !4422)
!4422 = !DILexicalBlockFile(scope: !4418, file: !168, discriminator: 2)
!4423 = !DILocation(line: 416, column: 21, scope: !4424)
!4424 = !DILexicalBlockFile(scope: !4425, file: !168, discriminator: 4)
!4425 = !DILexicalBlockFile(scope: !4419, file: !168, discriminator: 3)
!4426 = !DILocation(line: 417, column: 21, scope: !4396)
!4427 = !DILocation(line: 417, column: 21, scope: !4428)
!4428 = !DILexicalBlockFile(scope: !4429, file: !168, discriminator: 1)
!4429 = distinct !DILexicalBlock(scope: !4430, file: !168, line: 417, column: 21)
!4430 = distinct !DILexicalBlock(scope: !4396, file: !168, line: 417, column: 21)
!4431 = !DILocation(line: 417, column: 21, scope: !4430)
!4432 = !DILocation(line: 417, column: 21, scope: !4433)
!4433 = !DILexicalBlockFile(scope: !4429, file: !168, discriminator: 2)
!4434 = !DILocation(line: 417, column: 21, scope: !4435)
!4435 = !DILexicalBlockFile(scope: !4436, file: !168, discriminator: 4)
!4436 = !DILexicalBlockFile(scope: !4430, file: !168, discriminator: 3)
!4437 = !DILocation(line: 418, column: 21, scope: !4396)
!4438 = !DILocation(line: 418, column: 21, scope: !4439)
!4439 = !DILexicalBlockFile(scope: !4440, file: !168, discriminator: 1)
!4440 = distinct !DILexicalBlock(scope: !4441, file: !168, line: 418, column: 21)
!4441 = distinct !DILexicalBlock(scope: !4396, file: !168, line: 418, column: 21)
!4442 = !DILocation(line: 418, column: 21, scope: !4441)
!4443 = !DILocation(line: 418, column: 21, scope: !4444)
!4444 = !DILexicalBlockFile(scope: !4440, file: !168, discriminator: 2)
!4445 = !DILocation(line: 418, column: 21, scope: !4446)
!4446 = !DILexicalBlockFile(scope: !4447, file: !168, discriminator: 4)
!4447 = !DILexicalBlockFile(scope: !4441, file: !168, discriminator: 3)
!4448 = !DILocation(line: 419, column: 21, scope: !4396)
!4449 = !DILocation(line: 422, column: 21, scope: !4396)
!4450 = !DILocation(line: 423, column: 19, scope: !4396)
!4451 = !DILocation(line: 424, column: 15, scope: !4370)
!4452 = !DILocation(line: 427, column: 15, scope: !4370)
!4453 = !DILocation(line: 429, column: 11, scope: !4298)
!4454 = !DILocation(line: 431, column: 24, scope: !4298)
!4455 = !DILocation(line: 431, column: 31, scope: !4298)
!4456 = !DILocation(line: 432, column: 24, scope: !4298)
!4457 = !DILocation(line: 432, column: 31, scope: !4298)
!4458 = !DILocation(line: 433, column: 24, scope: !4298)
!4459 = !DILocation(line: 433, column: 31, scope: !4298)
!4460 = !DILocation(line: 434, column: 24, scope: !4298)
!4461 = !DILocation(line: 434, column: 31, scope: !4298)
!4462 = !DILocation(line: 435, column: 24, scope: !4298)
!4463 = !DILocation(line: 435, column: 31, scope: !4298)
!4464 = !DILocation(line: 436, column: 24, scope: !4298)
!4465 = !DILocation(line: 436, column: 31, scope: !4298)
!4466 = !DILocation(line: 437, column: 24, scope: !4298)
!4467 = !DILocation(line: 437, column: 31, scope: !4298)
!4468 = !DILocation(line: 438, column: 26, scope: !4298)
!4469 = !DILocation(line: 438, column: 24, scope: !4298)
!4470 = !DILocation(line: 441, column: 15, scope: !4471)
!4471 = distinct !DILexicalBlock(scope: !4298, file: !168, line: 441, column: 15)
!4472 = !DILocation(line: 441, column: 33, scope: !4471)
!4473 = !DILocation(line: 441, column: 36, scope: !4474)
!4474 = !DILexicalBlockFile(scope: !4471, file: !168, discriminator: 1)
!4475 = !DILocation(line: 441, column: 55, scope: !4471)
!4476 = !DILocation(line: 441, column: 58, scope: !4477)
!4477 = !DILexicalBlockFile(scope: !4471, file: !168, discriminator: 3)
!4478 = !DILocation(line: 441, column: 15, scope: !4298)
!4479 = !DILocation(line: 442, column: 13, scope: !4471)
!4480 = !DILocation(line: 441, column: 58, scope: !4481)
!4481 = !DILexicalBlockFile(scope: !4482, file: !168, discriminator: 5)
!4482 = !DILexicalBlockFile(scope: !4483, file: !168, discriminator: 4)
!4483 = !DILexicalBlockFile(scope: !4471, file: !168, discriminator: 2)
!4484 = !DILocation(line: 445, column: 15, scope: !4485)
!4485 = distinct !DILexicalBlock(scope: !4298, file: !168, line: 445, column: 15)
!4486 = !DILocation(line: 445, column: 29, scope: !4485)
!4487 = !DILocation(line: 446, column: 15, scope: !4485)
!4488 = !DILocation(line: 446, column: 18, scope: !4489)
!4489 = !DILexicalBlockFile(scope: !4485, file: !168, discriminator: 1)
!4490 = !DILocation(line: 445, column: 15, scope: !4298)
!4491 = !DILocation(line: 447, column: 13, scope: !4485)
!4492 = !DILocation(line: 446, column: 18, scope: !4493)
!4493 = !DILexicalBlockFile(scope: !4485, file: !168, discriminator: 2)
!4494 = !DILocation(line: 450, column: 15, scope: !4495)
!4495 = distinct !DILexicalBlock(scope: !4298, file: !168, line: 450, column: 15)
!4496 = !DILocation(line: 450, column: 15, scope: !4298)
!4497 = !DILocation(line: 452, column: 19, scope: !4498)
!4498 = distinct !DILexicalBlock(scope: !4495, file: !168, line: 451, column: 13)
!4499 = !DILocation(line: 452, column: 17, scope: !4498)
!4500 = !DILocation(line: 453, column: 15, scope: !4498)
!4501 = !DILocation(line: 455, column: 11, scope: !4298)
!4502 = !DILocation(line: 458, column: 18, scope: !4503)
!4503 = distinct !DILexicalBlock(scope: !4298, file: !168, line: 458, column: 15)
!4504 = !DILocation(line: 458, column: 26, scope: !4503)
!4505 = !DILocation(line: 458, column: 15, scope: !4298)
!4506 = !DILocation(line: 458, column: 40, scope: !4507)
!4507 = !DILexicalBlockFile(scope: !4503, file: !168, discriminator: 1)
!4508 = !DILocation(line: 458, column: 47, scope: !4503)
!4509 = !DILocation(line: 458, column: 57, scope: !4510)
!4510 = !DILexicalBlockFile(scope: !4503, file: !168, discriminator: 2)
!4511 = !DILocation(line: 458, column: 65, scope: !4503)
!4512 = !DILocation(line: 459, column: 13, scope: !4503)
!4513 = !DILocation(line: 458, column: 69, scope: !4514)
!4514 = !DILexicalBlockFile(scope: !4515, file: !168, discriminator: 4)
!4515 = !DILexicalBlockFile(scope: !4503, file: !168, discriminator: 3)
!4516 = !DILocation(line: 462, column: 15, scope: !4517)
!4517 = distinct !DILexicalBlock(scope: !4298, file: !168, line: 462, column: 15)
!4518 = !DILocation(line: 462, column: 17, scope: !4517)
!4519 = !DILocation(line: 462, column: 15, scope: !4298)
!4520 = !DILocation(line: 463, column: 13, scope: !4517)
!4521 = !DILocation(line: 462, column: 20, scope: !4522)
!4522 = !DILexicalBlockFile(scope: !4517, file: !168, discriminator: 1)
!4523 = !DILocation(line: 478, column: 15, scope: !4524)
!4524 = distinct !DILexicalBlock(scope: !4298, file: !168, line: 478, column: 15)
!4525 = !DILocation(line: 478, column: 29, scope: !4524)
!4526 = !DILocation(line: 479, column: 15, scope: !4524)
!4527 = !DILocation(line: 479, column: 18, scope: !4528)
!4528 = !DILexicalBlockFile(scope: !4524, file: !168, discriminator: 1)
!4529 = !DILocation(line: 478, column: 15, scope: !4298)
!4530 = !DILocation(line: 480, column: 13, scope: !4524)
!4531 = !DILocation(line: 481, column: 11, scope: !4298)
!4532 = !DILocation(line: 484, column: 15, scope: !4533)
!4533 = distinct !DILexicalBlock(scope: !4298, file: !168, line: 484, column: 15)
!4534 = !DILocation(line: 484, column: 29, scope: !4533)
!4535 = !DILocation(line: 484, column: 15, scope: !4298)
!4536 = !DILocation(line: 486, column: 19, scope: !4537)
!4537 = distinct !DILexicalBlock(scope: !4538, file: !168, line: 486, column: 19)
!4538 = distinct !DILexicalBlock(scope: !4533, file: !168, line: 485, column: 13)
!4539 = !DILocation(line: 486, column: 19, scope: !4538)
!4540 = !DILocation(line: 487, column: 17, scope: !4537)
!4541 = !DILocation(line: 488, column: 15, scope: !4538)
!4542 = !DILocation(line: 488, column: 15, scope: !4543)
!4543 = !DILexicalBlockFile(scope: !4544, file: !168, discriminator: 1)
!4544 = distinct !DILexicalBlock(scope: !4545, file: !168, line: 488, column: 15)
!4545 = distinct !DILexicalBlock(scope: !4538, file: !168, line: 488, column: 15)
!4546 = !DILocation(line: 488, column: 15, scope: !4545)
!4547 = !DILocation(line: 488, column: 15, scope: !4548)
!4548 = !DILexicalBlockFile(scope: !4544, file: !168, discriminator: 2)
!4549 = !DILocation(line: 488, column: 15, scope: !4550)
!4550 = !DILexicalBlockFile(scope: !4551, file: !168, discriminator: 4)
!4551 = !DILexicalBlockFile(scope: !4545, file: !168, discriminator: 3)
!4552 = !DILocation(line: 489, column: 15, scope: !4538)
!4553 = !DILocation(line: 489, column: 15, scope: !4554)
!4554 = !DILexicalBlockFile(scope: !4555, file: !168, discriminator: 1)
!4555 = distinct !DILexicalBlock(scope: !4556, file: !168, line: 489, column: 15)
!4556 = distinct !DILexicalBlock(scope: !4538, file: !168, line: 489, column: 15)
!4557 = !DILocation(line: 489, column: 15, scope: !4556)
!4558 = !DILocation(line: 489, column: 15, scope: !4559)
!4559 = !DILexicalBlockFile(scope: !4555, file: !168, discriminator: 2)
!4560 = !DILocation(line: 489, column: 15, scope: !4561)
!4561 = !DILexicalBlockFile(scope: !4562, file: !168, discriminator: 4)
!4562 = !DILexicalBlockFile(scope: !4556, file: !168, discriminator: 3)
!4563 = !DILocation(line: 490, column: 15, scope: !4538)
!4564 = !DILocation(line: 490, column: 15, scope: !4565)
!4565 = !DILexicalBlockFile(scope: !4566, file: !168, discriminator: 1)
!4566 = distinct !DILexicalBlock(scope: !4567, file: !168, line: 490, column: 15)
!4567 = distinct !DILexicalBlock(scope: !4538, file: !168, line: 490, column: 15)
!4568 = !DILocation(line: 490, column: 15, scope: !4567)
!4569 = !DILocation(line: 490, column: 15, scope: !4570)
!4570 = !DILexicalBlockFile(scope: !4566, file: !168, discriminator: 2)
!4571 = !DILocation(line: 490, column: 15, scope: !4572)
!4572 = !DILexicalBlockFile(scope: !4573, file: !168, discriminator: 4)
!4573 = !DILexicalBlockFile(scope: !4567, file: !168, discriminator: 3)
!4574 = !DILocation(line: 491, column: 13, scope: !4538)
!4575 = !DILocation(line: 492, column: 11, scope: !4298)
!4576 = !DILocation(line: 516, column: 11, scope: !4298)
!4577 = !DILocalVariable(name: "m", scope: !4578, file: !168, line: 526, type: !44)
!4578 = distinct !DILexicalBlock(scope: !4298, file: !168, line: 524, column: 11)
!4579 = !DILocation(line: 526, column: 20, scope: !4578)
!4580 = !DILocalVariable(name: "printable", scope: !4578, file: !168, line: 528, type: !53)
!4581 = !DILocation(line: 528, column: 18, scope: !4578)
!4582 = !DILocation(line: 530, column: 17, scope: !4583)
!4583 = distinct !DILexicalBlock(scope: !4578, file: !168, line: 530, column: 17)
!4584 = !DILocation(line: 530, column: 17, scope: !4578)
!4585 = !DILocation(line: 532, column: 19, scope: !4586)
!4586 = distinct !DILexicalBlock(scope: !4583, file: !168, line: 531, column: 15)
!4587 = !DILocation(line: 533, column: 29, scope: !4586)
!4588 = !DILocation(line: 533, column: 41, scope: !4586)
!4589 = !DILocation(line: 533, column: 27, scope: !4586)
!4590 = !DILocation(line: 534, column: 15, scope: !4586)
!4591 = !DILocalVariable(name: "mbstate", scope: !4592, file: !168, line: 537, type: !4593)
!4592 = distinct !DILexicalBlock(scope: !4583, file: !168, line: 536, column: 15)
!4593 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !4594, line: 106, baseType: !4595)
!4594 = !DIFile(filename: "/usr/include/wchar.h", directory: "/home/gbalats/Downloads/coreutils-8.24/obj-clang")
!4595 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !4594, line: 94, baseType: !4596)
!4596 = !DICompositeType(tag: DW_TAG_structure_type, file: !4594, line: 82, size: 64, align: 32, elements: !4597)
!4597 = !{!4598, !4599}
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !4596, file: !4594, line: 84, baseType: !48, size: 32, align: 32)
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !4596, file: !4594, line: 93, baseType: !4600, size: 32, align: 32, offset: 32)
!4600 = !DICompositeType(tag: DW_TAG_union_type, scope: !4596, file: !4594, line: 85, size: 32, align: 32, elements: !4601)
!4601 = !{!4602, !4603}
!4602 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !4600, file: !4594, line: 88, baseType: !204, size: 32, align: 32)
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !4600, file: !4594, line: 92, baseType: !4604, size: 32, align: 8)
!4604 = !DICompositeType(tag: DW_TAG_array_type, baseType: !42, size: 32, align: 8, elements: !4605)
!4605 = !{!4606}
!4606 = !DISubrange(count: 4)
!4607 = !DILocation(line: 537, column: 27, scope: !4592)
!4608 = !DILocation(line: 538, column: 17, scope: !4592)
!4609 = !DILocation(line: 540, column: 19, scope: !4592)
!4610 = !DILocation(line: 541, column: 27, scope: !4592)
!4611 = !DILocation(line: 542, column: 21, scope: !4612)
!4612 = distinct !DILexicalBlock(scope: !4592, file: !168, line: 542, column: 21)
!4613 = !DILocation(line: 542, column: 29, scope: !4612)
!4614 = !DILocation(line: 542, column: 21, scope: !4592)
!4615 = !DILocation(line: 543, column: 37, scope: !4612)
!4616 = !DILocation(line: 543, column: 29, scope: !4612)
!4617 = !DILocation(line: 543, column: 27, scope: !4612)
!4618 = !DILocation(line: 543, column: 19, scope: !4612)
!4619 = !DILocation(line: 545, column: 17, scope: !4592)
!4620 = !DILocalVariable(name: "w", scope: !4621, file: !168, line: 547, type: !4622)
!4621 = distinct !DILexicalBlock(scope: !4592, file: !168, line: 546, column: 19)
!4622 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !45, line: 90, baseType: !48)
!4623 = !DILocation(line: 547, column: 29, scope: !4621)
!4624 = !DILocalVariable(name: "bytes", scope: !4621, file: !168, line: 548, type: !44)
!4625 = !DILocation(line: 548, column: 28, scope: !4621)
!4626 = !DILocation(line: 548, column: 54, scope: !4621)
!4627 = !DILocation(line: 548, column: 58, scope: !4621)
!4628 = !DILocation(line: 548, column: 56, scope: !4621)
!4629 = !DILocation(line: 548, column: 50, scope: !4621)
!4630 = !DILocation(line: 549, column: 45, scope: !4621)
!4631 = !DILocation(line: 549, column: 56, scope: !4621)
!4632 = !DILocation(line: 549, column: 60, scope: !4621)
!4633 = !DILocation(line: 549, column: 58, scope: !4621)
!4634 = !DILocation(line: 549, column: 53, scope: !4621)
!4635 = !DILocation(line: 548, column: 36, scope: !4621)
!4636 = !DILocation(line: 550, column: 25, scope: !4637)
!4637 = distinct !DILexicalBlock(scope: !4621, file: !168, line: 550, column: 25)
!4638 = !DILocation(line: 550, column: 31, scope: !4637)
!4639 = !DILocation(line: 550, column: 25, scope: !4621)
!4640 = !DILocation(line: 551, column: 23, scope: !4637)
!4641 = !DILocation(line: 552, column: 30, scope: !4642)
!4642 = distinct !DILexicalBlock(scope: !4637, file: !168, line: 552, column: 30)
!4643 = !DILocation(line: 552, column: 36, scope: !4642)
!4644 = !DILocation(line: 552, column: 30, scope: !4637)
!4645 = !DILocation(line: 554, column: 35, scope: !4646)
!4646 = distinct !DILexicalBlock(scope: !4642, file: !168, line: 553, column: 23)
!4647 = !DILocation(line: 555, column: 25, scope: !4646)
!4648 = !DILocation(line: 557, column: 30, scope: !4649)
!4649 = distinct !DILexicalBlock(scope: !4642, file: !168, line: 557, column: 30)
!4650 = !DILocation(line: 557, column: 36, scope: !4649)
!4651 = !DILocation(line: 557, column: 30, scope: !4642)
!4652 = !DILocation(line: 559, column: 35, scope: !4653)
!4653 = distinct !DILexicalBlock(scope: !4649, file: !168, line: 558, column: 23)
!4654 = !DILocation(line: 560, column: 25, scope: !4653)
!4655 = !DILocation(line: 560, column: 32, scope: !4656)
!4656 = !DILexicalBlockFile(scope: !4657, file: !168, discriminator: 4)
!4657 = !DILexicalBlockFile(scope: !4653, file: !168, discriminator: 1)
!4658 = !DILocation(line: 560, column: 36, scope: !4653)
!4659 = !DILocation(line: 560, column: 34, scope: !4653)
!4660 = !DILocation(line: 560, column: 40, scope: !4653)
!4661 = !DILocation(line: 560, column: 38, scope: !4653)
!4662 = !DILocation(line: 560, column: 48, scope: !4653)
!4663 = !DILocation(line: 560, column: 55, scope: !4664)
!4664 = !DILexicalBlockFile(scope: !4653, file: !168, discriminator: 2)
!4665 = !DILocation(line: 560, column: 59, scope: !4653)
!4666 = !DILocation(line: 560, column: 57, scope: !4653)
!4667 = !DILocation(line: 560, column: 51, scope: !4653)
!4668 = !DILocation(line: 560, column: 25, scope: !4669)
!4669 = !DILexicalBlockFile(scope: !4653, file: !168, discriminator: 3)
!4670 = !DILocation(line: 561, column: 28, scope: !4653)
!4671 = !DILocation(line: 562, column: 25, scope: !4653)
!4672 = !DILocation(line: 570, column: 44, scope: !4673)
!4673 = distinct !DILexicalBlock(scope: !4674, file: !168, line: 570, column: 29)
!4674 = distinct !DILexicalBlock(scope: !4649, file: !168, line: 565, column: 23)
!4675 = !DILocation(line: 571, column: 29, scope: !4673)
!4676 = !DILocation(line: 571, column: 32, scope: !4677)
!4677 = !DILexicalBlockFile(scope: !4673, file: !168, discriminator: 1)
!4678 = !DILocation(line: 571, column: 46, scope: !4673)
!4679 = !DILocation(line: 570, column: 29, scope: !4674)
!4680 = !DILocalVariable(name: "j", scope: !4681, file: !168, line: 573, type: !44)
!4681 = distinct !DILexicalBlock(scope: !4673, file: !168, line: 572, column: 27)
!4682 = !DILocation(line: 573, column: 36, scope: !4681)
!4683 = !DILocation(line: 574, column: 36, scope: !4684)
!4684 = distinct !DILexicalBlock(scope: !4681, file: !168, line: 574, column: 29)
!4685 = !DILocation(line: 574, column: 34, scope: !4684)
!4686 = !DILocation(line: 574, column: 41, scope: !4687)
!4687 = !DILexicalBlockFile(scope: !4688, file: !168, discriminator: 2)
!4688 = !DILexicalBlockFile(scope: !4689, file: !168, discriminator: 1)
!4689 = distinct !DILexicalBlock(scope: !4684, file: !168, line: 574, column: 29)
!4690 = !DILocation(line: 574, column: 45, scope: !4689)
!4691 = !DILocation(line: 574, column: 43, scope: !4689)
!4692 = !DILocation(line: 574, column: 29, scope: !4684)
!4693 = !DILocation(line: 575, column: 43, scope: !4689)
!4694 = !DILocation(line: 575, column: 47, scope: !4689)
!4695 = !DILocation(line: 575, column: 45, scope: !4689)
!4696 = !DILocation(line: 575, column: 51, scope: !4689)
!4697 = !DILocation(line: 575, column: 49, scope: !4689)
!4698 = !DILocation(line: 575, column: 39, scope: !4689)
!4699 = !DILocation(line: 575, column: 31, scope: !4689)
!4700 = !DILocation(line: 579, column: 35, scope: !4701)
!4701 = distinct !DILexicalBlock(scope: !4689, file: !168, line: 576, column: 33)
!4702 = !DILocation(line: 582, column: 35, scope: !4701)
!4703 = !DILocation(line: 583, column: 33, scope: !4701)
!4704 = !DILocation(line: 574, column: 53, scope: !4689)
!4705 = !DILocation(line: 574, column: 29, scope: !4689)
!4706 = !DILocation(line: 584, column: 27, scope: !4681)
!4707 = !DILocation(line: 586, column: 41, scope: !4708)
!4708 = distinct !DILexicalBlock(scope: !4674, file: !168, line: 586, column: 29)
!4709 = !DILocation(line: 586, column: 31, scope: !4708)
!4710 = !DILocation(line: 586, column: 29, scope: !4674)
!4711 = !DILocation(line: 587, column: 37, scope: !4708)
!4712 = !DILocation(line: 587, column: 27, scope: !4708)
!4713 = !DILocation(line: 588, column: 30, scope: !4674)
!4714 = !DILocation(line: 588, column: 27, scope: !4674)
!4715 = !DILocation(line: 590, column: 19, scope: !4621)
!4716 = !DILocation(line: 591, column: 26, scope: !4592)
!4717 = !DILocation(line: 591, column: 24, scope: !4592)
!4718 = !DILocation(line: 594, column: 21, scope: !4719)
!4719 = distinct !DILexicalBlock(scope: !4578, file: !168, line: 594, column: 17)
!4720 = !DILocation(line: 594, column: 19, scope: !4719)
!4721 = !DILocation(line: 594, column: 23, scope: !4719)
!4722 = !DILocation(line: 594, column: 27, scope: !4723)
!4723 = !DILexicalBlockFile(scope: !4719, file: !168, discriminator: 1)
!4724 = !DILocation(line: 594, column: 45, scope: !4719)
!4725 = !DILocation(line: 594, column: 50, scope: !4726)
!4726 = !DILexicalBlockFile(scope: !4719, file: !168, discriminator: 2)
!4727 = !DILocation(line: 594, column: 17, scope: !4578)
!4728 = !DILocalVariable(name: "ilim", scope: !4729, file: !168, line: 598, type: !44)
!4729 = distinct !DILexicalBlock(scope: !4719, file: !168, line: 595, column: 15)
!4730 = !DILocation(line: 598, column: 24, scope: !4729)
!4731 = !DILocation(line: 598, column: 31, scope: !4729)
!4732 = !DILocation(line: 598, column: 35, scope: !4729)
!4733 = !DILocation(line: 598, column: 33, scope: !4729)
!4734 = !DILocation(line: 600, column: 17, scope: !4729)
!4735 = !DILocation(line: 602, column: 25, scope: !4736)
!4736 = distinct !DILexicalBlock(scope: !4737, file: !168, line: 602, column: 25)
!4737 = distinct !DILexicalBlock(scope: !4738, file: !168, line: 601, column: 19)
!4738 = distinct !DILexicalBlock(scope: !4739, file: !168, line: 600, column: 17)
!4739 = distinct !DILexicalBlock(scope: !4729, file: !168, line: 600, column: 17)
!4740 = !DILocation(line: 602, column: 43, scope: !4736)
!4741 = !DILocation(line: 602, column: 48, scope: !4742)
!4742 = !DILexicalBlockFile(scope: !4736, file: !168, discriminator: 1)
!4743 = !DILocation(line: 602, column: 25, scope: !4737)
!4744 = !DILocation(line: 604, column: 29, scope: !4745)
!4745 = distinct !DILexicalBlock(scope: !4746, file: !168, line: 604, column: 29)
!4746 = distinct !DILexicalBlock(scope: !4736, file: !168, line: 603, column: 23)
!4747 = !DILocation(line: 604, column: 29, scope: !4746)
!4748 = !DILocation(line: 605, column: 27, scope: !4745)
!4749 = !DILocation(line: 606, column: 25, scope: !4746)
!4750 = !DILocation(line: 606, column: 25, scope: !4751)
!4751 = !DILexicalBlockFile(scope: !4752, file: !168, discriminator: 1)
!4752 = distinct !DILexicalBlock(scope: !4753, file: !168, line: 606, column: 25)
!4753 = distinct !DILexicalBlock(scope: !4746, file: !168, line: 606, column: 25)
!4754 = !DILocation(line: 606, column: 25, scope: !4753)
!4755 = !DILocation(line: 606, column: 25, scope: !4756)
!4756 = !DILexicalBlockFile(scope: !4752, file: !168, discriminator: 2)
!4757 = !DILocation(line: 606, column: 25, scope: !4758)
!4758 = !DILexicalBlockFile(scope: !4759, file: !168, discriminator: 4)
!4759 = !DILexicalBlockFile(scope: !4753, file: !168, discriminator: 3)
!4760 = !DILocation(line: 607, column: 25, scope: !4746)
!4761 = !DILocation(line: 607, column: 25, scope: !4762)
!4762 = !DILexicalBlockFile(scope: !4763, file: !168, discriminator: 1)
!4763 = distinct !DILexicalBlock(scope: !4764, file: !168, line: 607, column: 25)
!4764 = distinct !DILexicalBlock(scope: !4746, file: !168, line: 607, column: 25)
!4765 = !DILocation(line: 607, column: 25, scope: !4764)
!4766 = !DILocation(line: 607, column: 25, scope: !4767)
!4767 = !DILexicalBlockFile(scope: !4763, file: !168, discriminator: 2)
!4768 = !DILocation(line: 607, column: 25, scope: !4769)
!4769 = !DILexicalBlockFile(scope: !4770, file: !168, discriminator: 4)
!4770 = !DILexicalBlockFile(scope: !4764, file: !168, discriminator: 3)
!4771 = !DILocation(line: 608, column: 25, scope: !4746)
!4772 = !DILocation(line: 608, column: 25, scope: !4773)
!4773 = !DILexicalBlockFile(scope: !4774, file: !168, discriminator: 1)
!4774 = distinct !DILexicalBlock(scope: !4775, file: !168, line: 608, column: 25)
!4775 = distinct !DILexicalBlock(scope: !4746, file: !168, line: 608, column: 25)
!4776 = !DILocation(line: 608, column: 25, scope: !4775)
!4777 = !DILocation(line: 608, column: 25, scope: !4778)
!4778 = !DILexicalBlockFile(scope: !4774, file: !168, discriminator: 2)
!4779 = !DILocation(line: 608, column: 25, scope: !4780)
!4780 = !DILexicalBlockFile(scope: !4781, file: !168, discriminator: 4)
!4781 = !DILexicalBlockFile(scope: !4775, file: !168, discriminator: 3)
!4782 = !DILocation(line: 609, column: 36, scope: !4746)
!4783 = !DILocation(line: 609, column: 38, scope: !4746)
!4784 = !DILocation(line: 609, column: 33, scope: !4746)
!4785 = !DILocation(line: 609, column: 29, scope: !4746)
!4786 = !DILocation(line: 609, column: 27, scope: !4746)
!4787 = !DILocation(line: 610, column: 23, scope: !4746)
!4788 = !DILocation(line: 611, column: 30, scope: !4789)
!4789 = distinct !DILexicalBlock(scope: !4736, file: !168, line: 611, column: 30)
!4790 = !DILocation(line: 611, column: 30, scope: !4736)
!4791 = !DILocation(line: 613, column: 25, scope: !4792)
!4792 = distinct !DILexicalBlock(scope: !4789, file: !168, line: 612, column: 23)
!4793 = !DILocation(line: 613, column: 25, scope: !4794)
!4794 = !DILexicalBlockFile(scope: !4795, file: !168, discriminator: 1)
!4795 = distinct !DILexicalBlock(scope: !4796, file: !168, line: 613, column: 25)
!4796 = distinct !DILexicalBlock(scope: !4792, file: !168, line: 613, column: 25)
!4797 = !DILocation(line: 613, column: 25, scope: !4796)
!4798 = !DILocation(line: 613, column: 25, scope: !4799)
!4799 = !DILexicalBlockFile(scope: !4795, file: !168, discriminator: 2)
!4800 = !DILocation(line: 613, column: 25, scope: !4801)
!4801 = !DILexicalBlockFile(scope: !4802, file: !168, discriminator: 4)
!4802 = !DILexicalBlockFile(scope: !4796, file: !168, discriminator: 3)
!4803 = !DILocation(line: 614, column: 40, scope: !4792)
!4804 = !DILocation(line: 615, column: 23, scope: !4792)
!4805 = !DILocation(line: 616, column: 25, scope: !4806)
!4806 = distinct !DILexicalBlock(scope: !4737, file: !168, line: 616, column: 25)
!4807 = !DILocation(line: 616, column: 33, scope: !4806)
!4808 = !DILocation(line: 616, column: 35, scope: !4806)
!4809 = !DILocation(line: 616, column: 30, scope: !4806)
!4810 = !DILocation(line: 616, column: 25, scope: !4737)
!4811 = !DILocation(line: 617, column: 23, scope: !4806)
!4812 = !DILocation(line: 618, column: 21, scope: !4737)
!4813 = !DILocation(line: 618, column: 21, scope: !4814)
!4814 = !DILexicalBlockFile(scope: !4815, file: !168, discriminator: 1)
!4815 = distinct !DILexicalBlock(scope: !4816, file: !168, line: 618, column: 21)
!4816 = distinct !DILexicalBlock(scope: !4737, file: !168, line: 618, column: 21)
!4817 = !DILocation(line: 618, column: 21, scope: !4816)
!4818 = !DILocation(line: 618, column: 21, scope: !4819)
!4819 = !DILexicalBlockFile(scope: !4815, file: !168, discriminator: 2)
!4820 = !DILocation(line: 618, column: 21, scope: !4821)
!4821 = !DILexicalBlockFile(scope: !4822, file: !168, discriminator: 4)
!4822 = !DILexicalBlockFile(scope: !4816, file: !168, discriminator: 3)
!4823 = !DILocation(line: 619, column: 29, scope: !4737)
!4824 = !DILocation(line: 619, column: 25, scope: !4737)
!4825 = !DILocation(line: 619, column: 23, scope: !4737)
!4826 = !DILocation(line: 600, column: 17, scope: !4738)
!4827 = !DILocation(line: 622, column: 17, scope: !4729)
!4828 = !DILocation(line: 625, column: 9, scope: !4298)
!4829 = !DILocation(line: 627, column: 15, scope: !4830)
!4830 = distinct !DILexicalBlock(scope: !4248, file: !168, line: 627, column: 11)
!4831 = !DILocation(line: 627, column: 33, scope: !4830)
!4832 = !DILocation(line: 627, column: 36, scope: !4833)
!4833 = !DILexicalBlockFile(scope: !4830, file: !168, discriminator: 1)
!4834 = !DILocation(line: 628, column: 14, scope: !4830)
!4835 = !DILocation(line: 628, column: 17, scope: !4833)
!4836 = !DILocation(line: 629, column: 14, scope: !4830)
!4837 = !DILocation(line: 629, column: 33, scope: !4833)
!4838 = !DILocation(line: 629, column: 35, scope: !4830)
!4839 = !DILocation(line: 629, column: 17, scope: !4830)
!4840 = !DILocation(line: 629, column: 51, scope: !4830)
!4841 = !DILocation(line: 629, column: 53, scope: !4830)
!4842 = !DILocation(line: 629, column: 47, scope: !4830)
!4843 = !DILocation(line: 629, column: 65, scope: !4830)
!4844 = !DILocation(line: 630, column: 11, scope: !4830)
!4845 = !DILocation(line: 630, column: 15, scope: !4846)
!4846 = !DILexicalBlockFile(scope: !4830, file: !168, discriminator: 2)
!4847 = !DILocation(line: 627, column: 11, scope: !4248)
!4848 = !DILocation(line: 631, column: 9, scope: !4830)
!4849 = !DILocation(line: 630, column: 15, scope: !4833)
!4850 = !DILocation(line: 634, column: 11, scope: !4851)
!4851 = distinct !DILexicalBlock(scope: !4248, file: !168, line: 634, column: 11)
!4852 = !DILocation(line: 634, column: 11, scope: !4248)
!4853 = !DILocation(line: 635, column: 9, scope: !4851)
!4854 = !DILocation(line: 636, column: 7, scope: !4248)
!4855 = !DILocation(line: 636, column: 7, scope: !4856)
!4856 = !DILexicalBlockFile(scope: !4857, file: !168, discriminator: 1)
!4857 = distinct !DILexicalBlock(scope: !4858, file: !168, line: 636, column: 7)
!4858 = distinct !DILexicalBlock(scope: !4248, file: !168, line: 636, column: 7)
!4859 = !DILocation(line: 636, column: 7, scope: !4858)
!4860 = !DILocation(line: 636, column: 7, scope: !4861)
!4861 = !DILexicalBlockFile(scope: !4857, file: !168, discriminator: 2)
!4862 = !DILocation(line: 636, column: 7, scope: !4863)
!4863 = !DILexicalBlockFile(scope: !4864, file: !168, discriminator: 4)
!4864 = !DILexicalBlockFile(scope: !4858, file: !168, discriminator: 3)
!4865 = !DILocation(line: 636, column: 7, scope: !4866)
!4866 = !DILexicalBlockFile(scope: !4858, file: !168, discriminator: 5)
!4867 = !DILocation(line: 639, column: 7, scope: !4248)
!4868 = !DILocation(line: 639, column: 7, scope: !4869)
!4869 = !DILexicalBlockFile(scope: !4870, file: !168, discriminator: 1)
!4870 = distinct !DILexicalBlock(scope: !4871, file: !168, line: 639, column: 7)
!4871 = distinct !DILexicalBlock(scope: !4248, file: !168, line: 639, column: 7)
!4872 = !DILocation(line: 639, column: 7, scope: !4871)
!4873 = !DILocation(line: 639, column: 7, scope: !4874)
!4874 = !DILexicalBlockFile(scope: !4870, file: !168, discriminator: 2)
!4875 = !DILocation(line: 639, column: 7, scope: !4876)
!4876 = !DILexicalBlockFile(scope: !4877, file: !168, discriminator: 4)
!4877 = !DILexicalBlockFile(scope: !4871, file: !168, discriminator: 3)
!4878 = !DILocation(line: 640, column: 5, scope: !4248)
!4879 = !DILocation(line: 343, column: 75, scope: !4232)
!4880 = !DILocation(line: 343, column: 3, scope: !4232)
!4881 = !DILocation(line: 642, column: 7, scope: !4882)
!4882 = distinct !DILexicalBlock(scope: !4081, file: !168, line: 642, column: 7)
!4883 = !DILocation(line: 642, column: 11, scope: !4882)
!4884 = !DILocation(line: 642, column: 16, scope: !4882)
!4885 = !DILocation(line: 642, column: 19, scope: !4886)
!4886 = !DILexicalBlockFile(scope: !4882, file: !168, discriminator: 1)
!4887 = !DILocation(line: 642, column: 33, scope: !4882)
!4888 = !DILocation(line: 643, column: 7, scope: !4882)
!4889 = !DILocation(line: 643, column: 10, scope: !4886)
!4890 = !DILocation(line: 642, column: 7, scope: !4081)
!4891 = !DILocation(line: 644, column: 5, scope: !4882)
!4892 = !DILocation(line: 646, column: 7, scope: !4893)
!4893 = distinct !DILexicalBlock(scope: !4081, file: !168, line: 646, column: 7)
!4894 = !DILocation(line: 646, column: 20, scope: !4893)
!4895 = !DILocation(line: 646, column: 24, scope: !4896)
!4896 = !DILexicalBlockFile(scope: !4893, file: !168, discriminator: 1)
!4897 = !DILocation(line: 646, column: 7, scope: !4081)
!4898 = !DILocation(line: 647, column: 5, scope: !4893)
!4899 = !DILocation(line: 647, column: 13, scope: !4900)
!4900 = !DILexicalBlockFile(scope: !4901, file: !168, discriminator: 2)
!4901 = !DILexicalBlockFile(scope: !4902, file: !168, discriminator: 1)
!4902 = distinct !DILexicalBlock(scope: !4903, file: !168, line: 647, column: 5)
!4903 = distinct !DILexicalBlock(scope: !4893, file: !168, line: 647, column: 5)
!4904 = !DILocation(line: 647, column: 12, scope: !4902)
!4905 = !DILocation(line: 647, column: 5, scope: !4903)
!4906 = !DILocation(line: 648, column: 7, scope: !4902)
!4907 = !DILocation(line: 648, column: 7, scope: !4908)
!4908 = !DILexicalBlockFile(scope: !4909, file: !168, discriminator: 1)
!4909 = distinct !DILexicalBlock(scope: !4910, file: !168, line: 648, column: 7)
!4910 = distinct !DILexicalBlock(scope: !4902, file: !168, line: 648, column: 7)
!4911 = !DILocation(line: 648, column: 7, scope: !4910)
!4912 = !DILocation(line: 648, column: 7, scope: !4913)
!4913 = !DILexicalBlockFile(scope: !4909, file: !168, discriminator: 2)
!4914 = !DILocation(line: 648, column: 7, scope: !4915)
!4915 = !DILexicalBlockFile(scope: !4916, file: !168, discriminator: 4)
!4916 = !DILexicalBlockFile(scope: !4910, file: !168, discriminator: 3)
!4917 = !DILocation(line: 648, column: 7, scope: !4918)
!4918 = !DILexicalBlockFile(scope: !4910, file: !168, discriminator: 5)
!4919 = !DILocation(line: 647, column: 39, scope: !4902)
!4920 = !DILocation(line: 647, column: 5, scope: !4902)
!4921 = !DILocation(line: 648, column: 7, scope: !4903)
!4922 = !DILocation(line: 650, column: 7, scope: !4923)
!4923 = distinct !DILexicalBlock(scope: !4081, file: !168, line: 650, column: 7)
!4924 = !DILocation(line: 650, column: 13, scope: !4923)
!4925 = !DILocation(line: 650, column: 11, scope: !4923)
!4926 = !DILocation(line: 650, column: 7, scope: !4081)
!4927 = !DILocation(line: 651, column: 12, scope: !4923)
!4928 = !DILocation(line: 651, column: 5, scope: !4923)
!4929 = !DILocation(line: 651, column: 17, scope: !4923)
!4930 = !DILocation(line: 652, column: 10, scope: !4081)
!4931 = !DILocation(line: 652, column: 3, scope: !4081)
!4932 = !DILocation(line: 657, column: 36, scope: !4081)
!4933 = !DILocation(line: 657, column: 44, scope: !4081)
!4934 = !DILocation(line: 657, column: 56, scope: !4081)
!4935 = !DILocation(line: 657, column: 61, scope: !4081)
!4936 = !DILocation(line: 658, column: 36, scope: !4081)
!4937 = !DILocation(line: 659, column: 36, scope: !4081)
!4938 = !DILocation(line: 659, column: 42, scope: !4081)
!4939 = !DILocation(line: 660, column: 36, scope: !4081)
!4940 = !DILocation(line: 660, column: 48, scope: !4081)
!4941 = !DILocation(line: 657, column: 10, scope: !4081)
!4942 = !DILocation(line: 657, column: 3, scope: !4081)
!4943 = !DILocation(line: 661, column: 1, scope: !4081)
!4944 = distinct !DISubprogram(name: "quotearg_n_options", scope: !168, file: !168, line: 766, type: !4945, scopeLine: 768, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !167, retainedNodes: !28)
!4945 = !DISubroutineType(types: !4946)
!4946 = !{!41, !48, !63, !44, !3635}
!4947 = !DILocalVariable(name: "n", arg: 1, scope: !4944, file: !168, line: 766, type: !48)
!4948 = !DILocation(line: 766, column: 25, scope: !4944)
!4949 = !DILocalVariable(name: "arg", arg: 2, scope: !4944, file: !168, line: 766, type: !63)
!4950 = !DILocation(line: 766, column: 40, scope: !4944)
!4951 = !DILocalVariable(name: "argsize", arg: 3, scope: !4944, file: !168, line: 766, type: !44)
!4952 = !DILocation(line: 766, column: 52, scope: !4944)
!4953 = !DILocalVariable(name: "options", arg: 4, scope: !4944, file: !168, line: 767, type: !3635)
!4954 = !DILocation(line: 767, column: 51, scope: !4944)
!4955 = !DILocalVariable(name: "e", scope: !4944, file: !168, line: 769, type: !48)
!4956 = !DILocation(line: 769, column: 7, scope: !4944)
!4957 = !DILocation(line: 769, column: 11, scope: !4944)
!4958 = !DILocalVariable(name: "n0", scope: !4944, file: !168, line: 771, type: !204)
!4959 = !DILocation(line: 771, column: 16, scope: !4944)
!4960 = !DILocation(line: 771, column: 21, scope: !4944)
!4961 = !DILocalVariable(name: "sv", scope: !4944, file: !168, line: 772, type: !216)
!4962 = !DILocation(line: 772, column: 19, scope: !4944)
!4963 = !DILocation(line: 772, column: 24, scope: !4944)
!4964 = !DILocation(line: 774, column: 7, scope: !4965)
!4965 = distinct !DILexicalBlock(scope: !4944, file: !168, line: 774, column: 7)
!4966 = !DILocation(line: 774, column: 9, scope: !4965)
!4967 = !DILocation(line: 774, column: 7, scope: !4944)
!4968 = !DILocation(line: 775, column: 5, scope: !4965)
!4969 = !DILocation(line: 777, column: 7, scope: !4970)
!4970 = distinct !DILexicalBlock(scope: !4944, file: !168, line: 777, column: 7)
!4971 = !DILocation(line: 777, column: 17, scope: !4970)
!4972 = !DILocation(line: 777, column: 14, scope: !4970)
!4973 = !DILocation(line: 777, column: 7, scope: !4944)
!4974 = !DILocalVariable(name: "n1", scope: !4975, file: !168, line: 784, type: !44)
!4975 = distinct !DILexicalBlock(scope: !4970, file: !168, line: 778, column: 5)
!4976 = !DILocation(line: 784, column: 14, scope: !4975)
!4977 = !DILocation(line: 784, column: 19, scope: !4975)
!4978 = !DILocation(line: 784, column: 22, scope: !4975)
!4979 = !DILocalVariable(name: "preallocated", scope: !4975, file: !168, line: 785, type: !53)
!4980 = !DILocation(line: 785, column: 12, scope: !4975)
!4981 = !DILocation(line: 785, column: 28, scope: !4975)
!4982 = !DILocation(line: 785, column: 31, scope: !4975)
!4983 = !DILocation(line: 787, column: 11, scope: !4984)
!4984 = distinct !DILexicalBlock(scope: !4975, file: !168, line: 787, column: 11)
!4985 = !DILocation(line: 787, column: 11, scope: !4975)
!4986 = !DILocation(line: 788, column: 9, scope: !4984)
!4987 = !DILocation(line: 790, column: 32, scope: !4975)
!4988 = !DILocation(line: 790, column: 32, scope: !4989)
!4989 = !DILexicalBlockFile(scope: !4975, file: !168, discriminator: 1)
!4990 = !DILocation(line: 790, column: 54, scope: !4991)
!4991 = !DILexicalBlockFile(scope: !4975, file: !168, discriminator: 2)
!4992 = !DILocation(line: 790, column: 32, scope: !4993)
!4993 = !DILexicalBlockFile(scope: !4994, file: !168, discriminator: 4)
!4994 = !DILexicalBlockFile(scope: !4975, file: !168, discriminator: 3)
!4995 = !DILocation(line: 790, column: 58, scope: !4975)
!4996 = !DILocation(line: 790, column: 61, scope: !4975)
!4997 = !DILocation(line: 790, column: 22, scope: !4975)
!4998 = !DILocation(line: 790, column: 20, scope: !4975)
!4999 = !DILocation(line: 790, column: 15, scope: !4975)
!5000 = !DILocation(line: 791, column: 11, scope: !5001)
!5001 = distinct !DILexicalBlock(scope: !4975, file: !168, line: 791, column: 11)
!5002 = !DILocation(line: 791, column: 11, scope: !4975)
!5003 = !DILocation(line: 792, column: 10, scope: !5001)
!5004 = !DILocation(line: 792, column: 15, scope: !5001)
!5005 = !DILocation(line: 792, column: 9, scope: !5001)
!5006 = !DILocation(line: 793, column: 15, scope: !4975)
!5007 = !DILocation(line: 793, column: 20, scope: !4975)
!5008 = !DILocation(line: 793, column: 18, scope: !4975)
!5009 = !DILocation(line: 793, column: 7, scope: !4975)
!5010 = !DILocation(line: 793, column: 32, scope: !4975)
!5011 = !DILocation(line: 793, column: 37, scope: !4975)
!5012 = !DILocation(line: 793, column: 35, scope: !4975)
!5013 = !DILocation(line: 793, column: 45, scope: !4975)
!5014 = !DILocation(line: 794, column: 16, scope: !4975)
!5015 = !DILocation(line: 794, column: 14, scope: !4975)
!5016 = !DILocation(line: 795, column: 5, scope: !4975)
!5017 = !DILocalVariable(name: "size", scope: !5018, file: !168, line: 798, type: !44)
!5018 = distinct !DILexicalBlock(scope: !4944, file: !168, line: 797, column: 3)
!5019 = !DILocation(line: 798, column: 12, scope: !5018)
!5020 = !DILocation(line: 798, column: 22, scope: !5018)
!5021 = !DILocation(line: 798, column: 19, scope: !5018)
!5022 = !DILocation(line: 798, column: 25, scope: !5018)
!5023 = !DILocalVariable(name: "val", scope: !5018, file: !168, line: 799, type: !41)
!5024 = !DILocation(line: 799, column: 11, scope: !5018)
!5025 = !DILocation(line: 799, column: 20, scope: !5018)
!5026 = !DILocation(line: 799, column: 17, scope: !5018)
!5027 = !DILocation(line: 799, column: 23, scope: !5018)
!5028 = !DILocalVariable(name: "flags", scope: !5018, file: !168, line: 801, type: !48)
!5029 = !DILocation(line: 801, column: 9, scope: !5018)
!5030 = !DILocation(line: 801, column: 17, scope: !5018)
!5031 = !DILocation(line: 801, column: 26, scope: !5018)
!5032 = !DILocation(line: 801, column: 32, scope: !5018)
!5033 = !DILocalVariable(name: "qsize", scope: !5018, file: !168, line: 802, type: !44)
!5034 = !DILocation(line: 802, column: 12, scope: !5018)
!5035 = !DILocation(line: 802, column: 46, scope: !5018)
!5036 = !DILocation(line: 802, column: 51, scope: !5018)
!5037 = !DILocation(line: 802, column: 57, scope: !5018)
!5038 = !DILocation(line: 802, column: 62, scope: !5018)
!5039 = !DILocation(line: 803, column: 46, scope: !5018)
!5040 = !DILocation(line: 803, column: 55, scope: !5018)
!5041 = !DILocation(line: 803, column: 62, scope: !5018)
!5042 = !DILocation(line: 804, column: 46, scope: !5018)
!5043 = !DILocation(line: 804, column: 55, scope: !5018)
!5044 = !DILocation(line: 805, column: 46, scope: !5018)
!5045 = !DILocation(line: 805, column: 55, scope: !5018)
!5046 = !DILocation(line: 806, column: 46, scope: !5018)
!5047 = !DILocation(line: 806, column: 55, scope: !5018)
!5048 = !DILocation(line: 802, column: 20, scope: !5018)
!5049 = !DILocation(line: 808, column: 9, scope: !5050)
!5050 = distinct !DILexicalBlock(scope: !5018, file: !168, line: 808, column: 9)
!5051 = !DILocation(line: 808, column: 17, scope: !5050)
!5052 = !DILocation(line: 808, column: 14, scope: !5050)
!5053 = !DILocation(line: 808, column: 9, scope: !5018)
!5054 = !DILocation(line: 810, column: 29, scope: !5055)
!5055 = distinct !DILexicalBlock(scope: !5050, file: !168, line: 809, column: 7)
!5056 = !DILocation(line: 810, column: 35, scope: !5055)
!5057 = !DILocation(line: 810, column: 27, scope: !5055)
!5058 = !DILocation(line: 810, column: 12, scope: !5055)
!5059 = !DILocation(line: 810, column: 9, scope: !5055)
!5060 = !DILocation(line: 810, column: 15, scope: !5055)
!5061 = !DILocation(line: 810, column: 20, scope: !5055)
!5062 = !DILocation(line: 811, column: 13, scope: !5063)
!5063 = distinct !DILexicalBlock(scope: !5055, file: !168, line: 811, column: 13)
!5064 = !DILocation(line: 811, column: 17, scope: !5063)
!5065 = !DILocation(line: 811, column: 13, scope: !5055)
!5066 = !DILocation(line: 812, column: 17, scope: !5063)
!5067 = !DILocation(line: 812, column: 11, scope: !5063)
!5068 = !DILocation(line: 813, column: 39, scope: !5055)
!5069 = !DILocation(line: 813, column: 27, scope: !5055)
!5070 = !DILocation(line: 813, column: 25, scope: !5055)
!5071 = !DILocation(line: 813, column: 12, scope: !5055)
!5072 = !DILocation(line: 813, column: 9, scope: !5055)
!5073 = !DILocation(line: 813, column: 15, scope: !5055)
!5074 = !DILocation(line: 813, column: 19, scope: !5055)
!5075 = !DILocation(line: 814, column: 35, scope: !5055)
!5076 = !DILocation(line: 814, column: 40, scope: !5055)
!5077 = !DILocation(line: 814, column: 46, scope: !5055)
!5078 = !DILocation(line: 814, column: 51, scope: !5055)
!5079 = !DILocation(line: 814, column: 60, scope: !5055)
!5080 = !DILocation(line: 814, column: 69, scope: !5055)
!5081 = !DILocation(line: 815, column: 35, scope: !5055)
!5082 = !DILocation(line: 815, column: 42, scope: !5055)
!5083 = !DILocation(line: 815, column: 51, scope: !5055)
!5084 = !DILocation(line: 816, column: 35, scope: !5055)
!5085 = !DILocation(line: 816, column: 44, scope: !5055)
!5086 = !DILocation(line: 817, column: 35, scope: !5055)
!5087 = !DILocation(line: 817, column: 44, scope: !5055)
!5088 = !DILocation(line: 814, column: 9, scope: !5055)
!5089 = !DILocation(line: 818, column: 7, scope: !5055)
!5090 = !DILocation(line: 820, column: 13, scope: !5018)
!5091 = !DILocation(line: 820, column: 5, scope: !5018)
!5092 = !DILocation(line: 820, column: 11, scope: !5018)
!5093 = !DILocation(line: 821, column: 12, scope: !5018)
!5094 = !DILocation(line: 821, column: 5, scope: !5018)
!5095 = distinct !DISubprogram(name: "quoting_options_from_style", scope: !168, file: !168, line: 179, type: !5096, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !167, retainedNodes: !28)
!5096 = !DISubroutineType(types: !5097)
!5097 = !{!198, !170}
!5098 = !DILocalVariable(name: "style", arg: 1, scope: !5095, file: !168, line: 179, type: !170)
!5099 = !DILocation(line: 179, column: 48, scope: !5095)
!5100 = !DILocalVariable(name: "o", scope: !5095, file: !168, line: 181, type: !198)
!5101 = !DILocation(line: 181, column: 26, scope: !5095)
!5102 = !DILocation(line: 182, column: 7, scope: !5103)
!5103 = distinct !DILexicalBlock(scope: !5095, file: !168, line: 182, column: 7)
!5104 = !DILocation(line: 182, column: 13, scope: !5103)
!5105 = !DILocation(line: 182, column: 7, scope: !5095)
!5106 = !DILocation(line: 183, column: 5, scope: !5103)
!5107 = !DILocation(line: 184, column: 13, scope: !5095)
!5108 = !DILocation(line: 184, column: 5, scope: !5095)
!5109 = !DILocation(line: 184, column: 11, scope: !5095)
!5110 = !DILocation(line: 185, column: 10, scope: !5095)
!5111 = !DILocation(line: 185, column: 3, scope: !5095)
!5112 = distinct !DISubprogram(name: "gettext_quote", scope: !168, file: !168, line: 193, type: !5113, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !167, retainedNodes: !28)
!5113 = !DISubroutineType(types: !5114)
!5114 = !{!63, !63, !170}
!5115 = !DILocalVariable(name: "msgid", arg: 1, scope: !5112, file: !168, line: 193, type: !63)
!5116 = !DILocation(line: 193, column: 28, scope: !5112)
!5117 = !DILocalVariable(name: "s", arg: 2, scope: !5112, file: !168, line: 193, type: !170)
!5118 = !DILocation(line: 193, column: 54, scope: !5112)
!5119 = !DILocalVariable(name: "translation", scope: !5112, file: !168, line: 195, type: !63)
!5120 = !DILocation(line: 195, column: 15, scope: !5112)
!5121 = !DILocation(line: 195, column: 29, scope: !5112)
!5122 = !DILocalVariable(name: "locale_code", scope: !5112, file: !168, line: 196, type: !63)
!5123 = !DILocation(line: 196, column: 15, scope: !5112)
!5124 = !DILocation(line: 198, column: 7, scope: !5125)
!5125 = distinct !DILexicalBlock(scope: !5112, file: !168, line: 198, column: 7)
!5126 = !DILocation(line: 198, column: 22, scope: !5125)
!5127 = !DILocation(line: 198, column: 19, scope: !5125)
!5128 = !DILocation(line: 198, column: 7, scope: !5112)
!5129 = !DILocation(line: 199, column: 12, scope: !5125)
!5130 = !DILocation(line: 199, column: 5, scope: !5125)
!5131 = !DILocation(line: 219, column: 17, scope: !5112)
!5132 = !DILocation(line: 219, column: 15, scope: !5112)
!5133 = !DILocation(line: 220, column: 7, scope: !5134)
!5134 = distinct !DILexicalBlock(scope: !5112, file: !168, line: 220, column: 7)
!5135 = !DILocation(line: 220, column: 7, scope: !5112)
!5136 = !DILocation(line: 221, column: 12, scope: !5134)
!5137 = !DILocation(line: 221, column: 21, scope: !5134)
!5138 = !DILocation(line: 221, column: 5, scope: !5134)
!5139 = !DILocation(line: 222, column: 7, scope: !5140)
!5140 = distinct !DILexicalBlock(scope: !5112, file: !168, line: 222, column: 7)
!5141 = !DILocation(line: 222, column: 7, scope: !5112)
!5142 = !DILocation(line: 223, column: 12, scope: !5140)
!5143 = !DILocation(line: 223, column: 21, scope: !5140)
!5144 = !DILocation(line: 223, column: 5, scope: !5140)
!5145 = !DILocation(line: 225, column: 11, scope: !5112)
!5146 = !DILocation(line: 225, column: 13, scope: !5112)
!5147 = !DILocation(line: 225, column: 3, scope: !5112)
!5148 = !DILocation(line: 226, column: 1, scope: !5112)
!5149 = distinct !DISubprogram(name: "dup_safer", scope: !606, file: !606, line: 31, type: !5150, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !605, retainedNodes: !28)
!5150 = !DISubroutineType(types: !5151)
!5151 = !{!48, !48}
!5152 = !DILocalVariable(name: "fd", arg: 1, scope: !5149, file: !606, line: 31, type: !48)
!5153 = !DILocation(line: 31, column: 16, scope: !5149)
!5154 = !DILocation(line: 33, column: 17, scope: !5149)
!5155 = !DILocation(line: 33, column: 10, scope: !5149)
!5156 = !DILocation(line: 33, column: 3, scope: !5149)
!5157 = distinct !DISubprogram(name: "version_etc_arn", scope: !608, file: !608, line: 62, type: !5158, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !607, retainedNodes: !28)
!5158 = !DISubroutineType(types: !5159)
!5159 = !{null, !5160, !63, !63, !63, !5200, !44}
!5160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5161, size: 64, align: 64)
!5161 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1055, line: 48, baseType: !5162)
!5162 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !1057, line: 245, size: 1728, align: 64, elements: !5163)
!5163 = !{!5164, !5165, !5166, !5167, !5168, !5169, !5170, !5171, !5172, !5173, !5174, !5175, !5176, !5184, !5185, !5186, !5187, !5188, !5189, !5190, !5191, !5192, !5193, !5194, !5195, !5196, !5197, !5198, !5199}
!5164 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !5162, file: !1057, line: 246, baseType: !48, size: 32, align: 32)
!5165 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !5162, file: !1057, line: 251, baseType: !41, size: 64, align: 64, offset: 64)
!5166 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !5162, file: !1057, line: 252, baseType: !41, size: 64, align: 64, offset: 128)
!5167 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !5162, file: !1057, line: 253, baseType: !41, size: 64, align: 64, offset: 192)
!5168 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !5162, file: !1057, line: 254, baseType: !41, size: 64, align: 64, offset: 256)
!5169 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !5162, file: !1057, line: 255, baseType: !41, size: 64, align: 64, offset: 320)
!5170 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !5162, file: !1057, line: 256, baseType: !41, size: 64, align: 64, offset: 384)
!5171 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !5162, file: !1057, line: 257, baseType: !41, size: 64, align: 64, offset: 448)
!5172 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !5162, file: !1057, line: 258, baseType: !41, size: 64, align: 64, offset: 512)
!5173 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !5162, file: !1057, line: 260, baseType: !41, size: 64, align: 64, offset: 576)
!5174 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !5162, file: !1057, line: 261, baseType: !41, size: 64, align: 64, offset: 640)
!5175 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !5162, file: !1057, line: 262, baseType: !41, size: 64, align: 64, offset: 704)
!5176 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !5162, file: !1057, line: 264, baseType: !5177, size: 64, align: 64, offset: 768)
!5177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5178, size: 64, align: 64)
!5178 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !1057, line: 160, size: 192, align: 64, elements: !5179)
!5179 = !{!5180, !5181, !5183}
!5180 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !5178, file: !1057, line: 161, baseType: !5177, size: 64, align: 64)
!5181 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !5178, file: !1057, line: 162, baseType: !5182, size: 64, align: 64, offset: 64)
!5182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5162, size: 64, align: 64)
!5183 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !5178, file: !1057, line: 166, baseType: !48, size: 32, align: 32, offset: 128)
!5184 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !5162, file: !1057, line: 266, baseType: !5182, size: 64, align: 64, offset: 832)
!5185 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !5162, file: !1057, line: 268, baseType: !48, size: 32, align: 32, offset: 896)
!5186 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !5162, file: !1057, line: 272, baseType: !48, size: 32, align: 32, offset: 928)
!5187 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !5162, file: !1057, line: 274, baseType: !1083, size: 64, align: 64, offset: 960)
!5188 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !5162, file: !1057, line: 278, baseType: !49, size: 16, align: 16, offset: 1024)
!5189 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !5162, file: !1057, line: 279, baseType: !1088, size: 8, align: 8, offset: 1040)
!5190 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !5162, file: !1057, line: 280, baseType: !1090, size: 8, align: 8, offset: 1048)
!5191 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !5162, file: !1057, line: 284, baseType: !1094, size: 64, align: 64, offset: 1088)
!5192 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !5162, file: !1057, line: 293, baseType: !1097, size: 64, align: 64, offset: 1152)
!5193 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !5162, file: !1057, line: 302, baseType: !43, size: 64, align: 64, offset: 1216)
!5194 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !5162, file: !1057, line: 303, baseType: !43, size: 64, align: 64, offset: 1280)
!5195 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !5162, file: !1057, line: 304, baseType: !43, size: 64, align: 64, offset: 1344)
!5196 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !5162, file: !1057, line: 305, baseType: !43, size: 64, align: 64, offset: 1408)
!5197 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !5162, file: !1057, line: 306, baseType: !44, size: 64, align: 64, offset: 1472)
!5198 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !5162, file: !1057, line: 308, baseType: !48, size: 32, align: 32, offset: 1536)
!5199 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !5162, file: !1057, line: 310, baseType: !1105, size: 160, align: 8, offset: 1568)
!5200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !226, size: 64, align: 64)
!5201 = !DILocalVariable(name: "stream", arg: 1, scope: !5157, file: !608, line: 62, type: !5160)
!5202 = !DILocation(line: 62, column: 24, scope: !5157)
!5203 = !DILocalVariable(name: "command_name", arg: 2, scope: !5157, file: !608, line: 63, type: !63)
!5204 = !DILocation(line: 63, column: 30, scope: !5157)
!5205 = !DILocalVariable(name: "package", arg: 3, scope: !5157, file: !608, line: 63, type: !63)
!5206 = !DILocation(line: 63, column: 56, scope: !5157)
!5207 = !DILocalVariable(name: "version", arg: 4, scope: !5157, file: !608, line: 64, type: !63)
!5208 = !DILocation(line: 64, column: 30, scope: !5157)
!5209 = !DILocalVariable(name: "authors", arg: 5, scope: !5157, file: !608, line: 65, type: !5200)
!5210 = !DILocation(line: 65, column: 39, scope: !5157)
!5211 = !DILocalVariable(name: "n_authors", arg: 6, scope: !5157, file: !608, line: 65, type: !44)
!5212 = !DILocation(line: 65, column: 55, scope: !5157)
!5213 = !DILocation(line: 67, column: 7, scope: !5214)
!5214 = distinct !DILexicalBlock(scope: !5157, file: !608, line: 67, column: 7)
!5215 = !DILocation(line: 67, column: 7, scope: !5157)
!5216 = !DILocation(line: 68, column: 14, scope: !5214)
!5217 = !DILocation(line: 68, column: 38, scope: !5214)
!5218 = !DILocation(line: 68, column: 52, scope: !5214)
!5219 = !DILocation(line: 68, column: 61, scope: !5214)
!5220 = !DILocation(line: 68, column: 5, scope: !5214)
!5221 = !DILocation(line: 70, column: 14, scope: !5214)
!5222 = !DILocation(line: 70, column: 33, scope: !5214)
!5223 = !DILocation(line: 70, column: 42, scope: !5214)
!5224 = !DILocation(line: 70, column: 5, scope: !5214)
!5225 = !DILocation(line: 84, column: 12, scope: !5157)
!5226 = !DILocation(line: 84, column: 43, scope: !5157)
!5227 = !DILocation(line: 84, column: 3, scope: !5157)
!5228 = !DILocation(line: 86, column: 3, scope: !5157)
!5229 = !DILocation(line: 95, column: 11, scope: !5157)
!5230 = !DILocation(line: 95, column: 3, scope: !5157)
!5231 = !DILocation(line: 99, column: 7, scope: !5232)
!5232 = distinct !DILexicalBlock(scope: !5157, file: !608, line: 96, column: 5)
!5233 = !DILocation(line: 102, column: 16, scope: !5232)
!5234 = !DILocation(line: 102, column: 24, scope: !5232)
!5235 = !DILocation(line: 102, column: 47, scope: !5232)
!5236 = !DILocation(line: 102, column: 7, scope: !5232)
!5237 = !DILocation(line: 103, column: 7, scope: !5232)
!5238 = !DILocation(line: 106, column: 16, scope: !5232)
!5239 = !DILocation(line: 106, column: 24, scope: !5232)
!5240 = !DILocation(line: 106, column: 54, scope: !5232)
!5241 = !DILocation(line: 106, column: 66, scope: !5232)
!5242 = !DILocation(line: 106, column: 7, scope: !5232)
!5243 = !DILocation(line: 107, column: 7, scope: !5232)
!5244 = !DILocation(line: 110, column: 16, scope: !5232)
!5245 = !DILocation(line: 110, column: 24, scope: !5232)
!5246 = !DILocation(line: 111, column: 16, scope: !5232)
!5247 = !DILocation(line: 111, column: 28, scope: !5232)
!5248 = !DILocation(line: 111, column: 40, scope: !5232)
!5249 = !DILocation(line: 110, column: 7, scope: !5232)
!5250 = !DILocation(line: 112, column: 7, scope: !5232)
!5251 = !DILocation(line: 117, column: 16, scope: !5232)
!5252 = !DILocation(line: 117, column: 24, scope: !5232)
!5253 = !DILocation(line: 118, column: 16, scope: !5232)
!5254 = !DILocation(line: 118, column: 28, scope: !5232)
!5255 = !DILocation(line: 118, column: 40, scope: !5232)
!5256 = !DILocation(line: 118, column: 52, scope: !5232)
!5257 = !DILocation(line: 117, column: 7, scope: !5232)
!5258 = !DILocation(line: 119, column: 7, scope: !5232)
!5259 = !DILocation(line: 124, column: 16, scope: !5232)
!5260 = !DILocation(line: 124, column: 24, scope: !5232)
!5261 = !DILocation(line: 125, column: 16, scope: !5232)
!5262 = !DILocation(line: 125, column: 28, scope: !5232)
!5263 = !DILocation(line: 125, column: 40, scope: !5232)
!5264 = !DILocation(line: 125, column: 52, scope: !5232)
!5265 = !DILocation(line: 125, column: 64, scope: !5232)
!5266 = !DILocation(line: 124, column: 7, scope: !5232)
!5267 = !DILocation(line: 126, column: 7, scope: !5232)
!5268 = !DILocation(line: 131, column: 16, scope: !5232)
!5269 = !DILocation(line: 131, column: 24, scope: !5232)
!5270 = !DILocation(line: 132, column: 16, scope: !5232)
!5271 = !DILocation(line: 132, column: 28, scope: !5232)
!5272 = !DILocation(line: 132, column: 40, scope: !5232)
!5273 = !DILocation(line: 132, column: 52, scope: !5232)
!5274 = !DILocation(line: 132, column: 64, scope: !5232)
!5275 = !DILocation(line: 133, column: 16, scope: !5232)
!5276 = !DILocation(line: 131, column: 7, scope: !5232)
!5277 = !DILocation(line: 134, column: 7, scope: !5232)
!5278 = !DILocation(line: 139, column: 16, scope: !5232)
!5279 = !DILocation(line: 139, column: 24, scope: !5232)
!5280 = !DILocation(line: 140, column: 16, scope: !5232)
!5281 = !DILocation(line: 140, column: 28, scope: !5232)
!5282 = !DILocation(line: 140, column: 40, scope: !5232)
!5283 = !DILocation(line: 140, column: 52, scope: !5232)
!5284 = !DILocation(line: 140, column: 64, scope: !5232)
!5285 = !DILocation(line: 141, column: 16, scope: !5232)
!5286 = !DILocation(line: 141, column: 28, scope: !5232)
!5287 = !DILocation(line: 139, column: 7, scope: !5232)
!5288 = !DILocation(line: 142, column: 7, scope: !5232)
!5289 = !DILocation(line: 147, column: 16, scope: !5232)
!5290 = !DILocation(line: 147, column: 24, scope: !5232)
!5291 = !DILocation(line: 149, column: 17, scope: !5232)
!5292 = !DILocation(line: 149, column: 29, scope: !5232)
!5293 = !DILocation(line: 149, column: 41, scope: !5232)
!5294 = !DILocation(line: 149, column: 53, scope: !5232)
!5295 = !DILocation(line: 149, column: 65, scope: !5232)
!5296 = !DILocation(line: 150, column: 17, scope: !5232)
!5297 = !DILocation(line: 150, column: 29, scope: !5232)
!5298 = !DILocation(line: 150, column: 41, scope: !5232)
!5299 = !DILocation(line: 147, column: 7, scope: !5232)
!5300 = !DILocation(line: 151, column: 7, scope: !5232)
!5301 = !DILocation(line: 156, column: 16, scope: !5232)
!5302 = !DILocation(line: 156, column: 24, scope: !5232)
!5303 = !DILocation(line: 158, column: 16, scope: !5232)
!5304 = !DILocation(line: 158, column: 28, scope: !5232)
!5305 = !DILocation(line: 158, column: 40, scope: !5232)
!5306 = !DILocation(line: 158, column: 52, scope: !5232)
!5307 = !DILocation(line: 158, column: 64, scope: !5232)
!5308 = !DILocation(line: 159, column: 16, scope: !5232)
!5309 = !DILocation(line: 159, column: 28, scope: !5232)
!5310 = !DILocation(line: 159, column: 40, scope: !5232)
!5311 = !DILocation(line: 159, column: 52, scope: !5232)
!5312 = !DILocation(line: 156, column: 7, scope: !5232)
!5313 = !DILocation(line: 160, column: 7, scope: !5232)
!5314 = !DILocation(line: 167, column: 16, scope: !5232)
!5315 = !DILocation(line: 167, column: 24, scope: !5232)
!5316 = !DILocation(line: 169, column: 17, scope: !5232)
!5317 = !DILocation(line: 169, column: 29, scope: !5232)
!5318 = !DILocation(line: 169, column: 41, scope: !5232)
!5319 = !DILocation(line: 169, column: 53, scope: !5232)
!5320 = !DILocation(line: 169, column: 65, scope: !5232)
!5321 = !DILocation(line: 170, column: 17, scope: !5232)
!5322 = !DILocation(line: 170, column: 29, scope: !5232)
!5323 = !DILocation(line: 170, column: 41, scope: !5232)
!5324 = !DILocation(line: 170, column: 53, scope: !5232)
!5325 = !DILocation(line: 167, column: 7, scope: !5232)
!5326 = !DILocation(line: 171, column: 7, scope: !5232)
!5327 = !DILocation(line: 173, column: 1, scope: !5157)
!5328 = distinct !DISubprogram(name: "version_etc_ar", scope: !608, file: !608, line: 180, type: !5329, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !607, retainedNodes: !28)
!5329 = !DISubroutineType(types: !5330)
!5330 = !{null, !5160, !63, !63, !63, !5200}
!5331 = !DILocalVariable(name: "stream", arg: 1, scope: !5328, file: !608, line: 180, type: !5160)
!5332 = !DILocation(line: 180, column: 23, scope: !5328)
!5333 = !DILocalVariable(name: "command_name", arg: 2, scope: !5328, file: !608, line: 181, type: !63)
!5334 = !DILocation(line: 181, column: 29, scope: !5328)
!5335 = !DILocalVariable(name: "package", arg: 3, scope: !5328, file: !608, line: 181, type: !63)
!5336 = !DILocation(line: 181, column: 55, scope: !5328)
!5337 = !DILocalVariable(name: "version", arg: 4, scope: !5328, file: !608, line: 182, type: !63)
!5338 = !DILocation(line: 182, column: 29, scope: !5328)
!5339 = !DILocalVariable(name: "authors", arg: 5, scope: !5328, file: !608, line: 182, type: !5200)
!5340 = !DILocation(line: 182, column: 59, scope: !5328)
!5341 = !DILocalVariable(name: "n_authors", scope: !5328, file: !608, line: 184, type: !44)
!5342 = !DILocation(line: 184, column: 10, scope: !5328)
!5343 = !DILocation(line: 186, column: 18, scope: !5344)
!5344 = distinct !DILexicalBlock(scope: !5328, file: !608, line: 186, column: 3)
!5345 = !DILocation(line: 186, column: 8, scope: !5344)
!5346 = !DILocation(line: 186, column: 31, scope: !5347)
!5347 = !DILexicalBlockFile(scope: !5348, file: !608, discriminator: 4)
!5348 = !DILexicalBlockFile(scope: !5349, file: !608, discriminator: 1)
!5349 = distinct !DILexicalBlock(scope: !5344, file: !608, line: 186, column: 3)
!5350 = !DILocation(line: 186, column: 23, scope: !5349)
!5351 = !DILocation(line: 186, column: 3, scope: !5344)
!5352 = !DILocation(line: 186, column: 3, scope: !5353)
!5353 = !DILexicalBlockFile(scope: !5344, file: !608, discriminator: 2)
!5354 = !DILocation(line: 186, column: 52, scope: !5355)
!5355 = !DILexicalBlockFile(scope: !5349, file: !608, discriminator: 3)
!5356 = !DILocation(line: 186, column: 3, scope: !5349)
!5357 = !DILocation(line: 188, column: 20, scope: !5328)
!5358 = !DILocation(line: 188, column: 28, scope: !5328)
!5359 = !DILocation(line: 188, column: 42, scope: !5328)
!5360 = !DILocation(line: 188, column: 51, scope: !5328)
!5361 = !DILocation(line: 188, column: 60, scope: !5328)
!5362 = !DILocation(line: 188, column: 69, scope: !5328)
!5363 = !DILocation(line: 188, column: 3, scope: !5328)
!5364 = !DILocation(line: 189, column: 1, scope: !5328)
!5365 = distinct !DISubprogram(name: "version_etc_va", scope: !608, file: !608, line: 196, type: !5366, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !607, retainedNodes: !28)
!5366 = !DISubroutineType(types: !5367)
!5367 = !{null, !5160, !63, !63, !63, !5368}
!5368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5369, size: 64, align: 64)
!5369 = !DIDerivedType(tag: DW_TAG_typedef, name: "__va_list_tag", file: !608, line: 189, baseType: !5370)
!5370 = !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !608, line: 189, size: 192, align: 64, elements: !5371)
!5371 = !{!5372, !5373, !5374, !5375}
!5372 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !5370, file: !608, line: 189, baseType: !204, size: 32, align: 32)
!5373 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !5370, file: !608, line: 189, baseType: !204, size: 32, align: 32, offset: 32)
!5374 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !5370, file: !608, line: 189, baseType: !43, size: 64, align: 64, offset: 64)
!5375 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !5370, file: !608, line: 189, baseType: !43, size: 64, align: 64, offset: 128)
!5376 = !DILocalVariable(name: "stream", arg: 1, scope: !5365, file: !608, line: 196, type: !5160)
!5377 = !DILocation(line: 196, column: 23, scope: !5365)
!5378 = !DILocalVariable(name: "command_name", arg: 2, scope: !5365, file: !608, line: 197, type: !63)
!5379 = !DILocation(line: 197, column: 29, scope: !5365)
!5380 = !DILocalVariable(name: "package", arg: 3, scope: !5365, file: !608, line: 197, type: !63)
!5381 = !DILocation(line: 197, column: 55, scope: !5365)
!5382 = !DILocalVariable(name: "version", arg: 4, scope: !5365, file: !608, line: 198, type: !63)
!5383 = !DILocation(line: 198, column: 29, scope: !5365)
!5384 = !DILocalVariable(name: "authors", arg: 5, scope: !5365, file: !608, line: 198, type: !5368)
!5385 = !DILocation(line: 198, column: 46, scope: !5365)
!5386 = !DILocalVariable(name: "n_authors", scope: !5365, file: !608, line: 200, type: !44)
!5387 = !DILocation(line: 200, column: 10, scope: !5365)
!5388 = !DILocalVariable(name: "authtab", scope: !5365, file: !608, line: 201, type: !5389)
!5389 = !DICompositeType(tag: DW_TAG_array_type, baseType: !63, size: 640, align: 64, elements: !5390)
!5390 = !{!5391}
!5391 = !DISubrange(count: 10)
!5392 = !DILocation(line: 201, column: 15, scope: !5365)
!5393 = !DILocation(line: 203, column: 18, scope: !5394)
!5394 = distinct !DILexicalBlock(scope: !5365, file: !608, line: 203, column: 3)
!5395 = !DILocation(line: 203, column: 8, scope: !5394)
!5396 = !DILocation(line: 204, column: 8, scope: !5397)
!5397 = distinct !DILexicalBlock(scope: !5394, file: !608, line: 203, column: 3)
!5398 = !DILocation(line: 204, column: 18, scope: !5397)
!5399 = !DILocation(line: 205, column: 10, scope: !5397)
!5400 = !DILocation(line: 205, column: 35, scope: !5401)
!5401 = !DILexicalBlockFile(scope: !5397, file: !608, discriminator: 1)
!5402 = !DILocation(line: 205, column: 35, scope: !5403)
!5403 = !DILexicalBlockFile(scope: !5397, file: !608, discriminator: 2)
!5404 = !DILocation(line: 205, column: 35, scope: !5405)
!5405 = !DILexicalBlockFile(scope: !5397, file: !608, discriminator: 3)
!5406 = !DILocation(line: 205, column: 35, scope: !5397)
!5407 = !DILocation(line: 205, column: 35, scope: !5408)
!5408 = !DILexicalBlockFile(scope: !5409, file: !608, discriminator: 5)
!5409 = !DILexicalBlockFile(scope: !5397, file: !608, discriminator: 4)
!5410 = !DILocation(line: 205, column: 22, scope: !5397)
!5411 = !DILocation(line: 205, column: 14, scope: !5397)
!5412 = !DILocation(line: 205, column: 33, scope: !5397)
!5413 = !DILocation(line: 205, column: 67, scope: !5397)
!5414 = !DILocation(line: 203, column: 3, scope: !5394)
!5415 = !DILocation(line: 203, column: 3, scope: !5416)
!5416 = !DILexicalBlockFile(scope: !5394, file: !608, discriminator: 1)
!5417 = !DILocation(line: 206, column: 17, scope: !5397)
!5418 = !DILocation(line: 203, column: 3, scope: !5397)
!5419 = !DILocation(line: 208, column: 20, scope: !5365)
!5420 = !DILocation(line: 208, column: 28, scope: !5365)
!5421 = !DILocation(line: 208, column: 42, scope: !5365)
!5422 = !DILocation(line: 208, column: 51, scope: !5365)
!5423 = !DILocation(line: 209, column: 20, scope: !5365)
!5424 = !DILocation(line: 209, column: 29, scope: !5365)
!5425 = !DILocation(line: 208, column: 3, scope: !5365)
!5426 = !DILocation(line: 210, column: 1, scope: !5365)
!5427 = distinct !DISubprogram(name: "version_etc", scope: !608, file: !608, line: 227, type: !5428, scopeLine: 230, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !607, retainedNodes: !28)
!5428 = !DISubroutineType(types: !5429)
!5429 = !{null, !5160, !63, !63, !63, null}
!5430 = !DILocalVariable(name: "stream", arg: 1, scope: !5427, file: !608, line: 227, type: !5160)
!5431 = !DILocation(line: 227, column: 20, scope: !5427)
!5432 = !DILocalVariable(name: "command_name", arg: 2, scope: !5427, file: !608, line: 228, type: !63)
!5433 = !DILocation(line: 228, column: 26, scope: !5427)
!5434 = !DILocalVariable(name: "package", arg: 3, scope: !5427, file: !608, line: 228, type: !63)
!5435 = !DILocation(line: 228, column: 52, scope: !5427)
!5436 = !DILocalVariable(name: "version", arg: 4, scope: !5427, file: !608, line: 229, type: !63)
!5437 = !DILocation(line: 229, column: 26, scope: !5427)
!5438 = !DILocalVariable(name: "authors", scope: !5427, file: !608, line: 231, type: !5439)
!5439 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !1055, line: 79, baseType: !5440)
!5440 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !5441, line: 50, baseType: !5442)
!5441 = !DIFile(filename: "/usr/data/lobo/llvm/llvm-3.7.0/build/bin/../lib/clang/3.7.0/include/stdarg.h", directory: "/home/gbalats/Downloads/coreutils-8.24/obj-clang")
!5442 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !608, line: 231, baseType: !5443)
!5443 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5369, size: 192, align: 64, elements: !1091)
!5444 = !DILocation(line: 231, column: 11, scope: !5427)
!5445 = !DILocation(line: 233, column: 3, scope: !5427)
!5446 = !DILocation(line: 234, column: 19, scope: !5427)
!5447 = !DILocation(line: 234, column: 27, scope: !5427)
!5448 = !DILocation(line: 234, column: 41, scope: !5427)
!5449 = !DILocation(line: 234, column: 50, scope: !5427)
!5450 = !DILocation(line: 234, column: 59, scope: !5427)
!5451 = !DILocation(line: 234, column: 3, scope: !5427)
!5452 = !DILocation(line: 235, column: 3, scope: !5427)
!5453 = !DILocation(line: 236, column: 1, scope: !5427)
!5454 = distinct !DISubprogram(name: "emit_bug_reporting_address", scope: !608, file: !608, line: 239, type: !953, scopeLine: 240, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !607, retainedNodes: !28)
!5455 = !DILocation(line: 245, column: 11, scope: !5454)
!5456 = !DILocation(line: 245, column: 3, scope: !5454)
!5457 = !DILocation(line: 251, column: 11, scope: !5454)
!5458 = !DILocation(line: 251, column: 3, scope: !5454)
!5459 = !DILocation(line: 256, column: 3, scope: !5454)
!5460 = !DILocation(line: 258, column: 1, scope: !5454)
!5461 = distinct !DISubprogram(name: "xnmalloc", scope: !618, file: !618, line: 104, type: !5462, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !614, retainedNodes: !28)
!5462 = !DISubroutineType(types: !5463)
!5463 = !{!43, !44, !44}
!5464 = !DILocalVariable(name: "n", arg: 1, scope: !5461, file: !618, line: 104, type: !44)
!5465 = !DILocation(line: 104, column: 18, scope: !5461)
!5466 = !DILocalVariable(name: "s", arg: 2, scope: !5461, file: !618, line: 104, type: !44)
!5467 = !DILocation(line: 104, column: 28, scope: !5461)
!5468 = !DILocation(line: 106, column: 7, scope: !5469)
!5469 = distinct !DILexicalBlock(scope: !5461, file: !618, line: 106, column: 7)
!5470 = !DILocation(line: 106, column: 7, scope: !5461)
!5471 = !DILocation(line: 107, column: 5, scope: !5469)
!5472 = !DILocation(line: 108, column: 19, scope: !5461)
!5473 = !DILocation(line: 108, column: 23, scope: !5461)
!5474 = !DILocation(line: 108, column: 21, scope: !5461)
!5475 = !DILocation(line: 108, column: 10, scope: !5461)
!5476 = !DILocation(line: 108, column: 3, scope: !5461)
!5477 = distinct !DISubprogram(name: "xmalloc", scope: !615, file: !615, line: 39, type: !5478, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !614, retainedNodes: !28)
!5478 = !DISubroutineType(types: !638)
!5479 = !DILocalVariable(name: "n", arg: 1, scope: !5477, file: !615, line: 39, type: !44)
!5480 = !DILocation(line: 39, column: 17, scope: !5477)
!5481 = !DILocalVariable(name: "p", scope: !5477, file: !615, line: 41, type: !43)
!5482 = !DILocation(line: 41, column: 9, scope: !5477)
!5483 = !DILocation(line: 41, column: 21, scope: !5477)
!5484 = !DILocation(line: 41, column: 13, scope: !5477)
!5485 = !DILocation(line: 42, column: 8, scope: !5486)
!5486 = distinct !DILexicalBlock(scope: !5477, file: !615, line: 42, column: 7)
!5487 = !DILocation(line: 42, column: 10, scope: !5486)
!5488 = !DILocation(line: 42, column: 13, scope: !5489)
!5489 = !DILexicalBlockFile(scope: !5486, file: !615, discriminator: 1)
!5490 = !DILocation(line: 42, column: 15, scope: !5486)
!5491 = !DILocation(line: 42, column: 7, scope: !5477)
!5492 = !DILocation(line: 43, column: 5, scope: !5486)
!5493 = !DILocation(line: 44, column: 10, scope: !5477)
!5494 = !DILocation(line: 44, column: 3, scope: !5477)
!5495 = distinct !DISubprogram(name: "xnrealloc", scope: !618, file: !618, line: 117, type: !5496, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !614, retainedNodes: !28)
!5496 = !DISubroutineType(types: !5497)
!5497 = !{!43, !43, !44, !44}
!5498 = !DILocalVariable(name: "p", arg: 1, scope: !5495, file: !618, line: 117, type: !43)
!5499 = !DILocation(line: 117, column: 18, scope: !5495)
!5500 = !DILocalVariable(name: "n", arg: 2, scope: !5495, file: !618, line: 117, type: !44)
!5501 = !DILocation(line: 117, column: 28, scope: !5495)
!5502 = !DILocalVariable(name: "s", arg: 3, scope: !5495, file: !618, line: 117, type: !44)
!5503 = !DILocation(line: 117, column: 38, scope: !5495)
!5504 = !DILocation(line: 119, column: 7, scope: !5505)
!5505 = distinct !DILexicalBlock(scope: !5495, file: !618, line: 119, column: 7)
!5506 = !DILocation(line: 119, column: 7, scope: !5495)
!5507 = !DILocation(line: 120, column: 5, scope: !5505)
!5508 = !DILocation(line: 121, column: 20, scope: !5495)
!5509 = !DILocation(line: 121, column: 23, scope: !5495)
!5510 = !DILocation(line: 121, column: 27, scope: !5495)
!5511 = !DILocation(line: 121, column: 25, scope: !5495)
!5512 = !DILocation(line: 121, column: 10, scope: !5495)
!5513 = !DILocation(line: 121, column: 3, scope: !5495)
!5514 = distinct !DISubprogram(name: "xrealloc", scope: !615, file: !615, line: 51, type: !5515, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !614, retainedNodes: !28)
!5515 = !DISubroutineType(types: !5516)
!5516 = !{!43, !43, !44}
!5517 = !DILocalVariable(name: "p", arg: 1, scope: !5514, file: !615, line: 51, type: !43)
!5518 = !DILocation(line: 51, column: 17, scope: !5514)
!5519 = !DILocalVariable(name: "n", arg: 2, scope: !5514, file: !615, line: 51, type: !44)
!5520 = !DILocation(line: 51, column: 27, scope: !5514)
!5521 = !DILocation(line: 53, column: 8, scope: !5522)
!5522 = distinct !DILexicalBlock(scope: !5514, file: !615, line: 53, column: 7)
!5523 = !DILocation(line: 53, column: 10, scope: !5522)
!5524 = !DILocation(line: 53, column: 13, scope: !5525)
!5525 = !DILexicalBlockFile(scope: !5522, file: !615, discriminator: 1)
!5526 = !DILocation(line: 53, column: 7, scope: !5514)
!5527 = !DILocation(line: 57, column: 13, scope: !5528)
!5528 = distinct !DILexicalBlock(scope: !5522, file: !615, line: 54, column: 5)
!5529 = !DILocation(line: 57, column: 7, scope: !5528)
!5530 = !DILocation(line: 58, column: 7, scope: !5528)
!5531 = !DILocation(line: 61, column: 16, scope: !5514)
!5532 = !DILocation(line: 61, column: 19, scope: !5514)
!5533 = !DILocation(line: 61, column: 7, scope: !5514)
!5534 = !DILocation(line: 61, column: 5, scope: !5514)
!5535 = !DILocation(line: 62, column: 8, scope: !5536)
!5536 = distinct !DILexicalBlock(scope: !5514, file: !615, line: 62, column: 7)
!5537 = !DILocation(line: 62, column: 10, scope: !5536)
!5538 = !DILocation(line: 62, column: 13, scope: !5539)
!5539 = !DILexicalBlockFile(scope: !5536, file: !615, discriminator: 1)
!5540 = !DILocation(line: 62, column: 7, scope: !5514)
!5541 = !DILocation(line: 63, column: 5, scope: !5536)
!5542 = !DILocation(line: 64, column: 10, scope: !5514)
!5543 = !DILocation(line: 64, column: 3, scope: !5514)
!5544 = !DILocation(line: 65, column: 1, scope: !5514)
!5545 = !DILocalVariable(name: "p", arg: 1, scope: !619, file: !618, line: 179, type: !43)
!5546 = !DILocation(line: 179, column: 19, scope: !619)
!5547 = !DILocalVariable(name: "pn", arg: 2, scope: !619, file: !618, line: 179, type: !622)
!5548 = !DILocation(line: 179, column: 30, scope: !619)
!5549 = !DILocalVariable(name: "s", arg: 3, scope: !619, file: !618, line: 179, type: !44)
!5550 = !DILocation(line: 179, column: 41, scope: !619)
!5551 = !DILocalVariable(name: "n", scope: !619, file: !618, line: 181, type: !44)
!5552 = !DILocation(line: 181, column: 10, scope: !619)
!5553 = !DILocation(line: 181, column: 15, scope: !619)
!5554 = !DILocation(line: 181, column: 14, scope: !619)
!5555 = !DILocation(line: 183, column: 9, scope: !5556)
!5556 = distinct !DILexicalBlock(scope: !619, file: !618, line: 183, column: 7)
!5557 = !DILocation(line: 183, column: 7, scope: !619)
!5558 = !DILocation(line: 185, column: 13, scope: !5559)
!5559 = distinct !DILexicalBlock(scope: !5560, file: !618, line: 185, column: 11)
!5560 = distinct !DILexicalBlock(scope: !5556, file: !618, line: 184, column: 5)
!5561 = !DILocation(line: 185, column: 11, scope: !5560)
!5562 = !DILocation(line: 193, column: 32, scope: !5563)
!5563 = distinct !DILexicalBlock(scope: !5559, file: !618, line: 186, column: 9)
!5564 = !DILocation(line: 193, column: 30, scope: !5563)
!5565 = !DILocation(line: 193, column: 13, scope: !5563)
!5566 = !DILocation(line: 194, column: 17, scope: !5563)
!5567 = !DILocation(line: 194, column: 16, scope: !5563)
!5568 = !DILocation(line: 194, column: 13, scope: !5563)
!5569 = !DILocation(line: 195, column: 9, scope: !5563)
!5570 = !DILocation(line: 196, column: 5, scope: !5560)
!5571 = !DILocation(line: 203, column: 33, scope: !5572)
!5572 = distinct !DILexicalBlock(scope: !5573, file: !618, line: 203, column: 11)
!5573 = distinct !DILexicalBlock(scope: !5556, file: !618, line: 198, column: 5)
!5574 = !DILocation(line: 203, column: 31, scope: !5572)
!5575 = !DILocation(line: 203, column: 38, scope: !5572)
!5576 = !DILocation(line: 203, column: 35, scope: !5572)
!5577 = !DILocation(line: 203, column: 11, scope: !5573)
!5578 = !DILocation(line: 204, column: 9, scope: !5572)
!5579 = !DILocation(line: 205, column: 12, scope: !5573)
!5580 = !DILocation(line: 205, column: 14, scope: !5573)
!5581 = !DILocation(line: 205, column: 18, scope: !5573)
!5582 = !DILocation(line: 205, column: 9, scope: !5573)
!5583 = !DILocation(line: 208, column: 9, scope: !619)
!5584 = !DILocation(line: 208, column: 4, scope: !619)
!5585 = !DILocation(line: 208, column: 7, scope: !619)
!5586 = !DILocation(line: 209, column: 20, scope: !619)
!5587 = !DILocation(line: 209, column: 23, scope: !619)
!5588 = !DILocation(line: 209, column: 27, scope: !619)
!5589 = !DILocation(line: 209, column: 25, scope: !619)
!5590 = !DILocation(line: 209, column: 10, scope: !619)
!5591 = !DILocation(line: 209, column: 3, scope: !619)
!5592 = distinct !DISubprogram(name: "xcharalloc", scope: !618, file: !618, line: 218, type: !5593, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !614, retainedNodes: !28)
!5593 = !DISubroutineType(types: !5594)
!5594 = !{!41, !44}
!5595 = !DILocalVariable(name: "n", arg: 1, scope: !5592, file: !618, line: 218, type: !44)
!5596 = !DILocation(line: 218, column: 20, scope: !5592)
!5597 = !DILocation(line: 220, column: 10, scope: !5592)
!5598 = !DILocation(line: 220, column: 3, scope: !5592)
!5599 = distinct !DISubprogram(name: "x2realloc", scope: !615, file: !615, line: 74, type: !5600, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !614, retainedNodes: !28)
!5600 = !DISubroutineType(types: !5601)
!5601 = !{!43, !43, !622}
!5602 = !DILocalVariable(name: "p", arg: 1, scope: !5599, file: !615, line: 74, type: !43)
!5603 = !DILocation(line: 74, column: 18, scope: !5599)
!5604 = !DILocalVariable(name: "pn", arg: 2, scope: !5599, file: !615, line: 74, type: !622)
!5605 = !DILocation(line: 74, column: 29, scope: !5599)
!5606 = !DILocation(line: 76, column: 22, scope: !5599)
!5607 = !DILocation(line: 76, column: 25, scope: !5599)
!5608 = !DILocation(line: 76, column: 10, scope: !5599)
!5609 = !DILocation(line: 76, column: 3, scope: !5599)
!5610 = distinct !DISubprogram(name: "xzalloc", scope: !615, file: !615, line: 84, type: !5478, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !614, retainedNodes: !28)
!5611 = !DILocalVariable(name: "s", arg: 1, scope: !5610, file: !615, line: 84, type: !44)
!5612 = !DILocation(line: 84, column: 17, scope: !5610)
!5613 = !DILocation(line: 86, column: 27, scope: !5610)
!5614 = !DILocation(line: 86, column: 18, scope: !5610)
!5615 = !DILocation(line: 86, column: 34, scope: !5610)
!5616 = !DILocation(line: 86, column: 10, scope: !5610)
!5617 = !DILocation(line: 86, column: 3, scope: !5610)
!5618 = distinct !DISubprogram(name: "xcalloc", scope: !615, file: !615, line: 93, type: !5462, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !614, retainedNodes: !28)
!5619 = !DILocalVariable(name: "n", arg: 1, scope: !5618, file: !615, line: 93, type: !44)
!5620 = !DILocation(line: 93, column: 17, scope: !5618)
!5621 = !DILocalVariable(name: "s", arg: 2, scope: !5618, file: !615, line: 93, type: !44)
!5622 = !DILocation(line: 93, column: 27, scope: !5618)
!5623 = !DILocalVariable(name: "p", scope: !5618, file: !615, line: 95, type: !43)
!5624 = !DILocation(line: 95, column: 9, scope: !5618)
!5625 = !DILocation(line: 101, column: 26, scope: !5626)
!5626 = distinct !DILexicalBlock(scope: !5618, file: !615, line: 100, column: 7)
!5627 = !DILocation(line: 101, column: 29, scope: !5626)
!5628 = !DILocation(line: 101, column: 18, scope: !5626)
!5629 = !DILocation(line: 101, column: 16, scope: !5626)
!5630 = !DILocation(line: 100, column: 7, scope: !5618)
!5631 = !DILocation(line: 102, column: 5, scope: !5626)
!5632 = !DILocation(line: 103, column: 10, scope: !5618)
!5633 = !DILocation(line: 103, column: 3, scope: !5618)
!5634 = distinct !DISubprogram(name: "xmemdup", scope: !615, file: !615, line: 111, type: !1019, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !614, retainedNodes: !28)
!5635 = !DILocalVariable(name: "p", arg: 1, scope: !5634, file: !615, line: 111, type: !1021)
!5636 = !DILocation(line: 111, column: 22, scope: !5634)
!5637 = !DILocalVariable(name: "s", arg: 2, scope: !5634, file: !615, line: 111, type: !44)
!5638 = !DILocation(line: 111, column: 32, scope: !5634)
!5639 = !DILocation(line: 113, column: 27, scope: !5634)
!5640 = !DILocation(line: 113, column: 18, scope: !5634)
!5641 = !DILocation(line: 113, column: 31, scope: !5634)
!5642 = !DILocation(line: 113, column: 34, scope: !5634)
!5643 = !DILocation(line: 113, column: 10, scope: !5634)
!5644 = !DILocation(line: 113, column: 3, scope: !5634)
!5645 = distinct !DISubprogram(name: "xstrdup", scope: !615, file: !615, line: 119, type: !1044, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !614, retainedNodes: !28)
!5646 = !DILocalVariable(name: "string", arg: 1, scope: !5645, file: !615, line: 119, type: !63)
!5647 = !DILocation(line: 119, column: 22, scope: !5645)
!5648 = !DILocation(line: 121, column: 19, scope: !5645)
!5649 = !DILocation(line: 121, column: 35, scope: !5645)
!5650 = !DILocation(line: 121, column: 27, scope: !5645)
!5651 = !DILocation(line: 121, column: 43, scope: !5645)
!5652 = !DILocation(line: 121, column: 10, scope: !5645)
!5653 = !DILocation(line: 121, column: 3, scope: !5645)
!5654 = distinct !DISubprogram(name: "xalloc_die", scope: !627, file: !627, line: 32, type: !953, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !626, retainedNodes: !28)
!5655 = !DILocation(line: 34, column: 10, scope: !5654)
!5656 = !DILocation(line: 34, column: 33, scope: !5654)
!5657 = !DILocation(line: 34, column: 3, scope: !5654)
!5658 = !DILocation(line: 40, column: 3, scope: !5654)
!5659 = !DILocation(line: 41, column: 1, scope: !5654)
!5660 = distinct !DISubprogram(name: "rpl_calloc", scope: !629, file: !629, line: 42, type: !5462, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !628, retainedNodes: !28)
!5661 = !DILocalVariable(name: "n", arg: 1, scope: !5660, file: !629, line: 42, type: !44)
!5662 = !DILocation(line: 42, column: 20, scope: !5660)
!5663 = !DILocalVariable(name: "s", arg: 2, scope: !5660, file: !629, line: 42, type: !44)
!5664 = !DILocation(line: 42, column: 30, scope: !5660)
!5665 = !DILocalVariable(name: "result", scope: !5660, file: !629, line: 44, type: !43)
!5666 = !DILocation(line: 44, column: 9, scope: !5660)
!5667 = !DILocation(line: 47, column: 7, scope: !5668)
!5668 = distinct !DILexicalBlock(scope: !5660, file: !629, line: 47, column: 7)
!5669 = !DILocation(line: 47, column: 9, scope: !5668)
!5670 = !DILocation(line: 47, column: 14, scope: !5668)
!5671 = !DILocation(line: 47, column: 17, scope: !5672)
!5672 = !DILexicalBlockFile(scope: !5668, file: !629, discriminator: 1)
!5673 = !DILocation(line: 47, column: 19, scope: !5668)
!5674 = !DILocation(line: 47, column: 7, scope: !5660)
!5675 = !DILocation(line: 49, column: 9, scope: !5676)
!5676 = distinct !DILexicalBlock(scope: !5668, file: !629, line: 48, column: 5)
!5677 = !DILocation(line: 50, column: 9, scope: !5676)
!5678 = !DILocation(line: 51, column: 5, scope: !5676)
!5679 = !DILocalVariable(name: "bytes", scope: !5680, file: !629, line: 56, type: !44)
!5680 = distinct !DILexicalBlock(scope: !5668, file: !629, line: 53, column: 5)
!5681 = !DILocation(line: 56, column: 14, scope: !5680)
!5682 = !DILocation(line: 56, column: 22, scope: !5680)
!5683 = !DILocation(line: 56, column: 26, scope: !5680)
!5684 = !DILocation(line: 56, column: 24, scope: !5680)
!5685 = !DILocation(line: 57, column: 11, scope: !5686)
!5686 = distinct !DILexicalBlock(scope: !5680, file: !629, line: 57, column: 11)
!5687 = !DILocation(line: 57, column: 19, scope: !5686)
!5688 = !DILocation(line: 57, column: 17, scope: !5686)
!5689 = !DILocation(line: 57, column: 24, scope: !5686)
!5690 = !DILocation(line: 57, column: 21, scope: !5686)
!5691 = !DILocation(line: 57, column: 11, scope: !5680)
!5692 = !DILocation(line: 59, column: 11, scope: !5693)
!5693 = distinct !DILexicalBlock(scope: !5686, file: !629, line: 58, column: 9)
!5694 = !DILocation(line: 59, column: 17, scope: !5693)
!5695 = !DILocation(line: 60, column: 11, scope: !5693)
!5696 = !DILocation(line: 65, column: 20, scope: !5660)
!5697 = !DILocation(line: 65, column: 23, scope: !5660)
!5698 = !DILocation(line: 65, column: 12, scope: !5660)
!5699 = !DILocation(line: 65, column: 10, scope: !5660)
!5700 = !DILocation(line: 72, column: 10, scope: !5660)
!5701 = !DILocation(line: 72, column: 3, scope: !5660)
!5702 = !DILocation(line: 73, column: 1, scope: !5660)
!5703 = distinct !DISubprogram(name: "rpl_fclose", scope: !631, file: !631, line: 56, type: !5704, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !630, retainedNodes: !28)
!5704 = !DISubroutineType(types: !5705)
!5705 = !{!48, !5706}
!5706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5707, size: 64, align: 64)
!5707 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1055, line: 48, baseType: !5708)
!5708 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !1057, line: 245, size: 1728, align: 64, elements: !5709)
!5709 = !{!5710, !5711, !5712, !5713, !5714, !5715, !5716, !5717, !5718, !5719, !5720, !5721, !5722, !5730, !5731, !5732, !5733, !5734, !5735, !5736, !5737, !5738, !5739, !5740, !5741, !5742, !5743, !5744, !5745}
!5710 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !5708, file: !1057, line: 246, baseType: !48, size: 32, align: 32)
!5711 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !5708, file: !1057, line: 251, baseType: !41, size: 64, align: 64, offset: 64)
!5712 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !5708, file: !1057, line: 252, baseType: !41, size: 64, align: 64, offset: 128)
!5713 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !5708, file: !1057, line: 253, baseType: !41, size: 64, align: 64, offset: 192)
!5714 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !5708, file: !1057, line: 254, baseType: !41, size: 64, align: 64, offset: 256)
!5715 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !5708, file: !1057, line: 255, baseType: !41, size: 64, align: 64, offset: 320)
!5716 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !5708, file: !1057, line: 256, baseType: !41, size: 64, align: 64, offset: 384)
!5717 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !5708, file: !1057, line: 257, baseType: !41, size: 64, align: 64, offset: 448)
!5718 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !5708, file: !1057, line: 258, baseType: !41, size: 64, align: 64, offset: 512)
!5719 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !5708, file: !1057, line: 260, baseType: !41, size: 64, align: 64, offset: 576)
!5720 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !5708, file: !1057, line: 261, baseType: !41, size: 64, align: 64, offset: 640)
!5721 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !5708, file: !1057, line: 262, baseType: !41, size: 64, align: 64, offset: 704)
!5722 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !5708, file: !1057, line: 264, baseType: !5723, size: 64, align: 64, offset: 768)
!5723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5724, size: 64, align: 64)
!5724 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !1057, line: 160, size: 192, align: 64, elements: !5725)
!5725 = !{!5726, !5727, !5729}
!5726 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !5724, file: !1057, line: 161, baseType: !5723, size: 64, align: 64)
!5727 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !5724, file: !1057, line: 162, baseType: !5728, size: 64, align: 64, offset: 64)
!5728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5708, size: 64, align: 64)
!5729 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !5724, file: !1057, line: 166, baseType: !48, size: 32, align: 32, offset: 128)
!5730 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !5708, file: !1057, line: 266, baseType: !5728, size: 64, align: 64, offset: 832)
!5731 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !5708, file: !1057, line: 268, baseType: !48, size: 32, align: 32, offset: 896)
!5732 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !5708, file: !1057, line: 272, baseType: !48, size: 32, align: 32, offset: 928)
!5733 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !5708, file: !1057, line: 274, baseType: !1083, size: 64, align: 64, offset: 960)
!5734 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !5708, file: !1057, line: 278, baseType: !49, size: 16, align: 16, offset: 1024)
!5735 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !5708, file: !1057, line: 279, baseType: !1088, size: 8, align: 8, offset: 1040)
!5736 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !5708, file: !1057, line: 280, baseType: !1090, size: 8, align: 8, offset: 1048)
!5737 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !5708, file: !1057, line: 284, baseType: !1094, size: 64, align: 64, offset: 1088)
!5738 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !5708, file: !1057, line: 293, baseType: !1097, size: 64, align: 64, offset: 1152)
!5739 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !5708, file: !1057, line: 302, baseType: !43, size: 64, align: 64, offset: 1216)
!5740 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !5708, file: !1057, line: 303, baseType: !43, size: 64, align: 64, offset: 1280)
!5741 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !5708, file: !1057, line: 304, baseType: !43, size: 64, align: 64, offset: 1344)
!5742 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !5708, file: !1057, line: 305, baseType: !43, size: 64, align: 64, offset: 1408)
!5743 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !5708, file: !1057, line: 306, baseType: !44, size: 64, align: 64, offset: 1472)
!5744 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !5708, file: !1057, line: 308, baseType: !48, size: 32, align: 32, offset: 1536)
!5745 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !5708, file: !1057, line: 310, baseType: !1105, size: 160, align: 8, offset: 1568)
!5746 = !DILocalVariable(name: "fp", arg: 1, scope: !5703, file: !631, line: 56, type: !5706)
!5747 = !DILocation(line: 56, column: 19, scope: !5703)
!5748 = !DILocalVariable(name: "saved_errno", scope: !5703, file: !631, line: 58, type: !48)
!5749 = !DILocation(line: 58, column: 7, scope: !5703)
!5750 = !DILocalVariable(name: "fd", scope: !5703, file: !631, line: 59, type: !48)
!5751 = !DILocation(line: 59, column: 7, scope: !5703)
!5752 = !DILocalVariable(name: "result", scope: !5703, file: !631, line: 60, type: !48)
!5753 = !DILocation(line: 60, column: 7, scope: !5703)
!5754 = !DILocation(line: 63, column: 16, scope: !5703)
!5755 = !DILocation(line: 63, column: 8, scope: !5703)
!5756 = !DILocation(line: 63, column: 6, scope: !5703)
!5757 = !DILocation(line: 64, column: 7, scope: !5758)
!5758 = distinct !DILexicalBlock(scope: !5703, file: !631, line: 64, column: 7)
!5759 = !DILocation(line: 64, column: 10, scope: !5758)
!5760 = !DILocation(line: 64, column: 7, scope: !5703)
!5761 = !DILocation(line: 65, column: 28, scope: !5758)
!5762 = !DILocation(line: 65, column: 12, scope: !5758)
!5763 = !DILocation(line: 65, column: 5, scope: !5758)
!5764 = !DILocation(line: 70, column: 9, scope: !5765)
!5765 = distinct !DILexicalBlock(scope: !5703, file: !631, line: 70, column: 7)
!5766 = !DILocation(line: 70, column: 23, scope: !5765)
!5767 = !DILocation(line: 70, column: 41, scope: !5768)
!5768 = !DILexicalBlockFile(scope: !5765, file: !631, discriminator: 1)
!5769 = !DILocation(line: 70, column: 33, scope: !5765)
!5770 = !DILocation(line: 70, column: 26, scope: !5765)
!5771 = !DILocation(line: 70, column: 59, scope: !5765)
!5772 = !DILocation(line: 71, column: 7, scope: !5765)
!5773 = !DILocation(line: 71, column: 18, scope: !5768)
!5774 = !DILocation(line: 71, column: 10, scope: !5765)
!5775 = !DILocation(line: 70, column: 7, scope: !5703)
!5776 = !DILocation(line: 72, column: 19, scope: !5765)
!5777 = !DILocation(line: 72, column: 17, scope: !5765)
!5778 = !DILocation(line: 72, column: 5, scope: !5765)
!5779 = !DILocation(line: 98, column: 28, scope: !5703)
!5780 = !DILocation(line: 98, column: 12, scope: !5703)
!5781 = !DILocation(line: 98, column: 10, scope: !5703)
!5782 = !DILocation(line: 103, column: 7, scope: !5783)
!5783 = distinct !DILexicalBlock(scope: !5703, file: !631, line: 103, column: 7)
!5784 = !DILocation(line: 103, column: 19, scope: !5783)
!5785 = !DILocation(line: 103, column: 7, scope: !5703)
!5786 = !DILocation(line: 105, column: 15, scope: !5787)
!5787 = distinct !DILexicalBlock(scope: !5783, file: !631, line: 104, column: 5)
!5788 = !DILocation(line: 105, column: 7, scope: !5787)
!5789 = !DILocation(line: 105, column: 13, scope: !5787)
!5790 = !DILocation(line: 106, column: 14, scope: !5787)
!5791 = !DILocation(line: 107, column: 5, scope: !5787)
!5792 = !DILocation(line: 109, column: 10, scope: !5703)
!5793 = !DILocation(line: 109, column: 3, scope: !5703)
!5794 = !DILocation(line: 110, column: 1, scope: !5703)
!5795 = !DILocalVariable(name: "fd", arg: 1, scope: !247, file: !248, line: 185, type: !48)
!5796 = !DILocation(line: 185, column: 16, scope: !247)
!5797 = !DILocalVariable(name: "action", arg: 2, scope: !247, file: !248, line: 185, type: !48)
!5798 = !DILocation(line: 185, column: 24, scope: !247)
!5799 = !DILocalVariable(name: "arg", scope: !247, file: !248, line: 187, type: !5800)
!5800 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !5441, line: 30, baseType: !5801)
!5801 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !248, line: 187, baseType: !5802)
!5802 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5803, size: 192, align: 64, elements: !1091)
!5803 = !DIDerivedType(tag: DW_TAG_typedef, name: "__va_list_tag", file: !248, line: 187, baseType: !5804)
!5804 = !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !248, line: 187, size: 192, align: 64, elements: !5805)
!5805 = !{!5806, !5807, !5808, !5809}
!5806 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !5804, file: !248, line: 187, baseType: !204, size: 32, align: 32)
!5807 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !5804, file: !248, line: 187, baseType: !204, size: 32, align: 32, offset: 32)
!5808 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !5804, file: !248, line: 187, baseType: !43, size: 64, align: 64, offset: 64)
!5809 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !5804, file: !248, line: 187, baseType: !43, size: 64, align: 64, offset: 128)
!5810 = !DILocation(line: 187, column: 11, scope: !247)
!5811 = !DILocalVariable(name: "result", scope: !247, file: !248, line: 188, type: !48)
!5812 = !DILocation(line: 188, column: 7, scope: !247)
!5813 = !DILocation(line: 189, column: 3, scope: !247)
!5814 = !DILocation(line: 190, column: 11, scope: !247)
!5815 = !DILocation(line: 190, column: 3, scope: !247)
!5816 = !DILocalVariable(name: "target", scope: !5817, file: !248, line: 235, type: !48)
!5817 = distinct !DILexicalBlock(scope: !5818, file: !248, line: 234, column: 7)
!5818 = distinct !DILexicalBlock(scope: !247, file: !248, line: 191, column: 5)
!5819 = !DILocation(line: 235, column: 13, scope: !5817)
!5820 = !DILocation(line: 235, column: 22, scope: !5817)
!5821 = !DILocation(line: 235, column: 22, scope: !5822)
!5822 = !DILexicalBlockFile(scope: !5817, file: !248, discriminator: 1)
!5823 = !DILocation(line: 235, column: 22, scope: !5824)
!5824 = !DILexicalBlockFile(scope: !5817, file: !248, discriminator: 2)
!5825 = !DILocation(line: 235, column: 22, scope: !5826)
!5826 = !DILexicalBlockFile(scope: !5827, file: !248, discriminator: 4)
!5827 = !DILexicalBlockFile(scope: !5817, file: !248, discriminator: 3)
!5828 = !DILocation(line: 249, column: 18, scope: !5829)
!5829 = distinct !DILexicalBlock(scope: !5817, file: !248, line: 249, column: 13)
!5830 = !DILocation(line: 249, column: 15, scope: !5829)
!5831 = !DILocation(line: 249, column: 13, scope: !5817)
!5832 = !DILocation(line: 251, column: 29, scope: !5833)
!5833 = distinct !DILexicalBlock(scope: !5829, file: !248, line: 250, column: 11)
!5834 = !DILocation(line: 251, column: 33, scope: !5833)
!5835 = !DILocation(line: 251, column: 41, scope: !5833)
!5836 = !DILocation(line: 251, column: 22, scope: !5833)
!5837 = !DILocation(line: 251, column: 20, scope: !5833)
!5838 = !DILocation(line: 252, column: 22, scope: !5839)
!5839 = distinct !DILexicalBlock(scope: !5833, file: !248, line: 252, column: 17)
!5840 = !DILocation(line: 252, column: 19, scope: !5839)
!5841 = !DILocation(line: 252, column: 29, scope: !5839)
!5842 = !DILocation(line: 252, column: 32, scope: !5843)
!5843 = !DILexicalBlockFile(scope: !5839, file: !248, discriminator: 1)
!5844 = !DILocation(line: 252, column: 38, scope: !5839)
!5845 = !DILocation(line: 252, column: 17, scope: !5833)
!5846 = !DILocation(line: 254, column: 36, scope: !5847)
!5847 = distinct !DILexicalBlock(scope: !5839, file: !248, line: 253, column: 15)
!5848 = !DILocation(line: 259, column: 15, scope: !5847)
!5849 = !DILocation(line: 262, column: 37, scope: !5850)
!5850 = distinct !DILexicalBlock(scope: !5839, file: !248, line: 261, column: 15)
!5851 = !DILocation(line: 262, column: 50, scope: !5850)
!5852 = !DILocation(line: 262, column: 26, scope: !5850)
!5853 = !DILocation(line: 262, column: 24, scope: !5850)
!5854 = !DILocation(line: 263, column: 21, scope: !5855)
!5855 = distinct !DILexicalBlock(scope: !5850, file: !248, line: 263, column: 21)
!5856 = !DILocation(line: 263, column: 28, scope: !5855)
!5857 = !DILocation(line: 263, column: 21, scope: !5850)
!5858 = !DILocation(line: 264, column: 19, scope: !5855)
!5859 = !DILocation(line: 265, column: 36, scope: !5850)
!5860 = !DILocation(line: 267, column: 11, scope: !5833)
!5861 = !DILocation(line: 269, column: 31, scope: !5829)
!5862 = !DILocation(line: 269, column: 44, scope: !5829)
!5863 = !DILocation(line: 269, column: 20, scope: !5829)
!5864 = !DILocation(line: 269, column: 18, scope: !5829)
!5865 = !DILocation(line: 270, column: 18, scope: !5866)
!5866 = distinct !DILexicalBlock(scope: !5817, file: !248, line: 270, column: 13)
!5867 = !DILocation(line: 270, column: 15, scope: !5866)
!5868 = !DILocation(line: 270, column: 25, scope: !5866)
!5869 = !DILocation(line: 270, column: 28, scope: !5870)
!5870 = !DILexicalBlockFile(scope: !5866, file: !248, discriminator: 1)
!5871 = !DILocation(line: 270, column: 47, scope: !5866)
!5872 = !DILocation(line: 270, column: 13, scope: !5817)
!5873 = !DILocalVariable(name: "flags", scope: !5874, file: !248, line: 272, type: !48)
!5874 = distinct !DILexicalBlock(scope: !5866, file: !248, line: 271, column: 11)
!5875 = !DILocation(line: 272, column: 17, scope: !5874)
!5876 = !DILocation(line: 272, column: 32, scope: !5874)
!5877 = !DILocation(line: 272, column: 25, scope: !5874)
!5878 = !DILocation(line: 273, column: 17, scope: !5879)
!5879 = distinct !DILexicalBlock(scope: !5874, file: !248, line: 273, column: 17)
!5880 = !DILocation(line: 273, column: 23, scope: !5879)
!5881 = !DILocation(line: 273, column: 27, scope: !5879)
!5882 = !DILocation(line: 273, column: 37, scope: !5883)
!5883 = !DILexicalBlockFile(scope: !5879, file: !248, discriminator: 1)
!5884 = !DILocation(line: 273, column: 54, scope: !5879)
!5885 = !DILocation(line: 273, column: 60, scope: !5879)
!5886 = !DILocation(line: 273, column: 30, scope: !5879)
!5887 = !DILocation(line: 273, column: 74, scope: !5879)
!5888 = !DILocation(line: 273, column: 17, scope: !5874)
!5889 = !DILocalVariable(name: "saved_errno", scope: !5890, file: !248, line: 275, type: !48)
!5890 = distinct !DILexicalBlock(scope: !5879, file: !248, line: 274, column: 15)
!5891 = !DILocation(line: 275, column: 21, scope: !5890)
!5892 = !DILocation(line: 275, column: 35, scope: !5890)
!5893 = !DILocation(line: 276, column: 24, scope: !5890)
!5894 = !DILocation(line: 276, column: 17, scope: !5890)
!5895 = !DILocation(line: 277, column: 25, scope: !5890)
!5896 = !DILocation(line: 277, column: 17, scope: !5890)
!5897 = !DILocation(line: 277, column: 23, scope: !5890)
!5898 = !DILocation(line: 278, column: 24, scope: !5890)
!5899 = !DILocation(line: 279, column: 15, scope: !5890)
!5900 = !DILocation(line: 280, column: 11, scope: !5874)
!5901 = !DILocation(line: 281, column: 9, scope: !5817)
!5902 = !DILocalVariable(name: "p", scope: !5903, file: !248, line: 317, type: !43)
!5903 = distinct !DILexicalBlock(scope: !5818, file: !248, line: 315, column: 7)
!5904 = !DILocation(line: 317, column: 15, scope: !5903)
!5905 = !DILocation(line: 317, column: 19, scope: !5903)
!5906 = !DILocation(line: 317, column: 19, scope: !5907)
!5907 = !DILexicalBlockFile(scope: !5903, file: !248, discriminator: 1)
!5908 = !DILocation(line: 317, column: 19, scope: !5909)
!5909 = !DILexicalBlockFile(scope: !5903, file: !248, discriminator: 2)
!5910 = !DILocation(line: 317, column: 19, scope: !5911)
!5911 = !DILexicalBlockFile(scope: !5912, file: !248, discriminator: 4)
!5912 = !DILexicalBlockFile(scope: !5903, file: !248, discriminator: 3)
!5913 = !DILocation(line: 318, column: 25, scope: !5903)
!5914 = !DILocation(line: 318, column: 29, scope: !5903)
!5915 = !DILocation(line: 318, column: 37, scope: !5903)
!5916 = !DILocation(line: 318, column: 18, scope: !5903)
!5917 = !DILocation(line: 318, column: 16, scope: !5903)
!5918 = !DILocation(line: 322, column: 9, scope: !5903)
!5919 = !DILocation(line: 325, column: 3, scope: !247)
!5920 = !DILocation(line: 326, column: 10, scope: !247)
!5921 = !DILocation(line: 326, column: 3, scope: !247)
!5922 = distinct !DISubprogram(name: "rpl_fflush", scope: !633, file: !633, line: 127, type: !5923, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !632, retainedNodes: !28)
!5923 = !DISubroutineType(types: !5924)
!5924 = !{!48, !5925}
!5925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5926, size: 64, align: 64)
!5926 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1055, line: 48, baseType: !5927)
!5927 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !1057, line: 245, size: 1728, align: 64, elements: !5928)
!5928 = !{!5929, !5930, !5931, !5932, !5933, !5934, !5935, !5936, !5937, !5938, !5939, !5940, !5941, !5949, !5950, !5951, !5952, !5953, !5954, !5955, !5956, !5957, !5958, !5959, !5960, !5961, !5962, !5963, !5964}
!5929 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !5927, file: !1057, line: 246, baseType: !48, size: 32, align: 32)
!5930 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !5927, file: !1057, line: 251, baseType: !41, size: 64, align: 64, offset: 64)
!5931 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !5927, file: !1057, line: 252, baseType: !41, size: 64, align: 64, offset: 128)
!5932 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !5927, file: !1057, line: 253, baseType: !41, size: 64, align: 64, offset: 192)
!5933 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !5927, file: !1057, line: 254, baseType: !41, size: 64, align: 64, offset: 256)
!5934 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !5927, file: !1057, line: 255, baseType: !41, size: 64, align: 64, offset: 320)
!5935 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !5927, file: !1057, line: 256, baseType: !41, size: 64, align: 64, offset: 384)
!5936 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !5927, file: !1057, line: 257, baseType: !41, size: 64, align: 64, offset: 448)
!5937 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !5927, file: !1057, line: 258, baseType: !41, size: 64, align: 64, offset: 512)
!5938 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !5927, file: !1057, line: 260, baseType: !41, size: 64, align: 64, offset: 576)
!5939 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !5927, file: !1057, line: 261, baseType: !41, size: 64, align: 64, offset: 640)
!5940 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !5927, file: !1057, line: 262, baseType: !41, size: 64, align: 64, offset: 704)
!5941 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !5927, file: !1057, line: 264, baseType: !5942, size: 64, align: 64, offset: 768)
!5942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5943, size: 64, align: 64)
!5943 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !1057, line: 160, size: 192, align: 64, elements: !5944)
!5944 = !{!5945, !5946, !5948}
!5945 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !5943, file: !1057, line: 161, baseType: !5942, size: 64, align: 64)
!5946 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !5943, file: !1057, line: 162, baseType: !5947, size: 64, align: 64, offset: 64)
!5947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5927, size: 64, align: 64)
!5948 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !5943, file: !1057, line: 166, baseType: !48, size: 32, align: 32, offset: 128)
!5949 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !5927, file: !1057, line: 266, baseType: !5947, size: 64, align: 64, offset: 832)
!5950 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !5927, file: !1057, line: 268, baseType: !48, size: 32, align: 32, offset: 896)
!5951 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !5927, file: !1057, line: 272, baseType: !48, size: 32, align: 32, offset: 928)
!5952 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !5927, file: !1057, line: 274, baseType: !1083, size: 64, align: 64, offset: 960)
!5953 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !5927, file: !1057, line: 278, baseType: !49, size: 16, align: 16, offset: 1024)
!5954 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !5927, file: !1057, line: 279, baseType: !1088, size: 8, align: 8, offset: 1040)
!5955 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !5927, file: !1057, line: 280, baseType: !1090, size: 8, align: 8, offset: 1048)
!5956 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !5927, file: !1057, line: 284, baseType: !1094, size: 64, align: 64, offset: 1088)
!5957 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !5927, file: !1057, line: 293, baseType: !1097, size: 64, align: 64, offset: 1152)
!5958 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !5927, file: !1057, line: 302, baseType: !43, size: 64, align: 64, offset: 1216)
!5959 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !5927, file: !1057, line: 303, baseType: !43, size: 64, align: 64, offset: 1280)
!5960 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !5927, file: !1057, line: 304, baseType: !43, size: 64, align: 64, offset: 1344)
!5961 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !5927, file: !1057, line: 305, baseType: !43, size: 64, align: 64, offset: 1408)
!5962 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !5927, file: !1057, line: 306, baseType: !44, size: 64, align: 64, offset: 1472)
!5963 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !5927, file: !1057, line: 308, baseType: !48, size: 32, align: 32, offset: 1536)
!5964 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !5927, file: !1057, line: 310, baseType: !1105, size: 160, align: 8, offset: 1568)
!5965 = !DILocalVariable(name: "stream", arg: 1, scope: !5922, file: !633, line: 127, type: !5925)
!5966 = !DILocation(line: 127, column: 19, scope: !5922)
!5967 = !DILocation(line: 148, column: 7, scope: !5968)
!5968 = distinct !DILexicalBlock(scope: !5922, file: !633, line: 148, column: 7)
!5969 = !DILocation(line: 148, column: 14, scope: !5968)
!5970 = !DILocation(line: 148, column: 22, scope: !5968)
!5971 = !DILocation(line: 148, column: 27, scope: !5972)
!5972 = !DILexicalBlockFile(scope: !5968, file: !633, discriminator: 1)
!5973 = !DILocation(line: 148, column: 7, scope: !5922)
!5974 = !DILocation(line: 149, column: 20, scope: !5968)
!5975 = !DILocation(line: 149, column: 12, scope: !5968)
!5976 = !DILocation(line: 149, column: 5, scope: !5968)
!5977 = !DILocation(line: 153, column: 44, scope: !5922)
!5978 = !DILocation(line: 153, column: 3, scope: !5922)
!5979 = !DILocation(line: 155, column: 18, scope: !5922)
!5980 = !DILocation(line: 155, column: 10, scope: !5922)
!5981 = !DILocation(line: 155, column: 3, scope: !5922)
!5982 = !DILocation(line: 229, column: 1, scope: !5922)
!5983 = distinct !DISubprogram(name: "clear_ungetc_buffer_preserving_position", scope: !633, file: !633, line: 40, type: !5984, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !632, retainedNodes: !28)
!5984 = !DISubroutineType(types: !5985)
!5985 = !{null, !5925}
!5986 = !DILocalVariable(name: "fp", arg: 1, scope: !5983, file: !633, line: 40, type: !5925)
!5987 = !DILocation(line: 40, column: 48, scope: !5983)
!5988 = !DILocation(line: 42, column: 7, scope: !5989)
!5989 = distinct !DILexicalBlock(scope: !5983, file: !633, line: 42, column: 7)
!5990 = !DILocation(line: 42, column: 11, scope: !5989)
!5991 = !DILocation(line: 42, column: 18, scope: !5989)
!5992 = !DILocation(line: 42, column: 7, scope: !5983)
!5993 = !DILocation(line: 44, column: 13, scope: !5989)
!5994 = !DILocation(line: 44, column: 5, scope: !5989)
!5995 = !DILocation(line: 45, column: 1, scope: !5983)
!5996 = distinct !DISubprogram(name: "rpl_fseeko", scope: !635, file: !635, line: 28, type: !5997, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !634, retainedNodes: !28)
!5997 = !DISubroutineType(types: !5998)
!5998 = !{!48, !5999, !3228, !48}
!5999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6000, size: 64, align: 64)
!6000 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1055, line: 48, baseType: !6001)
!6001 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !1057, line: 245, size: 1728, align: 64, elements: !6002)
!6002 = !{!6003, !6004, !6005, !6006, !6007, !6008, !6009, !6010, !6011, !6012, !6013, !6014, !6015, !6023, !6024, !6025, !6026, !6027, !6028, !6029, !6030, !6031, !6032, !6033, !6034, !6035, !6036, !6037, !6038}
!6003 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !6001, file: !1057, line: 246, baseType: !48, size: 32, align: 32)
!6004 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !6001, file: !1057, line: 251, baseType: !41, size: 64, align: 64, offset: 64)
!6005 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !6001, file: !1057, line: 252, baseType: !41, size: 64, align: 64, offset: 128)
!6006 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !6001, file: !1057, line: 253, baseType: !41, size: 64, align: 64, offset: 192)
!6007 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !6001, file: !1057, line: 254, baseType: !41, size: 64, align: 64, offset: 256)
!6008 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !6001, file: !1057, line: 255, baseType: !41, size: 64, align: 64, offset: 320)
!6009 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !6001, file: !1057, line: 256, baseType: !41, size: 64, align: 64, offset: 384)
!6010 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !6001, file: !1057, line: 257, baseType: !41, size: 64, align: 64, offset: 448)
!6011 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !6001, file: !1057, line: 258, baseType: !41, size: 64, align: 64, offset: 512)
!6012 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !6001, file: !1057, line: 260, baseType: !41, size: 64, align: 64, offset: 576)
!6013 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !6001, file: !1057, line: 261, baseType: !41, size: 64, align: 64, offset: 640)
!6014 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !6001, file: !1057, line: 262, baseType: !41, size: 64, align: 64, offset: 704)
!6015 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !6001, file: !1057, line: 264, baseType: !6016, size: 64, align: 64, offset: 768)
!6016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6017, size: 64, align: 64)
!6017 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !1057, line: 160, size: 192, align: 64, elements: !6018)
!6018 = !{!6019, !6020, !6022}
!6019 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !6017, file: !1057, line: 161, baseType: !6016, size: 64, align: 64)
!6020 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !6017, file: !1057, line: 162, baseType: !6021, size: 64, align: 64, offset: 64)
!6021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6001, size: 64, align: 64)
!6022 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !6017, file: !1057, line: 166, baseType: !48, size: 32, align: 32, offset: 128)
!6023 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !6001, file: !1057, line: 266, baseType: !6021, size: 64, align: 64, offset: 832)
!6024 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !6001, file: !1057, line: 268, baseType: !48, size: 32, align: 32, offset: 896)
!6025 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !6001, file: !1057, line: 272, baseType: !48, size: 32, align: 32, offset: 928)
!6026 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !6001, file: !1057, line: 274, baseType: !1083, size: 64, align: 64, offset: 960)
!6027 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !6001, file: !1057, line: 278, baseType: !49, size: 16, align: 16, offset: 1024)
!6028 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !6001, file: !1057, line: 279, baseType: !1088, size: 8, align: 8, offset: 1040)
!6029 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !6001, file: !1057, line: 280, baseType: !1090, size: 8, align: 8, offset: 1048)
!6030 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !6001, file: !1057, line: 284, baseType: !1094, size: 64, align: 64, offset: 1088)
!6031 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !6001, file: !1057, line: 293, baseType: !1097, size: 64, align: 64, offset: 1152)
!6032 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !6001, file: !1057, line: 302, baseType: !43, size: 64, align: 64, offset: 1216)
!6033 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !6001, file: !1057, line: 303, baseType: !43, size: 64, align: 64, offset: 1280)
!6034 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !6001, file: !1057, line: 304, baseType: !43, size: 64, align: 64, offset: 1344)
!6035 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !6001, file: !1057, line: 305, baseType: !43, size: 64, align: 64, offset: 1408)
!6036 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !6001, file: !1057, line: 306, baseType: !44, size: 64, align: 64, offset: 1472)
!6037 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !6001, file: !1057, line: 308, baseType: !48, size: 32, align: 32, offset: 1536)
!6038 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !6001, file: !1057, line: 310, baseType: !1105, size: 160, align: 8, offset: 1568)
!6039 = !DILocalVariable(name: "fp", arg: 1, scope: !5996, file: !635, line: 28, type: !5999)
!6040 = !DILocation(line: 28, column: 15, scope: !5996)
!6041 = !DILocalVariable(name: "offset", arg: 2, scope: !5996, file: !635, line: 28, type: !3228)
!6042 = !DILocation(line: 28, column: 25, scope: !5996)
!6043 = !DILocalVariable(name: "whence", arg: 3, scope: !5996, file: !635, line: 28, type: !48)
!6044 = !DILocation(line: 28, column: 37, scope: !5996)
!6045 = !DILocation(line: 51, column: 7, scope: !6046)
!6046 = distinct !DILexicalBlock(scope: !5996, file: !635, line: 51, column: 7)
!6047 = !DILocation(line: 51, column: 11, scope: !6046)
!6048 = !DILocation(line: 51, column: 27, scope: !6046)
!6049 = !DILocation(line: 51, column: 31, scope: !6046)
!6050 = !DILocation(line: 51, column: 24, scope: !6046)
!6051 = !DILocation(line: 52, column: 7, scope: !6046)
!6052 = !DILocation(line: 52, column: 10, scope: !6053)
!6053 = !DILexicalBlockFile(scope: !6046, file: !635, discriminator: 1)
!6054 = !DILocation(line: 52, column: 14, scope: !6046)
!6055 = !DILocation(line: 52, column: 31, scope: !6046)
!6056 = !DILocation(line: 52, column: 35, scope: !6046)
!6057 = !DILocation(line: 52, column: 28, scope: !6046)
!6058 = !DILocation(line: 53, column: 7, scope: !6046)
!6059 = !DILocation(line: 53, column: 10, scope: !6053)
!6060 = !DILocation(line: 53, column: 14, scope: !6046)
!6061 = !DILocation(line: 53, column: 28, scope: !6046)
!6062 = !DILocation(line: 51, column: 7, scope: !5996)
!6063 = !DILocalVariable(name: "pos", scope: !6064, file: !635, line: 116, type: !3228)
!6064 = distinct !DILexicalBlock(scope: !6046, file: !635, line: 112, column: 5)
!6065 = !DILocation(line: 116, column: 13, scope: !6064)
!6066 = !DILocation(line: 116, column: 34, scope: !6064)
!6067 = !DILocation(line: 116, column: 26, scope: !6064)
!6068 = !DILocation(line: 116, column: 39, scope: !6064)
!6069 = !DILocation(line: 116, column: 47, scope: !6064)
!6070 = !DILocation(line: 116, column: 19, scope: !6064)
!6071 = !DILocation(line: 117, column: 11, scope: !6072)
!6072 = distinct !DILexicalBlock(scope: !6064, file: !635, line: 117, column: 11)
!6073 = !DILocation(line: 117, column: 15, scope: !6072)
!6074 = !DILocation(line: 117, column: 11, scope: !6064)
!6075 = !DILocation(line: 123, column: 11, scope: !6076)
!6076 = distinct !DILexicalBlock(scope: !6072, file: !635, line: 118, column: 9)
!6077 = !DILocation(line: 127, column: 7, scope: !6064)
!6078 = !DILocation(line: 127, column: 11, scope: !6064)
!6079 = !DILocation(line: 127, column: 18, scope: !6064)
!6080 = !DILocation(line: 128, column: 21, scope: !6064)
!6081 = !DILocation(line: 128, column: 7, scope: !6064)
!6082 = !DILocation(line: 128, column: 11, scope: !6064)
!6083 = !DILocation(line: 128, column: 19, scope: !6064)
!6084 = !DILocation(line: 159, column: 7, scope: !6064)
!6085 = !DILocation(line: 161, column: 18, scope: !5996)
!6086 = !DILocation(line: 161, column: 22, scope: !5996)
!6087 = !DILocation(line: 161, column: 30, scope: !5996)
!6088 = !DILocation(line: 161, column: 10, scope: !5996)
!6089 = !DILocation(line: 161, column: 3, scope: !5996)
!6090 = !DILocation(line: 162, column: 1, scope: !5996)
!6091 = distinct !DISubprogram(name: "rpl_mbrtowc", scope: !637, file: !637, line: 329, type: !6092, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !636, retainedNodes: !28)
!6092 = !DISubroutineType(types: !6093)
!6093 = !{!44, !6094, !63, !44, !6095}
!6094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4622, size: 64, align: 64)
!6095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6096, size: 64, align: 64)
!6096 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !4594, line: 106, baseType: !6097)
!6097 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !4594, line: 94, baseType: !6098)
!6098 = !DICompositeType(tag: DW_TAG_structure_type, file: !4594, line: 82, size: 64, align: 32, elements: !6099)
!6099 = !{!6100, !6101}
!6100 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !6098, file: !4594, line: 84, baseType: !48, size: 32, align: 32)
!6101 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !6098, file: !4594, line: 93, baseType: !6102, size: 32, align: 32, offset: 32)
!6102 = !DICompositeType(tag: DW_TAG_union_type, scope: !6098, file: !4594, line: 85, size: 32, align: 32, elements: !6103)
!6103 = !{!6104, !6105}
!6104 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !6102, file: !4594, line: 88, baseType: !204, size: 32, align: 32)
!6105 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !6102, file: !4594, line: 92, baseType: !4604, size: 32, align: 8)
!6106 = !DILocalVariable(name: "pwc", arg: 1, scope: !6091, file: !637, line: 329, type: !6094)
!6107 = !DILocation(line: 329, column: 23, scope: !6091)
!6108 = !DILocalVariable(name: "s", arg: 2, scope: !6091, file: !637, line: 329, type: !63)
!6109 = !DILocation(line: 329, column: 40, scope: !6091)
!6110 = !DILocalVariable(name: "n", arg: 3, scope: !6091, file: !637, line: 329, type: !44)
!6111 = !DILocation(line: 329, column: 50, scope: !6091)
!6112 = !DILocalVariable(name: "ps", arg: 4, scope: !6091, file: !637, line: 329, type: !6095)
!6113 = !DILocation(line: 329, column: 64, scope: !6091)
!6114 = !DILocation(line: 332, column: 7, scope: !6115)
!6115 = distinct !DILexicalBlock(scope: !6091, file: !637, line: 332, column: 7)
!6116 = !DILocation(line: 332, column: 9, scope: !6115)
!6117 = !DILocation(line: 332, column: 7, scope: !6091)
!6118 = !DILocation(line: 334, column: 11, scope: !6119)
!6119 = distinct !DILexicalBlock(scope: !6115, file: !637, line: 333, column: 5)
!6120 = !DILocation(line: 335, column: 9, scope: !6119)
!6121 = !DILocation(line: 336, column: 9, scope: !6119)
!6122 = !DILocation(line: 337, column: 5, scope: !6119)
!6123 = !DILocation(line: 341, column: 7, scope: !6124)
!6124 = distinct !DILexicalBlock(scope: !6091, file: !637, line: 341, column: 7)
!6125 = !DILocation(line: 341, column: 9, scope: !6124)
!6126 = !DILocation(line: 341, column: 7, scope: !6091)
!6127 = !DILocation(line: 342, column: 5, scope: !6124)
!6128 = !DILocation(line: 402, column: 21, scope: !6129)
!6129 = distinct !DILexicalBlock(scope: !6091, file: !637, line: 394, column: 3)
!6130 = !DILocation(line: 402, column: 26, scope: !6129)
!6131 = !DILocation(line: 402, column: 29, scope: !6129)
!6132 = !DILocation(line: 402, column: 32, scope: !6129)
!6133 = !DILocation(line: 402, column: 12, scope: !6129)
!6134 = !DILocation(line: 402, column: 5, scope: !6129)
!6135 = !DILocation(line: 405, column: 1, scope: !6091)
!6136 = distinct !DISubprogram(name: "c_strcasecmp", scope: !640, file: !640, line: 27, type: !6137, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !639, retainedNodes: !28)
!6137 = !DISubroutineType(types: !6138)
!6138 = !{!48, !63, !63}
!6139 = !DILocalVariable(name: "s1", arg: 1, scope: !6136, file: !640, line: 27, type: !63)
!6140 = !DILocation(line: 27, column: 27, scope: !6136)
!6141 = !DILocalVariable(name: "s2", arg: 2, scope: !6136, file: !640, line: 27, type: !63)
!6142 = !DILocation(line: 27, column: 43, scope: !6136)
!6143 = !DILocalVariable(name: "p1", scope: !6136, file: !640, line: 29, type: !642)
!6144 = !DILocation(line: 29, column: 33, scope: !6136)
!6145 = !DILocation(line: 29, column: 62, scope: !6136)
!6146 = !DILocalVariable(name: "p2", scope: !6136, file: !640, line: 30, type: !642)
!6147 = !DILocation(line: 30, column: 33, scope: !6136)
!6148 = !DILocation(line: 30, column: 62, scope: !6136)
!6149 = !DILocalVariable(name: "c1", scope: !6136, file: !640, line: 31, type: !47)
!6150 = !DILocation(line: 31, column: 17, scope: !6136)
!6151 = !DILocalVariable(name: "c2", scope: !6136, file: !640, line: 31, type: !47)
!6152 = !DILocation(line: 31, column: 21, scope: !6136)
!6153 = !DILocation(line: 33, column: 7, scope: !6154)
!6154 = distinct !DILexicalBlock(scope: !6136, file: !640, line: 33, column: 7)
!6155 = !DILocation(line: 33, column: 13, scope: !6154)
!6156 = !DILocation(line: 33, column: 10, scope: !6154)
!6157 = !DILocation(line: 33, column: 7, scope: !6136)
!6158 = !DILocation(line: 34, column: 5, scope: !6154)
!6159 = !DILocation(line: 36, column: 3, scope: !6136)
!6160 = !DILocation(line: 38, column: 24, scope: !6161)
!6161 = distinct !DILexicalBlock(scope: !6136, file: !640, line: 37, column: 5)
!6162 = !DILocation(line: 38, column: 23, scope: !6161)
!6163 = !DILocation(line: 38, column: 12, scope: !6161)
!6164 = !DILocation(line: 38, column: 10, scope: !6161)
!6165 = !DILocation(line: 39, column: 24, scope: !6161)
!6166 = !DILocation(line: 39, column: 23, scope: !6161)
!6167 = !DILocation(line: 39, column: 12, scope: !6161)
!6168 = !DILocation(line: 39, column: 10, scope: !6161)
!6169 = !DILocation(line: 41, column: 11, scope: !6170)
!6170 = distinct !DILexicalBlock(scope: !6161, file: !640, line: 41, column: 11)
!6171 = !DILocation(line: 41, column: 14, scope: !6170)
!6172 = !DILocation(line: 41, column: 11, scope: !6161)
!6173 = !DILocation(line: 42, column: 9, scope: !6170)
!6174 = !DILocation(line: 44, column: 7, scope: !6161)
!6175 = !DILocation(line: 45, column: 7, scope: !6161)
!6176 = !DILocation(line: 46, column: 5, scope: !6161)
!6177 = !DILocation(line: 47, column: 10, scope: !6136)
!6178 = !DILocation(line: 47, column: 16, scope: !6136)
!6179 = !DILocation(line: 47, column: 13, scope: !6136)
!6180 = !DILocation(line: 50, column: 12, scope: !6181)
!6181 = distinct !DILexicalBlock(scope: !6136, file: !640, line: 49, column: 7)
!6182 = !DILocation(line: 50, column: 17, scope: !6181)
!6183 = !DILocation(line: 50, column: 15, scope: !6181)
!6184 = !DILocation(line: 50, column: 5, scope: !6181)
!6185 = !DILocation(line: 56, column: 1, scope: !6136)
!6186 = distinct !DISubprogram(name: "close_stream", scope: !644, file: !644, line: 56, type: !6187, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !643, retainedNodes: !28)
!6187 = !DISubroutineType(types: !6188)
!6188 = !{!48, !6189}
!6189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6190, size: 64, align: 64)
!6190 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1055, line: 48, baseType: !6191)
!6191 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !1057, line: 245, size: 1728, align: 64, elements: !6192)
!6192 = !{!6193, !6194, !6195, !6196, !6197, !6198, !6199, !6200, !6201, !6202, !6203, !6204, !6205, !6213, !6214, !6215, !6216, !6217, !6218, !6219, !6220, !6221, !6222, !6223, !6224, !6225, !6226, !6227, !6228}
!6193 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !6191, file: !1057, line: 246, baseType: !48, size: 32, align: 32)
!6194 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !6191, file: !1057, line: 251, baseType: !41, size: 64, align: 64, offset: 64)
!6195 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !6191, file: !1057, line: 252, baseType: !41, size: 64, align: 64, offset: 128)
!6196 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !6191, file: !1057, line: 253, baseType: !41, size: 64, align: 64, offset: 192)
!6197 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !6191, file: !1057, line: 254, baseType: !41, size: 64, align: 64, offset: 256)
!6198 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !6191, file: !1057, line: 255, baseType: !41, size: 64, align: 64, offset: 320)
!6199 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !6191, file: !1057, line: 256, baseType: !41, size: 64, align: 64, offset: 384)
!6200 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !6191, file: !1057, line: 257, baseType: !41, size: 64, align: 64, offset: 448)
!6201 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !6191, file: !1057, line: 258, baseType: !41, size: 64, align: 64, offset: 512)
!6202 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !6191, file: !1057, line: 260, baseType: !41, size: 64, align: 64, offset: 576)
!6203 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !6191, file: !1057, line: 261, baseType: !41, size: 64, align: 64, offset: 640)
!6204 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !6191, file: !1057, line: 262, baseType: !41, size: 64, align: 64, offset: 704)
!6205 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !6191, file: !1057, line: 264, baseType: !6206, size: 64, align: 64, offset: 768)
!6206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6207, size: 64, align: 64)
!6207 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !1057, line: 160, size: 192, align: 64, elements: !6208)
!6208 = !{!6209, !6210, !6212}
!6209 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !6207, file: !1057, line: 161, baseType: !6206, size: 64, align: 64)
!6210 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !6207, file: !1057, line: 162, baseType: !6211, size: 64, align: 64, offset: 64)
!6211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6191, size: 64, align: 64)
!6212 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !6207, file: !1057, line: 166, baseType: !48, size: 32, align: 32, offset: 128)
!6213 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !6191, file: !1057, line: 266, baseType: !6211, size: 64, align: 64, offset: 832)
!6214 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !6191, file: !1057, line: 268, baseType: !48, size: 32, align: 32, offset: 896)
!6215 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !6191, file: !1057, line: 272, baseType: !48, size: 32, align: 32, offset: 928)
!6216 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !6191, file: !1057, line: 274, baseType: !1083, size: 64, align: 64, offset: 960)
!6217 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !6191, file: !1057, line: 278, baseType: !49, size: 16, align: 16, offset: 1024)
!6218 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !6191, file: !1057, line: 279, baseType: !1088, size: 8, align: 8, offset: 1040)
!6219 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !6191, file: !1057, line: 280, baseType: !1090, size: 8, align: 8, offset: 1048)
!6220 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !6191, file: !1057, line: 284, baseType: !1094, size: 64, align: 64, offset: 1088)
!6221 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !6191, file: !1057, line: 293, baseType: !1097, size: 64, align: 64, offset: 1152)
!6222 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !6191, file: !1057, line: 302, baseType: !43, size: 64, align: 64, offset: 1216)
!6223 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !6191, file: !1057, line: 303, baseType: !43, size: 64, align: 64, offset: 1280)
!6224 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !6191, file: !1057, line: 304, baseType: !43, size: 64, align: 64, offset: 1344)
!6225 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !6191, file: !1057, line: 305, baseType: !43, size: 64, align: 64, offset: 1408)
!6226 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !6191, file: !1057, line: 306, baseType: !44, size: 64, align: 64, offset: 1472)
!6227 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !6191, file: !1057, line: 308, baseType: !48, size: 32, align: 32, offset: 1536)
!6228 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !6191, file: !1057, line: 310, baseType: !1105, size: 160, align: 8, offset: 1568)
!6229 = !DILocalVariable(name: "stream", arg: 1, scope: !6186, file: !644, line: 56, type: !6189)
!6230 = !DILocation(line: 56, column: 21, scope: !6186)
!6231 = !DILocalVariable(name: "some_pending", scope: !6186, file: !644, line: 58, type: !6232)
!6232 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !53)
!6233 = !DILocation(line: 58, column: 14, scope: !6186)
!6234 = !DILocation(line: 58, column: 42, scope: !6186)
!6235 = !DILocation(line: 58, column: 30, scope: !6186)
!6236 = !DILocation(line: 58, column: 50, scope: !6186)
!6237 = !DILocalVariable(name: "prev_fail", scope: !6186, file: !644, line: 59, type: !6232)
!6238 = !DILocation(line: 59, column: 14, scope: !6186)
!6239 = !DILocation(line: 59, column: 27, scope: !6186)
!6240 = !DILocation(line: 59, column: 43, scope: !6186)
!6241 = !DILocalVariable(name: "fclose_fail", scope: !6186, file: !644, line: 60, type: !6232)
!6242 = !DILocation(line: 60, column: 14, scope: !6186)
!6243 = !DILocation(line: 60, column: 37, scope: !6186)
!6244 = !DILocation(line: 60, column: 29, scope: !6186)
!6245 = !DILocation(line: 60, column: 45, scope: !6186)
!6246 = !DILocation(line: 70, column: 7, scope: !6247)
!6247 = distinct !DILexicalBlock(scope: !6186, file: !644, line: 70, column: 7)
!6248 = !DILocation(line: 70, column: 17, scope: !6247)
!6249 = !DILocation(line: 70, column: 21, scope: !6250)
!6250 = !DILexicalBlockFile(scope: !6247, file: !644, discriminator: 1)
!6251 = !DILocation(line: 70, column: 33, scope: !6247)
!6252 = !DILocation(line: 70, column: 37, scope: !6253)
!6253 = !DILexicalBlockFile(scope: !6247, file: !644, discriminator: 2)
!6254 = !DILocation(line: 70, column: 50, scope: !6247)
!6255 = !DILocation(line: 70, column: 53, scope: !6256)
!6256 = !DILexicalBlockFile(scope: !6247, file: !644, discriminator: 3)
!6257 = !DILocation(line: 70, column: 59, scope: !6247)
!6258 = !DILocation(line: 70, column: 7, scope: !6186)
!6259 = !DILocation(line: 72, column: 13, scope: !6260)
!6260 = distinct !DILexicalBlock(scope: !6261, file: !644, line: 72, column: 11)
!6261 = distinct !DILexicalBlock(scope: !6247, file: !644, line: 71, column: 5)
!6262 = !DILocation(line: 72, column: 11, scope: !6261)
!6263 = !DILocation(line: 73, column: 9, scope: !6260)
!6264 = !DILocation(line: 73, column: 15, scope: !6260)
!6265 = !DILocation(line: 74, column: 7, scope: !6261)
!6266 = !DILocation(line: 77, column: 3, scope: !6186)
!6267 = !DILocation(line: 78, column: 1, scope: !6186)
!6268 = distinct !DISubprogram(name: "locale_charset", scope: !257, file: !257, line: 393, type: !6269, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !256, retainedNodes: !28)
!6269 = !DISubroutineType(types: !6270)
!6270 = !{!63}
!6271 = !DILocalVariable(name: "codeset", scope: !6268, file: !257, line: 395, type: !63)
!6272 = !DILocation(line: 395, column: 15, scope: !6268)
!6273 = !DILocalVariable(name: "aliases", scope: !6268, file: !257, line: 396, type: !63)
!6274 = !DILocation(line: 396, column: 15, scope: !6268)
!6275 = !DILocation(line: 403, column: 13, scope: !6268)
!6276 = !DILocation(line: 403, column: 11, scope: !6268)
!6277 = !DILocation(line: 584, column: 7, scope: !6278)
!6278 = distinct !DILexicalBlock(scope: !6268, file: !257, line: 584, column: 7)
!6279 = !DILocation(line: 584, column: 15, scope: !6278)
!6280 = !DILocation(line: 584, column: 7, scope: !6268)
!6281 = !DILocation(line: 586, column: 13, scope: !6278)
!6282 = !DILocation(line: 586, column: 5, scope: !6278)
!6283 = !DILocation(line: 589, column: 18, scope: !6284)
!6284 = distinct !DILexicalBlock(scope: !6268, file: !257, line: 589, column: 3)
!6285 = !DILocation(line: 589, column: 16, scope: !6284)
!6286 = !DILocation(line: 589, column: 8, scope: !6284)
!6287 = !DILocation(line: 590, column: 9, scope: !6288)
!6288 = distinct !DILexicalBlock(scope: !6284, file: !257, line: 589, column: 3)
!6289 = !DILocation(line: 590, column: 8, scope: !6288)
!6290 = !DILocation(line: 590, column: 17, scope: !6288)
!6291 = !DILocation(line: 589, column: 3, scope: !6284)
!6292 = !DILocation(line: 592, column: 17, scope: !6293)
!6293 = distinct !DILexicalBlock(scope: !6288, file: !257, line: 592, column: 9)
!6294 = !DILocation(line: 592, column: 26, scope: !6293)
!6295 = !DILocation(line: 592, column: 9, scope: !6293)
!6296 = !DILocation(line: 592, column: 35, scope: !6293)
!6297 = !DILocation(line: 593, column: 9, scope: !6293)
!6298 = !DILocation(line: 593, column: 13, scope: !6299)
!6299 = !DILexicalBlockFile(scope: !6293, file: !257, discriminator: 1)
!6300 = !DILocation(line: 593, column: 24, scope: !6293)
!6301 = !DILocation(line: 593, column: 31, scope: !6293)
!6302 = !DILocation(line: 593, column: 34, scope: !6303)
!6303 = !DILexicalBlockFile(scope: !6293, file: !257, discriminator: 2)
!6304 = !DILocation(line: 593, column: 45, scope: !6293)
!6305 = !DILocation(line: 592, column: 9, scope: !6288)
!6306 = !DILocation(line: 595, column: 19, scope: !6307)
!6307 = distinct !DILexicalBlock(scope: !6293, file: !257, line: 594, column: 7)
!6308 = !DILocation(line: 595, column: 37, scope: !6307)
!6309 = !DILocation(line: 595, column: 29, scope: !6307)
!6310 = !DILocation(line: 595, column: 27, scope: !6307)
!6311 = !DILocation(line: 595, column: 46, scope: !6307)
!6312 = !DILocation(line: 595, column: 17, scope: !6307)
!6313 = !DILocation(line: 596, column: 9, scope: !6307)
!6314 = !DILocation(line: 593, column: 52, scope: !6315)
!6315 = !DILexicalBlockFile(scope: !6293, file: !257, discriminator: 3)
!6316 = !DILocation(line: 591, column: 27, scope: !6288)
!6317 = !DILocation(line: 591, column: 19, scope: !6288)
!6318 = !DILocation(line: 591, column: 36, scope: !6288)
!6319 = !DILocation(line: 591, column: 16, scope: !6288)
!6320 = !DILocation(line: 591, column: 60, scope: !6288)
!6321 = !DILocation(line: 591, column: 52, scope: !6288)
!6322 = !DILocation(line: 591, column: 69, scope: !6288)
!6323 = !DILocation(line: 591, column: 49, scope: !6288)
!6324 = !DILocation(line: 589, column: 3, scope: !6288)
!6325 = !DILocation(line: 602, column: 7, scope: !6326)
!6326 = distinct !DILexicalBlock(scope: !6268, file: !257, line: 602, column: 7)
!6327 = !DILocation(line: 602, column: 18, scope: !6326)
!6328 = !DILocation(line: 602, column: 7, scope: !6268)
!6329 = !DILocation(line: 603, column: 13, scope: !6326)
!6330 = !DILocation(line: 603, column: 5, scope: !6326)
!6331 = !DILocation(line: 612, column: 10, scope: !6268)
!6332 = !DILocation(line: 612, column: 3, scope: !6268)
!6333 = distinct !DISubprogram(name: "get_charset_aliases", scope: !257, file: !257, line: 124, type: !6269, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !256, retainedNodes: !28)
!6334 = !DILocalVariable(name: "cp", scope: !6333, file: !257, line: 126, type: !63)
!6335 = !DILocation(line: 126, column: 15, scope: !6333)
!6336 = !DILocation(line: 128, column: 8, scope: !6333)
!6337 = !DILocation(line: 128, column: 6, scope: !6333)
!6338 = !DILocation(line: 129, column: 7, scope: !6339)
!6339 = distinct !DILexicalBlock(scope: !6333, file: !257, line: 129, column: 7)
!6340 = !DILocation(line: 129, column: 10, scope: !6339)
!6341 = !DILocation(line: 129, column: 7, scope: !6333)
!6342 = !DILocalVariable(name: "dir", scope: !6343, file: !257, line: 132, type: !63)
!6343 = distinct !DILexicalBlock(scope: !6339, file: !257, line: 130, column: 5)
!6344 = !DILocation(line: 132, column: 19, scope: !6343)
!6345 = !DILocalVariable(name: "base", scope: !6343, file: !257, line: 133, type: !63)
!6346 = !DILocation(line: 133, column: 19, scope: !6343)
!6347 = !DILocalVariable(name: "file_name", scope: !6343, file: !257, line: 134, type: !41)
!6348 = !DILocation(line: 134, column: 13, scope: !6343)
!6349 = !DILocation(line: 138, column: 13, scope: !6343)
!6350 = !DILocation(line: 138, column: 11, scope: !6343)
!6351 = !DILocation(line: 139, column: 11, scope: !6352)
!6352 = distinct !DILexicalBlock(scope: !6343, file: !257, line: 139, column: 11)
!6353 = !DILocation(line: 139, column: 15, scope: !6352)
!6354 = !DILocation(line: 139, column: 23, scope: !6352)
!6355 = !DILocation(line: 139, column: 26, scope: !6356)
!6356 = !DILexicalBlockFile(scope: !6352, file: !257, discriminator: 1)
!6357 = !DILocation(line: 139, column: 33, scope: !6352)
!6358 = !DILocation(line: 139, column: 11, scope: !6343)
!6359 = !DILocation(line: 140, column: 13, scope: !6352)
!6360 = !DILocation(line: 140, column: 9, scope: !6352)
!6361 = !DILocalVariable(name: "dir_len", scope: !6362, file: !257, line: 144, type: !44)
!6362 = distinct !DILexicalBlock(scope: !6343, file: !257, line: 143, column: 7)
!6363 = !DILocation(line: 144, column: 16, scope: !6362)
!6364 = !DILocation(line: 144, column: 34, scope: !6362)
!6365 = !DILocation(line: 144, column: 26, scope: !6362)
!6366 = !DILocalVariable(name: "base_len", scope: !6362, file: !257, line: 145, type: !44)
!6367 = !DILocation(line: 145, column: 16, scope: !6362)
!6368 = !DILocation(line: 145, column: 35, scope: !6362)
!6369 = !DILocation(line: 145, column: 27, scope: !6362)
!6370 = !DILocalVariable(name: "add_slash", scope: !6362, file: !257, line: 146, type: !48)
!6371 = !DILocation(line: 146, column: 13, scope: !6362)
!6372 = !DILocation(line: 146, column: 26, scope: !6362)
!6373 = !DILocation(line: 146, column: 34, scope: !6362)
!6374 = !DILocation(line: 146, column: 38, scope: !6362)
!6375 = !DILocation(line: 146, column: 42, scope: !6376)
!6376 = !DILexicalBlockFile(scope: !6362, file: !257, discriminator: 1)
!6377 = !DILocation(line: 146, column: 41, scope: !6362)
!6378 = !DILocation(line: 146, column: 38, scope: !6379)
!6379 = !DILexicalBlockFile(scope: !6362, file: !257, discriminator: 2)
!6380 = !DILocation(line: 147, column: 38, scope: !6362)
!6381 = !DILocation(line: 147, column: 48, scope: !6362)
!6382 = !DILocation(line: 147, column: 46, scope: !6362)
!6383 = !DILocation(line: 147, column: 60, scope: !6362)
!6384 = !DILocation(line: 147, column: 58, scope: !6362)
!6385 = !DILocation(line: 147, column: 69, scope: !6362)
!6386 = !DILocation(line: 147, column: 30, scope: !6362)
!6387 = !DILocation(line: 147, column: 19, scope: !6362)
!6388 = !DILocation(line: 148, column: 13, scope: !6389)
!6389 = distinct !DILexicalBlock(scope: !6362, file: !257, line: 148, column: 13)
!6390 = !DILocation(line: 148, column: 23, scope: !6389)
!6391 = !DILocation(line: 148, column: 13, scope: !6362)
!6392 = !DILocation(line: 150, column: 21, scope: !6393)
!6393 = distinct !DILexicalBlock(scope: !6389, file: !257, line: 149, column: 11)
!6394 = !DILocation(line: 150, column: 32, scope: !6393)
!6395 = !DILocation(line: 150, column: 37, scope: !6393)
!6396 = !DILocation(line: 150, column: 13, scope: !6393)
!6397 = !DILocation(line: 151, column: 17, scope: !6398)
!6398 = distinct !DILexicalBlock(scope: !6393, file: !257, line: 151, column: 17)
!6399 = !DILocation(line: 151, column: 17, scope: !6393)
!6400 = !DILocation(line: 152, column: 25, scope: !6398)
!6401 = !DILocation(line: 152, column: 15, scope: !6398)
!6402 = !DILocation(line: 152, column: 34, scope: !6398)
!6403 = !DILocation(line: 153, column: 21, scope: !6393)
!6404 = !DILocation(line: 153, column: 33, scope: !6393)
!6405 = !DILocation(line: 153, column: 31, scope: !6393)
!6406 = !DILocation(line: 153, column: 43, scope: !6393)
!6407 = !DILocation(line: 153, column: 41, scope: !6393)
!6408 = !DILocation(line: 153, column: 54, scope: !6393)
!6409 = !DILocation(line: 153, column: 60, scope: !6393)
!6410 = !DILocation(line: 153, column: 69, scope: !6393)
!6411 = !DILocation(line: 153, column: 13, scope: !6393)
!6412 = !DILocation(line: 154, column: 11, scope: !6393)
!6413 = !DILocation(line: 157, column: 11, scope: !6414)
!6414 = distinct !DILexicalBlock(scope: !6343, file: !257, line: 157, column: 11)
!6415 = !DILocation(line: 157, column: 21, scope: !6414)
!6416 = !DILocation(line: 157, column: 11, scope: !6343)
!6417 = !DILocation(line: 159, column: 12, scope: !6414)
!6418 = !DILocation(line: 159, column: 9, scope: !6414)
!6419 = !DILocalVariable(name: "fd", scope: !6420, file: !257, line: 162, type: !48)
!6420 = distinct !DILexicalBlock(scope: !6414, file: !257, line: 161, column: 9)
!6421 = !DILocation(line: 162, column: 15, scope: !6420)
!6422 = !DILocation(line: 171, column: 22, scope: !6420)
!6423 = !DILocation(line: 171, column: 16, scope: !6420)
!6424 = !DILocation(line: 171, column: 14, scope: !6420)
!6425 = !DILocation(line: 173, column: 15, scope: !6426)
!6426 = distinct !DILexicalBlock(scope: !6420, file: !257, line: 173, column: 15)
!6427 = !DILocation(line: 173, column: 18, scope: !6426)
!6428 = !DILocation(line: 173, column: 15, scope: !6420)
!6429 = !DILocation(line: 175, column: 16, scope: !6426)
!6430 = !DILocation(line: 175, column: 13, scope: !6426)
!6431 = !DILocalVariable(name: "fp", scope: !6432, file: !257, line: 178, type: !6433)
!6432 = distinct !DILexicalBlock(scope: !6426, file: !257, line: 177, column: 13)
!6433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6434, size: 64, align: 64)
!6434 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1055, line: 48, baseType: !6435)
!6435 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !1057, line: 245, size: 1728, align: 64, elements: !6436)
!6436 = !{!6437, !6438, !6439, !6440, !6441, !6442, !6443, !6444, !6445, !6446, !6447, !6448, !6449, !6457, !6458, !6459, !6460, !6461, !6462, !6463, !6464, !6465, !6466, !6467, !6468, !6469, !6470, !6471, !6472}
!6437 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !6435, file: !1057, line: 246, baseType: !48, size: 32, align: 32)
!6438 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !6435, file: !1057, line: 251, baseType: !41, size: 64, align: 64, offset: 64)
!6439 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !6435, file: !1057, line: 252, baseType: !41, size: 64, align: 64, offset: 128)
!6440 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !6435, file: !1057, line: 253, baseType: !41, size: 64, align: 64, offset: 192)
!6441 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !6435, file: !1057, line: 254, baseType: !41, size: 64, align: 64, offset: 256)
!6442 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !6435, file: !1057, line: 255, baseType: !41, size: 64, align: 64, offset: 320)
!6443 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !6435, file: !1057, line: 256, baseType: !41, size: 64, align: 64, offset: 384)
!6444 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !6435, file: !1057, line: 257, baseType: !41, size: 64, align: 64, offset: 448)
!6445 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !6435, file: !1057, line: 258, baseType: !41, size: 64, align: 64, offset: 512)
!6446 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !6435, file: !1057, line: 260, baseType: !41, size: 64, align: 64, offset: 576)
!6447 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !6435, file: !1057, line: 261, baseType: !41, size: 64, align: 64, offset: 640)
!6448 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !6435, file: !1057, line: 262, baseType: !41, size: 64, align: 64, offset: 704)
!6449 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !6435, file: !1057, line: 264, baseType: !6450, size: 64, align: 64, offset: 768)
!6450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6451, size: 64, align: 64)
!6451 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !1057, line: 160, size: 192, align: 64, elements: !6452)
!6452 = !{!6453, !6454, !6456}
!6453 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !6451, file: !1057, line: 161, baseType: !6450, size: 64, align: 64)
!6454 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !6451, file: !1057, line: 162, baseType: !6455, size: 64, align: 64, offset: 64)
!6455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6435, size: 64, align: 64)
!6456 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !6451, file: !1057, line: 166, baseType: !48, size: 32, align: 32, offset: 128)
!6457 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !6435, file: !1057, line: 266, baseType: !6455, size: 64, align: 64, offset: 832)
!6458 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !6435, file: !1057, line: 268, baseType: !48, size: 32, align: 32, offset: 896)
!6459 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !6435, file: !1057, line: 272, baseType: !48, size: 32, align: 32, offset: 928)
!6460 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !6435, file: !1057, line: 274, baseType: !1083, size: 64, align: 64, offset: 960)
!6461 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !6435, file: !1057, line: 278, baseType: !49, size: 16, align: 16, offset: 1024)
!6462 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !6435, file: !1057, line: 279, baseType: !1088, size: 8, align: 8, offset: 1040)
!6463 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !6435, file: !1057, line: 280, baseType: !1090, size: 8, align: 8, offset: 1048)
!6464 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !6435, file: !1057, line: 284, baseType: !1094, size: 64, align: 64, offset: 1088)
!6465 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !6435, file: !1057, line: 293, baseType: !1097, size: 64, align: 64, offset: 1152)
!6466 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !6435, file: !1057, line: 302, baseType: !43, size: 64, align: 64, offset: 1216)
!6467 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !6435, file: !1057, line: 303, baseType: !43, size: 64, align: 64, offset: 1280)
!6468 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !6435, file: !1057, line: 304, baseType: !43, size: 64, align: 64, offset: 1344)
!6469 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !6435, file: !1057, line: 305, baseType: !43, size: 64, align: 64, offset: 1408)
!6470 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !6435, file: !1057, line: 306, baseType: !44, size: 64, align: 64, offset: 1472)
!6471 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !6435, file: !1057, line: 308, baseType: !48, size: 32, align: 32, offset: 1536)
!6472 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !6435, file: !1057, line: 310, baseType: !1105, size: 160, align: 8, offset: 1568)
!6473 = !DILocation(line: 178, column: 21, scope: !6432)
!6474 = !DILocation(line: 180, column: 28, scope: !6432)
!6475 = !DILocation(line: 180, column: 20, scope: !6432)
!6476 = !DILocation(line: 180, column: 18, scope: !6432)
!6477 = !DILocation(line: 181, column: 19, scope: !6478)
!6478 = distinct !DILexicalBlock(scope: !6432, file: !257, line: 181, column: 19)
!6479 = !DILocation(line: 181, column: 22, scope: !6478)
!6480 = !DILocation(line: 181, column: 19, scope: !6432)
!6481 = !DILocation(line: 184, column: 26, scope: !6482)
!6482 = distinct !DILexicalBlock(scope: !6478, file: !257, line: 182, column: 17)
!6483 = !DILocation(line: 184, column: 19, scope: !6482)
!6484 = !DILocation(line: 185, column: 22, scope: !6482)
!6485 = !DILocation(line: 186, column: 17, scope: !6482)
!6486 = !DILocalVariable(name: "res_ptr", scope: !6487, file: !257, line: 190, type: !41)
!6487 = distinct !DILexicalBlock(scope: !6478, file: !257, line: 188, column: 17)
!6488 = !DILocation(line: 190, column: 25, scope: !6487)
!6489 = !DILocalVariable(name: "res_size", scope: !6487, file: !257, line: 191, type: !44)
!6490 = !DILocation(line: 191, column: 26, scope: !6487)
!6491 = !DILocation(line: 193, column: 19, scope: !6487)
!6492 = !DILocalVariable(name: "c", scope: !6493, file: !257, line: 195, type: !48)
!6493 = distinct !DILexicalBlock(scope: !6494, file: !257, line: 194, column: 21)
!6494 = distinct !DILexicalBlock(scope: !6495, file: !257, line: 193, column: 19)
!6495 = distinct !DILexicalBlock(scope: !6487, file: !257, line: 193, column: 19)
!6496 = !DILocation(line: 195, column: 27, scope: !6493)
!6497 = !DILocalVariable(name: "buf1", scope: !6493, file: !257, line: 196, type: !6498)
!6498 = !DICompositeType(tag: DW_TAG_array_type, baseType: !42, size: 408, align: 8, elements: !6499)
!6499 = !{!6500}
!6500 = !DISubrange(count: 51)
!6501 = !DILocation(line: 196, column: 28, scope: !6493)
!6502 = !DILocalVariable(name: "buf2", scope: !6493, file: !257, line: 197, type: !6498)
!6503 = !DILocation(line: 197, column: 28, scope: !6493)
!6504 = !DILocalVariable(name: "l1", scope: !6493, file: !257, line: 198, type: !44)
!6505 = !DILocation(line: 198, column: 30, scope: !6493)
!6506 = !DILocalVariable(name: "l2", scope: !6493, file: !257, line: 198, type: !44)
!6507 = !DILocation(line: 198, column: 34, scope: !6493)
!6508 = !DILocalVariable(name: "old_res_ptr", scope: !6493, file: !257, line: 199, type: !41)
!6509 = !DILocation(line: 199, column: 29, scope: !6493)
!6510 = !DILocation(line: 201, column: 33, scope: !6493)
!6511 = !DILocation(line: 201, column: 27, scope: !6493)
!6512 = !DILocation(line: 201, column: 25, scope: !6493)
!6513 = !DILocation(line: 202, column: 27, scope: !6514)
!6514 = distinct !DILexicalBlock(scope: !6493, file: !257, line: 202, column: 27)
!6515 = !DILocation(line: 202, column: 29, scope: !6514)
!6516 = !DILocation(line: 202, column: 27, scope: !6493)
!6517 = !DILocation(line: 203, column: 25, scope: !6514)
!6518 = !DILocation(line: 204, column: 27, scope: !6519)
!6519 = distinct !DILexicalBlock(scope: !6493, file: !257, line: 204, column: 27)
!6520 = !DILocation(line: 204, column: 29, scope: !6519)
!6521 = !DILocation(line: 204, column: 37, scope: !6519)
!6522 = !DILocation(line: 204, column: 40, scope: !6523)
!6523 = !DILexicalBlockFile(scope: !6519, file: !257, discriminator: 1)
!6524 = !DILocation(line: 204, column: 42, scope: !6519)
!6525 = !DILocation(line: 204, column: 49, scope: !6519)
!6526 = !DILocation(line: 204, column: 52, scope: !6527)
!6527 = !DILexicalBlockFile(scope: !6519, file: !257, discriminator: 2)
!6528 = !DILocation(line: 204, column: 54, scope: !6519)
!6529 = !DILocation(line: 204, column: 27, scope: !6493)
!6530 = !DILocation(line: 205, column: 25, scope: !6519)
!6531 = !DILocation(line: 206, column: 27, scope: !6532)
!6532 = distinct !DILexicalBlock(scope: !6493, file: !257, line: 206, column: 27)
!6533 = !DILocation(line: 206, column: 29, scope: !6532)
!6534 = !DILocation(line: 206, column: 27, scope: !6493)
!6535 = !DILocation(line: 209, column: 27, scope: !6536)
!6536 = distinct !DILexicalBlock(scope: !6532, file: !257, line: 207, column: 25)
!6537 = !DILocation(line: 210, column: 39, scope: !6538)
!6538 = !DILexicalBlockFile(scope: !6536, file: !257, discriminator: 1)
!6539 = !DILocation(line: 210, column: 33, scope: !6536)
!6540 = !DILocation(line: 210, column: 31, scope: !6536)
!6541 = !DILocation(line: 210, column: 29, scope: !6536)
!6542 = !DILocation(line: 211, column: 36, scope: !6536)
!6543 = !DILocation(line: 211, column: 38, scope: !6536)
!6544 = !DILocation(line: 211, column: 45, scope: !6536)
!6545 = !DILocation(line: 211, column: 48, scope: !6546)
!6546 = !DILexicalBlockFile(scope: !6536, file: !257, discriminator: 2)
!6547 = !DILocation(line: 211, column: 50, scope: !6536)
!6548 = !DILocation(line: 211, column: 34, scope: !6549)
!6549 = !DILexicalBlockFile(scope: !6538, file: !257, discriminator: 3)
!6550 = !DILocation(line: 212, column: 31, scope: !6551)
!6551 = distinct !DILexicalBlock(scope: !6536, file: !257, line: 212, column: 31)
!6552 = !DILocation(line: 212, column: 33, scope: !6551)
!6553 = !DILocation(line: 212, column: 31, scope: !6536)
!6554 = !DILocation(line: 213, column: 29, scope: !6551)
!6555 = !DILocation(line: 214, column: 27, scope: !6536)
!6556 = !DILocation(line: 216, column: 31, scope: !6493)
!6557 = !DILocation(line: 216, column: 34, scope: !6493)
!6558 = !DILocation(line: 216, column: 23, scope: !6493)
!6559 = !DILocation(line: 217, column: 35, scope: !6560)
!6560 = distinct !DILexicalBlock(scope: !6493, file: !257, line: 217, column: 27)
!6561 = !DILocation(line: 217, column: 52, scope: !6560)
!6562 = !DILocation(line: 217, column: 58, scope: !6560)
!6563 = !DILocation(line: 217, column: 27, scope: !6560)
!6564 = !DILocation(line: 217, column: 64, scope: !6560)
!6565 = !DILocation(line: 217, column: 27, scope: !6493)
!6566 = !DILocation(line: 218, column: 25, scope: !6560)
!6567 = !DILocation(line: 219, column: 36, scope: !6493)
!6568 = !DILocation(line: 219, column: 28, scope: !6493)
!6569 = !DILocation(line: 219, column: 26, scope: !6493)
!6570 = !DILocation(line: 220, column: 36, scope: !6493)
!6571 = !DILocation(line: 220, column: 28, scope: !6493)
!6572 = !DILocation(line: 220, column: 26, scope: !6493)
!6573 = !DILocation(line: 221, column: 37, scope: !6493)
!6574 = !DILocation(line: 221, column: 35, scope: !6493)
!6575 = !DILocation(line: 222, column: 27, scope: !6576)
!6576 = distinct !DILexicalBlock(scope: !6493, file: !257, line: 222, column: 27)
!6577 = !DILocation(line: 222, column: 36, scope: !6576)
!6578 = !DILocation(line: 222, column: 27, scope: !6493)
!6579 = !DILocation(line: 224, column: 38, scope: !6580)
!6580 = distinct !DILexicalBlock(scope: !6576, file: !257, line: 223, column: 25)
!6581 = !DILocation(line: 224, column: 41, scope: !6580)
!6582 = !DILocation(line: 224, column: 47, scope: !6580)
!6583 = !DILocation(line: 224, column: 45, scope: !6580)
!6584 = !DILocation(line: 224, column: 50, scope: !6580)
!6585 = !DILocation(line: 224, column: 36, scope: !6580)
!6586 = !DILocation(line: 225, column: 54, scope: !6580)
!6587 = !DILocation(line: 225, column: 63, scope: !6580)
!6588 = !DILocation(line: 225, column: 46, scope: !6580)
!6589 = !DILocation(line: 225, column: 35, scope: !6580)
!6590 = !DILocation(line: 226, column: 25, scope: !6580)
!6591 = !DILocation(line: 229, column: 39, scope: !6592)
!6592 = distinct !DILexicalBlock(scope: !6576, file: !257, line: 228, column: 25)
!6593 = !DILocation(line: 229, column: 42, scope: !6592)
!6594 = !DILocation(line: 229, column: 48, scope: !6592)
!6595 = !DILocation(line: 229, column: 46, scope: !6592)
!6596 = !DILocation(line: 229, column: 51, scope: !6592)
!6597 = !DILocation(line: 229, column: 36, scope: !6592)
!6598 = !DILocation(line: 230, column: 55, scope: !6592)
!6599 = !DILocation(line: 230, column: 64, scope: !6592)
!6600 = !DILocation(line: 230, column: 73, scope: !6592)
!6601 = !DILocation(line: 230, column: 46, scope: !6592)
!6602 = !DILocation(line: 230, column: 35, scope: !6592)
!6603 = !DILocation(line: 232, column: 27, scope: !6604)
!6604 = distinct !DILexicalBlock(scope: !6493, file: !257, line: 232, column: 27)
!6605 = !DILocation(line: 232, column: 35, scope: !6604)
!6606 = !DILocation(line: 232, column: 27, scope: !6493)
!6607 = !DILocation(line: 235, column: 36, scope: !6608)
!6608 = distinct !DILexicalBlock(scope: !6604, file: !257, line: 233, column: 25)
!6609 = !DILocation(line: 236, column: 33, scope: !6608)
!6610 = !DILocation(line: 236, column: 27, scope: !6608)
!6611 = !DILocation(line: 237, column: 27, scope: !6608)
!6612 = !DILocation(line: 239, column: 31, scope: !6493)
!6613 = !DILocation(line: 239, column: 41, scope: !6493)
!6614 = !DILocation(line: 239, column: 39, scope: !6493)
!6615 = !DILocation(line: 239, column: 53, scope: !6493)
!6616 = !DILocation(line: 239, column: 56, scope: !6493)
!6617 = !DILocation(line: 239, column: 50, scope: !6493)
!6618 = !DILocation(line: 239, column: 64, scope: !6493)
!6619 = !DILocation(line: 239, column: 67, scope: !6493)
!6620 = !DILocation(line: 239, column: 61, scope: !6493)
!6621 = !DILocation(line: 239, column: 73, scope: !6493)
!6622 = !DILocation(line: 239, column: 23, scope: !6493)
!6623 = !DILocation(line: 240, column: 31, scope: !6493)
!6624 = !DILocation(line: 240, column: 41, scope: !6493)
!6625 = !DILocation(line: 240, column: 39, scope: !6493)
!6626 = !DILocation(line: 240, column: 53, scope: !6493)
!6627 = !DILocation(line: 240, column: 56, scope: !6493)
!6628 = !DILocation(line: 240, column: 50, scope: !6493)
!6629 = !DILocation(line: 240, column: 62, scope: !6493)
!6630 = !DILocation(line: 240, column: 23, scope: !6493)
!6631 = !DILocation(line: 193, column: 19, scope: !6494)
!6632 = !DILocation(line: 242, column: 27, scope: !6487)
!6633 = !DILocation(line: 242, column: 19, scope: !6487)
!6634 = !DILocation(line: 243, column: 23, scope: !6635)
!6635 = distinct !DILexicalBlock(scope: !6487, file: !257, line: 243, column: 23)
!6636 = !DILocation(line: 243, column: 32, scope: !6635)
!6637 = !DILocation(line: 243, column: 23, scope: !6487)
!6638 = !DILocation(line: 244, column: 24, scope: !6635)
!6639 = !DILocation(line: 244, column: 21, scope: !6635)
!6640 = !DILocation(line: 247, column: 25, scope: !6641)
!6641 = distinct !DILexicalBlock(scope: !6635, file: !257, line: 246, column: 21)
!6642 = !DILocation(line: 247, column: 35, scope: !6641)
!6643 = !DILocation(line: 247, column: 33, scope: !6641)
!6644 = !DILocation(line: 247, column: 45, scope: !6641)
!6645 = !DILocation(line: 248, column: 28, scope: !6641)
!6646 = !DILocation(line: 248, column: 26, scope: !6641)
!6647 = !DILocation(line: 253, column: 17, scope: !6420)
!6648 = !DILocation(line: 253, column: 11, scope: !6420)
!6649 = !DILocation(line: 377, column: 25, scope: !6343)
!6650 = !DILocation(line: 377, column: 23, scope: !6343)
!6651 = !DILocation(line: 378, column: 5, scope: !6343)
!6652 = !DILocation(line: 380, column: 10, scope: !6333)
!6653 = !DILocation(line: 380, column: 3, scope: !6333)
!6654 = distinct !DISubprogram(name: "c_isascii", scope: !646, file: !646, line: 27, type: !6655, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !645, retainedNodes: !28)
!6655 = !DISubroutineType(types: !6656)
!6656 = !{!53, !48}
!6657 = !DILocalVariable(name: "c", arg: 1, scope: !6654, file: !646, line: 27, type: !48)
!6658 = !DILocation(line: 27, column: 16, scope: !6654)
!6659 = !DILocation(line: 29, column: 11, scope: !6654)
!6660 = !DILocation(line: 29, column: 13, scope: !6654)
!6661 = !DILocation(line: 29, column: 21, scope: !6654)
!6662 = !DILocation(line: 29, column: 24, scope: !6663)
!6663 = !DILexicalBlockFile(scope: !6654, file: !646, discriminator: 1)
!6664 = !DILocation(line: 29, column: 26, scope: !6654)
!6665 = !DILocation(line: 29, column: 3, scope: !6666)
!6666 = !DILexicalBlockFile(scope: !6654, file: !646, discriminator: 2)
!6667 = distinct !DISubprogram(name: "c_isalnum", scope: !646, file: !646, line: 33, type: !6655, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !645, retainedNodes: !28)
!6668 = !DILocalVariable(name: "c", arg: 1, scope: !6667, file: !646, line: 33, type: !48)
!6669 = !DILocation(line: 33, column: 16, scope: !6667)
!6670 = !DILocation(line: 38, column: 12, scope: !6667)
!6671 = !DILocation(line: 38, column: 14, scope: !6667)
!6672 = !DILocation(line: 38, column: 21, scope: !6667)
!6673 = !DILocation(line: 38, column: 24, scope: !6674)
!6674 = !DILexicalBlockFile(scope: !6667, file: !646, discriminator: 1)
!6675 = !DILocation(line: 38, column: 26, scope: !6667)
!6676 = !DILocation(line: 39, column: 11, scope: !6667)
!6677 = !DILocation(line: 39, column: 16, scope: !6674)
!6678 = !DILocation(line: 39, column: 18, scope: !6667)
!6679 = !DILocation(line: 39, column: 27, scope: !6667)
!6680 = !DILocation(line: 39, column: 34, scope: !6667)
!6681 = !DILocation(line: 39, column: 38, scope: !6682)
!6682 = !DILexicalBlockFile(scope: !6667, file: !646, discriminator: 2)
!6683 = !DILocation(line: 39, column: 40, scope: !6667)
!6684 = !DILocation(line: 39, column: 49, scope: !6667)
!6685 = !DILocation(line: 39, column: 11, scope: !6686)
!6686 = !DILexicalBlockFile(scope: !6667, file: !646, discriminator: 3)
!6687 = !DILocation(line: 38, column: 3, scope: !6667)
!6688 = distinct !DISubprogram(name: "c_isalpha", scope: !646, file: !646, line: 68, type: !6655, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !645, retainedNodes: !28)
!6689 = !DILocalVariable(name: "c", arg: 1, scope: !6688, file: !646, line: 68, type: !48)
!6690 = !DILocation(line: 68, column: 16, scope: !6688)
!6691 = !DILocation(line: 72, column: 12, scope: !6688)
!6692 = !DILocation(line: 72, column: 14, scope: !6688)
!6693 = !DILocation(line: 72, column: 23, scope: !6688)
!6694 = !DILocation(line: 72, column: 30, scope: !6688)
!6695 = !DILocation(line: 72, column: 34, scope: !6696)
!6696 = !DILexicalBlockFile(scope: !6688, file: !646, discriminator: 1)
!6697 = !DILocation(line: 72, column: 36, scope: !6688)
!6698 = !DILocation(line: 72, column: 45, scope: !6688)
!6699 = !DILocation(line: 72, column: 3, scope: !6700)
!6700 = !DILexicalBlockFile(scope: !6688, file: !646, discriminator: 2)
!6701 = distinct !DISubprogram(name: "c_isblank", scope: !646, file: !646, line: 97, type: !6655, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !645, retainedNodes: !28)
!6702 = !DILocalVariable(name: "c", arg: 1, scope: !6701, file: !646, line: 97, type: !48)
!6703 = !DILocation(line: 97, column: 16, scope: !6701)
!6704 = !DILocation(line: 99, column: 11, scope: !6701)
!6705 = !DILocation(line: 99, column: 13, scope: !6701)
!6706 = !DILocation(line: 99, column: 20, scope: !6701)
!6707 = !DILocation(line: 99, column: 23, scope: !6708)
!6708 = !DILexicalBlockFile(scope: !6701, file: !646, discriminator: 2)
!6709 = !DILocation(line: 99, column: 25, scope: !6701)
!6710 = !DILocation(line: 99, column: 3, scope: !6711)
!6711 = !DILexicalBlockFile(scope: !6712, file: !646, discriminator: 3)
!6712 = !DILexicalBlockFile(scope: !6701, file: !646, discriminator: 1)
!6713 = distinct !DISubprogram(name: "c_iscntrl", scope: !646, file: !646, line: 103, type: !6655, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !645, retainedNodes: !28)
!6714 = !DILocalVariable(name: "c", arg: 1, scope: !6713, file: !646, line: 103, type: !48)
!6715 = !DILocation(line: 103, column: 16, scope: !6713)
!6716 = !DILocation(line: 106, column: 12, scope: !6713)
!6717 = !DILocation(line: 106, column: 14, scope: !6713)
!6718 = !DILocation(line: 106, column: 23, scope: !6713)
!6719 = !DILocation(line: 106, column: 28, scope: !6713)
!6720 = !DILocation(line: 106, column: 31, scope: !6721)
!6721 = !DILexicalBlockFile(scope: !6713, file: !646, discriminator: 2)
!6722 = !DILocation(line: 106, column: 33, scope: !6713)
!6723 = !DILocation(line: 106, column: 3, scope: !6724)
!6724 = !DILexicalBlockFile(scope: !6725, file: !646, discriminator: 3)
!6725 = !DILexicalBlockFile(scope: !6713, file: !646, discriminator: 1)
!6726 = distinct !DISubprogram(name: "c_isdigit", scope: !646, file: !646, line: 137, type: !6655, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !645, retainedNodes: !28)
!6727 = !DILocalVariable(name: "c", arg: 1, scope: !6726, file: !646, line: 137, type: !48)
!6728 = !DILocation(line: 137, column: 16, scope: !6726)
!6729 = !DILocation(line: 140, column: 11, scope: !6726)
!6730 = !DILocation(line: 140, column: 13, scope: !6726)
!6731 = !DILocation(line: 140, column: 20, scope: !6726)
!6732 = !DILocation(line: 140, column: 23, scope: !6733)
!6733 = !DILexicalBlockFile(scope: !6726, file: !646, discriminator: 1)
!6734 = !DILocation(line: 140, column: 25, scope: !6726)
!6735 = !DILocation(line: 140, column: 3, scope: !6736)
!6736 = !DILexicalBlockFile(scope: !6726, file: !646, discriminator: 2)
!6737 = distinct !DISubprogram(name: "c_islower", scope: !646, file: !646, line: 154, type: !6655, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !645, retainedNodes: !28)
!6738 = !DILocalVariable(name: "c", arg: 1, scope: !6737, file: !646, line: 154, type: !48)
!6739 = !DILocation(line: 154, column: 16, scope: !6737)
!6740 = !DILocation(line: 157, column: 11, scope: !6737)
!6741 = !DILocation(line: 157, column: 13, scope: !6737)
!6742 = !DILocation(line: 157, column: 20, scope: !6737)
!6743 = !DILocation(line: 157, column: 23, scope: !6744)
!6744 = !DILexicalBlockFile(scope: !6737, file: !646, discriminator: 1)
!6745 = !DILocation(line: 157, column: 25, scope: !6737)
!6746 = !DILocation(line: 157, column: 3, scope: !6747)
!6747 = !DILexicalBlockFile(scope: !6737, file: !646, discriminator: 2)
!6748 = distinct !DISubprogram(name: "c_isgraph", scope: !646, file: !646, line: 174, type: !6655, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !645, retainedNodes: !28)
!6749 = !DILocalVariable(name: "c", arg: 1, scope: !6748, file: !646, line: 174, type: !48)
!6750 = !DILocation(line: 174, column: 16, scope: !6748)
!6751 = !DILocation(line: 177, column: 11, scope: !6748)
!6752 = !DILocation(line: 177, column: 13, scope: !6748)
!6753 = !DILocation(line: 177, column: 20, scope: !6748)
!6754 = !DILocation(line: 177, column: 23, scope: !6755)
!6755 = !DILexicalBlockFile(scope: !6748, file: !646, discriminator: 1)
!6756 = !DILocation(line: 177, column: 25, scope: !6748)
!6757 = !DILocation(line: 177, column: 3, scope: !6758)
!6758 = !DILexicalBlockFile(scope: !6748, file: !646, discriminator: 2)
!6759 = distinct !DISubprogram(name: "c_isprint", scope: !646, file: !646, line: 208, type: !6655, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !645, retainedNodes: !28)
!6760 = !DILocalVariable(name: "c", arg: 1, scope: !6759, file: !646, line: 208, type: !48)
!6761 = !DILocation(line: 208, column: 16, scope: !6759)
!6762 = !DILocation(line: 211, column: 11, scope: !6759)
!6763 = !DILocation(line: 211, column: 13, scope: !6759)
!6764 = !DILocation(line: 211, column: 20, scope: !6759)
!6765 = !DILocation(line: 211, column: 23, scope: !6766)
!6766 = !DILexicalBlockFile(scope: !6759, file: !646, discriminator: 1)
!6767 = !DILocation(line: 211, column: 25, scope: !6759)
!6768 = !DILocation(line: 211, column: 3, scope: !6769)
!6769 = !DILexicalBlockFile(scope: !6759, file: !646, discriminator: 2)
!6770 = distinct !DISubprogram(name: "c_ispunct", scope: !646, file: !646, line: 242, type: !6655, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !645, retainedNodes: !28)
!6771 = !DILocalVariable(name: "c", arg: 1, scope: !6770, file: !646, line: 242, type: !48)
!6772 = !DILocation(line: 242, column: 16, scope: !6770)
!6773 = !DILocation(line: 245, column: 12, scope: !6770)
!6774 = !DILocation(line: 245, column: 14, scope: !6770)
!6775 = !DILocation(line: 245, column: 21, scope: !6770)
!6776 = !DILocation(line: 245, column: 24, scope: !6777)
!6777 = !DILexicalBlockFile(scope: !6770, file: !646, discriminator: 1)
!6778 = !DILocation(line: 245, column: 26, scope: !6770)
!6779 = !DILocation(line: 246, column: 11, scope: !6770)
!6780 = !DILocation(line: 246, column: 17, scope: !6777)
!6781 = !DILocation(line: 246, column: 19, scope: !6770)
!6782 = !DILocation(line: 246, column: 26, scope: !6770)
!6783 = !DILocation(line: 246, column: 29, scope: !6784)
!6784 = !DILexicalBlockFile(scope: !6770, file: !646, discriminator: 2)
!6785 = !DILocation(line: 246, column: 31, scope: !6770)
!6786 = !DILocation(line: 247, column: 16, scope: !6770)
!6787 = !DILocation(line: 247, column: 21, scope: !6777)
!6788 = !DILocation(line: 247, column: 23, scope: !6770)
!6789 = !DILocation(line: 247, column: 32, scope: !6770)
!6790 = !DILocation(line: 247, column: 39, scope: !6770)
!6791 = !DILocation(line: 247, column: 43, scope: !6784)
!6792 = !DILocation(line: 247, column: 45, scope: !6770)
!6793 = !DILocation(line: 247, column: 54, scope: !6770)
!6794 = !DILocation(line: 247, column: 16, scope: !6795)
!6795 = !DILexicalBlockFile(scope: !6770, file: !646, discriminator: 3)
!6796 = !DILocation(line: 246, column: 14, scope: !6770)
!6797 = !DILocation(line: 245, column: 3, scope: !6784)
!6798 = distinct !DISubprogram(name: "c_isspace", scope: !646, file: !646, line: 266, type: !6655, scopeLine: 267, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !645, retainedNodes: !28)
!6799 = !DILocalVariable(name: "c", arg: 1, scope: !6798, file: !646, line: 266, type: !48)
!6800 = !DILocation(line: 266, column: 16, scope: !6798)
!6801 = !DILocation(line: 268, column: 11, scope: !6798)
!6802 = !DILocation(line: 268, column: 13, scope: !6798)
!6803 = !DILocation(line: 268, column: 20, scope: !6798)
!6804 = !DILocation(line: 268, column: 23, scope: !6805)
!6805 = !DILexicalBlockFile(scope: !6798, file: !646, discriminator: 2)
!6806 = !DILocation(line: 268, column: 25, scope: !6798)
!6807 = !DILocation(line: 269, column: 11, scope: !6798)
!6808 = !DILocation(line: 269, column: 14, scope: !6809)
!6809 = !DILexicalBlockFile(scope: !6798, file: !646, discriminator: 1)
!6810 = !DILocation(line: 269, column: 16, scope: !6798)
!6811 = !DILocation(line: 269, column: 24, scope: !6798)
!6812 = !DILocation(line: 269, column: 27, scope: !6805)
!6813 = !DILocation(line: 269, column: 29, scope: !6798)
!6814 = !DILocation(line: 269, column: 37, scope: !6798)
!6815 = !DILocation(line: 269, column: 40, scope: !6816)
!6816 = !DILexicalBlockFile(scope: !6798, file: !646, discriminator: 3)
!6817 = !DILocation(line: 269, column: 42, scope: !6798)
!6818 = !DILocation(line: 269, column: 50, scope: !6798)
!6819 = !DILocation(line: 269, column: 53, scope: !6820)
!6820 = !DILexicalBlockFile(scope: !6798, file: !646, discriminator: 4)
!6821 = !DILocation(line: 269, column: 55, scope: !6798)
!6822 = !DILocation(line: 268, column: 3, scope: !6809)
!6823 = distinct !DISubprogram(name: "c_isupper", scope: !646, file: !646, line: 273, type: !6655, scopeLine: 274, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !645, retainedNodes: !28)
!6824 = !DILocalVariable(name: "c", arg: 1, scope: !6823, file: !646, line: 273, type: !48)
!6825 = !DILocation(line: 273, column: 16, scope: !6823)
!6826 = !DILocation(line: 276, column: 11, scope: !6823)
!6827 = !DILocation(line: 276, column: 13, scope: !6823)
!6828 = !DILocation(line: 276, column: 20, scope: !6823)
!6829 = !DILocation(line: 276, column: 23, scope: !6830)
!6830 = !DILexicalBlockFile(scope: !6823, file: !646, discriminator: 1)
!6831 = !DILocation(line: 276, column: 25, scope: !6823)
!6832 = !DILocation(line: 276, column: 3, scope: !6833)
!6833 = !DILexicalBlockFile(scope: !6823, file: !646, discriminator: 2)
!6834 = distinct !DISubprogram(name: "c_isxdigit", scope: !646, file: !646, line: 293, type: !6655, scopeLine: 294, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !645, retainedNodes: !28)
!6835 = !DILocalVariable(name: "c", arg: 1, scope: !6834, file: !646, line: 293, type: !48)
!6836 = !DILocation(line: 293, column: 17, scope: !6834)
!6837 = !DILocation(line: 298, column: 12, scope: !6834)
!6838 = !DILocation(line: 298, column: 14, scope: !6834)
!6839 = !DILocation(line: 298, column: 21, scope: !6834)
!6840 = !DILocation(line: 298, column: 24, scope: !6841)
!6841 = !DILexicalBlockFile(scope: !6834, file: !646, discriminator: 1)
!6842 = !DILocation(line: 298, column: 26, scope: !6834)
!6843 = !DILocation(line: 299, column: 11, scope: !6834)
!6844 = !DILocation(line: 299, column: 16, scope: !6841)
!6845 = !DILocation(line: 299, column: 18, scope: !6834)
!6846 = !DILocation(line: 299, column: 27, scope: !6834)
!6847 = !DILocation(line: 299, column: 34, scope: !6834)
!6848 = !DILocation(line: 299, column: 38, scope: !6849)
!6849 = !DILexicalBlockFile(scope: !6834, file: !646, discriminator: 2)
!6850 = !DILocation(line: 299, column: 40, scope: !6834)
!6851 = !DILocation(line: 299, column: 49, scope: !6834)
!6852 = !DILocation(line: 299, column: 11, scope: !6853)
!6853 = !DILexicalBlockFile(scope: !6834, file: !646, discriminator: 3)
!6854 = !DILocation(line: 298, column: 3, scope: !6834)
!6855 = distinct !DISubprogram(name: "c_tolower", scope: !646, file: !646, line: 320, type: !5150, scopeLine: 321, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !645, retainedNodes: !28)
!6856 = !DILocalVariable(name: "c", arg: 1, scope: !6855, file: !646, line: 320, type: !48)
!6857 = !DILocation(line: 320, column: 16, scope: !6855)
!6858 = !DILocation(line: 323, column: 11, scope: !6855)
!6859 = !DILocation(line: 323, column: 13, scope: !6855)
!6860 = !DILocation(line: 323, column: 20, scope: !6855)
!6861 = !DILocation(line: 323, column: 23, scope: !6862)
!6862 = !DILexicalBlockFile(scope: !6855, file: !646, discriminator: 1)
!6863 = !DILocation(line: 323, column: 25, scope: !6855)
!6864 = !DILocation(line: 323, column: 34, scope: !6865)
!6865 = !DILexicalBlockFile(scope: !6855, file: !646, discriminator: 3)
!6866 = !DILocation(line: 323, column: 36, scope: !6855)
!6867 = !DILocation(line: 323, column: 42, scope: !6855)
!6868 = !DILocation(line: 323, column: 50, scope: !6869)
!6869 = !DILexicalBlockFile(scope: !6870, file: !646, discriminator: 4)
!6870 = !DILexicalBlockFile(scope: !6855, file: !646, discriminator: 2)
!6871 = !DILocation(line: 323, column: 3, scope: !6872)
!6872 = !DILexicalBlockFile(scope: !6873, file: !646, discriminator: 6)
!6873 = !DILexicalBlockFile(scope: !6855, file: !646, discriminator: 5)
!6874 = distinct !DISubprogram(name: "c_toupper", scope: !646, file: !646, line: 359, type: !5150, scopeLine: 360, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !645, retainedNodes: !28)
!6875 = !DILocalVariable(name: "c", arg: 1, scope: !6874, file: !646, line: 359, type: !48)
!6876 = !DILocation(line: 359, column: 16, scope: !6874)
!6877 = !DILocation(line: 362, column: 11, scope: !6874)
!6878 = !DILocation(line: 362, column: 13, scope: !6874)
!6879 = !DILocation(line: 362, column: 20, scope: !6874)
!6880 = !DILocation(line: 362, column: 23, scope: !6881)
!6881 = !DILexicalBlockFile(scope: !6874, file: !646, discriminator: 1)
!6882 = !DILocation(line: 362, column: 25, scope: !6874)
!6883 = !DILocation(line: 362, column: 34, scope: !6884)
!6884 = !DILexicalBlockFile(scope: !6874, file: !646, discriminator: 3)
!6885 = !DILocation(line: 362, column: 36, scope: !6874)
!6886 = !DILocation(line: 362, column: 42, scope: !6874)
!6887 = !DILocation(line: 362, column: 50, scope: !6888)
!6888 = !DILexicalBlockFile(scope: !6889, file: !646, discriminator: 4)
!6889 = !DILexicalBlockFile(scope: !6874, file: !646, discriminator: 2)
!6890 = !DILocation(line: 362, column: 3, scope: !6891)
!6891 = !DILexicalBlockFile(scope: !6892, file: !646, discriminator: 6)
!6892 = !DILexicalBlockFile(scope: !6874, file: !646, discriminator: 5)
