//use after free
.decl use_after_free(instructionid: _instructionid, level: symbol, message: symbol)


.decl is_dangerous_usage(instructionid: _instructionid)
//usage call a library function
is_dangerous_usage(IID) :-
instruction(_, IID, _, "call"),
get_function_for_call_instruction(FNAME, IID),
function(_, FNAME, "declare", _).

//usage read from freed space
is_dangerous_usage(IID) :-
instruction(_, IID, _, "load").

//usage write to freed space
is_dangerous_usage(IID) :-
instruction(_, IID, _, "store").






//case same basic block && memequals -> dangerous usage
use_after_free(IID, LEVEL, MESSAGE) :-

instruction(BID2, IID2, _, "call"),
block(FID2, BID2, _),
is_X_call_instruction("free", IID2),
get_first_operand(IID2, VAR2),
is_vreg(VAR2),

instruction(BID, IID, _, _),
is_dangerous_usage(IID),
get_ith_operand(IID, _, VAR),
IID2<IID, //IID is the location where its used
BID=BID2,
IID>0,

memequals(FID2, VAR, FID2, VAR2),

LEVEL = "Vulnerability",
MESSAGE = cat("Use after free ", to_string(IID))
.


//case other basic block && memequals -> dangerous usage
use_after_free(IID, LEVEL, MESSAGE) :-

instruction(BID2, IID2, _, "call"),
block(FID2, BID2, _),
is_X_call_instruction("free", IID2),
get_first_operand(IID2, VAR2),
is_vreg(VAR2),

is_before(FID, BID, FID2, BID2), //BID2 is before BID

instruction(BID, IID, _, DANGEFUNTYPE),
block(FID2, BID2, _),
is_dangerous_usage(IID), //IID is the location where its used
get_ith_operand(IID, _, VAR),
BID!=BID2,

memequals(FID, VAR, FID2, VAR2),


LEVEL = "Vulnerability",
MESSAGE = cat("Use after free ", DANGEFUNTYPE, " IID:", to_string(IID))
.




/*
double_free(IID, LEVEL, MESSAGE) :-
instruction(BID, IID, _, "call"),
instruction(BID2, IID2, _, "call"),
block(FID, BID, _),
block(FID2, BID2, _),

is_X_call_instruction("free", IID),
is_X_call_instruction("free", IID2),
IID!=IID2,
BID != BID2,

is_before(FID, BID, FID2, BID2), //BID2 is before BID

get_first_operand(IID, VAR),
get_first_operand(IID2, VAR2),
is_vreg(VAR),
is_vreg(VAR2),
memequals(FID, VAR, FID2, VAR2),
LEVEL = "Vulnerability",
MESSAGE = cat("Double Free", VAR)
.

*/